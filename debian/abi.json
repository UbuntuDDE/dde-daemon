{"Filepath":"accounts/accounts.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"accounts.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"accounts.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"accounts.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"accounts.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func init()","Funname":"accounts.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:accounts.Daemon","Fields":["accounts.Daemon.imageBlur *ImageBlur","accounts.Daemon.loginedManager *logined.Manager","accounts.Daemon.manager *Manager"]},{"Name":"var:accounts","Fields":["accounts._imageBlur","accounts.logger"]}]}
{"Filepath":"accounts/deepinversion.go","Functions":[{"Uniquefunname":"func getDeepinReleaseType() string","Funname":"accounts.getDeepinReleaseType","Returntype":"string","Args":""},{"Uniquefunname":"func getDeepinReleaseType() string","Funname":"getDeepinReleaseType","Returntype":"string","Args":""}],"Records":[{"Name":"const:accounts","Fields":["accounts.versionFile"]}]}
{"Filepath":"accounts/handle_event.go","Functions":[{"Uniquefunname":"func (m *Manager) addUser(uInfo *users.UserInfo)","Funname":"accounts.Manager.addUser","Returntype":"","Args":"uInfo *users.UserInfo"},{"Uniquefunname":"func (m *Manager) deleteUser(uid string)","Funname":"accounts.Manager.deleteUser","Returntype":"","Args":"uid string"},{"Uniquefunname":"func (m *Manager) getWatchFiles() []string","Funname":"accounts.Manager.getWatchFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) handleDMConfigChanged()","Funname":"accounts.Manager.handleDMConfigChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFileChanged(ev fsnotify.Event)","Funname":"accounts.Manager.handleFileChanged","Returntype":"","Args":"ev fsnotify.Event"},{"Uniquefunname":"func (m *Manager) handleFileGroupChanged()","Funname":"accounts.Manager.handleFileGroupChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFilePasswdChanged()","Funname":"accounts.Manager.handleFilePasswdChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFileShadowChanged()","Funname":"accounts.Manager.handleFileShadowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropUserList()","Funname":"accounts.Manager.updatePropUserList","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) addUser(uInfo *users.UserInfo)","Funname":"addUser","Returntype":"","Args":"uInfo *users.UserInfo"},{"Uniquefunname":"func (m *Manager) deleteUser(uid string)","Funname":"deleteUser","Returntype":"","Args":"uid string"},{"Uniquefunname":"func (m *Manager) getWatchFiles() []string","Funname":"getWatchFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) handleDMConfigChanged()","Funname":"handleDMConfigChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFileChanged(ev fsnotify.Event)","Funname":"handleFileChanged","Returntype":"","Args":"ev fsnotify.Event"},{"Uniquefunname":"func (m *Manager) handleFileGroupChanged()","Funname":"handleFileGroupChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFilePasswdChanged()","Funname":"handleFilePasswdChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFileShadowChanged()","Funname":"handleFileShadowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropUserList()","Funname":"updatePropUserList","Returntype":"","Args":""}],"Records":[{"Name":"const:accounts","Fields":["accounts.fileEventDelay","accounts.gdmConfig","accounts.kdmConfig","accounts.lightdmConfig","accounts.taskNameDM","accounts.taskNameGroup","accounts.taskNamePasswd","accounts.taskNameShadow","accounts.userFileGroup","accounts.userFilePasswd","accounts.userFileShadow","accounts.userFileSudoers"]}]}
{"Filepath":"accounts/image_blur.go","Functions":[{"Uniquefunname":"func (ib *ImageBlur) Delete(file string) *dbus.Error","Funname":"Delete","Returntype":"*dbus.Error","Args":"file string"},{"Uniquefunname":"func (ib *ImageBlur) Get(file string) (string, *dbus.Error)","Funname":"Get","Returntype":"(string, *dbus.Error)","Args":"file string"},{"Uniquefunname":"func (ib *ImageBlur) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (ib *ImageBlur) Delete(file string) *dbus.Error","Funname":"accounts.ImageBlur.Delete","Returntype":"*dbus.Error","Args":"file string"},{"Uniquefunname":"func (ib *ImageBlur) Get(file string) (string, *dbus.Error)","Funname":"accounts.ImageBlur.Get","Returntype":"(string, *dbus.Error)","Args":"file string"},{"Uniquefunname":"func (ib *ImageBlur) GetInterfaceName() string","Funname":"accounts.ImageBlur.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (ib *ImageBlur) emitBlurDone(file string, ok bool)","Funname":"accounts.ImageBlur.emitBlurDone","Returntype":"","Args":"file string, ok bool"},{"Uniquefunname":"func (ib *ImageBlur) gen(file, blurFile string)","Funname":"accounts.ImageBlur.gen","Returntype":"","Args":"file, blurFile string"},{"Uniquefunname":"func genGaussianBlur(file string)","Funname":"accounts.genGaussianBlur","Returntype":"","Args":"file string"},{"Uniquefunname":"func getImageBlurFile(src string) string","Funname":"accounts.getImageBlurFile","Returntype":"string","Args":"src string"},{"Uniquefunname":"func newImageBlur(service *dbusutil.Service) *ImageBlur","Funname":"accounts.newImageBlur","Returntype":"*ImageBlur","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (ib *ImageBlur) emitBlurDone(file string, ok bool)","Funname":"emitBlurDone","Returntype":"","Args":"file string, ok bool"},{"Uniquefunname":"func (ib *ImageBlur) gen(file, blurFile string)","Funname":"gen","Returntype":"","Args":"file, blurFile string"},{"Uniquefunname":"func genGaussianBlur(file string)","Funname":"genGaussianBlur","Returntype":"","Args":"file string"},{"Uniquefunname":"func getImageBlurFile(src string) string","Funname":"getImageBlurFile","Returntype":"string","Args":"src string"},{"Uniquefunname":"func newImageBlur(service *dbusutil.Service) *ImageBlur","Funname":"newImageBlur","Returntype":"*ImageBlur","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:accounts.ImageBlur","Fields":["accounts.ImageBlur.methods *struct { Get func() `in:\"source\" out:\"blurred\"`; Delete func() `in:\"file\"`; }","accounts.ImageBlur.mu sync.Mutex","accounts.ImageBlur.service *dbusutil.Service","accounts.ImageBlur.signals *struct { BlurDone struct { imgFile string; imgBlurFile string; ok bool; }; }","accounts.ImageBlur.tasks map[string]struct{}"]},{"Name":"const:accounts","Fields":["accounts.imageBlurDBusInterface","accounts.imageBlurDBusPath","accounts.imageBlurDir"]}]}
{"Filepath":"accounts/left_space.go","Functions":[{"Uniquefunname":"func (u *User) checkLeftSpace()","Funname":"accounts.User.checkLeftSpace","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) removeCache()","Funname":"accounts.User.removeCache","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) checkLeftSpace()","Funname":"checkLeftSpace","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) removeCache()","Funname":"removeCache","Returntype":"","Args":""}],"Records":[{"Name":"const:accounts","Fields":["accounts.filesystemMinFreeSize"]}]}
{"Filepath":"accounts/manager.go","Functions":[{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) checkAuth(sender dbus.Sender) error","Funname":"accounts.Manager.checkAuth","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"accounts.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) exportUserByPath(userPath string) error","Funname":"accounts.Manager.exportUserByPath","Returntype":"error","Args":"userPath string"},{"Uniquefunname":"func (m *Manager) exportUsers()","Funname":"accounts.Manager.exportUsers","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getUserByName(name string) *User","Funname":"accounts.Manager.getUserByName","Returntype":"*User","Args":"name string"},{"Uniquefunname":"func (m *Manager) getUserByUid(uid string) *User","Funname":"accounts.Manager.getUserByUid","Returntype":"*User","Args":"uid string"},{"Uniquefunname":"func (m *Manager) initUsers(list []string)","Funname":"accounts.Manager.initUsers","Returntype":"","Args":"list []string"},{"Uniquefunname":"func (m *Manager) stopExportUser(userPath string)","Funname":"accounts.Manager.stopExportUser","Returntype":"","Args":"userPath string"},{"Uniquefunname":"func (m *Manager) stopExportUsers(list []string)","Funname":"accounts.Manager.stopExportUsers","Returntype":"","Args":"list []string"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"accounts.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func getUserPaths() []string","Funname":"accounts.getUserPaths","Returntype":"[]string","Args":""},{"Uniquefunname":"func isGuestUserEnabled() bool","Funname":"accounts.isGuestUserEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) checkAuth(sender dbus.Sender) error","Funname":"checkAuth","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) exportUserByPath(userPath string) error","Funname":"exportUserByPath","Returntype":"error","Args":"userPath string"},{"Uniquefunname":"func (m *Manager) exportUsers()","Funname":"exportUsers","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getUserByName(name string) *User","Funname":"getUserByName","Returntype":"*User","Args":"name string"},{"Uniquefunname":"func (m *Manager) getUserByUid(uid string) *User","Funname":"getUserByUid","Returntype":"*User","Args":"uid string"},{"Uniquefunname":"func getUserPaths() []string","Funname":"getUserPaths","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) initUsers(list []string)","Funname":"initUsers","Returntype":"","Args":"list []string"},{"Uniquefunname":"func isGuestUserEnabled() bool","Funname":"isGuestUserEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) stopExportUser(userPath string)","Funname":"stopExportUser","Returntype":"","Args":"userPath string"},{"Uniquefunname":"func (m *Manager) stopExportUsers(list []string)","Funname":"stopExportUsers","Returntype":"","Args":"list []string"}],"Records":[{"Name":"struct:accounts.Manager","Fields":["accounts.Manager.AllowGuest bool","accounts.Manager.GuestIcon string","accounts.Manager.PropsMu sync.RWMutex","accounts.Manager.UserList []string","accounts.Manager.UserListMu sync.RWMutex","accounts.Manager.delayTaskManager *tasker.DelayTaskManager","accounts.Manager.methods *struct { CreateUser func() `in:\"name,fullName,accountType\" out:\"user\"`; DeleteUser func() `in:\"name,rmFiles\"`; FindUserById func() `in:\"uid\" out:\"user\"`; FindUserByName func() `in:\"name\" out:\"user\"`; RandUserIcon func() `out:\"iconFile\"`; IsUsernameValid func() `in:\"name\" out:\"ok,errReason,errCode\"`; IsPasswordValid func() `in:\"password\" out:\"ok,errReason,errCode\"`; AllowGuestAccount func() `in:\"allow\"`; CreateGuestAccount func() `out:\"user\"`; GetGroups func() `out:\"groups\"`; GetPresetGroups func()","accounts.Manager.service *dbusutil.Service","accounts.Manager.signals *struct { UserAdded struct { objPath string; }; UserDeleted struct { objPath string; }; }","accounts.Manager.userAddedChanMap map[string]chan string","accounts.Manager.usersMap map[string]*User","accounts.Manager.usersMapMu sync.Mutex","accounts.Manager.watcher *dutils.WatchProxy"]},{"Name":"const:accounts","Fields":["accounts.actConfigDir","accounts.actConfigFile","accounts.actConfigGroupGroup","accounts.actConfigKeyGuest","accounts.userConfigDir","accounts.userCustomIconsDir","accounts.userIconGuest","accounts.userIconsDir"]}]}
{"Filepath":"accounts/manager_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedAllowGuest(value bool) error","Funname":"accounts.Manager.emitPropChangedAllowGuest","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropAllowGuest(value bool) (changed bool)","Funname":"accounts.Manager.setPropAllowGuest","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedAllowGuest(value bool) error","Funname":"emitPropChangedAllowGuest","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropAllowGuest(value bool) (changed bool)","Funname":"setPropAllowGuest","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"accounts/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) AllowGuestAccount(sender dbus.Sender, allow bool) *dbus.Error","Funname":"AllowGuestAccount","Returntype":"*dbus.Error","Args":"sender dbus.Sender, allow bool"},{"Uniquefunname":"func (m *Manager) CreateGuestAccount(sender dbus.Sender) (string, *dbus.Error)","Funname":"CreateGuestAccount","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func CreateUser(sender dbus.Sender, name, fullName string, accountType int32)(dbus.ObjectPath, *dbus.Error)","Funname":"CreateUser","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"sender dbus.Sender, name, fullName string, accountType int32"},{"Uniquefunname":"func DeleteUser(sender dbus.Sender, name string, rmFiles bool)*dbus.Error","Funname":"DeleteUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, name string, rmFiles bool"},{"Uniquefunname":"func (m *Manager) FindUserById(uid string) (string, *dbus.Error)","Funname":"FindUserById","Returntype":"(string, *dbus.Error)","Args":"uid string"},{"Uniquefunname":"func (m *Manager) FindUserByName(name string) (string, *dbus.Error)","Funname":"FindUserByName","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) GetGroups() ([]string, *dbus.Error)","Funname":"GetGroups","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetPresetGroups(accountType int32) ([]string, *dbus.Error)","Funname":"GetPresetGroups","Returntype":"([]string, *dbus.Error)","Args":"accountType int32"},{"Uniquefunname":"func (m *Manager) IsPasswordValid(password string) (bool, string, int32, *dbus.Error)","Funname":"IsPasswordValid","Returntype":"(bool, string, int32, *dbus.Error)","Args":"password string"},{"Uniquefunname":"func IsUsernameValid(sender dbus.Sender, name string)(valid bool, msg string, code int32, busErr *dbus.Error)","Funname":"IsUsernameValid","Returntype":"(valid bool, msg string, code int32, busErr *dbus.Error)","Args":"sender dbus.Sender, name string"},{"Uniquefunname":"func (m *Manager) RandUserIcon() (string, *dbus.Error)","Funname":"RandUserIcon","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) AllowGuestAccount(sender dbus.Sender, allow bool) *dbus.Error","Funname":"accounts.Manager.AllowGuestAccount","Returntype":"*dbus.Error","Args":"sender dbus.Sender, allow bool"},{"Uniquefunname":"func (m *Manager) CreateGuestAccount(sender dbus.Sender) (string, *dbus.Error)","Funname":"accounts.Manager.CreateGuestAccount","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func accounts.Manager.CreateUser(sender dbus.Sender, name, fullName string, accountType int32)(dbus.ObjectPath, *dbus.Error)","Funname":"accounts.Manager.CreateUser","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"sender dbus.Sender, name, fullName string, accountType int32"},{"Uniquefunname":"func accounts.Manager.DeleteUser(sender dbus.Sender, name string, rmFiles bool)*dbus.Error","Funname":"accounts.Manager.DeleteUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, name string, rmFiles bool"},{"Uniquefunname":"func (m *Manager) FindUserById(uid string) (string, *dbus.Error)","Funname":"accounts.Manager.FindUserById","Returntype":"(string, *dbus.Error)","Args":"uid string"},{"Uniquefunname":"func (m *Manager) FindUserByName(name string) (string, *dbus.Error)","Funname":"accounts.Manager.FindUserByName","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) GetGroups() ([]string, *dbus.Error)","Funname":"accounts.Manager.GetGroups","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"accounts.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetPresetGroups(accountType int32) ([]string, *dbus.Error)","Funname":"accounts.Manager.GetPresetGroups","Returntype":"([]string, *dbus.Error)","Args":"accountType int32"},{"Uniquefunname":"func (m *Manager) IsPasswordValid(password string) (bool, string, int32, *dbus.Error)","Funname":"accounts.Manager.IsPasswordValid","Returntype":"(bool, string, int32, *dbus.Error)","Args":"password string"},{"Uniquefunname":"func accounts.Manager.IsUsernameValid(sender dbus.Sender, name string)(valid bool, msg string, code int32, busErr *dbus.Error)","Funname":"accounts.Manager.IsUsernameValid","Returntype":"(valid bool, msg string, code int32, busErr *dbus.Error)","Args":"sender dbus.Sender, name string"},{"Uniquefunname":"func (m *Manager) RandUserIcon() (string, *dbus.Error)","Funname":"accounts.Manager.RandUserIcon","Returntype":"(string, *dbus.Error)","Args":""}],"Records":[{"Name":"const:accounts","Fields":["accounts.dbusInterface","accounts.dbusPath","accounts.dbusServiceName","accounts.nilObjPath"]}]}
{"Filepath":"accounts/user.go","Functions":[{"Uniquefunname":"func NewUser(userPath string, service *dbusutil.Service, ignoreErr bool) (*User, error)","Funname":"NewUser","Returntype":"(*User, error)","Args":"userPath string, service *dbusutil.Service, ignoreErr bool"},{"Uniquefunname":"func NewUser(userPath string, service *dbusutil.Service, ignoreErr bool) (*User, error)","Funname":"accounts.NewUser","Returntype":"(*User, error)","Args":"userPath string, service *dbusutil.Service, ignoreErr bool"},{"Uniquefunname":"func (u *User) checkAuth(sender dbus.Sender, selfPass bool, actionId string) error","Funname":"accounts.User.checkAuth","Returntype":"error","Args":"sender dbus.Sender, selfPass bool, actionId string"},{"Uniquefunname":"func (u *User) checkAuthAutoLogin(sender dbus.Sender, enabled bool) error","Funname":"accounts.User.checkAuthAutoLogin","Returntype":"error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) checkAuthNoPasswdLogin(sender dbus.Sender, enabled bool) error","Funname":"accounts.User.checkAuthNoPasswdLogin","Returntype":"error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) clearData()","Funname":"accounts.User.clearData","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) clearFingers()","Funname":"accounts.User.clearFingers","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) getAccountType() int32","Funname":"accounts.User.getAccountType","Returntype":"int32","Args":""},{"Uniquefunname":"func (u *User) getAllIcons() []string","Funname":"accounts.User.getAllIcons","Returntype":"[]string","Args":""},{"Uniquefunname":"func (u *User) getGroups() []string","Funname":"accounts.User.getGroups","Returntype":"[]string","Args":""},{"Uniquefunname":"func (u *User) isSelf(uid uint32) bool","Funname":"accounts.User.isSelf","Returntype":"bool","Args":"uid uint32"},{"Uniquefunname":"func (u *User) setIconFile(iconURI string) (string, bool, error)","Funname":"accounts.User.setIconFile","Returntype":"(string, bool, error)","Args":"iconURI string"},{"Uniquefunname":"func (u *User) updateIconList()","Funname":"accounts.User.updateIconList","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropAccountType()","Funname":"accounts.User.updatePropAccountType","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropAutomaticLogin()","Funname":"accounts.User.updatePropAutomaticLogin","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropCanNoPasswdLogin()","Funname":"accounts.User.updatePropCanNoPasswdLogin","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropGroups()","Funname":"accounts.User.updatePropGroups","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropsPasswd(uInfo *users.UserInfo)","Funname":"accounts.User.updatePropsPasswd","Returntype":"","Args":"uInfo *users.UserInfo"},{"Uniquefunname":"func (u *User) updatePropsShadow(shadowInfo *users.ShadowInfo)","Funname":"accounts.User.updatePropsShadow","Returntype":"","Args":"shadowInfo *users.ShadowInfo"},{"Uniquefunname":"func (u *User) writeUserConfig() error","Funname":"accounts.User.writeUserConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (u *User) writeUserConfigWithChange(confKey string, value interface","Funname":"accounts.User.writeUserConfigWithChange","Returntype":"error","Args":"confKey string, value interface{}"},{"Uniquefunname":"func (u *User) writeUserConfigWithChanges(changes []configChange) error","Funname":"accounts.User.writeUserConfigWithChanges","Returntype":"error","Args":"changes []configChange"},{"Uniquefunname":"func getDefaultUserBackground() string","Funname":"accounts.getDefaultUserBackground","Returntype":"string","Args":""},{"Uniquefunname":"func getSessionList() []string","Funname":"accounts.getSessionList","Returntype":"[]string","Args":""},{"Uniquefunname":"func getTempFile() (string, error)","Funname":"accounts.getTempFile","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getUidFromUserPath(userPath string) string","Funname":"accounts.getUidFromUserPath","Returntype":"string","Args":"userPath string"},{"Uniquefunname":"func getUserGreeterBackground(kf *glib.KeyFile) (string, bool)","Funname":"accounts.getUserGreeterBackground","Returntype":"(string, bool)","Args":"kf *glib.KeyFile"},{"Uniquefunname":"func getUserSession(homeDir string) string","Funname":"accounts.getUserSession","Returntype":"string","Args":"homeDir string"},{"Uniquefunname":"func scaleUserIcon(file string) (string, bool, error)","Funname":"accounts.scaleUserIcon","Returntype":"(string, bool, error)","Args":"file string"},{"Uniquefunname":"func updateConfigPath(username string)","Funname":"accounts.updateConfigPath","Returntype":"","Args":"username string"},{"Uniquefunname":"func (u *User) checkAuth(sender dbus.Sender, selfPass bool, actionId string) error","Funname":"checkAuth","Returntype":"error","Args":"sender dbus.Sender, selfPass bool, actionId string"},{"Uniquefunname":"func (u *User) checkAuthAutoLogin(sender dbus.Sender, enabled bool) error","Funname":"checkAuthAutoLogin","Returntype":"error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) checkAuthNoPasswdLogin(sender dbus.Sender, enabled bool) error","Funname":"checkAuthNoPasswdLogin","Returntype":"error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) clearData()","Funname":"clearData","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) clearFingers()","Funname":"clearFingers","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) getAccountType() int32","Funname":"getAccountType","Returntype":"int32","Args":""},{"Uniquefunname":"func (u *User) getAllIcons() []string","Funname":"getAllIcons","Returntype":"[]string","Args":""},{"Uniquefunname":"func getDefaultUserBackground() string","Funname":"getDefaultUserBackground","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) getGroups() []string","Funname":"getGroups","Returntype":"[]string","Args":""},{"Uniquefunname":"func getSessionList() []string","Funname":"getSessionList","Returntype":"[]string","Args":""},{"Uniquefunname":"func getTempFile() (string, error)","Funname":"getTempFile","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getUidFromUserPath(userPath string) string","Funname":"getUidFromUserPath","Returntype":"string","Args":"userPath string"},{"Uniquefunname":"func getUserGreeterBackground(kf *glib.KeyFile) (string, bool)","Funname":"getUserGreeterBackground","Returntype":"(string, bool)","Args":"kf *glib.KeyFile"},{"Uniquefunname":"func getUserSession(homeDir string) string","Funname":"getUserSession","Returntype":"string","Args":"homeDir string"},{"Uniquefunname":"func (u *User) isSelf(uid uint32) bool","Funname":"isSelf","Returntype":"bool","Args":"uid uint32"},{"Uniquefunname":"func scaleUserIcon(file string) (string, bool, error)","Funname":"scaleUserIcon","Returntype":"(string, bool, error)","Args":"file string"},{"Uniquefunname":"func (u *User) setIconFile(iconURI string) (string, bool, error)","Funname":"setIconFile","Returntype":"(string, bool, error)","Args":"iconURI string"},{"Uniquefunname":"func updateConfigPath(username string)","Funname":"updateConfigPath","Returntype":"","Args":"username string"},{"Uniquefunname":"func (u *User) updateIconList()","Funname":"updateIconList","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropAccountType()","Funname":"updatePropAccountType","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropAutomaticLogin()","Funname":"updatePropAutomaticLogin","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropCanNoPasswdLogin()","Funname":"updatePropCanNoPasswdLogin","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropGroups()","Funname":"updatePropGroups","Returntype":"","Args":""},{"Uniquefunname":"func (u *User) updatePropsPasswd(uInfo *users.UserInfo)","Funname":"updatePropsPasswd","Returntype":"","Args":"uInfo *users.UserInfo"},{"Uniquefunname":"func (u *User) updatePropsShadow(shadowInfo *users.ShadowInfo)","Funname":"updatePropsShadow","Returntype":"","Args":"shadowInfo *users.ShadowInfo"},{"Uniquefunname":"func (u *User) writeUserConfig() error","Funname":"writeUserConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (u *User) writeUserConfigWithChange(confKey string, value interface","Funname":"writeUserConfigWithChange","Returntype":"error","Args":"confKey string, value interface{}"},{"Uniquefunname":"func (u *User) writeUserConfigWithChanges(changes []configChange) error","Funname":"writeUserConfigWithChanges","Returntype":"error","Args":"changes []configChange"}],"Records":[{"Name":"struct:accounts.User","Fields":["accounts.User.AccountType int32","accounts.User.AutomaticLogin bool","accounts.User.CreatedTime uint64","accounts.User.DesktopBackgrounds []string","accounts.User.FullName string","accounts.User.Gid string","accounts.User.GreeterBackground string","accounts.User.Groups []string","accounts.User.HistoryLayout []string","accounts.User.HomeDir string","accounts.User.IconFile string","accounts.User.IconList []string","accounts.User.Layout string","accounts.User.Locale string","accounts.User.Locked bool","accounts.User.LoginTime uint64","accounts.User.LongDateFormat int32","accounts.User.LongTimeFormat int32","accounts.User.MaxPasswordAge int32","accounts.User.NoPasswdLogin bool","accounts.User.PasswordLastChange int32","accounts.User.PasswordStatus string","accounts.User.PropsMu sync.RWMutex","accounts.User.Shell string","accounts.User.ShortDateFormat int32","accounts.User.ShortTimeFormat int32","accounts.User.SystemAccount bool","accounts.User.UUID string","accounts.User.Uid string","accounts.User.Use24HourFormat bool","accounts.User.UserName string","accounts.User.WeekBegins int32","accounts.User.WeekdayFormat int32","accounts.User.XSession string","accounts.User.configLocker sync.Mutex","accounts.User.customIcon string","accounts.User.methods *struct { SetFullName func() `in:\"name\"`; SetHomeDir func() `in:\"home\"`; SetShell func() `in:\"shell\"`; SetPassword func() `in:\"password\"`; SetAccountType func() `in:\"accountType\"`; SetLocked func() `in:\"locked\"`; SetAutomaticLogin func() `in:\"enabled\"`; EnableNoPasswdLogin func() `in:\"enabled\"`; SetLocale func() `in:\"locale\"`; SetLayout func() `in:\"layout\"`; SetIconFile func() `in:\"iconFile\"`; DeleteIconFile func() `in:\"iconFile\"`; SetDesktopBackgrounds func() `in:\"backgrounds\"`; SetGreeterBackground func(","accounts.User.service *dbusutil.Service"]},{"Name":"const:accounts","Fields":["accounts.confGroupUser","accounts.confKeyCustomIcon","accounts.confKeyDesktopBackgrounds","accounts.confKeyGreeterBackground","accounts.confKeyHistoryLayout","accounts.confKeyIcon","accounts.confKeyLayout","accounts.confKeyLocale","accounts.confKeyLongDateFormat","accounts.confKeyLongTimeFormat","accounts.confKeyShortDateFormat","accounts.confKeyShortTimeFormat","accounts.confKeySystemAccount","accounts.confKeyUUID","accounts.confKeyUse24HourFormat","accounts.confKeyWeekBegins","accounts.confKeyWeekdayFormat","accounts.confKeyXSession","accounts.defaultLongDateFormat","accounts.defaultLongTimeFormat","accounts.defaultShortDateFormat","accounts.defaultShortTimeFormat","accounts.defaultUse24HourFormat","accounts.defaultUserBackgroundDir","accounts.defaultUserIcon","accounts.defaultWeekBegins","accounts.defaultWeekdayFormat","accounts.maxHeight","accounts.maxWidth"]},{"Name":"struct:accounts.configChange","Fields":["accounts.configChange.key string","accounts.configChange.value interface{}"]}]}
{"Filepath":"accounts/user_created_time.go","Functions":[{"Uniquefunname":"func (u *User) getCreatedTime() (uint64, error)","Funname":"accounts.User.getCreatedTime","Returntype":"(uint64, error)","Args":""},{"Uniquefunname":"func getCreatedTimeFromBashLogout(home string) (uint64, error)","Funname":"accounts.getCreatedTimeFromBashLogout","Returntype":"(uint64, error)","Args":"home string"},{"Uniquefunname":"func getCreatedTimeFromFile(filename string) (uint64, error)","Funname":"accounts.getCreatedTimeFromFile","Returntype":"(uint64, error)","Args":"filename string"},{"Uniquefunname":"func getCreatedTimeFromUserConfig(username string) (uint64, error)","Funname":"accounts.getCreatedTimeFromUserConfig","Returntype":"(uint64, error)","Args":"username string"},{"Uniquefunname":"func (u *User) getCreatedTime() (uint64, error)","Funname":"getCreatedTime","Returntype":"(uint64, error)","Args":""},{"Uniquefunname":"func getCreatedTimeFromBashLogout(home string) (uint64, error)","Funname":"getCreatedTimeFromBashLogout","Returntype":"(uint64, error)","Args":"home string"},{"Uniquefunname":"func getCreatedTimeFromFile(filename string) (uint64, error)","Funname":"getCreatedTimeFromFile","Returntype":"(uint64, error)","Args":"filename string"},{"Uniquefunname":"func getCreatedTimeFromUserConfig(username string) (uint64, error)","Funname":"getCreatedTimeFromUserConfig","Returntype":"(uint64, error)","Args":"username string"}],"Records":null}
{"Filepath":"accounts/user_dbusutil.go","Functions":[{"Uniquefunname":"func (v *User) emitPropChangedAccountType(value int32) error","Funname":"accounts.User.emitPropChangedAccountType","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedAutomaticLogin(value bool) error","Funname":"accounts.User.emitPropChangedAutomaticLogin","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedCreatedTime(value uint64) error","Funname":"accounts.User.emitPropChangedCreatedTime","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *User) emitPropChangedDesktopBackgrounds(value []string) error","Funname":"accounts.User.emitPropChangedDesktopBackgrounds","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedFullName(value string) error","Funname":"accounts.User.emitPropChangedFullName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGid(value string) error","Funname":"accounts.User.emitPropChangedGid","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGreeterBackground(value string) error","Funname":"accounts.User.emitPropChangedGreeterBackground","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGroups(value []string) error","Funname":"accounts.User.emitPropChangedGroups","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedHistoryLayout(value []string) error","Funname":"accounts.User.emitPropChangedHistoryLayout","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedHomeDir(value string) error","Funname":"accounts.User.emitPropChangedHomeDir","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedIconFile(value string) error","Funname":"accounts.User.emitPropChangedIconFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedIconList(value []string) error","Funname":"accounts.User.emitPropChangedIconList","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedLayout(value string) error","Funname":"accounts.User.emitPropChangedLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedLocale(value string) error","Funname":"accounts.User.emitPropChangedLocale","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedLocked(value bool) error","Funname":"accounts.User.emitPropChangedLocked","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedLoginTime(value uint64) error","Funname":"accounts.User.emitPropChangedLoginTime","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *User) emitPropChangedLongDateFormat(value int32) error","Funname":"accounts.User.emitPropChangedLongDateFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedLongTimeFormat(value int32) error","Funname":"accounts.User.emitPropChangedLongTimeFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedMaxPasswordAge(value int32) error","Funname":"accounts.User.emitPropChangedMaxPasswordAge","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedNoPasswdLogin(value bool) error","Funname":"accounts.User.emitPropChangedNoPasswdLogin","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedPasswordLastChange(value int32) error","Funname":"accounts.User.emitPropChangedPasswordLastChange","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedPasswordStatus(value string) error","Funname":"accounts.User.emitPropChangedPasswordStatus","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedShell(value string) error","Funname":"accounts.User.emitPropChangedShell","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedShortDateFormat(value int32) error","Funname":"accounts.User.emitPropChangedShortDateFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedShortTimeFormat(value int32) error","Funname":"accounts.User.emitPropChangedShortTimeFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedSystemAccount(value bool) error","Funname":"accounts.User.emitPropChangedSystemAccount","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedUUID(value string) error","Funname":"accounts.User.emitPropChangedUUID","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedUid(value string) error","Funname":"accounts.User.emitPropChangedUid","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedUse24HourFormat(value bool) error","Funname":"accounts.User.emitPropChangedUse24HourFormat","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedUserName(value string) error","Funname":"accounts.User.emitPropChangedUserName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedWeekBegins(value int32) error","Funname":"accounts.User.emitPropChangedWeekBegins","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedWeekdayFormat(value int32) error","Funname":"accounts.User.emitPropChangedWeekdayFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedXSession(value string) error","Funname":"accounts.User.emitPropChangedXSession","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) setPropAccountType(value int32) (changed bool)","Funname":"accounts.User.setPropAccountType","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropAutomaticLogin(value bool) (changed bool)","Funname":"accounts.User.setPropAutomaticLogin","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropCreatedTime(value uint64) (changed bool)","Funname":"accounts.User.setPropCreatedTime","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *User) setPropDesktopBackgrounds(value []string)","Funname":"accounts.User.setPropDesktopBackgrounds","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropFullName(value string) (changed bool)","Funname":"accounts.User.setPropFullName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGid(value string) (changed bool)","Funname":"accounts.User.setPropGid","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGreeterBackground(value string) (changed bool)","Funname":"accounts.User.setPropGreeterBackground","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGroups(value []string) (changed bool)","Funname":"accounts.User.setPropGroups","Returntype":"(changed bool)","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropHistoryLayout(value []string)","Funname":"accounts.User.setPropHistoryLayout","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropHomeDir(value string) (changed bool)","Funname":"accounts.User.setPropHomeDir","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropIconFile(value string) (changed bool)","Funname":"accounts.User.setPropIconFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropIconList(value []string)","Funname":"accounts.User.setPropIconList","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropLayout(value string) (changed bool)","Funname":"accounts.User.setPropLayout","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropLocale(value string) (changed bool)","Funname":"accounts.User.setPropLocale","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropLocked(value bool) (changed bool)","Funname":"accounts.User.setPropLocked","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropLoginTime(value uint64) (changed bool)","Funname":"accounts.User.setPropLoginTime","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *User) setPropLongDateFormat(value int32) (changed bool)","Funname":"accounts.User.setPropLongDateFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropLongTimeFormat(value int32) (changed bool)","Funname":"accounts.User.setPropLongTimeFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropMaxPasswordAge(value int32) (changed bool)","Funname":"accounts.User.setPropMaxPasswordAge","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropNoPasswdLogin(value bool) (changed bool)","Funname":"accounts.User.setPropNoPasswdLogin","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropPasswordLastChange(value int32) (changed bool)","Funname":"accounts.User.setPropPasswordLastChange","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropPasswordStatus(value string) (changed bool)","Funname":"accounts.User.setPropPasswordStatus","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropShell(value string) (changed bool)","Funname":"accounts.User.setPropShell","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropShortDateFormat(value int32) (changed bool)","Funname":"accounts.User.setPropShortDateFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropShortTimeFormat(value int32) (changed bool)","Funname":"accounts.User.setPropShortTimeFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropSystemAccount(value bool) (changed bool)","Funname":"accounts.User.setPropSystemAccount","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropUUID(value string) (changed bool)","Funname":"accounts.User.setPropUUID","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropUid(value string) (changed bool)","Funname":"accounts.User.setPropUid","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropUse24HourFormat(value bool) (changed bool)","Funname":"accounts.User.setPropUse24HourFormat","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropUserName(value string) (changed bool)","Funname":"accounts.User.setPropUserName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropWeekBegins(value int32) (changed bool)","Funname":"accounts.User.setPropWeekBegins","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropWeekdayFormat(value int32) (changed bool)","Funname":"accounts.User.setPropWeekdayFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropXSession(value string) (changed bool)","Funname":"accounts.User.setPropXSession","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedAccountType(value int32) error","Funname":"emitPropChangedAccountType","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedAutomaticLogin(value bool) error","Funname":"emitPropChangedAutomaticLogin","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedCreatedTime(value uint64) error","Funname":"emitPropChangedCreatedTime","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *User) emitPropChangedDesktopBackgrounds(value []string) error","Funname":"emitPropChangedDesktopBackgrounds","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedFullName(value string) error","Funname":"emitPropChangedFullName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGid(value string) error","Funname":"emitPropChangedGid","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGreeterBackground(value string) error","Funname":"emitPropChangedGreeterBackground","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedGroups(value []string) error","Funname":"emitPropChangedGroups","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedHistoryLayout(value []string) error","Funname":"emitPropChangedHistoryLayout","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedHomeDir(value string) error","Funname":"emitPropChangedHomeDir","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedIconFile(value string) error","Funname":"emitPropChangedIconFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedIconList(value []string) error","Funname":"emitPropChangedIconList","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *User) emitPropChangedLayout(value string) error","Funname":"emitPropChangedLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedLocale(value string) error","Funname":"emitPropChangedLocale","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedLocked(value bool) error","Funname":"emitPropChangedLocked","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedLoginTime(value uint64) error","Funname":"emitPropChangedLoginTime","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *User) emitPropChangedLongDateFormat(value int32) error","Funname":"emitPropChangedLongDateFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedLongTimeFormat(value int32) error","Funname":"emitPropChangedLongTimeFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedMaxPasswordAge(value int32) error","Funname":"emitPropChangedMaxPasswordAge","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedNoPasswdLogin(value bool) error","Funname":"emitPropChangedNoPasswdLogin","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedPasswordLastChange(value int32) error","Funname":"emitPropChangedPasswordLastChange","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedPasswordStatus(value string) error","Funname":"emitPropChangedPasswordStatus","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedShell(value string) error","Funname":"emitPropChangedShell","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedShortDateFormat(value int32) error","Funname":"emitPropChangedShortDateFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedShortTimeFormat(value int32) error","Funname":"emitPropChangedShortTimeFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedSystemAccount(value bool) error","Funname":"emitPropChangedSystemAccount","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedUUID(value string) error","Funname":"emitPropChangedUUID","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedUid(value string) error","Funname":"emitPropChangedUid","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedUse24HourFormat(value bool) error","Funname":"emitPropChangedUse24HourFormat","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *User) emitPropChangedUserName(value string) error","Funname":"emitPropChangedUserName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) emitPropChangedWeekBegins(value int32) error","Funname":"emitPropChangedWeekBegins","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedWeekdayFormat(value int32) error","Funname":"emitPropChangedWeekdayFormat","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *User) emitPropChangedXSession(value string) error","Funname":"emitPropChangedXSession","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *User) setPropAccountType(value int32) (changed bool)","Funname":"setPropAccountType","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropAutomaticLogin(value bool) (changed bool)","Funname":"setPropAutomaticLogin","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropCreatedTime(value uint64) (changed bool)","Funname":"setPropCreatedTime","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *User) setPropDesktopBackgrounds(value []string)","Funname":"setPropDesktopBackgrounds","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropFullName(value string) (changed bool)","Funname":"setPropFullName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGid(value string) (changed bool)","Funname":"setPropGid","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGreeterBackground(value string) (changed bool)","Funname":"setPropGreeterBackground","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropGroups(value []string) (changed bool)","Funname":"setPropGroups","Returntype":"(changed bool)","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropHistoryLayout(value []string)","Funname":"setPropHistoryLayout","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropHomeDir(value string) (changed bool)","Funname":"setPropHomeDir","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropIconFile(value string) (changed bool)","Funname":"setPropIconFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropIconList(value []string)","Funname":"setPropIconList","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *User) setPropLayout(value string) (changed bool)","Funname":"setPropLayout","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropLocale(value string) (changed bool)","Funname":"setPropLocale","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropLocked(value bool) (changed bool)","Funname":"setPropLocked","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropLoginTime(value uint64) (changed bool)","Funname":"setPropLoginTime","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *User) setPropLongDateFormat(value int32) (changed bool)","Funname":"setPropLongDateFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropLongTimeFormat(value int32) (changed bool)","Funname":"setPropLongTimeFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropMaxPasswordAge(value int32) (changed bool)","Funname":"setPropMaxPasswordAge","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropNoPasswdLogin(value bool) (changed bool)","Funname":"setPropNoPasswdLogin","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropPasswordLastChange(value int32) (changed bool)","Funname":"setPropPasswordLastChange","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropPasswordStatus(value string) (changed bool)","Funname":"setPropPasswordStatus","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropShell(value string) (changed bool)","Funname":"setPropShell","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropShortDateFormat(value int32) (changed bool)","Funname":"setPropShortDateFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropShortTimeFormat(value int32) (changed bool)","Funname":"setPropShortTimeFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropSystemAccount(value bool) (changed bool)","Funname":"setPropSystemAccount","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropUUID(value string) (changed bool)","Funname":"setPropUUID","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropUid(value string) (changed bool)","Funname":"setPropUid","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropUse24HourFormat(value bool) (changed bool)","Funname":"setPropUse24HourFormat","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *User) setPropUserName(value string) (changed bool)","Funname":"setPropUserName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *User) setPropWeekBegins(value int32) (changed bool)","Funname":"setPropWeekBegins","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropWeekdayFormat(value int32) (changed bool)","Funname":"setPropWeekdayFormat","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *User) setPropXSession(value string) (changed bool)","Funname":"setPropXSession","Returntype":"(changed bool)","Args":"value string"}],"Records":null}
{"Filepath":"accounts/user_ifc.go","Functions":[{"Uniquefunname":"func (u *User) AddGroup(sender dbus.Sender, group string) *dbus.Error","Funname":"AddGroup","Returntype":"*dbus.Error","Args":"sender dbus.Sender, group string"},{"Uniquefunname":"func (u *User) DeleteGroup(sender dbus.Sender, group string) *dbus.Error","Funname":"DeleteGroup","Returntype":"*dbus.Error","Args":"sender dbus.Sender, group string"},{"Uniquefunname":"func (u *User) DeleteIconFile(sender dbus.Sender, icon string) *dbus.Error","Funname":"DeleteIconFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, icon string"},{"Uniquefunname":"func (u *User) EnableNoPasswdLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"EnableNoPasswdLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (err ErrInvalidBackground) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (*User) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) GetLargeIcon() string","Funname":"GetLargeIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) IsIconDeletable(iconURI string) bool","Funname":"IsIconDeletable","Returntype":"bool","Args":"iconURI string"},{"Uniquefunname":"func (u *User) IsPasswordExpired() (bool, *dbus.Error)","Funname":"IsPasswordExpired","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (u *User) SetAutomaticLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"SetAutomaticLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) SetDesktopBackgrounds(sender dbus.Sender, val []string) *dbus.Error","Funname":"SetDesktopBackgrounds","Returntype":"*dbus.Error","Args":"sender dbus.Sender, val []string"},{"Uniquefunname":"func (u *User) SetFullName(sender dbus.Sender, name string) *dbus.Error","Funname":"SetFullName","Returntype":"*dbus.Error","Args":"sender dbus.Sender, name string"},{"Uniquefunname":"func (u *User) SetGreeterBackground(sender dbus.Sender, bg string) *dbus.Error","Funname":"SetGreeterBackground","Returntype":"*dbus.Error","Args":"sender dbus.Sender, bg string"},{"Uniquefunname":"func (u *User) SetGroups(sender dbus.Sender, groups []string) *dbus.Error","Funname":"SetGroups","Returntype":"*dbus.Error","Args":"sender dbus.Sender, groups []string"},{"Uniquefunname":"func (u *User) SetHistoryLayout(sender dbus.Sender, list []string) *dbus.Error","Funname":"SetHistoryLayout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, list []string"},{"Uniquefunname":"func (u *User) SetHomeDir(sender dbus.Sender, home string) *dbus.Error","Funname":"SetHomeDir","Returntype":"*dbus.Error","Args":"sender dbus.Sender, home string"},{"Uniquefunname":"func (u *User) SetIconFile(sender dbus.Sender, iconURI string) *dbus.Error","Funname":"SetIconFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, iconURI string"},{"Uniquefunname":"func (u *User) SetLayout(sender dbus.Sender, layout string) *dbus.Error","Funname":"SetLayout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, layout string"},{"Uniquefunname":"func (u *User) SetLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"SetLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (u *User) SetLocked(sender dbus.Sender, locked bool) *dbus.Error","Funname":"SetLocked","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locked bool"},{"Uniquefunname":"func (u *User) SetLongDateFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetLongDateFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetLongTimeFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetLongTimeFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetMaxPasswordAge(sender dbus.Sender, nDays int32) *dbus.Error","Funname":"SetMaxPasswordAge","Returntype":"*dbus.Error","Args":"sender dbus.Sender, nDays int32"},{"Uniquefunname":"func (u *User) SetPassword(sender dbus.Sender, password string) *dbus.Error","Funname":"SetPassword","Returntype":"*dbus.Error","Args":"sender dbus.Sender, password string"},{"Uniquefunname":"func (u *User) SetShell(sender dbus.Sender, shell string) *dbus.Error","Funname":"SetShell","Returntype":"*dbus.Error","Args":"sender dbus.Sender, shell string"},{"Uniquefunname":"func (u *User) SetShortDateFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetShortDateFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetShortTimeFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetShortTimeFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetUse24HourFormat(sender dbus.Sender, value bool) *dbus.Error","Funname":"SetUse24HourFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value bool"},{"Uniquefunname":"func (u *User) SetWeekBegins(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetWeekBegins","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetWeekdayFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"SetWeekdayFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (err ErrInvalidBackground) Error() string","Funname":"accounts.ErrInvalidBackground.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) AddGroup(sender dbus.Sender, group string) *dbus.Error","Funname":"accounts.User.AddGroup","Returntype":"*dbus.Error","Args":"sender dbus.Sender, group string"},{"Uniquefunname":"func (u *User) DeleteGroup(sender dbus.Sender, group string) *dbus.Error","Funname":"accounts.User.DeleteGroup","Returntype":"*dbus.Error","Args":"sender dbus.Sender, group string"},{"Uniquefunname":"func (u *User) DeleteIconFile(sender dbus.Sender, icon string) *dbus.Error","Funname":"accounts.User.DeleteIconFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, icon string"},{"Uniquefunname":"func (u *User) EnableNoPasswdLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"accounts.User.EnableNoPasswdLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (*User) GetInterfaceName() string","Funname":"accounts.User.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) GetLargeIcon() string","Funname":"accounts.User.GetLargeIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (u *User) IsIconDeletable(iconURI string) bool","Funname":"accounts.User.IsIconDeletable","Returntype":"bool","Args":"iconURI string"},{"Uniquefunname":"func (u *User) IsPasswordExpired() (bool, *dbus.Error)","Funname":"accounts.User.IsPasswordExpired","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (u *User) SetAutomaticLogin(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"accounts.User.SetAutomaticLogin","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (u *User) SetDesktopBackgrounds(sender dbus.Sender, val []string) *dbus.Error","Funname":"accounts.User.SetDesktopBackgrounds","Returntype":"*dbus.Error","Args":"sender dbus.Sender, val []string"},{"Uniquefunname":"func (u *User) SetFullName(sender dbus.Sender, name string) *dbus.Error","Funname":"accounts.User.SetFullName","Returntype":"*dbus.Error","Args":"sender dbus.Sender, name string"},{"Uniquefunname":"func (u *User) SetGreeterBackground(sender dbus.Sender, bg string) *dbus.Error","Funname":"accounts.User.SetGreeterBackground","Returntype":"*dbus.Error","Args":"sender dbus.Sender, bg string"},{"Uniquefunname":"func (u *User) SetGroups(sender dbus.Sender, groups []string) *dbus.Error","Funname":"accounts.User.SetGroups","Returntype":"*dbus.Error","Args":"sender dbus.Sender, groups []string"},{"Uniquefunname":"func (u *User) SetHistoryLayout(sender dbus.Sender, list []string) *dbus.Error","Funname":"accounts.User.SetHistoryLayout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, list []string"},{"Uniquefunname":"func (u *User) SetHomeDir(sender dbus.Sender, home string) *dbus.Error","Funname":"accounts.User.SetHomeDir","Returntype":"*dbus.Error","Args":"sender dbus.Sender, home string"},{"Uniquefunname":"func (u *User) SetIconFile(sender dbus.Sender, iconURI string) *dbus.Error","Funname":"accounts.User.SetIconFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, iconURI string"},{"Uniquefunname":"func (u *User) SetLayout(sender dbus.Sender, layout string) *dbus.Error","Funname":"accounts.User.SetLayout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, layout string"},{"Uniquefunname":"func (u *User) SetLocale(sender dbus.Sender, locale string) *dbus.Error","Funname":"accounts.User.SetLocale","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locale string"},{"Uniquefunname":"func (u *User) SetLocked(sender dbus.Sender, locked bool) *dbus.Error","Funname":"accounts.User.SetLocked","Returntype":"*dbus.Error","Args":"sender dbus.Sender, locked bool"},{"Uniquefunname":"func (u *User) SetLongDateFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetLongDateFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetLongTimeFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetLongTimeFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetMaxPasswordAge(sender dbus.Sender, nDays int32) *dbus.Error","Funname":"accounts.User.SetMaxPasswordAge","Returntype":"*dbus.Error","Args":"sender dbus.Sender, nDays int32"},{"Uniquefunname":"func (u *User) SetPassword(sender dbus.Sender, password string) *dbus.Error","Funname":"accounts.User.SetPassword","Returntype":"*dbus.Error","Args":"sender dbus.Sender, password string"},{"Uniquefunname":"func (u *User) SetShell(sender dbus.Sender, shell string) *dbus.Error","Funname":"accounts.User.SetShell","Returntype":"*dbus.Error","Args":"sender dbus.Sender, shell string"},{"Uniquefunname":"func (u *User) SetShortDateFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetShortDateFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetShortTimeFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetShortTimeFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetUse24HourFormat(sender dbus.Sender, value bool) *dbus.Error","Funname":"accounts.User.SetUse24HourFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value bool"},{"Uniquefunname":"func (u *User) SetWeekBegins(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetWeekBegins","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (u *User) SetWeekdayFormat(sender dbus.Sender, value int32) *dbus.Error","Funname":"accounts.User.SetWeekdayFormat","Returntype":"*dbus.Error","Args":"sender dbus.Sender, value int32"},{"Uniquefunname":"func (v *User) setLocale(value string)","Funname":"accounts.User.setLocale","Returntype":"","Args":"value string"},{"Uniquefunname":"func copyTempIconFile(src string, username string) (string, error)","Funname":"accounts.copyTempIconFile","Returntype":"(string, error)","Args":"src string, username string"},{"Uniquefunname":"func isBackgroundValid(file string) bool","Funname":"accounts.isBackgroundValid","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func copyTempIconFile(src string, username string) (string, error)","Funname":"copyTempIconFile","Returntype":"(string, error)","Args":"src string, username string"},{"Uniquefunname":"func isBackgroundValid(file string) bool","Funname":"isBackgroundValid","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func (v *User) setLocale(value string)","Funname":"setLocale","Returntype":"","Args":"value string"}],"Records":[{"Name":"struct:accounts.ErrInvalidBackground","Fields":["accounts.ErrInvalidBackground.FileName string"]},{"Name":"var:accounts","Fields":["accounts.supportedFormats"]},{"Name":"const:accounts","Fields":["accounts.userDBusInterface","accounts.userDBusPathPrefix"]}]}
{"Filepath":"accounts/utils.go","Functions":[{"Uniquefunname":"func (code ErrCodeType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (code ErrCodeType) String() string","Funname":"accounts.ErrCodeType.String","Returntype":"string","Args":""},{"Uniquefunname":"func checkAccountType(accountType int) error","Funname":"accounts.checkAccountType","Returntype":"error","Args":"accountType int"},{"Uniquefunname":"func checkAuth(actionId string, sysBusName string) error","Funname":"accounts.checkAuth","Returntype":"error","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func checkAuthByPolkit(actionId string, sysBusName string) (bool, error)","Funname":"accounts.checkAuthByPolkit","Returntype":"(bool, error)","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func getAvailableShells(file string) []string","Funname":"accounts.getAvailableShells","Returntype":"[]string","Args":"file string"},{"Uniquefunname":"func getDefaultLayout() string","Funname":"accounts.getDefaultLayout","Returntype":"string","Args":""},{"Uniquefunname":"func getDefaultLocale() (locale string)","Funname":"accounts.getDefaultLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getLocaleFromFile(file string) string","Funname":"accounts.getLocaleFromFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func getNewUserCustomIconDest(username string) string","Funname":"accounts.getNewUserCustomIconDest","Returntype":"string","Args":"username string"},{"Uniquefunname":"func getSystemLayout(file string) (string, error)","Funname":"accounts.getSystemLayout","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getUserStandardIcons() []string","Funname":"accounts.getUserStandardIcons","Returntype":"[]string","Args":""},{"Uniquefunname":"func getValueFromLine(line, delim string) string","Funname":"accounts.getValueFromLine","Returntype":"string","Args":"line, delim string"},{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"accounts.isStrInArray","Returntype":"bool","Args":"str string, array []string"},{"Uniquefunname":"func isStrvEqual(l1, l2 []string) bool","Funname":"accounts.isStrvEqual","Returntype":"bool","Args":"l1, l2 []string"},{"Uniquefunname":"func checkAccountType(accountType int) error","Funname":"checkAccountType","Returntype":"error","Args":"accountType int"},{"Uniquefunname":"func checkAuth(actionId string, sysBusName string) error","Funname":"checkAuth","Returntype":"error","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func checkAuthByPolkit(actionId string, sysBusName string) (bool, error)","Funname":"checkAuthByPolkit","Returntype":"(bool, error)","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func getAvailableShells(file string) []string","Funname":"getAvailableShells","Returntype":"[]string","Args":"file string"},{"Uniquefunname":"func getDefaultLayout() string","Funname":"getDefaultLayout","Returntype":"string","Args":""},{"Uniquefunname":"func getDefaultLocale() (locale string)","Funname":"getDefaultLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getLocaleFromFile(file string) string","Funname":"getLocaleFromFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func getNewUserCustomIconDest(username string) string","Funname":"getNewUserCustomIconDest","Returntype":"string","Args":"username string"},{"Uniquefunname":"func getSystemLayout(file string) (string, error)","Funname":"getSystemLayout","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getUserStandardIcons() []string","Funname":"getUserStandardIcons","Returntype":"[]string","Args":""},{"Uniquefunname":"func getValueFromLine(line, delim string) string","Funname":"getValueFromLine","Returntype":"string","Args":"line, delim string"},{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"isStrInArray","Returntype":"bool","Args":"str string, array []string"},{"Uniquefunname":"func isStrvEqual(l1, l2 []string) bool","Funname":"isStrvEqual","Returntype":"bool","Args":"l1, l2 []string"}],"Records":[{"Name":"const:accounts","Fields":["accounts.ErrCodeAuthFailed","accounts.ErrCodeExecFailed","accounts.ErrCodeParamInvalid","accounts.ErrCodeUnkown","accounts.defaultLayout","accounts.defaultLayoutFile","accounts.defaultLocale","accounts.layoutDelimiter","accounts.polkitActionChangeOwnData","accounts.polkitActionDisableAutoLogin","accounts.polkitActionDisableNoPasswordLogin","accounts.polkitActionEnableAutoLogin","accounts.polkitActionEnableNoPasswordLogin","accounts.polkitActionSetKeyboardLayout","accounts.polkitActionUserAdministration","accounts.systemLocaleFile","accounts.systemdLocaleFile"]}]}
{"Filepath":"accounts/utils_test.go","Functions":[{"Uniquefunname":"func TestAvailableShells(t *testing.T)","Funname":"TestAvailableShells","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLocaleFromFile(t *testing.T)","Funname":"TestGetLocaleFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetValueFromLine(t *testing.T)","Funname":"TestGetValueFromLine","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrInArray(t *testing.T)","Funname":"TestIsStrInArray","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrvEqual(t *testing.T)","Funname":"TestIsStrvEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemLayout(t *testing.T)","Funname":"TestSystemLayout","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAvailableShells(t *testing.T)","Funname":"accounts.TestAvailableShells","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetLocaleFromFile(t *testing.T)","Funname":"accounts.TestGetLocaleFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetValueFromLine(t *testing.T)","Funname":"accounts.TestGetValueFromLine","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrInArray(t *testing.T)","Funname":"accounts.TestIsStrInArray","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrvEqual(t *testing.T)","Funname":"accounts.TestIsStrvEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemLayout(t *testing.T)","Funname":"accounts.TestSystemLayout","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"var:accounts","Fields":["accounts.str"]}]}
{"Filepath":"accounts/checkers/checkers_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestCheckPasswordValid(c *C.C)","Funname":"TestCheckPasswordValid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestCheckUsername(c *C.C)","Funname":"TestCheckUsername","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetUsernames(c *C.C)","Funname":"TestGetUsernames","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"checkers.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"checkers.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestCheckPasswordValid(c *C.C)","Funname":"checkers.testWrapper.TestCheckPasswordValid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestCheckUsername(c *C.C)","Funname":"checkers.testWrapper.TestCheckUsername","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetUsernames(c *C.C)","Funname":"checkers.testWrapper.TestGetUsernames","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"accounts/checkers/common.go","Functions":[{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"checkers.isStrInArray","Returntype":"bool","Args":"str string, array []string"},{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"isStrInArray","Returntype":"bool","Args":"str string, array []string"}],"Records":null}
{"Filepath":"accounts/checkers/password.go","Functions":[{"Uniquefunname":"func CheckPasswordValid(releaseType, passwd string) passwordErrorCode","Funname":"CheckPasswordValid","Returntype":"passwordErrorCode","Args":"releaseType, passwd string"},{"Uniquefunname":"func (code passwordErrorCode) IsOk() bool","Funname":"IsOk","Returntype":"bool","Args":""},{"Uniquefunname":"func (code passwordErrorCode) Prompt() string","Funname":"Prompt","Returntype":"string","Args":""},{"Uniquefunname":"func CheckPasswordValid(releaseType, passwd string) passwordErrorCode","Funname":"checkers.CheckPasswordValid","Returntype":"passwordErrorCode","Args":"releaseType, passwd string"},{"Uniquefunname":"func (p password) hasAnyNumber() bool","Funname":"checkers.password.hasAnyNumber","Returntype":"bool","Args":""},{"Uniquefunname":"func (p password) hasAnySpecialChar() bool","Funname":"checkers.password.hasAnySpecialChar","Returntype":"bool","Args":""},{"Uniquefunname":"func (p password) hasUpperAndLowerAlphabet() bool","Funname":"checkers.password.hasUpperAndLowerAlphabet","Returntype":"bool","Args":""},{"Uniquefunname":"func (code passwordErrorCode) IsOk() bool","Funname":"checkers.passwordErrorCode.IsOk","Returntype":"bool","Args":""},{"Uniquefunname":"func (code passwordErrorCode) Prompt() string","Funname":"checkers.passwordErrorCode.Prompt","Returntype":"string","Args":""},{"Uniquefunname":"func (p password) hasAnyNumber() bool","Funname":"hasAnyNumber","Returntype":"bool","Args":""},{"Uniquefunname":"func (p password) hasAnySpecialChar() bool","Funname":"hasAnySpecialChar","Returntype":"bool","Args":""},{"Uniquefunname":"func (p password) hasUpperAndLowerAlphabet() bool","Funname":"hasUpperAndLowerAlphabet","Returntype":"bool","Args":""}],"Records":[{"Name":"const:checkers","Fields":["checkers.passwordErrCodeShort","checkers.passwordErrCodeSimple","checkers.passwordMinLength","checkers.passwordOK","checkers.passwordSpecialChars"]},{"Name":"var:checkers","Fields":["checkers.passwordLowerAlphabetRegexp","checkers.passwordNumberRegexp","checkers.passwordUpperAlphabetRegexp"]}]}
{"Filepath":"accounts/checkers/username.go","Functions":[{"Uniquefunname":"func CheckUsernameValid(name string) *ErrorInfo","Funname":"CheckUsernameValid","Returntype":"*ErrorInfo","Args":"name string"},{"Uniquefunname":"func (code ErrorCode) Error() *ErrorInfo","Funname":"Error","Returntype":"*ErrorInfo","Args":""},{"Uniquefunname":"func Tr(text string) string","Funname":"Tr","Returntype":"string","Args":"text string"},{"Uniquefunname":"func CheckUsernameValid(name string) *ErrorInfo","Funname":"checkers.CheckUsernameValid","Returntype":"*ErrorInfo","Args":"name string"},{"Uniquefunname":"func (code ErrorCode) Error() *ErrorInfo","Funname":"checkers.ErrorCode.Error","Returntype":"*ErrorInfo","Args":""},{"Uniquefunname":"func Tr(text string) string","Funname":"checkers.Tr","Returntype":"string","Args":"text string"},{"Uniquefunname":"func (name Username) getUid() (int64, error)","Funname":"checkers.Username.getUid","Returntype":"(int64, error)","Args":""},{"Uniquefunname":"func (name Username) isFirstCharValid() bool","Funname":"checkers.Username.isFirstCharValid","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isNameExist() bool","Funname":"checkers.Username.isNameExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isNameInGroup() bool","Funname":"checkers.Username.isNameInGroup","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isStringValid() bool","Funname":"checkers.Username.isStringValid","Returntype":"bool","Args":""},{"Uniquefunname":"func getAllUsername(file string) (UsernameList, error)","Funname":"checkers.getAllUsername","Returntype":"(UsernameList, error)","Args":"file string"},{"Uniquefunname":"func getAllUsername(file string) (UsernameList, error)","Funname":"getAllUsername","Returntype":"(UsernameList, error)","Args":"file string"},{"Uniquefunname":"func (name Username) getUid() (int64, error)","Funname":"getUid","Returntype":"(int64, error)","Args":""},{"Uniquefunname":"func (name Username) isFirstCharValid() bool","Funname":"isFirstCharValid","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isNameExist() bool","Funname":"isNameExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isNameInGroup() bool","Funname":"isNameInGroup","Returntype":"bool","Args":""},{"Uniquefunname":"func (name Username) isStringValid() bool","Funname":"isStringValid","Returntype":"bool","Args":""}],"Records":[{"Name":"const:checkers","Fields":["checkers.ErrCodeEmpty","checkers.ErrCodeExist","checkers.ErrCodeFirstCharInvalid","checkers.ErrCodeInvalidChar","checkers.ErrCodeLen","checkers.ErrCodeNameExist","checkers.ErrCodeSystemUsed","checkers.groupFile","checkers.passwdFile","checkers.userNameMaxLength","checkers.userNameMinLength"]},{"Name":"struct:checkers.ErrorInfo","Fields":["checkers.ErrorInfo.Code ErrorCode","checkers.ErrorInfo.Error error"]}]}
{"Filepath":"accounts/logined/login.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func Register(logger *log.Logger, service *dbusutil.Service) (*Manager, error)","Funname":"Register","Returntype":"(*Manager, error)","Args":"logger *log.Logger, service *dbusutil.Service"},{"Uniquefunname":"func Unregister(m *Manager)","Funname":"Unregister","Returntype":"","Args":"m *Manager"},{"Uniquefunname":"func (m *Manager) addSession(sessionPath dbus.ObjectPath) bool","Funname":"addSession","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) deleteSession(sessionPath dbus.ObjectPath) bool","Funname":"deleteSession","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) handleChanged()","Funname":"handleChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"logined.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) addSession(sessionPath dbus.ObjectPath) bool","Funname":"logined.Manager.addSession","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) deleteSession(sessionPath dbus.ObjectPath) bool","Funname":"logined.Manager.deleteSession","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) handleChanged()","Funname":"logined.Manager.handleChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"logined.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) marshalUserSessions() string","Funname":"logined.Manager.marshalUserSessions","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) setPropLastLogoutUser(uid uint32)","Funname":"logined.Manager.setPropLastLogoutUser","Returntype":"","Args":"uid uint32"},{"Uniquefunname":"func (m *Manager) setPropUserList()","Funname":"logined.Manager.setPropUserList","Returntype":"","Args":""},{"Uniquefunname":"func Register(logger *log.Logger, service *dbusutil.Service) (*Manager, error)","Funname":"logined.Register","Returntype":"(*Manager, error)","Args":"logger *log.Logger, service *dbusutil.Service"},{"Uniquefunname":"func Unregister(m *Manager)","Funname":"logined.Unregister","Returntype":"","Args":"m *Manager"},{"Uniquefunname":"func (m *Manager) marshalUserSessions() string","Funname":"marshalUserSessions","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) setPropLastLogoutUser(uid uint32)","Funname":"setPropLastLogoutUser","Returntype":"","Args":"uid uint32"},{"Uniquefunname":"func (m *Manager) setPropUserList()","Funname":"setPropUserList","Returntype":"","Args":""}],"Records":[{"Name":"const:logined","Fields":["logined.DBusPath"]},{"Name":"struct:logined.Manager","Fields":["logined.Manager.LastLogoutUser uint32","logined.Manager.UserList string","logined.Manager.core *login1.Manager","logined.Manager.locker sync.Mutex","logined.Manager.logger *log.Logger","logined.Manager.service *dbusutil.Service","logined.Manager.sysSigLoop *dbusutil.SignalLoop","logined.Manager.userSessions map[uint32]SessionInfos"]}]}
{"Filepath":"accounts/logined/user_info.go","Functions":[{"Uniquefunname":"func (infos SessionInfos) Add(info *SessionInfo) (SessionInfos, bool)","Funname":"Add","Returntype":"(SessionInfos, bool)","Args":"info *SessionInfo"},{"Uniquefunname":"func (infos SessionInfos) Delete(p dbus.ObjectPath) (SessionInfos, bool)","Funname":"Delete","Returntype":"(SessionInfos, bool)","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func (info *SessionInfo) Equal(target *SessionInfo) bool","Funname":"Equal","Returntype":"bool","Args":"target *SessionInfo"},{"Uniquefunname":"func (infos SessionInfos) Index(p dbus.ObjectPath) int32","Funname":"Index","Returntype":"int32","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func (info *SessionInfo) Equal(target *SessionInfo) bool","Funname":"logined.SessionInfo.Equal","Returntype":"bool","Args":"target *SessionInfo"},{"Uniquefunname":"func (infos SessionInfos) Add(info *SessionInfo) (SessionInfos, bool)","Funname":"logined.SessionInfos.Add","Returntype":"(SessionInfos, bool)","Args":"info *SessionInfo"},{"Uniquefunname":"func (infos SessionInfos) Delete(p dbus.ObjectPath) (SessionInfos, bool)","Funname":"logined.SessionInfos.Delete","Returntype":"(SessionInfos, bool)","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func (infos SessionInfos) Index(p dbus.ObjectPath) int32","Funname":"logined.SessionInfos.Index","Returntype":"int32","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func newSessionInfo(sessionPath dbus.ObjectPath) (*SessionInfo, error)","Funname":"logined.newSessionInfo","Returntype":"(*SessionInfo, error)","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func newSessionInfo(sessionPath dbus.ObjectPath) (*SessionInfo, error)","Funname":"newSessionInfo","Returntype":"(*SessionInfo, error)","Args":"sessionPath dbus.ObjectPath"}],"Records":[{"Name":"struct:logined.SessionInfo","Fields":["logined.SessionInfo.Desktop string","logined.SessionInfo.Display string","logined.SessionInfo.Uid uint32","logined.SessionInfo.sessionPath dbus.ObjectPath"]}]}
{"Filepath":"accounts/users/common.go","Functions":[{"Uniquefunname":"func doAction(cmd string, args []string) error","Funname":"doAction","Returntype":"error","Args":"cmd string, args []string"},{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"isStrInArray","Returntype":"bool","Args":"str string, array []string"},{"Uniquefunname":"func strToInt(str string, defaultVal int) int","Funname":"strToInt","Returntype":"int","Args":"str string, defaultVal int"},{"Uniquefunname":"func doAction(cmd string, args []string) error","Funname":"users.doAction","Returntype":"error","Args":"cmd string, args []string"},{"Uniquefunname":"func isStrInArray(str string, array []string) bool","Funname":"users.isStrInArray","Returntype":"bool","Args":"str string, array []string"},{"Uniquefunname":"func strToInt(str string, defaultVal int) int","Funname":"users.strToInt","Returntype":"int","Args":"str string, defaultVal int"}],"Records":null}
{"Filepath":"accounts/users/display_manager.go","Functions":[{"Uniquefunname":"func GetAutoLoginUser() (string, error)","Funname":"GetAutoLoginUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func GetDMConfig() (string, error)","Funname":"GetDMConfig","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func GetDefaultXSession() (string, error)","Funname":"GetDefaultXSession","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func SetAutoLoginUser(username, session string) error","Funname":"SetAutoLoginUser","Returntype":"error","Args":"username, session string"},{"Uniquefunname":"func getDMFromSystemService(service string) (string, error)","Funname":"getDMFromSystemService","Returntype":"(string, error)","Args":"service string"},{"Uniquefunname":"func getDefaultDM(file string) (string, error)","Funname":"getDefaultDM","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getIniKeys(filename, group string, keys, expected []string) (string, error)","Funname":"getIniKeys","Returntype":"(string, error)","Args":"filename, group string, keys, expected []string"},{"Uniquefunname":"func parseSlimConfig(filename, username string, isWirte bool) (string, error)","Funname":"parseSlimConfig","Returntype":"(string, error)","Args":"filename, username string, isWirte bool"},{"Uniquefunname":"func setIniKeys(filename, group string, keys, values []string) error","Funname":"setIniKeys","Returntype":"error","Args":"filename, group string, keys, values []string"},{"Uniquefunname":"func GetAutoLoginUser() (string, error)","Funname":"users.GetAutoLoginUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func GetDMConfig() (string, error)","Funname":"users.GetDMConfig","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func GetDefaultXSession() (string, error)","Funname":"users.GetDefaultXSession","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func SetAutoLoginUser(username, session string) error","Funname":"users.SetAutoLoginUser","Returntype":"error","Args":"username, session string"},{"Uniquefunname":"func getDMFromSystemService(service string) (string, error)","Funname":"users.getDMFromSystemService","Returntype":"(string, error)","Args":"service string"},{"Uniquefunname":"func getDefaultDM(file string) (string, error)","Funname":"users.getDefaultDM","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getIniKeys(filename, group string, keys, expected []string) (string, error)","Funname":"users.getIniKeys","Returntype":"(string, error)","Args":"filename, group string, keys, expected []string"},{"Uniquefunname":"func parseSlimConfig(filename, username string, isWirte bool) (string, error)","Funname":"users.parseSlimConfig","Returntype":"(string, error)","Args":"filename, username string, isWirte bool"},{"Uniquefunname":"func setIniKeys(filename, group string, keys, values []string) error","Funname":"users.setIniKeys","Returntype":"error","Args":"filename, group string, keys, values []string"}],"Records":[{"Name":"const:users","Fields":["users.defaultDMFile","users.defaultDisplayService","users.gdmConfig","users.kdmConfig","users.kfGroupGDM3Daemon","users.kfGroupKDMXCore","users.kfGroupLXDMBase","users.kfGroupLightdmSeat","users.kfGroupSDDMAutologin","users.kfKeyGDM3AutomaticEnable","users.kfKeyGDM3AutomaticLogin","users.kfKeyKDMAutoLoginEnable","users.kfKeyKDMAutoLoginUser","users.kfKeyLXDMAutologin","users.kfKeyLightdmAutoLoginUser","users.kfKeyLightdmUserSession","users.kfKeySDDMSession","users.kfKeySDDMUser","users.lightdmConfig","users.lxdmConfig","users.sddmConfig","users.slimKeyAutoLogin","users.slimKeyDefaultUser"]}]}
{"Filepath":"accounts/users/guest.go","Functions":[{"Uniquefunname":"func CreateGuestUser() (string, error)","Funname":"CreateGuestUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getGuestUserName() string","Funname":"getGuestUserName","Returntype":"string","Args":""},{"Uniquefunname":"func CreateGuestUser() (string, error)","Funname":"users.CreateGuestUser","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getGuestUserName() string","Funname":"users.getGuestUserName","Returntype":"string","Args":""}],"Records":null}
{"Filepath":"accounts/users/list.go","Functions":[{"Uniquefunname":"func (u *UserInfo) Comment() *CommentInfo","Funname":"Comment","Returntype":"*CommentInfo","Args":""},{"Uniquefunname":"func GetAllUserInfos() (UserInfos, error)","Funname":"GetAllUserInfos","Returntype":"(UserInfos, error)","Args":""},{"Uniquefunname":"func GetHumanUserInfos() (UserInfos, error)","Funname":"GetHumanUserInfos","Returntype":"(UserInfos, error)","Args":""},{"Uniquefunname":"func GetUserInfoByName(name string) (UserInfo, error)","Funname":"GetUserInfoByName","Returntype":"(UserInfo, error)","Args":"name string"},{"Uniquefunname":"func GetUserInfoByUid(uid string) (UserInfo, error)","Funname":"GetUserInfoByUid","Returntype":"(UserInfo, error)","Args":"uid string"},{"Uniquefunname":"func (infos UserInfos) GetUserNames() []string","Funname":"GetUserNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (u *UserInfo) calLength() int","Funname":"calLength","Returntype":"int","Args":""},{"Uniquefunname":"func (u *UserInfo) checkLength() error","Funname":"checkLength","Returntype":"error","Args":""},{"Uniquefunname":"func (infos UserInfos) filterUserInfos() UserInfos","Funname":"filterUserInfos","Returntype":"UserInfos","Args":""},{"Uniquefunname":"func getUserInfo(condition UserInfo, file string) (UserInfo, error)","Funname":"getUserInfo","Returntype":"(UserInfo, error)","Args":"condition UserInfo, file string"},{"Uniquefunname":"func getUserInfosFromFile(file string) (UserInfos, error)","Funname":"getUserInfosFromFile","Returntype":"(UserInfos, error)","Args":"file string"},{"Uniquefunname":"func (info UserInfo) isHumanUser(configLoginDefs string) bool","Funname":"isHumanUser","Returntype":"bool","Args":"configLoginDefs string"},{"Uniquefunname":"func (info UserInfo) isHumanViaLoginDefs(config string) bool","Funname":"isHumanViaLoginDefs","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func (info UserInfo) isHumanViaShell() bool","Funname":"isHumanViaShell","Returntype":"bool","Args":""},{"Uniquefunname":"func GetAllUserInfos() (UserInfos, error)","Funname":"users.GetAllUserInfos","Returntype":"(UserInfos, error)","Args":""},{"Uniquefunname":"func GetHumanUserInfos() (UserInfos, error)","Funname":"users.GetHumanUserInfos","Returntype":"(UserInfos, error)","Args":""},{"Uniquefunname":"func GetUserInfoByName(name string) (UserInfo, error)","Funname":"users.GetUserInfoByName","Returntype":"(UserInfo, error)","Args":"name string"},{"Uniquefunname":"func GetUserInfoByUid(uid string) (UserInfo, error)","Funname":"users.GetUserInfoByUid","Returntype":"(UserInfo, error)","Args":"uid string"},{"Uniquefunname":"func (u *UserInfo) Comment() *CommentInfo","Funname":"users.UserInfo.Comment","Returntype":"*CommentInfo","Args":""},{"Uniquefunname":"func (u *UserInfo) calLength() int","Funname":"users.UserInfo.calLength","Returntype":"int","Args":""},{"Uniquefunname":"func (u *UserInfo) checkLength() error","Funname":"users.UserInfo.checkLength","Returntype":"error","Args":""},{"Uniquefunname":"func (info UserInfo) isHumanUser(configLoginDefs string) bool","Funname":"users.UserInfo.isHumanUser","Returntype":"bool","Args":"configLoginDefs string"},{"Uniquefunname":"func (info UserInfo) isHumanViaLoginDefs(config string) bool","Funname":"users.UserInfo.isHumanViaLoginDefs","Returntype":"bool","Args":"config string"},{"Uniquefunname":"func (info UserInfo) isHumanViaShell() bool","Funname":"users.UserInfo.isHumanViaShell","Returntype":"bool","Args":""},{"Uniquefunname":"func (infos UserInfos) GetUserNames() []string","Funname":"users.UserInfos.GetUserNames","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos UserInfos) filterUserInfos() UserInfos","Funname":"users.UserInfos.filterUserInfos","Returntype":"UserInfos","Args":""},{"Uniquefunname":"func getUserInfo(condition UserInfo, file string) (UserInfo, error)","Funname":"users.getUserInfo","Returntype":"(UserInfo, error)","Args":"condition UserInfo, file string"},{"Uniquefunname":"func getUserInfosFromFile(file string) (UserInfos, error)","Funname":"users.getUserInfosFromFile","Returntype":"(UserInfos, error)","Args":"file string"}],"Records":[{"Name":"struct:users.UserInfo","Fields":["users.UserInfo.Gid string","users.UserInfo.Home string","users.UserInfo.Name string","users.UserInfo.Shell string","users.UserInfo.Uid string","users.UserInfo.comment string"]},{"Name":"var:users","Fields":["users.invalidShells"]},{"Name":"const:users","Fields":["users.itemLenGroup","users.itemLenLoginDefs","users.itemLenPasswd","users.userFileGroup","users.userFileLoginDefs","users.userFilePasswd","users.userFileShadow","users.userFileSudoers"]}]}
{"Filepath":"accounts/users/manager.go","Functions":[{"Uniquefunname":"func AddGroupForUser(group, user string) error","Funname":"AddGroupForUser","Returntype":"error","Args":"group, user string"},{"Uniquefunname":"func CreateUser(username, fullname, shell string) error","Funname":"CreateUser","Returntype":"error","Args":"username, fullname, shell string"},{"Uniquefunname":"func DeleteGroupForUser(group, user string) error","Funname":"DeleteGroupForUser","Returntype":"error","Args":"group, user string"},{"Uniquefunname":"func DeleteUser(rmFiles bool, username string) error","Funname":"DeleteUser","Returntype":"error","Args":"rmFiles bool, username string"},{"Uniquefunname":"func GetPresetGroups(userType int) []string","Funname":"GetPresetGroups","Returntype":"[]string","Args":"userType int"},{"Uniquefunname":"func LockedUser(locked bool, username string) error","Funname":"LockedUser","Returntype":"error","Args":"locked bool, username string"},{"Uniquefunname":"func SetGroupsForUser(groups []string, user string) error","Funname":"SetGroupsForUser","Returntype":"error","Args":"groups []string, user string"},{"Uniquefunname":"func filterInvalidGroup(groups []string) []string","Funname":"filterInvalidGroup","Returntype":"[]string","Args":"groups []string"},{"Uniquefunname":"func getDefaultShell(config string) (string, error)","Funname":"getDefaultShell","Returntype":"(string, error)","Args":"config string"},{"Uniquefunname":"func AddGroupForUser(group, user string) error","Funname":"users.AddGroupForUser","Returntype":"error","Args":"group, user string"},{"Uniquefunname":"func CreateUser(username, fullname, shell string) error","Funname":"users.CreateUser","Returntype":"error","Args":"username, fullname, shell string"},{"Uniquefunname":"func DeleteGroupForUser(group, user string) error","Funname":"users.DeleteGroupForUser","Returntype":"error","Args":"group, user string"},{"Uniquefunname":"func DeleteUser(rmFiles bool, username string) error","Funname":"users.DeleteUser","Returntype":"error","Args":"rmFiles bool, username string"},{"Uniquefunname":"func GetPresetGroups(userType int) []string","Funname":"users.GetPresetGroups","Returntype":"[]string","Args":"userType int"},{"Uniquefunname":"func LockedUser(locked bool, username string) error","Funname":"users.LockedUser","Returntype":"error","Args":"locked bool, username string"},{"Uniquefunname":"func SetGroupsForUser(groups []string, user string) error","Funname":"users.SetGroupsForUser","Returntype":"error","Args":"groups []string, user string"},{"Uniquefunname":"func filterInvalidGroup(groups []string) []string","Funname":"users.filterInvalidGroup","Returntype":"[]string","Args":"groups []string"},{"Uniquefunname":"func getDefaultShell(config string) (string, error)","Funname":"users.getDefaultShell","Returntype":"(string, error)","Args":"config string"}],"Records":[{"Name":"const:users","Fields":["users.UserTypeAdmin","users.UserTypeStandard","users.cmdChAge","users.cmdGroupDel","users.defaultConfigShell","users.userCmdAdd","users.userCmdDelete","users.userCmdGroup","users.userCmdModify"]},{"Name":"var:users","Fields":["users.commonGroups"]}]}
{"Filepath":"accounts/users/passwd.go","Functions":[{"Uniquefunname":"func EncodePasswd(words string) string","Funname":"EncodePasswd","Returntype":"string","Args":"words string"},{"Uniquefunname":"func updatePasswd(password, username string) error","Funname":"updatePasswd","Returntype":"error","Args":"password, username string"},{"Uniquefunname":"func EncodePasswd(words string) string","Funname":"users.EncodePasswd","Returntype":"string","Args":"words string"},{"Uniquefunname":"func updatePasswd(password, username string) error","Funname":"users.updatePasswd","Returntype":"error","Args":"password, username string"},{"Uniquefunname":"func writeStrvToFile(datas []string, file string, mode os.FileMode) error","Funname":"users.writeStrvToFile","Returntype":"error","Args":"datas []string, file string, mode os.FileMode"},{"Uniquefunname":"func writeStrvToFile(datas []string, file string, mode os.FileMode) error","Funname":"writeStrvToFile","Returntype":"error","Args":"datas []string, file string, mode os.FileMode"}],"Records":[{"Name":"var:users","Fields":["users.wLocker"]}]}
{"Filepath":"accounts/users/prop.go","Functions":[{"Uniquefunname":"func CanNoPasswdLogin(username string) bool","Funname":"CanNoPasswdLogin","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func EnableNoPasswdLogin(username string, enabled bool) error","Funname":"EnableNoPasswdLogin","Returntype":"error","Args":"username string, enabled bool"},{"Uniquefunname":"func (ci *CommentInfo) FullName() string","Funname":"FullName","Returntype":"string","Args":""},{"Uniquefunname":"func GetAllGroups() ([]string, error)","Funname":"GetAllGroups","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func GetShadowInfo(username string) (*ShadowInfo, error)","Funname":"GetShadowInfo","Returntype":"(*ShadowInfo, error)","Args":"username string"},{"Uniquefunname":"func GetUserGroups(user string) ([]string, error)","Funname":"GetUserGroups","Returntype":"([]string, error)","Args":"user string"},{"Uniquefunname":"func IsAdminUser(username string) bool","Funname":"IsAdminUser","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func IsAutoLoginUser(username string) bool","Funname":"IsAutoLoginUser","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func IsPasswordExpired(username string) (bool, error)","Funname":"IsPasswordExpired","Returntype":"(bool, error)","Args":"username string"},{"Uniquefunname":"func ModifyFullName(fullName, username string) error","Funname":"ModifyFullName","Returntype":"error","Args":"fullName, username string"},{"Uniquefunname":"func ModifyHome(dir, username string) error","Funname":"ModifyHome","Returntype":"error","Args":"dir, username string"},{"Uniquefunname":"func ModifyMaxPasswordAge(username string, nDays int) error","Funname":"ModifyMaxPasswordAge","Returntype":"error","Args":"username string, nDays int"},{"Uniquefunname":"func ModifyPasswd(words, username string) error","Funname":"ModifyPasswd","Returntype":"error","Args":"words, username string"},{"Uniquefunname":"func ModifyShell(shell, username string) error","Funname":"ModifyShell","Returntype":"error","Args":"shell, username string"},{"Uniquefunname":"func (ci *CommentInfo) SetFullName(value string)","Funname":"SetFullName","Returntype":"","Args":"value string"},{"Uniquefunname":"func (ci *CommentInfo) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Cache) get() (interface","Funname":"get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func getAdmGroupAndUser(file string) ([]string, []string, error)","Funname":"getAdmGroupAndUser","Returntype":"([]string, []string, error)","Args":"file string"},{"Uniquefunname":"func getAdminUserList(fileGroup, fileSudoers string) ([]string, error)","Funname":"getAdminUserList","Returntype":"([]string, error)","Args":"fileGroup, fileSudoers string"},{"Uniquefunname":"func getGroupByGid(gid string) (*GroupInfo, error)","Funname":"getGroupByGid","Returntype":"(*GroupInfo, error)","Args":"gid string"},{"Uniquefunname":"func getGroupInfoWithCache(file string) (map[string]GroupInfo, error)","Funname":"getGroupInfoWithCache","Returntype":"(map[string]GroupInfo, error)","Args":"file string"},{"Uniquefunname":"func getShadowWithCache() (map[string]ShadowInfo, error)","Funname":"getShadowWithCache","Returntype":"(map[string]ShadowInfo, error)","Args":""},{"Uniquefunname":"func isCommentFieldValid(name string) bool","Funname":"isCommentFieldValid","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func isGroupExists(group string) bool","Funname":"isGroupExists","Returntype":"bool","Args":"group string"},{"Uniquefunname":"func isPasswordExpired(shadowInfo *ShadowInfo, today libdate.Date) bool","Funname":"isPasswordExpired","Returntype":"bool","Args":"shadowInfo *ShadowInfo, today libdate.Date"},{"Uniquefunname":"func isUserInGroup(user, group string) bool","Funname":"isUserInGroup","Returntype":"bool","Args":"user, group string"},{"Uniquefunname":"func modifyComment(comment, username string) error","Funname":"modifyComment","Returntype":"error","Args":"comment, username string"},{"Uniquefunname":"func newCache(filename string, provider CacheProviderFn) *Cache","Funname":"newCache","Returntype":"*Cache","Args":"filename string, provider CacheProviderFn"},{"Uniquefunname":"func newCommentInfo(comment string) *CommentInfo","Funname":"newCommentInfo","Returntype":"*CommentInfo","Args":"comment string"},{"Uniquefunname":"func parseGroup(data []byte) map[string]GroupInfo","Funname":"parseGroup","Returntype":"map[string]GroupInfo","Args":"data []byte"},{"Uniquefunname":"func parseShadow(data []byte) map[string]ShadowInfo","Funname":"parseShadow","Returntype":"map[string]ShadowInfo","Args":"data []byte"},{"Uniquefunname":"func shadowCacheProvider(filename string) (interface","Funname":"shadowCacheProvider","Returntype":"(interface{}, error)","Args":"filename string"},{"Uniquefunname":"func (c *Cache) get() (interface","Funname":"users.Cache.get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func CanNoPasswdLogin(username string) bool","Funname":"users.CanNoPasswdLogin","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func (ci *CommentInfo) FullName() string","Funname":"users.CommentInfo.FullName","Returntype":"string","Args":""},{"Uniquefunname":"func (ci *CommentInfo) SetFullName(value string)","Funname":"users.CommentInfo.SetFullName","Returntype":"","Args":"value string"},{"Uniquefunname":"func (ci *CommentInfo) String() string","Funname":"users.CommentInfo.String","Returntype":"string","Args":""},{"Uniquefunname":"func EnableNoPasswdLogin(username string, enabled bool) error","Funname":"users.EnableNoPasswdLogin","Returntype":"error","Args":"username string, enabled bool"},{"Uniquefunname":"func GetAllGroups() ([]string, error)","Funname":"users.GetAllGroups","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func GetShadowInfo(username string) (*ShadowInfo, error)","Funname":"users.GetShadowInfo","Returntype":"(*ShadowInfo, error)","Args":"username string"},{"Uniquefunname":"func GetUserGroups(user string) ([]string, error)","Funname":"users.GetUserGroups","Returntype":"([]string, error)","Args":"user string"},{"Uniquefunname":"func IsAdminUser(username string) bool","Funname":"users.IsAdminUser","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func IsAutoLoginUser(username string) bool","Funname":"users.IsAutoLoginUser","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func IsPasswordExpired(username string) (bool, error)","Funname":"users.IsPasswordExpired","Returntype":"(bool, error)","Args":"username string"},{"Uniquefunname":"func ModifyFullName(fullName, username string) error","Funname":"users.ModifyFullName","Returntype":"error","Args":"fullName, username string"},{"Uniquefunname":"func ModifyHome(dir, username string) error","Funname":"users.ModifyHome","Returntype":"error","Args":"dir, username string"},{"Uniquefunname":"func ModifyMaxPasswordAge(username string, nDays int) error","Funname":"users.ModifyMaxPasswordAge","Returntype":"error","Args":"username string, nDays int"},{"Uniquefunname":"func ModifyPasswd(words, username string) error","Funname":"users.ModifyPasswd","Returntype":"error","Args":"words, username string"},{"Uniquefunname":"func ModifyShell(shell, username string) error","Funname":"users.ModifyShell","Returntype":"error","Args":"shell, username string"},{"Uniquefunname":"func getAdmGroupAndUser(file string) ([]string, []string, error)","Funname":"users.getAdmGroupAndUser","Returntype":"([]string, []string, error)","Args":"file string"},{"Uniquefunname":"func getAdminUserList(fileGroup, fileSudoers string) ([]string, error)","Funname":"users.getAdminUserList","Returntype":"([]string, error)","Args":"fileGroup, fileSudoers string"},{"Uniquefunname":"func getGroupByGid(gid string) (*GroupInfo, error)","Funname":"users.getGroupByGid","Returntype":"(*GroupInfo, error)","Args":"gid string"},{"Uniquefunname":"func getGroupInfoWithCache(file string) (map[string]GroupInfo, error)","Funname":"users.getGroupInfoWithCache","Returntype":"(map[string]GroupInfo, error)","Args":"file string"},{"Uniquefunname":"func getShadowWithCache() (map[string]ShadowInfo, error)","Funname":"users.getShadowWithCache","Returntype":"(map[string]ShadowInfo, error)","Args":""},{"Uniquefunname":"func isCommentFieldValid(name string) bool","Funname":"users.isCommentFieldValid","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func isGroupExists(group string) bool","Funname":"users.isGroupExists","Returntype":"bool","Args":"group string"},{"Uniquefunname":"func isPasswordExpired(shadowInfo *ShadowInfo, today libdate.Date) bool","Funname":"users.isPasswordExpired","Returntype":"bool","Args":"shadowInfo *ShadowInfo, today libdate.Date"},{"Uniquefunname":"func isUserInGroup(user, group string) bool","Funname":"users.isUserInGroup","Returntype":"bool","Args":"user, group string"},{"Uniquefunname":"func modifyComment(comment, username string) error","Funname":"users.modifyComment","Returntype":"error","Args":"comment, username string"},{"Uniquefunname":"func newCache(filename string, provider CacheProviderFn) *Cache","Funname":"users.newCache","Returntype":"*Cache","Args":"filename string, provider CacheProviderFn"},{"Uniquefunname":"func newCommentInfo(comment string) *CommentInfo","Funname":"users.newCommentInfo","Returntype":"*CommentInfo","Args":"comment string"},{"Uniquefunname":"func parseGroup(data []byte) map[string]GroupInfo","Funname":"users.parseGroup","Returntype":"map[string]GroupInfo","Args":"data []byte"},{"Uniquefunname":"func parseShadow(data []byte) map[string]ShadowInfo","Funname":"users.parseShadow","Returntype":"map[string]ShadowInfo","Args":"data []byte"},{"Uniquefunname":"func shadowCacheProvider(filename string) (interface","Funname":"users.shadowCacheProvider","Returntype":"(interface{}, error)","Args":"filename string"}],"Records":[{"Name":"struct:users.Cache","Fields":["users.Cache.data interface{}","users.Cache.filename string","users.Cache.mu sync.Mutex","users.Cache.provider CacheProviderFn","users.Cache.ts int64"]},{"Name":"const:users","Fields":["users.CommentFieldsLen","users.PasswordStatusLocked","users.PasswordStatusNoPassword","users.PasswordStatusUsable"]},{"Name":"struct:users.GroupInfo","Fields":["users.GroupInfo.Gid string","users.GroupInfo.Name string","users.GroupInfo.Users []string"]},{"Name":"struct:users.ShadowInfo","Fields":["users.ShadowInfo.LastChange int","users.ShadowInfo.MaxDays int","users.ShadowInfo.Name string","users.ShadowInfo.Status string"]},{"Name":"var:users","Fields":["users._admGroups","users._admTimestampMap","users._admUsers","users.errInvalidParam","users.groupFileInfo","users.groupFileLocker","users.groupFileTimestamp","users.groupNameNoPasswdLogin","users.shadowCache"]}]}
{"Filepath":"accounts/users/users_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestAdminUser(c *C.C)","Funname":"TestAdminUser","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDMFromService(c *C.C)","Funname":"TestDMFromService","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFoundUserInfo(c *C.C)","Funname":"TestFoundUserInfo","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetAdmGroup(c *C.C)","Funname":"TestGetAdmGroup","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetAutoLoginUser(c *C.C)","Funname":"TestGetAutoLoginUser","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultShell(c *C.C)","Funname":"TestGetDefaultShell","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetUserInfos(c *C.C)","Funname":"TestGetUserInfos","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsPasswordExpired(c *C.C)","Funname":"TestIsPasswordExpired","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrInArray(c *C.C)","Funname":"TestStrInArray","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestUserInfoValid(c *C.C)","Funname":"TestUserInfoValid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestWriteStrvData(c *C.C)","Funname":"TestWriteStrvData","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestXSession(c *C.C)","Funname":"TestXSession","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"users.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"users.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestAdminUser(c *C.C)","Funname":"users.testWrapper.TestAdminUser","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDMFromService(c *C.C)","Funname":"users.testWrapper.TestDMFromService","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFoundUserInfo(c *C.C)","Funname":"users.testWrapper.TestFoundUserInfo","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetAdmGroup(c *C.C)","Funname":"users.testWrapper.TestGetAdmGroup","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetAutoLoginUser(c *C.C)","Funname":"users.testWrapper.TestGetAutoLoginUser","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetDefaultShell(c *C.C)","Funname":"users.testWrapper.TestGetDefaultShell","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetUserInfos(c *C.C)","Funname":"users.testWrapper.TestGetUserInfos","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestIsPasswordExpired(c *C.C)","Funname":"users.testWrapper.TestIsPasswordExpired","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrInArray(c *C.C)","Funname":"users.testWrapper.TestStrInArray","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestUserInfoValid(c *C.C)","Funname":"users.testWrapper.TestUserInfoValid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestWriteStrvData(c *C.C)","Funname":"users.testWrapper.TestWriteStrvData","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestXSession(c *C.C)","Funname":"users.testWrapper.TestXSession","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"appearance/appearance.go","Functions":[{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"appearance.HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"appearance.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"appearance.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) Stop() error","Funname":"appearance.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) start() error","Funname":"appearance.Module.start","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"appearance.NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"appearance.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Module) start() error","Funname":"start","Returntype":"error","Args":""}],"Records":[{"Name":"var:appearance","Fields":["appearance._m","appearance.logger"]}]}
{"Filepath":"appearance/appearance_test.go","Functions":[{"Uniquefunname":"func Test_byteArrayToHexColor(t *testing.T)","Funname":"Test_byteArrayToHexColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_hexColorToXsColor(t *testing.T)","Funname":"Test_hexColorToXsColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseHexColor(t *testing.T)","Funname":"Test_parseHexColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_xsColorToHexColor(t *testing.T)","Funname":"Test_xsColorToHexColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_byteArrayToHexColor(t *testing.T)","Funname":"appearance.Test_byteArrayToHexColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_hexColorToXsColor(t *testing.T)","Funname":"appearance.Test_hexColorToXsColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseHexColor(t *testing.T)","Funname":"appearance.Test_parseHexColor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_xsColorToHexColor(t *testing.T)","Funname":"appearance.Test_xsColorToHexColor","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"appearance/deepin_qt_theme.go","Functions":[{"Uniquefunname":"func getDQtHandler(file string) (*keyfile.KeyFile, error)","Funname":"appearance.getDQtHandler","Returntype":"(*keyfile.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func saveDQtTheme(file string) error","Funname":"appearance.saveDQtTheme","Returntype":"error","Args":"file string"},{"Uniquefunname":"func setDQtTheme(file, section string, keys, values []string) error","Funname":"appearance.setDQtTheme","Returntype":"error","Args":"file, section string, keys, values []string"},{"Uniquefunname":"func getDQtHandler(file string) (*keyfile.KeyFile, error)","Funname":"getDQtHandler","Returntype":"(*keyfile.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func saveDQtTheme(file string) error","Funname":"saveDQtTheme","Returntype":"error","Args":"file string"},{"Uniquefunname":"func setDQtTheme(file, section string, keys, values []string) error","Funname":"setDQtTheme","Returntype":"error","Args":"file, section string, keys, values []string"}],"Records":[{"Name":"var:appearance","Fields":["appearance._dQtHandler","appearance._dQtLocker","appearance._needSave","appearance.dQtFile"]},{"Name":"const:appearance","Fields":["appearance.dQtKeyFont","appearance.dQtKeyFontSize","appearance.dQtKeyIcon","appearance.dQtKeyMonoFont","appearance.dQtSectionTheme"]}]}
{"Filepath":"appearance/default_font_config.go","Functions":[{"Uniquefunname":"func (cfg DefaultFontConfig) Get() (standard, monospace string)","Funname":"Get","Returntype":"(standard, monospace string)","Args":""},{"Uniquefunname":"func (cfg DefaultFontConfig) Get() (standard, monospace string)","Funname":"appearance.DefaultFontConfig.Get","Returntype":"(standard, monospace string)","Args":""}],"Records":[{"Name":"struct:appearance.FontConfigItem","Fields":["appearance.FontConfigItem.Monospace string","appearance.FontConfigItem.Standard string"]}]}
{"Filepath":"appearance/font_conf_version.go","Functions":[{"Uniquefunname":"func (m *Manager) checkFontConfVersion() bool","Funname":"appearance.Manager.checkFontConfVersion","Returntype":"bool","Args":""},{"Uniquefunname":"func isVersionRight(version, file string) bool","Funname":"appearance.isVersionRight","Returntype":"bool","Args":"version, file string"},{"Uniquefunname":"func (m *Manager) checkFontConfVersion() bool","Funname":"checkFontConfVersion","Returntype":"bool","Args":""},{"Uniquefunname":"func isVersionRight(version, file string) bool","Funname":"isVersionRight","Returntype":"bool","Args":"version, file string"}],"Records":[{"Name":"const:appearance","Fields":["appearance._fontConfVersion"]},{"Name":"var:appearance","Fields":["appearance._fontVersionConf"]}]}
{"Filepath":"appearance/fsnotify.go","Functions":[{"Uniquefunname":"func (m *Manager) emitSignalRefreshed(type0 string)","Funname":"appearance.Manager.emitSignalRefreshed","Returntype":"","Args":"type0 string"},{"Uniquefunname":"func (m *Manager) handleThemeChanged()","Funname":"appearance.Manager.handleThemeChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) watchBgDirs()","Funname":"appearance.Manager.watchBgDirs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) watchDirs(dirs []string)","Funname":"appearance.Manager.watchDirs","Returntype":"","Args":"dirs []string"},{"Uniquefunname":"func (m *Manager) watchGtkDirs()","Funname":"appearance.Manager.watchGtkDirs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) watchIconDirs()","Funname":"appearance.Manager.watchIconDirs","Returntype":"","Args":""},{"Uniquefunname":"func hasEventOccurred(ev string, list []string) bool","Funname":"appearance.hasEventOccurred","Returntype":"bool","Args":"ev string, list []string"},{"Uniquefunname":"func (m *Manager) emitSignalRefreshed(type0 string)","Funname":"emitSignalRefreshed","Returntype":"","Args":"type0 string"},{"Uniquefunname":"func (m *Manager) handleThemeChanged()","Funname":"handleThemeChanged","Returntype":"","Args":""},{"Uniquefunname":"func hasEventOccurred(ev string, list []string) bool","Funname":"hasEventOccurred","Returntype":"bool","Args":"ev string, list []string"},{"Uniquefunname":"func (m *Manager) watchBgDirs()","Funname":"watchBgDirs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) watchDirs(dirs []string)","Funname":"watchDirs","Returntype":"","Args":"dirs []string"},{"Uniquefunname":"func (m *Manager) watchGtkDirs()","Funname":"watchGtkDirs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) watchIconDirs()","Funname":"watchIconDirs","Returntype":"","Args":""}],"Records":[{"Name":"var:appearance","Fields":["appearance.bgDirs","appearance.gtkDirs","appearance.iconDirs","appearance.prevTimestamp"]}]}
{"Filepath":"appearance/handle_gsetting.go","Functions":[{"Uniquefunname":"func (m *Manager) emitSignalChanged(type0, value string)","Funname":"appearance.Manager.emitSignalChanged","Returntype":"","Args":"type0, value string"},{"Uniquefunname":"func (m *Manager) listenBgGSettings()","Funname":"appearance.Manager.listenBgGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenGSettingChanged()","Funname":"appearance.Manager.listenGSettingChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitSignalChanged(type0, value string)","Funname":"emitSignalChanged","Returntype":"","Args":"type0, value string"},{"Uniquefunname":"func (m *Manager) listenBgGSettings()","Funname":"listenBgGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenGSettingChanged()","Funname":"listenGSettingChanged","Returntype":"","Args":""}],"Records":null}
{"Filepath":"appearance/ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) Delete(ty, name string) *dbus.Error","Funname":"Delete","Returntype":"*dbus.Error","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) GetScaleFactor() (float64, *dbus.Error)","Funname":"GetScaleFactor","Returntype":"(float64, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetScreenScaleFactors() (map[string]float64, *dbus.Error)","Funname":"GetScreenScaleFactors","Returntype":"(map[string]float64, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetWallpaperSlideShow(monitorName string) (string, *dbus.Error)","Funname":"GetWallpaperSlideShow","Returntype":"(string, *dbus.Error)","Args":"monitorName string"},{"Uniquefunname":"func (m *Manager) List(ty string) (string, *dbus.Error)","Funname":"List","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) Set(ty, value string) *dbus.Error","Funname":"Set","Returntype":"*dbus.Error","Args":"ty, value string"},{"Uniquefunname":"func (m *Manager) SetMonitorBackground(monitorName string, imageFile string) *dbus.Error","Funname":"SetMonitorBackground","Returntype":"*dbus.Error","Args":"monitorName string, imageFile string"},{"Uniquefunname":"func (m *Manager) SetScaleFactor(scale float64) *dbus.Error","Funname":"SetScaleFactor","Returntype":"*dbus.Error","Args":"scale float64"},{"Uniquefunname":"func (m *Manager) SetScreenScaleFactors(v map[string]float64) *dbus.Error","Funname":"SetScreenScaleFactors","Returntype":"*dbus.Error","Args":"v map[string]float64"},{"Uniquefunname":"func SetWallpaperSlideShow(monitorName string, wallpaperSlideShow string)*dbus.Error","Funname":"SetWallpaperSlideShow","Returntype":"*dbus.Error","Args":"monitorName string, wallpaperSlideShow string"},{"Uniquefunname":"func (m *Manager) Show(ty string, names []string) (string, *dbus.Error)","Funname":"Show","Returntype":"(string, *dbus.Error)","Args":"ty string, names []string"},{"Uniquefunname":"func (m *Manager) Thumbnail(ty, name string) (string, *dbus.Error)","Funname":"Thumbnail","Returntype":"(string, *dbus.Error)","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) Delete(ty, name string) *dbus.Error","Funname":"appearance.Manager.Delete","Returntype":"*dbus.Error","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) GetScaleFactor() (float64, *dbus.Error)","Funname":"appearance.Manager.GetScaleFactor","Returntype":"(float64, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetScreenScaleFactors() (map[string]float64, *dbus.Error)","Funname":"appearance.Manager.GetScreenScaleFactors","Returntype":"(map[string]float64, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetWallpaperSlideShow(monitorName string) (string, *dbus.Error)","Funname":"appearance.Manager.GetWallpaperSlideShow","Returntype":"(string, *dbus.Error)","Args":"monitorName string"},{"Uniquefunname":"func (m *Manager) List(ty string) (string, *dbus.Error)","Funname":"appearance.Manager.List","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"appearance.Manager.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) Set(ty, value string) *dbus.Error","Funname":"appearance.Manager.Set","Returntype":"*dbus.Error","Args":"ty, value string"},{"Uniquefunname":"func (m *Manager) SetMonitorBackground(monitorName string, imageFile string) *dbus.Error","Funname":"appearance.Manager.SetMonitorBackground","Returntype":"*dbus.Error","Args":"monitorName string, imageFile string"},{"Uniquefunname":"func (m *Manager) SetScaleFactor(scale float64) *dbus.Error","Funname":"appearance.Manager.SetScaleFactor","Returntype":"*dbus.Error","Args":"scale float64"},{"Uniquefunname":"func (m *Manager) SetScreenScaleFactors(v map[string]float64) *dbus.Error","Funname":"appearance.Manager.SetScreenScaleFactors","Returntype":"*dbus.Error","Args":"v map[string]float64"},{"Uniquefunname":"func appearance.Manager.SetWallpaperSlideShow(monitorName string, wallpaperSlideShow string)*dbus.Error","Funname":"appearance.Manager.SetWallpaperSlideShow","Returntype":"*dbus.Error","Args":"monitorName string, wallpaperSlideShow string"},{"Uniquefunname":"func (m *Manager) Show(ty string, names []string) (string, *dbus.Error)","Funname":"appearance.Manager.Show","Returntype":"(string, *dbus.Error)","Args":"ty string, names []string"},{"Uniquefunname":"func (m *Manager) Thumbnail(ty, name string) (string, *dbus.Error)","Funname":"appearance.Manager.Thumbnail","Returntype":"(string, *dbus.Error)","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) delete(ty, name string) error","Funname":"appearance.Manager.delete","Returntype":"error","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) list(ty string) (string, error)","Funname":"appearance.Manager.list","Returntype":"(string, error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) set(ty, value string) error","Funname":"appearance.Manager.set","Returntype":"error","Args":"ty, value string"},{"Uniquefunname":"func (m *Manager) show(ty string, names []string) (string, error)","Funname":"appearance.Manager.show","Returntype":"(string, error)","Args":"ty string, names []string"},{"Uniquefunname":"func (m *Manager) thumbnail(ty, name string) (string, error)","Funname":"appearance.Manager.thumbnail","Returntype":"(string, error)","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) delete(ty, name string) error","Funname":"delete","Returntype":"error","Args":"ty, name string"},{"Uniquefunname":"func (m *Manager) list(ty string) (string, error)","Funname":"list","Returntype":"(string, error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) set(ty, value string) error","Funname":"set","Returntype":"error","Args":"ty, value string"},{"Uniquefunname":"func (m *Manager) show(ty string, names []string) (string, error)","Funname":"show","Returntype":"(string, error)","Args":"ty string, names []string"},{"Uniquefunname":"func (m *Manager) thumbnail(ty, name string) (string, error)","Funname":"thumbnail","Returntype":"(string, error)","Args":"ty, name string"}],"Records":[{"Name":"var:appearance","Fields":["appearance.gtkThumbnailMap"]}]}
{"Filepath":"appearance/listener.go","Functions":[{"Uniquefunname":"func (*Manager) endCursorChangedHandler()","Funname":"appearance.Manager.endCursorChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) listenCursorChanged()","Funname":"appearance.Manager.listenCursorChanged","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) endCursorChangedHandler()","Funname":"endCursorChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) listenCursorChanged()","Funname":"listenCursorChanged","Returntype":"","Args":""}],"Records":null}
{"Filepath":"appearance/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"appearance.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) autoChangeBg(monitorSpace string, t time.Time)","Funname":"appearance.Manager.autoChangeBg","Returntype":"","Args":"monitorSpace string, t time.Time"},{"Uniquefunname":"func (m *Manager) autoSetTheme(latitude, longitude float64)","Funname":"appearance.Manager.autoSetTheme","Returntype":"","Args":"latitude, longitude float64"},{"Uniquefunname":"func (m *Manager) changeBgAfterLogin(monitorSpace string) error","Funname":"appearance.Manager.changeBgAfterLogin","Returntype":"error","Args":"monitorSpace string"},{"Uniquefunname":"func (m *Manager) correctFontName()","Funname":"appearance.Manager.correctFontName","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"appearance.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doGetWallpaperSlideShow(monitorName string) (string, error)","Funname":"appearance.Manager.doGetWallpaperSlideShow","Returntype":"(string, error)","Args":"monitorName string"},{"Uniquefunname":"func (m *Manager) doSetBackground(value string) (string, error)","Funname":"appearance.Manager.doSetBackground","Returntype":"(string, error)","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetCursorTheme(value string) error","Funname":"appearance.Manager.doSetCursorTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetFontSize(size float64) error","Funname":"appearance.Manager.doSetFontSize","Returntype":"error","Args":"size float64"},{"Uniquefunname":"func (m *Manager) doSetGreeterBackground(value string) error","Funname":"appearance.Manager.doSetGreeterBackground","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetGtkTheme(value string) error","Funname":"appearance.Manager.doSetGtkTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetIconTheme(value string) error","Funname":"appearance.Manager.doSetIconTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetMonitorBackground(monitorName string, imageFile string) (string, error)","Funname":"appearance.Manager.doSetMonitorBackground","Returntype":"(string, error)","Args":"monitorName string, imageFile string"},{"Uniquefunname":"func (m *Manager) doSetMonospaceFont(value string) error","Funname":"appearance.Manager.doSetMonospaceFont","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetStandardFont(value string) error","Funname":"appearance.Manager.doSetStandardFont","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetWallpaperSlideShow(monitorName string, wallpaperSlideShow string) error","Funname":"appearance.Manager.doSetWallpaperSlideShow","Returntype":"error","Args":"monitorName string, wallpaperSlideShow string"},{"Uniquefunname":"func (*Manager) doShow(ifc interface","Funname":"appearance.Manager.doShow","Returntype":"(string, error)","Args":"ifc interface{}"},{"Uniquefunname":"func (m *Manager) doUpdateWallpaperURIs() error","Funname":"appearance.Manager.doUpdateWallpaperURIs","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) enableDetectSysClock(enabled bool)","Funname":"appearance.Manager.enableDetectSysClock","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) getBackgroundURIs() []string","Funname":"appearance.Manager.getBackgroundURIs","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) getDefaultFonts() (standard string, monospace string)","Funname":"appearance.Manager.getDefaultFonts","Returntype":"(standard string, monospace string)","Args":""},{"Uniquefunname":"func (m *Manager) getQtActiveColor() (string, error)","Funname":"appearance.Manager.getQtActiveColor","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (m *Manager) handleDisplayChanged(hasValue bool)","Funname":"appearance.Manager.handleDisplayChanged","Returntype":"","Args":"hasValue bool"},{"Uniquefunname":"func (m *Manager) handleSysClockChanged()","Funname":"appearance.Manager.handleSysClockChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWmWorkspaceCountChanged(count int32)","Funname":"appearance.Manager.handleWmWorkspaceCountChanged","Returntype":"","Args":"count int32"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"appearance.Manager.init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initCoordinate()","Funname":"appearance.Manager.initCoordinate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initCurrentBgs()","Funname":"appearance.Manager.initCurrentBgs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserObj(systemConn *dbus.Conn)","Funname":"appearance.Manager.initUserObj","Returntype":"","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func (m *Manager) initWallpaperSlideshow()","Funname":"appearance.Manager.initWallpaperSlideshow","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isBgInUse(file string) bool","Funname":"appearance.Manager.isBgInUse","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func (m *Manager) iso6709Parsing(city, coordinates string)","Funname":"appearance.Manager.iso6709Parsing","Returntype":"","Args":"city, coordinates string"},{"Uniquefunname":"func (m *Manager) listBackground() background.Backgrounds","Funname":"appearance.Manager.listBackground","Returntype":"background.Backgrounds","Args":""},{"Uniquefunname":"func (m *Manager) loadDefaultFontConfig(filename string) error","Funname":"appearance.Manager.loadDefaultFontConfig","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (m *Manager) loadWSConfig()","Funname":"appearance.Manager.loadWSConfig","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) resetFonts()","Funname":"appearance.Manager.resetFonts","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) resetThemeAutoTimer()","Funname":"appearance.Manager.resetThemeAutoTimer","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) reverseMonitorMap() map[string]string","Funname":"appearance.Manager.reverseMonitorMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func (m *Manager) saveWSConfig(monitorSpace string, t time.Time) error","Funname":"appearance.Manager.saveWSConfig","Returntype":"error","Args":"monitorSpace string, t time.Time"},{"Uniquefunname":"func (m *Manager) setDesktopBackgrounds(val []string)","Funname":"appearance.Manager.setDesktopBackgrounds","Returntype":"","Args":"val []string"},{"Uniquefunname":"func (m *Manager) setPropertyWallpaperSlideShow(cfg mapMonitorWorkspaceWSPolicy) error","Funname":"appearance.Manager.setPropertyWallpaperSlideShow","Returntype":"error","Args":"cfg mapMonitorWorkspaceWSPolicy"},{"Uniquefunname":"func (m *Manager) setPropertyWallpaperURIs(cfg mapMonitorWorkspaceWallpaperURIs) error","Funname":"appearance.Manager.setPropertyWallpaperURIs","Returntype":"error","Args":"cfg mapMonitorWorkspaceWallpaperURIs"},{"Uniquefunname":"func (m *Manager) setQtActiveColor(hexColor string) error","Funname":"appearance.Manager.setQtActiveColor","Returntype":"error","Args":"hexColor string"},{"Uniquefunname":"func (m *Manager) updateLocation(latitude, longitude float64)","Funname":"appearance.Manager.updateLocation","Returntype":"","Args":"latitude, longitude float64"},{"Uniquefunname":"func (m *Manager) updateMonitorMap()","Funname":"appearance.Manager.updateMonitorMap","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updateNewVersionData() error","Funname":"appearance.Manager.updateNewVersionData","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) updateThemeAuto(enabled bool)","Funname":"appearance.Manager.updateThemeAuto","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) updateWSPolicy(policy string)","Funname":"appearance.Manager.updateWSPolicy","Returntype":"","Args":"policy string"},{"Uniquefunname":"func (m *Manager) writeDQtTheme(key, value string) error","Funname":"appearance.Manager.writeDQtTheme","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func byteArrayToHexColor(p [4]byte) string","Funname":"appearance.byteArrayToHexColor","Returntype":"string","Args":"p [4]byte"},{"Uniquefunname":"func appearance.doMarshalMonitorWorkspaceWallpaperURIs(cfg mapMonitorWorkspaceWallpaperURIs)(string, error)","Funname":"appearance.doMarshalMonitorWorkspaceWallpaperURIs","Returntype":"(string, error)","Args":"cfg mapMonitorWorkspaceWallpaperURIs"},{"Uniquefunname":"func doMarshalWallpaperSlideshow(cfg mapMonitorWorkspaceWSPolicy) (string, error)","Funname":"appearance.doMarshalWallpaperSlideshow","Returntype":"(string, error)","Args":"cfg mapMonitorWorkspaceWSPolicy"},{"Uniquefunname":"func appearance.doUnmarshalMonitorWorkspaceWallpaperURIs(jsonString string)(mapMonitorWorkspaceWallpaperURIs, error)","Funname":"appearance.doUnmarshalMonitorWorkspaceWallpaperURIs","Returntype":"(mapMonitorWorkspaceWallpaperURIs, error)","Args":"jsonString string"},{"Uniquefunname":"func doUnmarshalWallpaperSlideshow(jsonString string) (mapMonitorWorkspaceWSPolicy, error)","Funname":"appearance.doUnmarshalWallpaperSlideshow","Returntype":"(mapMonitorWorkspaceWSPolicy, error)","Args":"jsonString string"},{"Uniquefunname":"func genMonitorKeyString(monitor string, idx interface","Funname":"appearance.genMonitorKeyString","Returntype":"string","Args":"monitor string, idx interface{}"},{"Uniquefunname":"func getSessionId(filename string) (string, error)","Funname":"appearance.getSessionId","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func hexColorToXsColor(hexColor string) (string, error)","Funname":"appearance.hexColorToXsColor","Returntype":"(string, error)","Args":"hexColor string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"appearance.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func parseHexColor(hexColor string) (array [4]byte, err error)","Funname":"appearance.parseHexColor","Returntype":"(array [4]byte, err error)","Args":"hexColor string"},{"Uniquefunname":"func parseHexNum(str string) (byte, error)","Funname":"appearance.parseHexNum","Returntype":"(byte, error)","Args":"str string"},{"Uniquefunname":"func xsColorToHexColor(str string) (string, error)","Funname":"appearance.xsColorToHexColor","Returntype":"(string, error)","Args":"str string"},{"Uniquefunname":"func (m *Manager) autoChangeBg(monitorSpace string, t time.Time)","Funname":"autoChangeBg","Returntype":"","Args":"monitorSpace string, t time.Time"},{"Uniquefunname":"func (m *Manager) autoSetTheme(latitude, longitude float64)","Funname":"autoSetTheme","Returntype":"","Args":"latitude, longitude float64"},{"Uniquefunname":"func byteArrayToHexColor(p [4]byte) string","Funname":"byteArrayToHexColor","Returntype":"string","Args":"p [4]byte"},{"Uniquefunname":"func (m *Manager) changeBgAfterLogin(monitorSpace string) error","Funname":"changeBgAfterLogin","Returntype":"error","Args":"monitorSpace string"},{"Uniquefunname":"func (m *Manager) correctFontName()","Funname":"correctFontName","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doGetWallpaperSlideShow(monitorName string) (string, error)","Funname":"doGetWallpaperSlideShow","Returntype":"(string, error)","Args":"monitorName string"},{"Uniquefunname":"func doMarshalMonitorWorkspaceWallpaperURIs(cfg mapMonitorWorkspaceWallpaperURIs)(string, error)","Funname":"doMarshalMonitorWorkspaceWallpaperURIs","Returntype":"(string, error)","Args":"cfg mapMonitorWorkspaceWallpaperURIs"},{"Uniquefunname":"func doMarshalWallpaperSlideshow(cfg mapMonitorWorkspaceWSPolicy) (string, error)","Funname":"doMarshalWallpaperSlideshow","Returntype":"(string, error)","Args":"cfg mapMonitorWorkspaceWSPolicy"},{"Uniquefunname":"func (m *Manager) doSetBackground(value string) (string, error)","Funname":"doSetBackground","Returntype":"(string, error)","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetCursorTheme(value string) error","Funname":"doSetCursorTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetFontSize(size float64) error","Funname":"doSetFontSize","Returntype":"error","Args":"size float64"},{"Uniquefunname":"func (m *Manager) doSetGreeterBackground(value string) error","Funname":"doSetGreeterBackground","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetGtkTheme(value string) error","Funname":"doSetGtkTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetIconTheme(value string) error","Funname":"doSetIconTheme","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetMonitorBackground(monitorName string, imageFile string) (string, error)","Funname":"doSetMonitorBackground","Returntype":"(string, error)","Args":"monitorName string, imageFile string"},{"Uniquefunname":"func (m *Manager) doSetMonospaceFont(value string) error","Funname":"doSetMonospaceFont","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetStandardFont(value string) error","Funname":"doSetStandardFont","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (m *Manager) doSetWallpaperSlideShow(monitorName string, wallpaperSlideShow string) error","Funname":"doSetWallpaperSlideShow","Returntype":"error","Args":"monitorName string, wallpaperSlideShow string"},{"Uniquefunname":"func (*Manager) doShow(ifc interface","Funname":"doShow","Returntype":"(string, error)","Args":"ifc interface{}"},{"Uniquefunname":"func doUnmarshalMonitorWorkspaceWallpaperURIs(jsonString string)(mapMonitorWorkspaceWallpaperURIs, error)","Funname":"doUnmarshalMonitorWorkspaceWallpaperURIs","Returntype":"(mapMonitorWorkspaceWallpaperURIs, error)","Args":"jsonString string"},{"Uniquefunname":"func doUnmarshalWallpaperSlideshow(jsonString string) (mapMonitorWorkspaceWSPolicy, error)","Funname":"doUnmarshalWallpaperSlideshow","Returntype":"(mapMonitorWorkspaceWSPolicy, error)","Args":"jsonString string"},{"Uniquefunname":"func (m *Manager) doUpdateWallpaperURIs() error","Funname":"doUpdateWallpaperURIs","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) enableDetectSysClock(enabled bool)","Funname":"enableDetectSysClock","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func genMonitorKeyString(monitor string, idx interface","Funname":"genMonitorKeyString","Returntype":"string","Args":"monitor string, idx interface{}"},{"Uniquefunname":"func (m *Manager) getBackgroundURIs() []string","Funname":"getBackgroundURIs","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) getDefaultFonts() (standard string, monospace string)","Funname":"getDefaultFonts","Returntype":"(standard string, monospace string)","Args":""},{"Uniquefunname":"func (m *Manager) getQtActiveColor() (string, error)","Funname":"getQtActiveColor","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getSessionId(filename string) (string, error)","Funname":"getSessionId","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func (m *Manager) handleDisplayChanged(hasValue bool)","Funname":"handleDisplayChanged","Returntype":"","Args":"hasValue bool"},{"Uniquefunname":"func (m *Manager) handleSysClockChanged()","Funname":"handleSysClockChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWmWorkspaceCountChanged(count int32)","Funname":"handleWmWorkspaceCountChanged","Returntype":"","Args":"count int32"},{"Uniquefunname":"func hexColorToXsColor(hexColor string) (string, error)","Funname":"hexColorToXsColor","Returntype":"(string, error)","Args":"hexColor string"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initCoordinate()","Funname":"initCoordinate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initCurrentBgs()","Funname":"initCurrentBgs","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserObj(systemConn *dbus.Conn)","Funname":"initUserObj","Returntype":"","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func (m *Manager) initWallpaperSlideshow()","Funname":"initWallpaperSlideshow","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isBgInUse(file string) bool","Funname":"isBgInUse","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func (m *Manager) iso6709Parsing(city, coordinates string)","Funname":"iso6709Parsing","Returntype":"","Args":"city, coordinates string"},{"Uniquefunname":"func (m *Manager) listBackground() background.Backgrounds","Funname":"listBackground","Returntype":"background.Backgrounds","Args":""},{"Uniquefunname":"func (m *Manager) loadDefaultFontConfig(filename string) error","Funname":"loadDefaultFontConfig","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (m *Manager) loadWSConfig()","Funname":"loadWSConfig","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func parseHexColor(hexColor string) (array [4]byte, err error)","Funname":"parseHexColor","Returntype":"(array [4]byte, err error)","Args":"hexColor string"},{"Uniquefunname":"func parseHexNum(str string) (byte, error)","Funname":"parseHexNum","Returntype":"(byte, error)","Args":"str string"},{"Uniquefunname":"func (m *Manager) resetFonts()","Funname":"resetFonts","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) resetThemeAutoTimer()","Funname":"resetThemeAutoTimer","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) reverseMonitorMap() map[string]string","Funname":"reverseMonitorMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func (m *Manager) saveWSConfig(monitorSpace string, t time.Time) error","Funname":"saveWSConfig","Returntype":"error","Args":"monitorSpace string, t time.Time"},{"Uniquefunname":"func (m *Manager) setDesktopBackgrounds(val []string)","Funname":"setDesktopBackgrounds","Returntype":"","Args":"val []string"},{"Uniquefunname":"func (m *Manager) setPropertyWallpaperSlideShow(cfg mapMonitorWorkspaceWSPolicy) error","Funname":"setPropertyWallpaperSlideShow","Returntype":"error","Args":"cfg mapMonitorWorkspaceWSPolicy"},{"Uniquefunname":"func (m *Manager) setPropertyWallpaperURIs(cfg mapMonitorWorkspaceWallpaperURIs) error","Funname":"setPropertyWallpaperURIs","Returntype":"error","Args":"cfg mapMonitorWorkspaceWallpaperURIs"},{"Uniquefunname":"func (m *Manager) setQtActiveColor(hexColor string) error","Funname":"setQtActiveColor","Returntype":"error","Args":"hexColor string"},{"Uniquefunname":"func (m *Manager) updateLocation(latitude, longitude float64)","Funname":"updateLocation","Returntype":"","Args":"latitude, longitude float64"},{"Uniquefunname":"func (m *Manager) updateMonitorMap()","Funname":"updateMonitorMap","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updateNewVersionData() error","Funname":"updateNewVersionData","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) updateThemeAuto(enabled bool)","Funname":"updateThemeAuto","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) updateWSPolicy(policy string)","Funname":"updateWSPolicy","Returntype":"","Args":"policy string"},{"Uniquefunname":"func (m *Manager) writeDQtTheme(key, value string) error","Funname":"writeDQtTheme","Returntype":"error","Args":"key, value string"},{"Uniquefunname":"func xsColorToHexColor(str string) (string, error)","Funname":"xsColorToHexColor","Returntype":"(string, error)","Args":"str string"}],"Records":[{"Name":"struct:appearance.Manager","Fields":["appearance.Manager.Background gsprop.String","appearance.Manager.CursorTheme gsprop.String","appearance.Manager.FontSize gsprop.Double","appearance.Manager.GtkTheme gsprop.String","appearance.Manager.IconTheme gsprop.String","appearance.Manager.MonospaceFont gsprop.String","appearance.Manager.Opacity gsprop.Double","appearance.Manager.QtActiveColor string","appearance.Manager.StandardFont gsprop.String","appearance.Manager.WallpaperSlideShow gsprop.String","appearance.Manager.WallpaperURIs gsprop.String","appearance.Manager.WindowRadius gsprop.Int","appearance.Manager.bgSyncConfig *dsync.Config","appearance.Manager.coordinateMap map[string]*coordinate","appearance.Manager.curMonitorSpace string","appearance.Manager.defaultFontConfig DefaultFontConfig","appearance.Manager.defaultFontConfigMu sync.Mutex","appearance.Manager.desktopBgs []string","appearance.Manager.detectSysClockTimer *time.Timer","appearance.Manager.display *display.Display","appearance.Manager.endWatcher chan struct{}","appearance.Manager.gnomeBgSetting *gio.Settings","appearance.Manager.greeterBg string","appearance.Manager.imageBlur *accounts.ImageBlur","appearance.Manager.imageEffect *imageeffect.ImageEffect","appearance.Manager.latitude float64","appearance.Manager.loc *time.Location","appearance.Manager.locationValid bool","appearance.Manager.login1Manager *login1.Manager","appearance.Manager.longitude float64","appearance.Manager.methods *struct { Delete func() `in:\"type,name\"`; GetScaleFactor func() `out:\"scale_factor\"`; List func() `in:\"type\" out:\"list\"`; Set func() `in:\"type,value\"`; SetScaleFactor func() `in:\"scale_factor\"`; Show func() `in:\"type,names\" out:\"detail\"`; Thumbnail func() `in:\"type,name\" out:\"file\"`; SetScreenScaleFactors func() `in:\"scaleFactors\"`; GetScreenScaleFactors func() `out:\"scaleFactors\"`; SetMonitorBackground func() `in:\"monitorName,imageFile\"`; SetWallpaperSlideShow func() `in:\"monitorName,wallpaperSlideShow\"`;","appearance.Manager.monitorMap map[string]string","appearance.Manager.service *dbusutil.Service","appearance.Manager.sessionSigLoop *dbusutil.SignalLoop","appearance.Manager.sessionTimeDate *sessiontimedate.Timedate","appearance.Manager.setting *gio.Settings","appearance.Manager.signals *struct { Changed struct { type0 string; value string; }; Refreshed struct { type0 string; }; }","appearance.Manager.syncConfig *dsync.Config","appearance.Manager.sysSigLoop *dbusutil.SignalLoop","appearance.Manager.themeAutoTimer *time.Timer","appearance.Manager.timeDate *timedate.Timedate","appearance.Manager.ts int64","appearance.Manager.userObj *accounts.User","appearance.Manager.watcher *fsnotify.Watcher","appearance.Manager.wm *wm.Wm","appearance.Manager.wrapBgSetting *gio.Settings","appearance.Manager.wsLoopMap map[string]*WSLoop","appearance.Manager.wsSchedulerMap map[string]*WSScheduler","appearance.Manager.xConn *x.Conn","appearance.Manager.xSettings *sessionmanager.XSettings","appearance.Manager.xSettingsGs *gio.Settings"]},{"Name":"const:appearance","Fields":["appearance.TypeBackground","appearance.TypeCursorTheme","appearance.TypeFontSize","appearance.TypeGreeterBackground","appearance.TypeGtkTheme","appearance.TypeIconTheme","appearance.TypeMonospaceFont","appearance.TypeStandardFont","appearance.appearanceSchema","appearance.autoGtkTheme","appearance.dbusInterface","appearance.dbusPath","appearance.dbusServiceName","appearance.defaultCursorTheme","appearance.defaultFontConfigFile","appearance.defaultGtkTheme","appearance.defaultIconTheme","appearance.defaultMonospaceFont","appearance.defaultStandardFont","appearance.gnomeBgSchema","appearance.gsKeyBackground","appearance.gsKeyBackgroundURIs","appearance.gsKeyCursorTheme","appearance.gsKeyDTKWindowRadius","appearance.gsKeyFontMonospace","appearance.gsKeyFontSize","appearance.gsKeyFontStandard","appearance.gsKeyGtkTheme","appearance.gsKeyIconTheme","appearance.gsKeyOpacity","appearance.gsKeyQtActiveColor","appearance.gsKeyWallpaperSlideshow","appearance.gsKeyWallpaperURIs","appearance.propQtActiveColor","appearance.wrapBgSchema","appearance.wsPolicyLogin","appearance.wsPolicyWakeup","appearance.xSettingsSchema","appearance.zonePath"]},{"Name":"struct:appearance.coordinate","Fields":["appearance.coordinate.latitude float64","appearance.coordinate.longitude float64"]},{"Name":"var:appearance","Fields":["appearance.hexColorReg","appearance.wsConfigFile"]}]}
{"Filepath":"appearance/scale.go","Functions":[{"Uniquefunname":"func (m *Manager) getScaleFactor() float64","Funname":"appearance.Manager.getScaleFactor","Returntype":"float64","Args":""},{"Uniquefunname":"func (m *Manager) getScreenScaleFactors() (map[string]float64, error)","Funname":"appearance.Manager.getScreenScaleFactors","Returntype":"(map[string]float64, error)","Args":""},{"Uniquefunname":"func (m *Manager) setScaleFactor(scale float64) error","Funname":"appearance.Manager.setScaleFactor","Returntype":"error","Args":"scale float64"},{"Uniquefunname":"func (m *Manager) setScreenScaleFactors(factors map[string]float64) error","Funname":"appearance.Manager.setScreenScaleFactors","Returntype":"error","Args":"factors map[string]float64"},{"Uniquefunname":"func handleSetScaleFactorDone()","Funname":"appearance.handleSetScaleFactorDone","Returntype":"","Args":""},{"Uniquefunname":"func handleSetScaleFactorStarted()","Funname":"appearance.handleSetScaleFactorStarted","Returntype":"","Args":""},{"Uniquefunname":"func sendNotify(summary, body, icon string) error","Funname":"appearance.sendNotify","Returntype":"error","Args":"summary, body, icon string"},{"Uniquefunname":"func (m *Manager) getScaleFactor() float64","Funname":"getScaleFactor","Returntype":"float64","Args":""},{"Uniquefunname":"func (m *Manager) getScreenScaleFactors() (map[string]float64, error)","Funname":"getScreenScaleFactors","Returntype":"(map[string]float64, error)","Args":""},{"Uniquefunname":"func handleSetScaleFactorDone()","Funname":"handleSetScaleFactorDone","Returntype":"","Args":""},{"Uniquefunname":"func handleSetScaleFactorStarted()","Funname":"handleSetScaleFactorStarted","Returntype":"","Args":""},{"Uniquefunname":"func sendNotify(summary, body, icon string) error","Funname":"sendNotify","Returntype":"error","Args":"summary, body, icon string"},{"Uniquefunname":"func (m *Manager) setScaleFactor(scale float64) error","Funname":"setScaleFactor","Returntype":"error","Args":"scale float64"},{"Uniquefunname":"func (m *Manager) setScreenScaleFactors(factors map[string]float64) error","Funname":"setScreenScaleFactors","Returntype":"error","Args":"factors map[string]float64"}],"Records":[{"Name":"var:appearance","Fields":["appearance.notifyId"]}]}
{"Filepath":"appearance/sync_config.go","Functions":[{"Uniquefunname":"func (sc *backgroundSyncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *backgroundSyncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *backgroundSyncConfig) Get() (interface","Funname":"appearance.backgroundSyncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *backgroundSyncConfig) Set(data []byte) error","Funname":"appearance.backgroundSyncConfig.Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"appearance.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"appearance.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"const:appearance","Fields":["appearance.backgroundDBusPath"]},{"Name":"struct:appearance.backgroundSyncConfig","Fields":["appearance.backgroundSyncConfig.m *Manager"]},{"Name":"struct:appearance.backgroundSyncData","Fields":["appearance.backgroundSyncData.BackgroundURIs []string","appearance.backgroundSyncData.GreeterBackground string","appearance.backgroundSyncData.SlideShow string","appearance.backgroundSyncData.SlideShowConfig mapMonitorWorkspaceWSPolicy","appearance.backgroundSyncData.Version string","appearance.backgroundSyncData.WallpaperURIs mapMonitorWorkspaceWallpaperURIs"]},{"Name":"struct:appearance.syncConfig","Fields":["appearance.syncConfig.m *Manager"]},{"Name":"struct:appearance.syncData","Fields":["appearance.syncData.Cursor string","appearance.syncData.FontMonospace string","appearance.syncData.FontSize float64","appearance.syncData.FontStandard string","appearance.syncData.GTK string","appearance.syncData.Icon string","appearance.syncData.Version string"]}]}
{"Filepath":"appearance/theme_auto.go","Functions":[{"Uniquefunname":"func appearance.Manager.getSunriseSunset(t time.Time, latitude, longitude float64)(time.Time, time.Time, error)","Funname":"appearance.Manager.getSunriseSunset","Returntype":"(time.Time, time.Time, error)","Args":"t time.Time, latitude, longitude float64"},{"Uniquefunname":"func appearance.Manager.getThemeAutoChangeTime(t time.Time, latitude, longitude float64)(time.Time, error)","Funname":"appearance.Manager.getThemeAutoChangeTime","Returntype":"(time.Time, error)","Args":"t time.Time, latitude, longitude float64"},{"Uniquefunname":"func getThemeAutoName(isDaytime bool) string","Funname":"appearance.getThemeAutoName","Returntype":"string","Args":"isDaytime bool"},{"Uniquefunname":"func isDaytime(t, sunriseT, sunsetT time.Time) bool","Funname":"appearance.isDaytime","Returntype":"bool","Args":"t, sunriseT, sunsetT time.Time"},{"Uniquefunname":"func getSunriseSunset(t time.Time, latitude, longitude float64)(time.Time, time.Time, error)","Funname":"getSunriseSunset","Returntype":"(time.Time, time.Time, error)","Args":"t time.Time, latitude, longitude float64"},{"Uniquefunname":"func getThemeAutoChangeTime(t time.Time, latitude, longitude float64)(time.Time, error)","Funname":"getThemeAutoChangeTime","Returntype":"(time.Time, error)","Args":"t time.Time, latitude, longitude float64"},{"Uniquefunname":"func getThemeAutoName(isDaytime bool) string","Funname":"getThemeAutoName","Returntype":"string","Args":"isDaytime bool"},{"Uniquefunname":"func isDaytime(t, sunriseT, sunsetT time.Time) bool","Funname":"isDaytime","Returntype":"bool","Args":"t, sunriseT, sunsetT time.Time"}],"Records":null}
{"Filepath":"appearance/wallpaper-slideshow.go","Functions":[{"Uniquefunname":"func (wrl *WSLoop) AddToShowed(file string)","Funname":"AddToShowed","Returntype":"","Args":"file string"},{"Uniquefunname":"func (wrl *WSLoop) GetNext() string","Funname":"GetNext","Returntype":"string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) GetShowed() []string","Funname":"GetShowed","Returntype":"[]string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) NotifyFsChanged()","Funname":"NotifyFsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (wrl *WSLoop) AddToShowed(file string)","Funname":"appearance.WSLoop.AddToShowed","Returntype":"","Args":"file string"},{"Uniquefunname":"func (wrl *WSLoop) GetNext() string","Funname":"appearance.WSLoop.GetNext","Returntype":"string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) GetShowed() []string","Funname":"appearance.WSLoop.GetShowed","Returntype":"[]string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) NotifyFsChanged()","Funname":"appearance.WSLoop.NotifyFsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (wrl *WSLoop) getNext() string","Funname":"appearance.WSLoop.getNext","Returntype":"string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) getNotShowed() []string","Funname":"appearance.WSLoop.getNotShowed","Returntype":"[]string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) reset()","Funname":"appearance.WSLoop.reset","Returntype":"","Args":""},{"Uniquefunname":"func (s *WSScheduler) loopCheck(mointorSpace string)","Funname":"appearance.WSScheduler.loopCheck","Returntype":"","Args":"mointorSpace string"},{"Uniquefunname":"func (s *WSScheduler) remainDuration() time.Duration","Funname":"appearance.WSScheduler.remainDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (s *WSScheduler) stop()","Funname":"appearance.WSScheduler.stop","Returntype":"","Args":""},{"Uniquefunname":"func (s *WSScheduler) updateInterval(monitorSpace string, v time.Duration)","Funname":"appearance.WSScheduler.updateInterval","Returntype":"","Args":"monitorSpace string, v time.Duration"},{"Uniquefunname":"func isValidWSPolicy(policy string) bool","Funname":"appearance.isValidWSPolicy","Returntype":"bool","Args":"policy string"},{"Uniquefunname":"func loadWSConfig(filename string) (mapMonitorWorkspaceWSConfig, error)","Funname":"appearance.loadWSConfig","Returntype":"(mapMonitorWorkspaceWSConfig, error)","Args":"filename string"},{"Uniquefunname":"func loadWSConfigSafe(filename string) mapMonitorWorkspaceWSConfig","Funname":"appearance.loadWSConfigSafe","Returntype":"mapMonitorWorkspaceWSConfig","Args":"filename string"},{"Uniquefunname":"func (c mapMonitorWorkspaceWSConfig) save(filename string) error","Funname":"appearance.mapMonitorWorkspaceWSConfig.save","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func newWSLoop() *WSLoop","Funname":"appearance.newWSLoop","Returntype":"*WSLoop","Args":""},{"Uniquefunname":"func newWSScheduler(fun changeBgFunc) *WSScheduler","Funname":"appearance.newWSScheduler","Returntype":"*WSScheduler","Args":"fun changeBgFunc"},{"Uniquefunname":"func (wrl *WSLoop) getNext() string","Funname":"getNext","Returntype":"string","Args":""},{"Uniquefunname":"func (wrl *WSLoop) getNotShowed() []string","Funname":"getNotShowed","Returntype":"[]string","Args":""},{"Uniquefunname":"func isValidWSPolicy(policy string) bool","Funname":"isValidWSPolicy","Returntype":"bool","Args":"policy string"},{"Uniquefunname":"func loadWSConfig(filename string) (mapMonitorWorkspaceWSConfig, error)","Funname":"loadWSConfig","Returntype":"(mapMonitorWorkspaceWSConfig, error)","Args":"filename string"},{"Uniquefunname":"func loadWSConfigSafe(filename string) mapMonitorWorkspaceWSConfig","Funname":"loadWSConfigSafe","Returntype":"mapMonitorWorkspaceWSConfig","Args":"filename string"},{"Uniquefunname":"func (s *WSScheduler) loopCheck(mointorSpace string)","Funname":"loopCheck","Returntype":"","Args":"mointorSpace string"},{"Uniquefunname":"func newWSLoop() *WSLoop","Funname":"newWSLoop","Returntype":"*WSLoop","Args":""},{"Uniquefunname":"func newWSScheduler(fun changeBgFunc) *WSScheduler","Funname":"newWSScheduler","Returntype":"*WSScheduler","Args":"fun changeBgFunc"},{"Uniquefunname":"func (s *WSScheduler) remainDuration() time.Duration","Funname":"remainDuration","Returntype":"time.Duration","Args":""},{"Uniquefunname":"func (wrl *WSLoop) reset()","Funname":"reset","Returntype":"","Args":""},{"Uniquefunname":"func (c mapMonitorWorkspaceWSConfig) save(filename string) error","Funname":"save","Returntype":"error","Args":"filename string"},{"Uniquefunname":"func (s *WSScheduler) stop()","Funname":"stop","Returntype":"","Args":""},{"Uniquefunname":"func (s *WSScheduler) updateInterval(monitorSpace string, v time.Duration)","Funname":"updateInterval","Returntype":"","Args":"monitorSpace string, v time.Duration"}],"Records":[{"Name":"struct:appearance.WSConfig","Fields":["appearance.WSConfig.LastChange time.Time","appearance.WSConfig.Showed []string"]},{"Name":"struct:appearance.WSLoop","Fields":["appearance.WSLoop.all []string","appearance.WSLoop.fsChanged bool","appearance.WSLoop.mu sync.Mutex","appearance.WSLoop.rand *rand.Rand","appearance.WSLoop.showed map[string]struct{}"]},{"Name":"struct:appearance.WSScheduler","Fields":["appearance.WSScheduler.fn changeBgFunc","appearance.WSScheduler.interval time.Duration","appearance.WSScheduler.intervalChanged chan struct{}","appearance.WSScheduler.lastSetBg time.Time","appearance.WSScheduler.mu sync.Mutex","appearance.WSScheduler.quit chan chan struct{}","appearance.WSScheduler.running bool"]}]}
{"Filepath":"appearance/background/background.go","Functions":[{"Uniquefunname":"func (bgs Backgrounds) Delete(uri string) error","Funname":"Delete","Returntype":"error","Args":"uri string"},{"Uniquefunname":"func (info *Background) Delete() error","Funname":"Delete","Returntype":"error","Args":""},{"Uniquefunname":"func (bgs Backgrounds) Get(uri string) *Background","Funname":"Get","Returntype":"*Background","Args":"uri string"},{"Uniquefunname":"func IsBackgroundFile(file string) bool","Funname":"IsBackgroundFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func ListBackground() Backgrounds","Funname":"ListBackground","Returntype":"Backgrounds","Args":""},{"Uniquefunname":"func (bgs Backgrounds) ListGet(uris []string) Backgrounds","Funname":"ListGet","Returntype":"Backgrounds","Args":"uris []string"},{"Uniquefunname":"func NotifyChanged()","Funname":"NotifyChanged","Returntype":"","Args":""},{"Uniquefunname":"func Prepare(file string) (string, error)","Funname":"Prepare","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func SetCustomWallpaperDeleteCallback(fn func(file string))","Funname":"SetCustomWallpaperDeleteCallback","Returntype":"","Args":"fn func(file string)"},{"Uniquefunname":"func SetLogger(value *log.Logger)","Funname":"SetLogger","Returntype":"","Args":"value *log.Logger"},{"Uniquefunname":"func (bgs Backgrounds) Thumbnail(uri string) (string, error)","Funname":"Thumbnail","Returntype":"(string, error)","Args":"uri string"},{"Uniquefunname":"func (info *Background) Thumbnail() (string, error)","Funname":"Thumbnail","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (info *Background) Delete() error","Funname":"background.Background.Delete","Returntype":"error","Args":""},{"Uniquefunname":"func (info *Background) Thumbnail() (string, error)","Funname":"background.Background.Thumbnail","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (bgs Backgrounds) Delete(uri string) error","Funname":"background.Backgrounds.Delete","Returntype":"error","Args":"uri string"},{"Uniquefunname":"func (bgs Backgrounds) Get(uri string) *Background","Funname":"background.Backgrounds.Get","Returntype":"*Background","Args":"uri string"},{"Uniquefunname":"func (bgs Backgrounds) ListGet(uris []string) Backgrounds","Funname":"background.Backgrounds.ListGet","Returntype":"Backgrounds","Args":"uris []string"},{"Uniquefunname":"func (bgs Backgrounds) Thumbnail(uri string) (string, error)","Funname":"background.Backgrounds.Thumbnail","Returntype":"(string, error)","Args":"uri string"},{"Uniquefunname":"func IsBackgroundFile(file string) bool","Funname":"background.IsBackgroundFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func ListBackground() Backgrounds","Funname":"background.ListBackground","Returntype":"Backgrounds","Args":""},{"Uniquefunname":"func NotifyChanged()","Funname":"background.NotifyChanged","Returntype":"","Args":""},{"Uniquefunname":"func Prepare(file string) (string, error)","Funname":"background.Prepare","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func SetCustomWallpaperDeleteCallback(fn func(file string))","Funname":"background.SetCustomWallpaperDeleteCallback","Returntype":"","Args":"fn func(file string)"},{"Uniquefunname":"func SetLogger(value *log.Logger)","Funname":"background.SetLogger","Returntype":"","Args":"value *log.Logger"},{"Uniquefunname":"func init()","Funname":"background.init","Returntype":"","Args":""},{"Uniquefunname":"func refreshBackground()","Funname":"background.refreshBackground","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func refreshBackground()","Funname":"refreshBackground","Returntype":"","Args":""}],"Records":[{"Name":"struct:background.Background","Fields":["background.Background.Deletable bool","background.Background.Id string"]},{"Name":"var:background","Fields":["background.CustomWallpapersConfigDir","background.backgroundsCache","background.backgroundsCacheMu","background.customWallpaperDeleteCallback","background.fsChanged","background.logger","background.uiSupportedFormats"]},{"Name":"const:background","Fields":["background.customWallpapersLimit"]}]}
{"Filepath":"appearance/background/background_test.go","Functions":[{"Uniquefunname":"func TestFileInDirs(t *testing.T)","Funname":"TestFileInDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetBgFiles(t *testing.T)","Funname":"TestGetBgFiles","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScanner(t *testing.T)","Funname":"TestScanner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFileInDirs(t *testing.T)","Funname":"background.TestFileInDirs","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetBgFiles(t *testing.T)","Funname":"background.TestGetBgFiles","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScanner(t *testing.T)","Funname":"background.TestScanner","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"appearance/background/custom_wallpapers.go","Functions":[{"Uniquefunname":"func Len()int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (a byModTime) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func background.byModTime.Len()int","Funname":"background.byModTime.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (a byModTime) Less(i, j int) bool","Funname":"background.byModTime.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func background.byModTime.Swap(i, j int)","Funname":"background.byModTime.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func deleteOld(notDeleteFiles strv.Strv)","Funname":"background.deleteOld","Returntype":"","Args":"notDeleteFiles strv.Strv"},{"Uniquefunname":"func prepare(filename string) (string, error)","Funname":"background.prepare","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func resizeImage(filename, cacheDir string) (outFilename, ext string, isResized bool)","Funname":"background.resizeImage","Returntype":"(outFilename, ext string, isResized bool)","Args":"filename, cacheDir string"},{"Uniquefunname":"func shrinkCache(cacheFileBaseName string)","Funname":"background.shrinkCache","Returntype":"","Args":"cacheFileBaseName string"},{"Uniquefunname":"func sumFileMd5(filename string) (string, error)","Funname":"background.sumFileMd5","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func updateModTime(file string)","Funname":"background.updateModTime","Returntype":"","Args":"file string"},{"Uniquefunname":"func deleteOld(notDeleteFiles strv.Strv)","Funname":"deleteOld","Returntype":"","Args":"notDeleteFiles strv.Strv"},{"Uniquefunname":"func prepare(filename string) (string, error)","Funname":"prepare","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func resizeImage(filename, cacheDir string) (outFilename, ext string, isResized bool)","Funname":"resizeImage","Returntype":"(outFilename, ext string, isResized bool)","Args":"filename, cacheDir string"},{"Uniquefunname":"func shrinkCache(cacheFileBaseName string)","Funname":"shrinkCache","Returntype":"","Args":"cacheFileBaseName string"},{"Uniquefunname":"func sumFileMd5(filename string) (string, error)","Funname":"sumFileMd5","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func updateModTime(file string)","Funname":"updateModTime","Returntype":"","Args":"file string"}],"Records":null}
{"Filepath":"appearance/background/list.go","Functions":[{"Uniquefunname":"func ListDirs() []string","Funname":"ListDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func ListDirs() []string","Funname":"background.ListDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func getBgFilesInDir(dir string) []string","Funname":"background.getBgFilesInDir","Returntype":"[]string","Args":"dir string"},{"Uniquefunname":"func getCustomBgFiles() []string","Funname":"background.getCustomBgFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func getSysBgFiles() []string","Funname":"background.getSysBgFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func isFileInDirs(file string, dirs []string) bool","Funname":"background.isFileInDirs","Returntype":"bool","Args":"file string, dirs []string"},{"Uniquefunname":"func getBgFilesInDir(dir string) []string","Funname":"getBgFilesInDir","Returntype":"[]string","Args":"dir string"},{"Uniquefunname":"func getCustomBgFiles() []string","Funname":"getCustomBgFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func getSysBgFiles() []string","Funname":"getSysBgFiles","Returntype":"[]string","Args":""},{"Uniquefunname":"func isFileInDirs(file string, dirs []string) bool","Funname":"isFileInDirs","Returntype":"bool","Args":"file string, dirs []string"}],"Records":[{"Name":"var:background","Fields":["background.systemWallpapersDir"]}]}
{"Filepath":"appearance/fonts/family.go","Functions":[{"Uniquefunname":"func (table FamilyHashTable) Get(key string) *Family","Funname":"Get","Returntype":"*Family","Args":"key string"},{"Uniquefunname":"func (table FamilyHashTable) GetFamilies(ids []string) []*Family","Funname":"GetFamilies","Returntype":"[]*Family","Args":"ids []string"},{"Uniquefunname":"func (table FamilyHashTable) GetFamily(id string) *Family","Funname":"GetFamily","Returntype":"*Family","Args":"id string"},{"Uniquefunname":"func GetFontSize() float64","Funname":"GetFontSize","Returntype":"float64","Args":""},{"Uniquefunname":"func IsFontFamily(value string) bool","Funname":"IsFontFamily","Returntype":"bool","Args":"value string"},{"Uniquefunname":"func IsFontSizeValid(size float64) bool","Funname":"IsFontSizeValid","Returntype":"bool","Args":"size float64"},{"Uniquefunname":"func (table FamilyHashTable) ListMonospace() []string","Funname":"ListMonospace","Returntype":"[]string","Args":""},{"Uniquefunname":"func (table FamilyHashTable) ListStandard() []string","Funname":"ListStandard","Returntype":"[]string","Args":""},{"Uniquefunname":"func SetFamily(standard, monospace string, size float64) error","Funname":"SetFamily","Returntype":"error","Args":"standard, monospace string, size float64"},{"Uniquefunname":"func (table FamilyHashTable) Get(key string) *Family","Funname":"fonts.FamilyHashTable.Get","Returntype":"*Family","Args":"key string"},{"Uniquefunname":"func (table FamilyHashTable) GetFamilies(ids []string) []*Family","Funname":"fonts.FamilyHashTable.GetFamilies","Returntype":"[]*Family","Args":"ids []string"},{"Uniquefunname":"func (table FamilyHashTable) GetFamily(id string) *Family","Funname":"fonts.FamilyHashTable.GetFamily","Returntype":"*Family","Args":"id string"},{"Uniquefunname":"func (table FamilyHashTable) ListMonospace() []string","Funname":"fonts.FamilyHashTable.ListMonospace","Returntype":"[]string","Args":""},{"Uniquefunname":"func (table FamilyHashTable) ListStandard() []string","Funname":"fonts.FamilyHashTable.ListStandard","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetFontSize() float64","Funname":"fonts.GetFontSize","Returntype":"float64","Args":""},{"Uniquefunname":"func IsFontFamily(value string) bool","Funname":"fonts.IsFontFamily","Returntype":"bool","Args":"value string"},{"Uniquefunname":"func IsFontSizeValid(size float64) bool","Funname":"fonts.IsFontSizeValid","Returntype":"bool","Args":"size float64"},{"Uniquefunname":"func SetFamily(standard, monospace string, size float64) error","Funname":"fonts.SetFamily","Returntype":"error","Args":"standard, monospace string, size float64"},{"Uniquefunname":"func getFontSize(setting *gio.Settings) float64","Funname":"fonts.getFontSize","Returntype":"float64","Args":"setting *gio.Settings"},{"Uniquefunname":"func isVirtualFont(name string) bool","Funname":"fonts.isVirtualFont","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setFontByXSettings(name string, size float64) error","Funname":"fonts.setFontByXSettings","Returntype":"error","Args":"name string, size float64"},{"Uniquefunname":"func sumStrHash(v string) string","Funname":"fonts.sumStrHash","Returntype":"string","Args":"v string"},{"Uniquefunname":"func getFontSize(setting *gio.Settings) float64","Funname":"getFontSize","Returntype":"float64","Args":"setting *gio.Settings"},{"Uniquefunname":"func isVirtualFont(name string) bool","Funname":"isVirtualFont","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func setFontByXSettings(name string, size float64) error","Funname":"setFontByXSettings","Returntype":"error","Args":"name string, size float64"},{"Uniquefunname":"func sumStrHash(v string) string","Funname":"sumStrHash","Returntype":"string","Args":"v string"}],"Records":[{"Name":"var:fonts","Fields":["fonts.DeepinFontConfig","fonts.locker","fonts.xsSetting"]},{"Name":"struct:fonts.Family","Fields":["fonts.Family.Id string","fonts.Family.Monospace bool","fonts.Family.Name string","fonts.Family.Show bool","fonts.Family.Styles []string"]},{"Name":"const:fonts","Fields":["fonts.fallbackMonospace","fonts.fallbackStandard","fonts.gsKeyFontName","fonts.xsettingsSchema"]}]}
{"Filepath":"appearance/fonts/family_cache.go","Functions":[{"Uniquefunname":"func configContent(standard, mono string) string","Funname":"configContent","Returntype":"string","Args":"standard, mono string"},{"Uniquefunname":"func doSaveObject(file string, obj interface","Funname":"doSaveObject","Returntype":"error","Args":"file string, obj interface{}"},{"Uniquefunname":"func (table FamilyHashTable) saveToFile() error","Funname":"fonts.FamilyHashTable.saveToFile","Returntype":"error","Args":""},{"Uniquefunname":"func configContent(standard, mono string) string","Funname":"fonts.configContent","Returntype":"string","Args":"standard, mono string"},{"Uniquefunname":"func doSaveObject(file string, obj interface","Funname":"fonts.doSaveObject","Returntype":"error","Args":"file string, obj interface{}"},{"Uniquefunname":"func loadCacheFromFile(file string, obj interface","Funname":"fonts.loadCacheFromFile","Returntype":"error","Args":"file string, obj interface{}"},{"Uniquefunname":"func writeFontConfig(content, file string) error","Funname":"fonts.writeFontConfig","Returntype":"error","Args":"content, file string"},{"Uniquefunname":"func loadCacheFromFile(file string, obj interface","Funname":"loadCacheFromFile","Returntype":"error","Args":"file string, obj interface{}"},{"Uniquefunname":"func (table FamilyHashTable) saveToFile() error","Funname":"saveToFile","Returntype":"error","Args":""},{"Uniquefunname":"func writeFontConfig(content, file string) error","Funname":"writeFontConfig","Returntype":"error","Args":"content, file string"}],"Records":[{"Name":"var:fonts","Fields":["fonts.familyHashCacheFile"]}]}
{"Filepath":"appearance/fonts/wrapper.go","Functions":[{"Uniquefunname":"func GetFamilyTable() FamilyHashTable","Funname":"GetFamilyTable","Returntype":"FamilyHashTable","Args":""},{"Uniquefunname":"func fcFontMatch(family string) string","Funname":"fcFontMatch","Returntype":"string","Args":"family string"},{"Uniquefunname":"func fcInfoToFamily(cInfo *C.FcInfo) *Family","Funname":"fcInfoToFamily","Returntype":"*Family","Args":"cInfo *C.FcInfo"},{"Uniquefunname":"func fcInfosToFamilyTable() FamilyHashTable","Funname":"fcInfosToFamilyTable","Returntype":"FamilyHashTable","Args":""},{"Uniquefunname":"func GetFamilyTable() FamilyHashTable","Funname":"fonts.GetFamilyTable","Returntype":"FamilyHashTable","Args":""},{"Uniquefunname":"func fcFontMatch(family string) string","Funname":"fonts.fcFontMatch","Returntype":"string","Args":"family string"},{"Uniquefunname":"func fcInfoToFamily(cInfo *C.FcInfo) *Family","Funname":"fonts.fcInfoToFamily","Returntype":"*Family","Args":"cInfo *C.FcInfo"},{"Uniquefunname":"func fcInfosToFamilyTable() FamilyHashTable","Funname":"fonts.fcInfosToFamilyTable","Returntype":"FamilyHashTable","Args":""},{"Uniquefunname":"func getCurLang() string","Funname":"fonts.getCurLang","Returntype":"string","Args":""},{"Uniquefunname":"func getItemByIndex(idx int, list []string) string","Funname":"fonts.getItemByIndex","Returntype":"string","Args":"idx int, list []string"},{"Uniquefunname":"func getLangFromLocale(locale string) string","Funname":"fonts.getLangFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func indexOf(item string, list []string) int","Funname":"fonts.indexOf","Returntype":"int","Args":"item string, list []string"},{"Uniquefunname":"func isFcCacheUpdate() bool","Funname":"fonts.isFcCacheUpdate","Returntype":"bool","Args":""},{"Uniquefunname":"func isMonospace(name, spacing string) bool","Funname":"fonts.isMonospace","Returntype":"bool","Args":"name, spacing string"},{"Uniquefunname":"func getCurLang() string","Funname":"getCurLang","Returntype":"string","Args":""},{"Uniquefunname":"func getItemByIndex(idx int, list []string) string","Funname":"getItemByIndex","Returntype":"string","Args":"idx int, list []string"},{"Uniquefunname":"func getLangFromLocale(locale string) string","Funname":"getLangFromLocale","Returntype":"string","Args":"locale string"},{"Uniquefunname":"func indexOf(item string, list []string) int","Funname":"indexOf","Returntype":"int","Args":"item string, list []string"},{"Uniquefunname":"func isFcCacheUpdate() bool","Funname":"isFcCacheUpdate","Returntype":"bool","Args":""},{"Uniquefunname":"func isMonospace(name, spacing string) bool","Funname":"isMonospace","Returntype":"bool","Args":"name, spacing string"}],"Records":[{"Name":"var:fonts","Fields":["fonts.curLang","fonts.familyBlacklist","fonts.home","fonts.langReg"]},{"Name":"const:fonts","Fields":["fonts.defaultLang","fonts.defaultLangDelim","fonts.defaultNameDelim","fonts.spaceTypeMono"]}]}
{"Filepath":"appearance/subthemes/themes.go","Functions":[{"Uniquefunname":"func (info *Theme) Delete() error","Funname":"Delete","Returntype":"error","Args":""},{"Uniquefunname":"func (infos Themes) Delete(id string) error","Funname":"Delete","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (infos Themes) Get(id string) *Theme","Funname":"Get","Returntype":"*Theme","Args":"id string"},{"Uniquefunname":"func GetCursorThumbnail(id string) (string, error)","Funname":"GetCursorThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func GetGtkThumbnail(id string) (string, error)","Funname":"GetGtkThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func GetIconThumbnail(id string) (string, error)","Funname":"GetIconThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func (infos Themes) GetIds() []string","Funname":"GetIds","Returntype":"[]string","Args":""},{"Uniquefunname":"func IsCursorTheme(id string) bool","Funname":"IsCursorTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func IsGtkTheme(id string) bool","Funname":"IsGtkTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func IsIconTheme(id string) bool","Funname":"IsIconTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func ListCursorTheme() Themes","Funname":"ListCursorTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func (infos Themes) ListGet(ids []string) Themes","Funname":"ListGet","Returntype":"Themes","Args":"ids []string"},{"Uniquefunname":"func ListGtkTheme() Themes","Funname":"ListGtkTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func ListIconTheme() Themes","Funname":"ListIconTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func RefreshCursorThemes()","Funname":"RefreshCursorThemes","Returntype":"","Args":""},{"Uniquefunname":"func RefreshGtkThemes()","Funname":"RefreshGtkThemes","Returntype":"","Args":""},{"Uniquefunname":"func RefreshIconThemes()","Funname":"RefreshIconThemes","Returntype":"","Args":""},{"Uniquefunname":"func SetCursorTheme(id string) error","Funname":"SetCursorTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func SetGtkTheme(id string) error","Funname":"SetGtkTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func SetIconTheme(id string) error","Funname":"SetIconTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func getThemes(files []string) Themes","Funname":"getThemes","Returntype":"Themes","Args":"files []string"},{"Uniquefunname":"func isDeletable(file string) bool","Funname":"isDeletable","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func GetCursorThumbnail(id string) (string, error)","Funname":"subthemes.GetCursorThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func GetGtkThumbnail(id string) (string, error)","Funname":"subthemes.GetGtkThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func GetIconThumbnail(id string) (string, error)","Funname":"subthemes.GetIconThumbnail","Returntype":"(string, error)","Args":"id string"},{"Uniquefunname":"func IsCursorTheme(id string) bool","Funname":"subthemes.IsCursorTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func IsGtkTheme(id string) bool","Funname":"subthemes.IsGtkTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func IsIconTheme(id string) bool","Funname":"subthemes.IsIconTheme","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func ListCursorTheme() Themes","Funname":"subthemes.ListCursorTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func ListGtkTheme() Themes","Funname":"subthemes.ListGtkTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func ListIconTheme() Themes","Funname":"subthemes.ListIconTheme","Returntype":"Themes","Args":""},{"Uniquefunname":"func RefreshCursorThemes()","Funname":"subthemes.RefreshCursorThemes","Returntype":"","Args":""},{"Uniquefunname":"func RefreshGtkThemes()","Funname":"subthemes.RefreshGtkThemes","Returntype":"","Args":""},{"Uniquefunname":"func RefreshIconThemes()","Funname":"subthemes.RefreshIconThemes","Returntype":"","Args":""},{"Uniquefunname":"func SetCursorTheme(id string) error","Funname":"subthemes.SetCursorTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func SetGtkTheme(id string) error","Funname":"subthemes.SetGtkTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func SetIconTheme(id string) error","Funname":"subthemes.SetIconTheme","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (info *Theme) Delete() error","Funname":"subthemes.Theme.Delete","Returntype":"error","Args":""},{"Uniquefunname":"func (infos Themes) Delete(id string) error","Funname":"subthemes.Themes.Delete","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (infos Themes) Get(id string) *Theme","Funname":"subthemes.Themes.Get","Returntype":"*Theme","Args":"id string"},{"Uniquefunname":"func (infos Themes) GetIds() []string","Funname":"subthemes.Themes.GetIds","Returntype":"[]string","Args":""},{"Uniquefunname":"func (infos Themes) ListGet(ids []string) Themes","Funname":"subthemes.Themes.ListGet","Returntype":"Themes","Args":"ids []string"},{"Uniquefunname":"func getThemes(files []string) Themes","Funname":"subthemes.getThemes","Returntype":"Themes","Args":"files []string"},{"Uniquefunname":"func isDeletable(file string) bool","Funname":"subthemes.isDeletable","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"subthemes.isItemInList","Returntype":"bool","Args":"item string, list []string"}],"Records":[{"Name":"struct:subthemes.Theme","Fields":["subthemes.Theme.Deletable bool","subthemes.Theme.Id string","subthemes.Theme.Path string"]},{"Name":"const:subthemes","Fields":["subthemes.appearanceSchema","subthemes.gsKeyExcludedIcon"]},{"Name":"var:subthemes","Fields":["subthemes.cacheCursorThemes","subthemes.cacheGtkThemes","subthemes.cacheIconThemes","subthemes.home"]}]}
{"Filepath":"appinfo/config_file.go","Functions":[{"Uniquefunname":"func ConfigFile(name string) (*glib.KeyFile, error)","Funname":"ConfigFile","Returntype":"(*glib.KeyFile, error)","Args":"name string"},{"Uniquefunname":"func ConfigFilePath(name string) string","Funname":"ConfigFilePath","Returntype":"string","Args":"name string"},{"Uniquefunname":"func ConfigFile(name string) (*glib.KeyFile, error)","Funname":"appinfo.ConfigFile","Returntype":"(*glib.KeyFile, error)","Args":"name string"},{"Uniquefunname":"func ConfigFilePath(name string) string","Funname":"appinfo.ConfigFilePath","Returntype":"string","Args":"name string"}],"Records":[{"Name":"const:appinfo","Fields":["appinfo._DirDefaultPerm"]}]}
{"Filepath":"appinfo/config_file_test.go","Functions":[{"Uniquefunname":"func (*ConfigFileTestSuite) TestConfigFilePath(c *C.C)","Funname":"TestConfigFilePath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*ConfigFileTestSuite) TestConfigFilePath(c *C.C)","Funname":"appinfo.ConfigFileTestSuite.TestConfigFilePath","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:appinfo","Fields":["appinfo._"]}]}
{"Filepath":"appinfo/id.go","Functions":[{"Uniquefunname":"func NormalizeAppID(candidateID string) string","Funname":"NormalizeAppID","Returntype":"string","Args":"candidateID string"},{"Uniquefunname":"func NormalizeAppIDWithCaseSensitive(candidateID string) string","Funname":"NormalizeAppIDWithCaseSensitive","Returntype":"string","Args":"candidateID string"},{"Uniquefunname":"func NormalizeAppID(candidateID string) string","Funname":"appinfo.NormalizeAppID","Returntype":"string","Args":"candidateID string"},{"Uniquefunname":"func NormalizeAppIDWithCaseSensitive(candidateID string) string","Funname":"appinfo.NormalizeAppIDWithCaseSensitive","Returntype":"string","Args":"candidateID string"}],"Records":null}
{"Filepath":"appinfo/rate.go","Functions":[{"Uniquefunname":"func GetFrequency(id string, f *glib.KeyFile) uint64","Funname":"GetFrequency","Returntype":"uint64","Args":"id string, f *glib.KeyFile"},{"Uniquefunname":"func GetFrequencyRecordFile() (*glib.KeyFile, error)","Funname":"GetFrequencyRecordFile","Returntype":"(*glib.KeyFile, error)","Args":""},{"Uniquefunname":"func SetFrequency(id string, freq uint64, f *glib.KeyFile)","Funname":"SetFrequency","Returntype":"","Args":"id string, freq uint64, f *glib.KeyFile"},{"Uniquefunname":"func GetFrequency(id string, f *glib.KeyFile) uint64","Funname":"appinfo.GetFrequency","Returntype":"uint64","Args":"id string, f *glib.KeyFile"},{"Uniquefunname":"func GetFrequencyRecordFile() (*glib.KeyFile, error)","Funname":"appinfo.GetFrequencyRecordFile","Returntype":"(*glib.KeyFile, error)","Args":""},{"Uniquefunname":"func SetFrequency(id string, freq uint64, f *glib.KeyFile)","Funname":"appinfo.SetFrequency","Returntype":"","Args":"id string, freq uint64, f *glib.KeyFile"},{"Uniquefunname":"func saveKeyFile(file *glib.KeyFile, path string) error","Funname":"appinfo.saveKeyFile","Returntype":"error","Args":"file *glib.KeyFile, path string"},{"Uniquefunname":"func saveKeyFile(file *glib.KeyFile, path string) error","Funname":"saveKeyFile","Returntype":"error","Args":"file *glib.KeyFile, path string"}],"Records":[{"Name":"const:appinfo","Fields":["appinfo._RateRecordFile","appinfo._RateRecordKey"]}]}
{"Filepath":"apps/alrecorder.go","Functions":[{"Uniquefunname":"func (*ALRecorder) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (r *ALRecorder) GetNew(sender dbus.Sender) (map[string][]string, *dbus.Error)","Funname":"GetNew","Returntype":"(map[string][]string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (r *ALRecorder) MarkLaunched(file string) *dbus.Error","Funname":"MarkLaunched","Returntype":"*dbus.Error","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) Service() *dbusutil.Service","Funname":"Service","Returntype":"*dbusutil.Service","Args":""},{"Uniquefunname":"func (r *ALRecorder) UninstallHints(desktopFiles []string) *dbus.Error","Funname":"UninstallHints","Returntype":"*dbus.Error","Args":"desktopFiles []string"},{"Uniquefunname":"func (r *ALRecorder) WatchDirs(sender dbus.Sender, dataDirs []string) *dbus.Error","Funname":"WatchDirs","Returntype":"*dbus.Error","Args":"sender dbus.Sender, dataDirs []string"},{"Uniquefunname":"func (*ALRecorder) GetInterfaceName() string","Funname":"apps.ALRecorder.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (r *ALRecorder) GetNew(sender dbus.Sender) (map[string][]string, *dbus.Error)","Funname":"apps.ALRecorder.GetNew","Returntype":"(map[string][]string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (r *ALRecorder) MarkLaunched(file string) *dbus.Error","Funname":"apps.ALRecorder.MarkLaunched","Returntype":"*dbus.Error","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) Service() *dbusutil.Service","Funname":"apps.ALRecorder.Service","Returntype":"*dbusutil.Service","Args":""},{"Uniquefunname":"func (r *ALRecorder) UninstallHints(desktopFiles []string) *dbus.Error","Funname":"apps.ALRecorder.UninstallHints","Returntype":"*dbus.Error","Args":"desktopFiles []string"},{"Uniquefunname":"func (r *ALRecorder) WatchDirs(sender dbus.Sender, dataDirs []string) *dbus.Error","Funname":"apps.ALRecorder.WatchDirs","Returntype":"*dbus.Error","Args":"sender dbus.Sender, dataDirs []string"},{"Uniquefunname":"func (r *ALRecorder) emitLaunched(file string)","Funname":"apps.ALRecorder.emitLaunched","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) emitServiceRestarted()","Funname":"apps.ALRecorder.emitServiceRestarted","Returntype":"","Args":""},{"Uniquefunname":"func (r *ALRecorder) emitStatusSaved(root, file string, ok bool)","Funname":"apps.ALRecorder.emitStatusSaved","Returntype":"","Args":"root, file string, ok bool"},{"Uniquefunname":"func (r *ALRecorder) handleAdded(file string)","Funname":"apps.ALRecorder.handleAdded","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleDirRemoved(file string)","Funname":"apps.ALRecorder.handleDirRemoved","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleRemoved(file string)","Funname":"apps.ALRecorder.handleRemoved","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleUserRemoved(uid int)","Funname":"apps.ALRecorder.handleUserRemoved","Returntype":"","Args":"uid int"},{"Uniquefunname":"func (r *ALRecorder) listenEvents()","Funname":"apps.ALRecorder.listenEvents","Returntype":"","Args":""},{"Uniquefunname":"func (r *ALRecorder) uninstallHint(file string)","Funname":"apps.ALRecorder.uninstallHint","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) watchAppsDir(uid int, home, appsDir string)","Funname":"apps.ALRecorder.watchAppsDir","Returntype":"","Args":"uid int, home, appsDir string"},{"Uniquefunname":"func newALRecorder(watcher *DFWatcher) (*ALRecorder, error)","Funname":"apps.newALRecorder","Returntype":"(*ALRecorder, error)","Args":"watcher *DFWatcher"},{"Uniquefunname":"func (r *ALRecorder) emitLaunched(file string)","Funname":"emitLaunched","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) emitServiceRestarted()","Funname":"emitServiceRestarted","Returntype":"","Args":""},{"Uniquefunname":"func (r *ALRecorder) emitStatusSaved(root, file string, ok bool)","Funname":"emitStatusSaved","Returntype":"","Args":"root, file string, ok bool"},{"Uniquefunname":"func (r *ALRecorder) handleAdded(file string)","Funname":"handleAdded","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleDirRemoved(file string)","Funname":"handleDirRemoved","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleRemoved(file string)","Funname":"handleRemoved","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) handleUserRemoved(uid int)","Funname":"handleUserRemoved","Returntype":"","Args":"uid int"},{"Uniquefunname":"func (r *ALRecorder) listenEvents()","Funname":"listenEvents","Returntype":"","Args":""},{"Uniquefunname":"func newALRecorder(watcher *DFWatcher) (*ALRecorder, error)","Funname":"newALRecorder","Returntype":"(*ALRecorder, error)","Args":"watcher *DFWatcher"},{"Uniquefunname":"func (r *ALRecorder) uninstallHint(file string)","Funname":"uninstallHint","Returntype":"","Args":"file string"},{"Uniquefunname":"func (r *ALRecorder) watchAppsDir(uid int, home, appsDir string)","Funname":"watchAppsDir","Returntype":"","Args":"uid int, home, appsDir string"}],"Records":[{"Name":"struct:apps.ALRecorder","Fields":["apps.ALRecorder.loginManager *login1.Manager","apps.ALRecorder.methods *struct { GetNew func() `out:\"newApps\"`; MarkLaunched func() `in:\"desktopFile\"`; WatchDirs func() `in:\"dirs\"`; UninstallHints func() `in:\"desktopFiles\"`; }","apps.ALRecorder.signals *struct { Launched struct { file string; }; StatusSaved struct { root string; file string; ok bool; }; ServiceRestarted struct{}; }","apps.ALRecorder.subRecorders map[string]*SubRecorder","apps.ALRecorder.subRecordersMutex sync.RWMutex","apps.ALRecorder.watcher *DFWatcher"]},{"Name":"const:apps","Fields":["apps.alRecorderDBusInterface","apps.dbusPath","apps.dbusServiceName","apps.minUid"]}]}
{"Filepath":"apps/debug.go","Functions":[{"Uniquefunname":"func (r *ALRecorder) DebugUserRemoved(sender dbus.Sender) *dbus.Error","Funname":"DebugUserRemoved","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (r *ALRecorder) DebugUserRemoved(sender dbus.Sender) *dbus.Error","Funname":"apps.ALRecorder.DebugUserRemoved","Returntype":"*dbus.Error","Args":"sender dbus.Sender"}],"Records":null}
{"Filepath":"apps/dfwatcher.go","Functions":[{"Uniquefunname":"func (*DFWatcher) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (w *DFWatcher) add(path string) error","Funname":"add","Returntype":"error","Args":"path string"},{"Uniquefunname":"func (w *DFWatcher) addRecursive(path string, loadExisted bool)","Funname":"addRecursive","Returntype":"","Args":"path string, loadExisted bool"},{"Uniquefunname":"func (*DFWatcher) GetInterfaceName() string","Funname":"apps.DFWatcher.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (w *DFWatcher) add(path string) error","Funname":"apps.DFWatcher.add","Returntype":"error","Args":"path string"},{"Uniquefunname":"func (w *DFWatcher) addRecursive(path string, loadExisted bool)","Funname":"apps.DFWatcher.addRecursive","Returntype":"","Args":"path string, loadExisted bool"},{"Uniquefunname":"func (w *DFWatcher) handleEvent(event fsnotify.Event)","Funname":"apps.DFWatcher.handleEvent","Returntype":"","Args":"event fsnotify.Event"},{"Uniquefunname":"func (w *DFWatcher) listenEvents()","Funname":"apps.DFWatcher.listenEvents","Returntype":"","Args":""},{"Uniquefunname":"func (w *DFWatcher) notifyEvent(ev *FileEvent)","Funname":"apps.DFWatcher.notifyEvent","Returntype":"","Args":"ev *FileEvent"},{"Uniquefunname":"func (w *DFWatcher) remove(path string) error","Funname":"apps.DFWatcher.remove","Returntype":"error","Args":"path string"},{"Uniquefunname":"func (w *DFWatcher) removeRecursive(path string)","Funname":"apps.DFWatcher.removeRecursive","Returntype":"","Args":"path string"},{"Uniquefunname":"func newDFWatcher(service *dbusutil.Service) (*DFWatcher, error)","Funname":"apps.newDFWatcher","Returntype":"(*DFWatcher, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (w *DFWatcher) handleEvent(event fsnotify.Event)","Funname":"handleEvent","Returntype":"","Args":"event fsnotify.Event"},{"Uniquefunname":"func (w *DFWatcher) listenEvents()","Funname":"listenEvents","Returntype":"","Args":""},{"Uniquefunname":"func newDFWatcher(service *dbusutil.Service) (*DFWatcher, error)","Funname":"newDFWatcher","Returntype":"(*DFWatcher, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (w *DFWatcher) notifyEvent(ev *FileEvent)","Funname":"notifyEvent","Returntype":"","Args":"ev *FileEvent"},{"Uniquefunname":"func (w *DFWatcher) remove(path string) error","Funname":"remove","Returntype":"error","Args":"path string"},{"Uniquefunname":"func (w *DFWatcher) removeRecursive(path string)","Funname":"removeRecursive","Returntype":"","Args":"path string"}],"Records":[{"Name":"struct:apps.DFWatcher","Fields":["apps.DFWatcher.eventChan chan *FileEvent","apps.DFWatcher.fsWatcher *fsWatcher","apps.DFWatcher.sem chan int","apps.DFWatcher.service *dbusutil.Service","apps.DFWatcher.signals *struct { Event struct { name string; op uint32; }; }"]},{"Name":"const:apps","Fields":["apps.dfWatcherDBusInterface"]}]}
{"Filepath":"apps/file_event.go","Functions":[{"Uniquefunname":"func NewFileEvent(ev fsnotify.Event) *FileEvent","Funname":"NewFileEvent","Returntype":"*FileEvent","Args":"ev fsnotify.Event"},{"Uniquefunname":"func NewFileFoundEvent(name string) *FileEvent","Funname":"NewFileFoundEvent","Returntype":"*FileEvent","Args":"name string"},{"Uniquefunname":"func NewFileEvent(ev fsnotify.Event) *FileEvent","Funname":"apps.NewFileEvent","Returntype":"*FileEvent","Args":"ev fsnotify.Event"},{"Uniquefunname":"func NewFileFoundEvent(name string) *FileEvent","Funname":"apps.NewFileFoundEvent","Returntype":"*FileEvent","Args":"name string"}],"Records":[{"Name":"struct:apps.FileEvent","Fields":["apps.FileEvent.IsDir bool","apps.FileEvent.IsFound bool","apps.FileEvent.NotExist bool"]}]}
{"Filepath":"apps/fs_watcher.go","Functions":[{"Uniquefunname":"func (w *fsWatcher) addRoot(root string)","Funname":"addRoot","Returntype":"","Args":"root string"},{"Uniquefunname":"func (w *fsWatcher) addTry(file string)","Funname":"addTry","Returntype":"","Args":"file string"},{"Uniquefunname":"func (w *fsWatcher) addRoot(root string)","Funname":"apps.fsWatcher.addRoot","Returntype":"","Args":"root string"},{"Uniquefunname":"func (w *fsWatcher) addTry(file string)","Funname":"apps.fsWatcher.addTry","Returntype":"","Args":"file string"},{"Uniquefunname":"func (w *fsWatcher) handleEvent(event fsnotify.Event)","Funname":"apps.fsWatcher.handleEvent","Returntype":"","Args":"event fsnotify.Event"},{"Uniquefunname":"func (w *fsWatcher) loopCheck()","Funname":"apps.fsWatcher.loopCheck","Returntype":"","Args":""},{"Uniquefunname":"func (w *fsWatcher) removeRoot(root string)","Funname":"apps.fsWatcher.removeRoot","Returntype":"","Args":"root string"},{"Uniquefunname":"func (w *fsWatcher) removeTry(file string)","Funname":"apps.fsWatcher.removeTry","Returntype":"","Args":"file string"},{"Uniquefunname":"func newFsWatcher(interval time.Duration) (*fsWatcher, error)","Funname":"apps.newFsWatcher","Returntype":"(*fsWatcher, error)","Args":"interval time.Duration"},{"Uniquefunname":"func (w *fsWatcher) handleEvent(event fsnotify.Event)","Funname":"handleEvent","Returntype":"","Args":"event fsnotify.Event"},{"Uniquefunname":"func (w *fsWatcher) loopCheck()","Funname":"loopCheck","Returntype":"","Args":""},{"Uniquefunname":"func newFsWatcher(interval time.Duration) (*fsWatcher, error)","Funname":"newFsWatcher","Returntype":"(*fsWatcher, error)","Args":"interval time.Duration"},{"Uniquefunname":"func (w *fsWatcher) removeRoot(root string)","Funname":"removeRoot","Returntype":"","Args":"root string"},{"Uniquefunname":"func (w *fsWatcher) removeTry(file string)","Funname":"removeTry","Returntype":"","Args":"file string"}],"Records":[{"Name":"struct:apps.fsWatcher","Fields":["apps.fsWatcher.interval time.Duration","apps.fsWatcher.mu sync.Mutex","apps.fsWatcher.roots strv.Strv","apps.fsWatcher.timer *time.Timer","apps.fsWatcher.try strv.Strv","apps.fsWatcher.trySuccessCb func(string)"]}]}
{"Filepath":"apps/main.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"apps.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"apps.Daemon.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"apps.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"apps.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"apps.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"apps.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:apps.Daemon","Fields":["apps.Daemon.recorder *ALRecorder","apps.Daemon.watcher *DFWatcher"]},{"Name":"var:apps","Fields":["apps.logger"]}]}
{"Filepath":"apps/subrecorder.go","Functions":[{"Uniquefunname":"func (sr *SubRecorder) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (sr *SubRecorder) GetNew() (newApps []string)","Funname":"GetNew","Returntype":"(newApps []string)","Args":""},{"Uniquefunname":"func (sr *SubRecorder) MarkLaunched(name string) bool","Funname":"MarkLaunched","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func NewSubRecorder(uid int, home, root string, parent *ALRecorder) *SubRecorder","Funname":"NewSubRecorder","Returntype":"*SubRecorder","Args":"uid int, home, root string, parent *ALRecorder"},{"Uniquefunname":"func (sr *SubRecorder) RequestSave()","Funname":"RequestSave","Returntype":"","Args":""},{"Uniquefunname":"func NewSubRecorder(uid int, home, root string, parent *ALRecorder) *SubRecorder","Funname":"apps.NewSubRecorder","Returntype":"*SubRecorder","Args":"uid int, home, root string, parent *ALRecorder"},{"Uniquefunname":"func (sr *SubRecorder) Destroy()","Funname":"apps.SubRecorder.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (sr *SubRecorder) GetNew() (newApps []string)","Funname":"apps.SubRecorder.GetNew","Returntype":"(newApps []string)","Args":""},{"Uniquefunname":"func (sr *SubRecorder) MarkLaunched(name string) bool","Funname":"apps.SubRecorder.MarkLaunched","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) RequestSave()","Funname":"apps.SubRecorder.RequestSave","Returntype":"","Args":""},{"Uniquefunname":"func (sr *SubRecorder) checkStatus(launchedMap map[string]bool, apps []string) bool","Funname":"apps.SubRecorder.checkStatus","Returntype":"bool","Args":"launchedMap map[string]bool, apps []string"},{"Uniquefunname":"func (sr *SubRecorder) handleAdded(name string)","Funname":"apps.SubRecorder.handleAdded","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) handleDirRemoved(name string)","Funname":"apps.SubRecorder.handleDirRemoved","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) handleRemoved(name string)","Funname":"apps.SubRecorder.handleRemoved","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) init()","Funname":"apps.SubRecorder.init","Returntype":"","Args":""},{"Uniquefunname":"func (sr *SubRecorder) initAppLaunchedMap(apps []string) bool","Funname":"apps.SubRecorder.initAppLaunchedMap","Returntype":"bool","Args":"apps []string"},{"Uniquefunname":"func (sr *SubRecorder) resetStatus(apps []string)","Funname":"apps.SubRecorder.resetStatus","Returntype":"","Args":"apps []string"},{"Uniquefunname":"func (sr *SubRecorder) save() error","Funname":"apps.SubRecorder.save","Returntype":"error","Args":""},{"Uniquefunname":"func (sr *SubRecorder) uninstallHint(name string)","Funname":"apps.SubRecorder.uninstallHint","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) writeStatus(w io.Writer) error","Funname":"apps.SubRecorder.writeStatus","Returntype":"error","Args":"w io.Writer"},{"Uniquefunname":"func getStatusFileAndOwner(uid int, home, appsDir string) (string, int)","Funname":"apps.getStatusFileAndOwner","Returntype":"(string, int)","Args":"uid int, home, appsDir string"},{"Uniquefunname":"func loadStatusFromFile(dataFile string) (map[string]bool, error)","Funname":"apps.loadStatusFromFile","Returntype":"(map[string]bool, error)","Args":"dataFile string"},{"Uniquefunname":"func (sr *SubRecorder) checkStatus(launchedMap map[string]bool, apps []string) bool","Funname":"checkStatus","Returntype":"bool","Args":"launchedMap map[string]bool, apps []string"},{"Uniquefunname":"func getStatusFileAndOwner(uid int, home, appsDir string) (string, int)","Funname":"getStatusFileAndOwner","Returntype":"(string, int)","Args":"uid int, home, appsDir string"},{"Uniquefunname":"func (sr *SubRecorder) handleAdded(name string)","Funname":"handleAdded","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) handleDirRemoved(name string)","Funname":"handleDirRemoved","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) handleRemoved(name string)","Funname":"handleRemoved","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (sr *SubRecorder) initAppLaunchedMap(apps []string) bool","Funname":"initAppLaunchedMap","Returntype":"bool","Args":"apps []string"},{"Uniquefunname":"func loadStatusFromFile(dataFile string) (map[string]bool, error)","Funname":"loadStatusFromFile","Returntype":"(map[string]bool, error)","Args":"dataFile string"},{"Uniquefunname":"func (sr *SubRecorder) resetStatus(apps []string)","Funname":"resetStatus","Returntype":"","Args":"apps []string"},{"Uniquefunname":"func (sr *SubRecorder) save() error","Funname":"save","Returntype":"error","Args":""},{"Uniquefunname":"func (sr *SubRecorder) uninstallHint(name string)","Funname":"uninstallHint","Returntype":"","Args":"name string"},{"Uniquefunname":"func (sr *SubRecorder) writeStatus(w io.Writer) error","Funname":"writeStatus","Returntype":"error","Args":"w io.Writer"}],"Records":[{"Name":"struct:apps.SubRecorder","Fields":["apps.SubRecorder.isSaving bool","apps.SubRecorder.launchedMap map[string]bool","apps.SubRecorder.launchedMapMu sync.RWMutex","apps.SubRecorder.parent *ALRecorder","apps.SubRecorder.removedLaunchedMap map[string]bool","apps.SubRecorder.root string","apps.SubRecorder.saveMu sync.Mutex","apps.SubRecorder.statusFile string","apps.SubRecorder.statusFileOwner int","apps.SubRecorder.uids []int","apps.SubRecorder.uninstallMap map[string]struct{}"]},{"Name":"const:apps","Fields":["apps.dirPerm","apps.sysAppsCfgDir","apps.userAppsCfgDir"]}]}
{"Filepath":"apps/utils.go","Functions":[{"Uniquefunname":"func MkdirAll(path string, uid int, perm os.FileMode) error","Funname":"MkdirAll","Returntype":"error","Args":"path string, uid int, perm os.FileMode"},{"Uniquefunname":"func Walk(root string, walkFn WalkFunc)","Funname":"Walk","Returntype":"","Args":"root string, walkFn WalkFunc"},{"Uniquefunname":"func MkdirAll(path string, uid int, perm os.FileMode) error","Funname":"apps.MkdirAll","Returntype":"error","Args":"path string, uid int, perm os.FileMode"},{"Uniquefunname":"func Walk(root string, walkFn WalkFunc)","Funname":"apps.Walk","Returntype":"","Args":"root string, walkFn WalkFunc"},{"Uniquefunname":"func getDirsAndApps(root string) (dirs, apps []string)","Funname":"apps.getDirsAndApps","Returntype":"(dirs, apps []string)","Args":"root string"},{"Uniquefunname":"func getHomeByUid(uid int) (string, error)","Funname":"apps.getHomeByUid","Returntype":"(string, error)","Args":"uid int"},{"Uniquefunname":"func getSystemDataDirs() []string","Funname":"apps.getSystemDataDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func intSliceContains(slice []int, a int) bool","Funname":"apps.intSliceContains","Returntype":"bool","Args":"slice []int, a int"},{"Uniquefunname":"func intSliceRemove(slice []int, a int) (ret []int)","Funname":"apps.intSliceRemove","Returntype":"(ret []int)","Args":"slice []int, a int"},{"Uniquefunname":"func isDesktopFile(path string) bool","Funname":"apps.isDesktopFile","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func readDirNames(dirname string) ([]string, error)","Funname":"apps.readDirNames","Returntype":"([]string, error)","Args":"dirname string"},{"Uniquefunname":"func removeDesktopExt(name string) string","Funname":"apps.removeDesktopExt","Returntype":"string","Args":"name string"},{"Uniquefunname":"func walk(root, name0 string, info os.FileInfo, walkFn WalkFunc)","Funname":"apps.walk","Returntype":"","Args":"root, name0 string, info os.FileInfo, walkFn WalkFunc"},{"Uniquefunname":"func getDirsAndApps(root string) (dirs, apps []string)","Funname":"getDirsAndApps","Returntype":"(dirs, apps []string)","Args":"root string"},{"Uniquefunname":"func getHomeByUid(uid int) (string, error)","Funname":"getHomeByUid","Returntype":"(string, error)","Args":"uid int"},{"Uniquefunname":"func getSystemDataDirs() []string","Funname":"getSystemDataDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func intSliceContains(slice []int, a int) bool","Funname":"intSliceContains","Returntype":"bool","Args":"slice []int, a int"},{"Uniquefunname":"func intSliceRemove(slice []int, a int) (ret []int)","Funname":"intSliceRemove","Returntype":"(ret []int)","Args":"slice []int, a int"},{"Uniquefunname":"func isDesktopFile(path string) bool","Funname":"isDesktopFile","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func readDirNames(dirname string) ([]string, error)","Funname":"readDirNames","Returntype":"([]string, error)","Args":"dirname string"},{"Uniquefunname":"func removeDesktopExt(name string) string","Funname":"removeDesktopExt","Returntype":"string","Args":"name string"},{"Uniquefunname":"func walk(root, name0 string, info os.FileInfo, walkFn WalkFunc)","Funname":"walk","Returntype":"","Args":"root, name0 string, info os.FileInfo, walkFn WalkFunc"}],"Records":[{"Name":"const:apps","Fields":["apps.desktopExt"]}]}
{"Filepath":"apps/utils_test.go","Functions":[{"Uniquefunname":"func Test_getHomeByUid(t *testing.T)","Funname":"Test_getHomeByUid","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getHomeByUid(t *testing.T)","Funname":"apps.Test_getHomeByUid","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"audio/alsa.go","Functions":[{"Uniquefunname":"func disableAutoMuteMode() error","Funname":"audio.disableAutoMuteMode","Returntype":"error","Args":""},{"Uniquefunname":"func findCardControl(name string) (card int, controlId string, err error)","Funname":"audio.findCardControl","Returntype":"(card int, controlId string, err error)","Args":"name string"},{"Uniquefunname":"func disableAutoMuteMode() error","Funname":"disableAutoMuteMode","Returntype":"error","Args":""},{"Uniquefunname":"func findCardControl(name string) (card int, controlId string, err error)","Funname":"findCardControl","Returntype":"(card int, controlId string, err error)","Args":"name string"}],"Records":[{"Name":"var:audio","Fields":["audio.errNotFoundControl"]}]}
{"Filepath":"audio/audio.go","Functions":[{"Uniquefunname":"func (*Audio) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) IsPortEnabled(cardId uint32, portName string) (bool, *dbus.Error)","Funname":"IsPortEnabled","Returntype":"(bool, *dbus.Error)","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) NoRestartPulseAudio() *dbus.Error","Funname":"NoRestartPulseAudio","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *Audio) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *Audio) SetPort(cardId uint32, portName string, direction int32) *dbus.Error","Funname":"SetPort","Returntype":"*dbus.Error","Args":"cardId uint32, portName string, direction int32"},{"Uniquefunname":"func (a *Audio) SetPortEnabled(cardId uint32, portName string, enabled bool) *dbus.Error","Funname":"SetPortEnabled","Returntype":"*dbus.Error","Args":"cardId uint32, portName string, enabled bool"},{"Uniquefunname":"func (*Audio) GetInterfaceName() string","Funname":"audio.Audio.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) IsPortEnabled(cardId uint32, portName string) (bool, *dbus.Error)","Funname":"audio.Audio.IsPortEnabled","Returntype":"(bool, *dbus.Error)","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) NoRestartPulseAudio() *dbus.Error","Funname":"audio.Audio.NoRestartPulseAudio","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *Audio) Reset() *dbus.Error","Funname":"audio.Audio.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *Audio) SetPort(cardId uint32, portName string, direction int32) *dbus.Error","Funname":"audio.Audio.SetPort","Returntype":"*dbus.Error","Args":"cardId uint32, portName string, direction int32"},{"Uniquefunname":"func (a *Audio) SetPortEnabled(cardId uint32, portName string, enabled bool) *dbus.Error","Funname":"audio.Audio.SetPortEnabled","Returntype":"*dbus.Error","Args":"cardId uint32, portName string, enabled bool"},{"Uniquefunname":"func (a *Audio) context() *pulse.Context","Funname":"audio.Audio.context","Returntype":"*pulse.Context","Args":""},{"Uniquefunname":"func (a *Audio) destroy()","Funname":"audio.Audio.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) destroyCtxRelated()","Funname":"audio.Audio.destroyCtxRelated","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) disableBluezSourceIfProfileIsA2dp()","Funname":"audio.Audio.disableBluezSourceIfProfileIsA2dp","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) findSinkByCardIndexPortName(cardId uint32, portName string) *pulse.Sink","Funname":"audio.Audio.findSinkByCardIndexPortName","Returntype":"*pulse.Sink","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) findSourceByCardIndexPortName(cardId uint32, portName string) *pulse.Source","Funname":"audio.Audio.findSourceByCardIndexPortName","Returntype":"*pulse.Source","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) fixActivePortNotAvailable()","Funname":"audio.Audio.fixActivePortNotAvailable","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSink() *Sink","Funname":"audio.Audio.getDefaultSink","Returntype":"*Sink","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSinkActivePortName() string","Funname":"audio.Audio.getDefaultSinkActivePortName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSinkName() string","Funname":"audio.Audio.getDefaultSinkName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSource() *Source","Funname":"audio.Audio.getDefaultSource","Returntype":"*Source","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSourceActivePortName() string","Funname":"audio.Audio.getDefaultSourceActivePortName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSourceName() string","Funname":"audio.Audio.getDefaultSourceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getSinkInfoByName(sinkName string) *pulse.Sink","Funname":"audio.Audio.getSinkInfoByName","Returntype":"*pulse.Sink","Args":"sinkName string"},{"Uniquefunname":"func (a *Audio) getSourceInfoByName(sourceName string) *pulse.Source","Funname":"audio.Audio.getSourceInfoByName","Returntype":"*pulse.Source","Args":"sourceName string"},{"Uniquefunname":"func (a *Audio) init() error","Funname":"audio.Audio.init","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) initDefaultVolumes()","Funname":"audio.Audio.initDefaultVolumes","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) moveSinkInputsToDefaultSink()","Funname":"audio.Audio.moveSinkInputsToDefaultSink","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) moveSinkInputsToSink(sinkId uint32)","Funname":"audio.Audio.moveSinkInputsToSink","Returntype":"","Args":"sinkId uint32"},{"Uniquefunname":"func (a *Audio) resetSinksVolume()","Funname":"audio.Audio.resetSinksVolume","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) resetSourceVolume()","Funname":"audio.Audio.resetSourceVolume","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) resumeSinkConfig(s *Sink)","Funname":"audio.Audio.resumeSinkConfig","Returntype":"","Args":"s *Sink"},{"Uniquefunname":"func (a *Audio) resumeSourceConfig(s *Source, isPhyDev bool)","Funname":"audio.Audio.resumeSourceConfig","Returntype":"","Args":"s *Source, isPhyDev bool"},{"Uniquefunname":"func (a *Audio) setDefaultSinkWithPort(cardId uint32, portName string) error","Funname":"audio.Audio.setDefaultSinkWithPort","Returntype":"error","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) setDefaultSourceWithPort(cardId uint32, portName string) error","Funname":"audio.Audio.setDefaultSourceWithPort","Returntype":"error","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) setPort(cardId uint32, portName string, direction int) error","Funname":"audio.Audio.setPort","Returntype":"error","Args":"cardId uint32, portName string, direction int"},{"Uniquefunname":"func (a *Audio) updateDefaultSink(sinkName string)","Funname":"audio.Audio.updateDefaultSink","Returntype":"","Args":"sinkName string"},{"Uniquefunname":"func (a *Audio) updateDefaultSource(sourceName string)","Funname":"audio.Audio.updateDefaultSource","Returntype":"","Args":"sourceName string"},{"Uniquefunname":"func getBestPort(ports []pulse.PortInfo) pulse.PortInfo","Funname":"audio.getBestPort","Returntype":"pulse.PortInfo","Args":"ports []pulse.PortInfo"},{"Uniquefunname":"func getCtx() (ctx *pulse.Context, err error)","Funname":"audio.getCtx","Returntype":"(ctx *pulse.Context, err error)","Args":""},{"Uniquefunname":"func isPortExists(name string, ports []pulse.PortInfo) bool","Funname":"audio.isPortExists","Returntype":"bool","Args":"name string, ports []pulse.PortInfo"},{"Uniquefunname":"func newAudio(service *dbusutil.Service) *Audio","Funname":"audio.newAudio","Returntype":"*Audio","Args":"service *dbusutil.Service"},{"Uniquefunname":"func objectPathSliceEqual(v1, v2 []dbus.ObjectPath) bool","Funname":"audio.objectPathSliceEqual","Returntype":"bool","Args":"v1, v2 []dbus.ObjectPath"},{"Uniquefunname":"func startPulseaudio() error","Funname":"audio.startPulseaudio","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) context() *pulse.Context","Funname":"context","Returntype":"*pulse.Context","Args":""},{"Uniquefunname":"func (a *Audio) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) destroyCtxRelated()","Funname":"destroyCtxRelated","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) disableBluezSourceIfProfileIsA2dp()","Funname":"disableBluezSourceIfProfileIsA2dp","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) findSinkByCardIndexPortName(cardId uint32, portName string) *pulse.Sink","Funname":"findSinkByCardIndexPortName","Returntype":"*pulse.Sink","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) findSourceByCardIndexPortName(cardId uint32, portName string) *pulse.Source","Funname":"findSourceByCardIndexPortName","Returntype":"*pulse.Source","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) fixActivePortNotAvailable()","Funname":"fixActivePortNotAvailable","Returntype":"","Args":""},{"Uniquefunname":"func getBestPort(ports []pulse.PortInfo) pulse.PortInfo","Funname":"getBestPort","Returntype":"pulse.PortInfo","Args":"ports []pulse.PortInfo"},{"Uniquefunname":"func getCtx() (ctx *pulse.Context, err error)","Funname":"getCtx","Returntype":"(ctx *pulse.Context, err error)","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSink() *Sink","Funname":"getDefaultSink","Returntype":"*Sink","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSinkActivePortName() string","Funname":"getDefaultSinkActivePortName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSinkName() string","Funname":"getDefaultSinkName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSource() *Source","Funname":"getDefaultSource","Returntype":"*Source","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSourceActivePortName() string","Funname":"getDefaultSourceActivePortName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getDefaultSourceName() string","Funname":"getDefaultSourceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Audio) getSinkInfoByName(sinkName string) *pulse.Sink","Funname":"getSinkInfoByName","Returntype":"*pulse.Sink","Args":"sinkName string"},{"Uniquefunname":"func (a *Audio) getSourceInfoByName(sourceName string) *pulse.Source","Funname":"getSourceInfoByName","Returntype":"*pulse.Source","Args":"sourceName string"},{"Uniquefunname":"func (a *Audio) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) initDefaultVolumes()","Funname":"initDefaultVolumes","Returntype":"","Args":""},{"Uniquefunname":"func isPortExists(name string, ports []pulse.PortInfo) bool","Funname":"isPortExists","Returntype":"bool","Args":"name string, ports []pulse.PortInfo"},{"Uniquefunname":"func (a *Audio) moveSinkInputsToDefaultSink()","Funname":"moveSinkInputsToDefaultSink","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) moveSinkInputsToSink(sinkId uint32)","Funname":"moveSinkInputsToSink","Returntype":"","Args":"sinkId uint32"},{"Uniquefunname":"func newAudio(service *dbusutil.Service) *Audio","Funname":"newAudio","Returntype":"*Audio","Args":"service *dbusutil.Service"},{"Uniquefunname":"func objectPathSliceEqual(v1, v2 []dbus.ObjectPath) bool","Funname":"objectPathSliceEqual","Returntype":"bool","Args":"v1, v2 []dbus.ObjectPath"},{"Uniquefunname":"func (a *Audio) resetSinksVolume()","Funname":"resetSinksVolume","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) resetSourceVolume()","Funname":"resetSourceVolume","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) resumeSinkConfig(s *Sink)","Funname":"resumeSinkConfig","Returntype":"","Args":"s *Sink"},{"Uniquefunname":"func (a *Audio) resumeSourceConfig(s *Source, isPhyDev bool)","Funname":"resumeSourceConfig","Returntype":"","Args":"s *Source, isPhyDev bool"},{"Uniquefunname":"func (a *Audio) setDefaultSinkWithPort(cardId uint32, portName string) error","Funname":"setDefaultSinkWithPort","Returntype":"error","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) setDefaultSourceWithPort(cardId uint32, portName string) error","Funname":"setDefaultSourceWithPort","Returntype":"error","Args":"cardId uint32, portName string"},{"Uniquefunname":"func (a *Audio) setPort(cardId uint32, portName string, direction int) error","Funname":"setPort","Returntype":"error","Args":"cardId uint32, portName string, direction int"},{"Uniquefunname":"func startPulseaudio() error","Funname":"startPulseaudio","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) updateDefaultSink(sinkName string)","Funname":"updateDefaultSink","Returntype":"","Args":"sinkName string"},{"Uniquefunname":"func (a *Audio) updateDefaultSource(sourceName string)","Funname":"updateDefaultSource","Returntype":"","Args":"sourceName string"}],"Records":[{"Name":"struct:audio.Audio","Fields":["audio.Audio.Cards string","audio.Audio.CardsWithoutUnavailable string","audio.Audio.DefaultSink dbus.ObjectPath","audio.Audio.DefaultSource dbus.ObjectPath","audio.Audio.IncreaseVolume gsprop.Bool","audio.Audio.MaxUIVolume float64","audio.Audio.PropsMu sync.RWMutex","audio.Audio.ReduceNoise gsprop.Bool","audio.Audio.SinkInputs []dbus.ObjectPath","audio.Audio.Sinks []dbus.ObjectPath","audio.Audio.Sources []dbus.ObjectPath","audio.Audio.cards CardList","audio.Audio.ctx *pulse.Context","audio.Audio.defaultPaCfg defaultPaConfig","audio.Audio.defaultSink *Sink","audio.Audio.defaultSinkName string","audio.Audio.defaultSource *Source","audio.Audio.defaultSourceName string","audio.Audio.enableSource bool","audio.Audio.eventChan chan *pulse.Event","audio.Audio.headphoneUnplugAutoPause bool","audio.Audio.inputAutoSwitchCount int","audio.Audio.inputCardName string","audio.Audio.inputPortName string","audio.Audio.isSaving bool","audio.Audio.meters map[string]*Meter","audio.Audio.methods *struct { SetPort func() `in:\"cardId,portName,direction\"`; SetPortEnabled func() `in:\"cardId,portName,enabled\"`; IsPortEnabled func() `in:\"cardId,portName\" out:\"enabled\"`; }","audio.Audio.mu sync.Mutex","audio.Audio.noRestartPulseAudio bool","audio.Audio.outputAutoSwitchCount int","audio.Audio.outputCardName string","audio.Audio.outputPortName string","audio.Audio.portLocker sync.Mutex","audio.Audio.quit chan struct{}","audio.Audio.saverLocker sync.Mutex","audio.Audio.service *dbusutil.Service","audio.Audio.sessionSigLoop *dbusutil.SignalLoop","audio.Audio.settings *gio.Settings","audio.Audio.signals *struct { PortEnabledChanged struct { cardId uint32; portName string; enabled bool; }; }","audio.Audio.sinkInputs map[uint32]*SinkInput","audio.Audio.sinks map[uint32]*Sink","audio.Audio.sourceIdx uint32","audio.Audio.sources map[uint32]*Source","audio.Audio.stateChan chan int","audio.Audio.syncConfig *dsync.Config"]},{"Name":"const:audio","Fields":["audio.cmdPulseaudio","audio.cmdSystemctl","audio.dbusInterface","audio.dbusPath","audio.dbusServiceName","audio.gsKeyDisableAutoMute","audio.gsKeyEnabled","audio.gsKeyFirstRun","audio.gsKeyHeadphoneOutputVolume","audio.gsKeyHeadphoneUnplugAutoPause","audio.gsKeyInputVolume","audio.gsKeyOutputVolume","audio.gsKeyReduceNoise","audio.gsKeyVolumeIncrease","audio.gsSchemaAudio","audio.gsSchemaSoundEffect","audio.increaseMaxVolume","audio.normalMaxVolume"]},{"Name":"var:audio","Fields":["audio.defaultHeadphoneOutputVolume","audio.defaultInputVolume","audio.defaultOutputVolume","audio.gMaxUIVolume"]}]}
{"Filepath":"audio/audio_config.go","Functions":[{"Uniquefunname":"func (a *Audio) doSaveConfig()","Funname":"audio.Audio.doSaveConfig","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) saveAudioState() error","Funname":"audio.Audio.saveAudioState","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) saveConfig()","Funname":"audio.Audio.saveConfig","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) setReduceNoise(enable bool) error","Funname":"audio.Audio.setReduceNoise","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (a *Audio) trySelectBestPort()","Funname":"audio.Audio.trySelectBestPort","Returntype":"","Args":""},{"Uniquefunname":"func toALSACardId(idx string) (cardId string, err error)","Funname":"audio.toALSACardId","Returntype":"(cardId string, err error)","Args":"idx string"},{"Uniquefunname":"func (a *Audio) doSaveConfig()","Funname":"doSaveConfig","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) saveAudioState() error","Funname":"saveAudioState","Returntype":"error","Args":""},{"Uniquefunname":"func (a *Audio) saveConfig()","Funname":"saveConfig","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) setReduceNoise(enable bool) error","Funname":"setReduceNoise","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func toALSACardId(idx string) (cardId string, err error)","Funname":"toALSACardId","Returntype":"(cardId string, err error)","Args":"idx string"},{"Uniquefunname":"func (a *Audio) trySelectBestPort()","Funname":"trySelectBestPort","Returntype":"","Args":""}],"Records":null}
{"Filepath":"audio/audio_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Audio) emitPropChangedCards(value string) error","Funname":"audio.Audio.emitPropChangedCards","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Audio) emitPropChangedCardsWithoutUnavailable(value string) error","Funname":"audio.Audio.emitPropChangedCardsWithoutUnavailable","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Audio) emitPropChangedDefaultSink(value dbus.ObjectPath) error","Funname":"audio.Audio.emitPropChangedDefaultSink","Returntype":"error","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedDefaultSource(value dbus.ObjectPath) error","Funname":"audio.Audio.emitPropChangedDefaultSource","Returntype":"error","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedMaxUIVolume(maxUIVolume float64) error","Funname":"audio.Audio.emitPropChangedMaxUIVolume","Returntype":"error","Args":"maxUIVolume float64"},{"Uniquefunname":"func (v *Audio) emitPropChangedReduceNoise(enable bool) error","Funname":"audio.Audio.emitPropChangedReduceNoise","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (v *Audio) emitPropChangedSinkInputs(value []dbus.ObjectPath) error","Funname":"audio.Audio.emitPropChangedSinkInputs","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedSinks(value []dbus.ObjectPath) error","Funname":"audio.Audio.emitPropChangedSinks","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedSources(value []dbus.ObjectPath) error","Funname":"audio.Audio.emitPropChangedSources","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropCards(value string) (changed bool)","Funname":"audio.Audio.setPropCards","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Audio) setPropCardsWithoutUnavailable(value string) (changed bool)","Funname":"audio.Audio.setPropCardsWithoutUnavailable","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Audio) setPropDefaultSink(value dbus.ObjectPath) (changed bool)","Funname":"audio.Audio.setPropDefaultSink","Returntype":"(changed bool)","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropDefaultSource(value dbus.ObjectPath) (changed bool)","Funname":"audio.Audio.setPropDefaultSource","Returntype":"(changed bool)","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropSinkInputs(value []dbus.ObjectPath) (changed bool)","Funname":"audio.Audio.setPropSinkInputs","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropSinks(value []dbus.ObjectPath) (changed bool)","Funname":"audio.Audio.setPropSinks","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropSources(value []dbus.ObjectPath) (changed bool)","Funname":"audio.Audio.setPropSources","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Meter) emitPropChangedVolume(value float64) error","Funname":"audio.Meter.emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Meter) setPropVolume(value float64) (changed bool)","Funname":"audio.Meter.setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedActivePort(value Port) error","Funname":"audio.Sink.emitPropChangedActivePort","Returntype":"error","Args":"value Port"},{"Uniquefunname":"func (v *Sink) emitPropChangedBalance(value float64) error","Funname":"audio.Sink.emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedBaseVolume(value float64) error","Funname":"audio.Sink.emitPropChangedBaseVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedCard(value uint32) error","Funname":"audio.Sink.emitPropChangedCard","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Sink) emitPropChangedDescription(value string) error","Funname":"audio.Sink.emitPropChangedDescription","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Sink) emitPropChangedFade(value float64) error","Funname":"audio.Sink.emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedMute(value bool) error","Funname":"audio.Sink.emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Sink) emitPropChangedName(value string) error","Funname":"audio.Sink.emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Sink) emitPropChangedPorts(value []Port) error","Funname":"audio.Sink.emitPropChangedPorts","Returntype":"error","Args":"value []Port"},{"Uniquefunname":"func (v *Sink) emitPropChangedSupportBalance(value bool) error","Funname":"audio.Sink.emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Sink) emitPropChangedSupportFade(value bool) error","Funname":"audio.Sink.emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Sink) emitPropChangedVolume(value float64) error","Funname":"audio.Sink.emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropActivePort(value Port) (changed bool)","Funname":"audio.Sink.setPropActivePort","Returntype":"(changed bool)","Args":"value Port"},{"Uniquefunname":"func (v *Sink) setPropBalance(value float64) (changed bool)","Funname":"audio.Sink.setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropBaseVolume(value float64) (changed bool)","Funname":"audio.Sink.setPropBaseVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropCard(value uint32) (changed bool)","Funname":"audio.Sink.setPropCard","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Sink) setPropDescription(value string) (changed bool)","Funname":"audio.Sink.setPropDescription","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Sink) setPropFade(value float64) (changed bool)","Funname":"audio.Sink.setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropMute(value bool) (changed bool)","Funname":"audio.Sink.setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Sink) setPropName(value string) (changed bool)","Funname":"audio.Sink.setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Sink) setPropPorts(value []Port) (changed bool)","Funname":"audio.Sink.setPropPorts","Returntype":"(changed bool)","Args":"value []Port"},{"Uniquefunname":"func (v *Sink) setPropSupportBalance(value bool) (changed bool)","Funname":"audio.Sink.setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Sink) setPropSupportFade(value bool) (changed bool)","Funname":"audio.Sink.setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Sink) setPropVolume(value float64) (changed bool)","Funname":"audio.Sink.setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedBalance(value float64) error","Funname":"audio.SinkInput.emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedFade(value float64) error","Funname":"audio.SinkInput.emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedIcon(value string) error","Funname":"audio.SinkInput.emitPropChangedIcon","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedMute(value bool) error","Funname":"audio.SinkInput.emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedName(value string) error","Funname":"audio.SinkInput.emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSinkIndex(value uint32) error","Funname":"audio.SinkInput.emitPropChangedSinkIndex","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSupportBalance(value bool) error","Funname":"audio.SinkInput.emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSupportFade(value bool) error","Funname":"audio.SinkInput.emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedVolume(value float64) error","Funname":"audio.SinkInput.emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropBalance(value float64) (changed bool)","Funname":"audio.SinkInput.setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropFade(value float64) (changed bool)","Funname":"audio.SinkInput.setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropIcon(value string) (changed bool)","Funname":"audio.SinkInput.setPropIcon","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) setPropMute(value bool) (changed bool)","Funname":"audio.SinkInput.setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropName(value string) (changed bool)","Funname":"audio.SinkInput.setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) setPropSinkIndex(value uint32) (changed bool)","Funname":"audio.SinkInput.setPropSinkIndex","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *SinkInput) setPropSupportBalance(value bool) (changed bool)","Funname":"audio.SinkInput.setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropSupportFade(value bool) (changed bool)","Funname":"audio.SinkInput.setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropVolume(value float64) (changed bool)","Funname":"audio.SinkInput.setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedActivePort(value Port) error","Funname":"audio.Source.emitPropChangedActivePort","Returntype":"error","Args":"value Port"},{"Uniquefunname":"func (v *Source) emitPropChangedBalance(value float64) error","Funname":"audio.Source.emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedBaseVolume(value float64) error","Funname":"audio.Source.emitPropChangedBaseVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedCard(value uint32) error","Funname":"audio.Source.emitPropChangedCard","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Source) emitPropChangedDescription(value string) error","Funname":"audio.Source.emitPropChangedDescription","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Source) emitPropChangedFade(value float64) error","Funname":"audio.Source.emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedMute(value bool) error","Funname":"audio.Source.emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedName(value string) error","Funname":"audio.Source.emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Source) emitPropChangedPorts(value []Port) error","Funname":"audio.Source.emitPropChangedPorts","Returntype":"error","Args":"value []Port"},{"Uniquefunname":"func (v *Source) emitPropChangedSupportBalance(value bool) error","Funname":"audio.Source.emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedSupportFade(value bool) error","Funname":"audio.Source.emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedVolume(value float64) error","Funname":"audio.Source.emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropActivePort(value Port) (changed bool)","Funname":"audio.Source.setPropActivePort","Returntype":"(changed bool)","Args":"value Port"},{"Uniquefunname":"func (v *Source) setPropBalance(value float64) (changed bool)","Funname":"audio.Source.setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropBaseVolume(value float64) (changed bool)","Funname":"audio.Source.setPropBaseVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropCard(value uint32) (changed bool)","Funname":"audio.Source.setPropCard","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Source) setPropDescription(value string) (changed bool)","Funname":"audio.Source.setPropDescription","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Source) setPropFade(value float64) (changed bool)","Funname":"audio.Source.setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropMute(value bool) (changed bool)","Funname":"audio.Source.setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropName(value string) (changed bool)","Funname":"audio.Source.setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Source) setPropPorts(value []Port) (changed bool)","Funname":"audio.Source.setPropPorts","Returntype":"(changed bool)","Args":"value []Port"},{"Uniquefunname":"func (v *Source) setPropSupportBalance(value bool) (changed bool)","Funname":"audio.Source.setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropSupportFade(value bool) (changed bool)","Funname":"audio.Source.setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropVolume(value float64) (changed bool)","Funname":"audio.Source.setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedActivePort(value Port) error","Funname":"emitPropChangedActivePort","Returntype":"error","Args":"value Port"},{"Uniquefunname":"func (v *Source) emitPropChangedActivePort(value Port) error","Funname":"emitPropChangedActivePort","Returntype":"error","Args":"value Port"},{"Uniquefunname":"func (v *Sink) emitPropChangedBalance(value float64) error","Funname":"emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedBalance(value float64) error","Funname":"emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedBalance(value float64) error","Funname":"emitPropChangedBalance","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedBaseVolume(value float64) error","Funname":"emitPropChangedBaseVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedBaseVolume(value float64) error","Funname":"emitPropChangedBaseVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedCard(value uint32) error","Funname":"emitPropChangedCard","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Source) emitPropChangedCard(value uint32) error","Funname":"emitPropChangedCard","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Audio) emitPropChangedCards(value string) error","Funname":"emitPropChangedCards","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Audio) emitPropChangedCardsWithoutUnavailable(value string) error","Funname":"emitPropChangedCardsWithoutUnavailable","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Audio) emitPropChangedDefaultSink(value dbus.ObjectPath) error","Funname":"emitPropChangedDefaultSink","Returntype":"error","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedDefaultSource(value dbus.ObjectPath) error","Funname":"emitPropChangedDefaultSource","Returntype":"error","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Sink) emitPropChangedDescription(value string) error","Funname":"emitPropChangedDescription","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Source) emitPropChangedDescription(value string) error","Funname":"emitPropChangedDescription","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Sink) emitPropChangedFade(value float64) error","Funname":"emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedFade(value float64) error","Funname":"emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedFade(value float64) error","Funname":"emitPropChangedFade","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedIcon(value string) error","Funname":"emitPropChangedIcon","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Audio) emitPropChangedMaxUIVolume(maxUIVolume float64) error","Funname":"emitPropChangedMaxUIVolume","Returntype":"error","Args":"maxUIVolume float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedMute(value bool) error","Funname":"emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedMute(value bool) error","Funname":"emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedMute(value bool) error","Funname":"emitPropChangedMute","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Sink) emitPropChangedName(value string) error","Funname":"emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedName(value string) error","Funname":"emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Source) emitPropChangedName(value string) error","Funname":"emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Sink) emitPropChangedPorts(value []Port) error","Funname":"emitPropChangedPorts","Returntype":"error","Args":"value []Port"},{"Uniquefunname":"func (v *Source) emitPropChangedPorts(value []Port) error","Funname":"emitPropChangedPorts","Returntype":"error","Args":"value []Port"},{"Uniquefunname":"func (v *Audio) emitPropChangedReduceNoise(enable bool) error","Funname":"emitPropChangedReduceNoise","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSinkIndex(value uint32) error","Funname":"emitPropChangedSinkIndex","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Audio) emitPropChangedSinkInputs(value []dbus.ObjectPath) error","Funname":"emitPropChangedSinkInputs","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedSinks(value []dbus.ObjectPath) error","Funname":"emitPropChangedSinks","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) emitPropChangedSources(value []dbus.ObjectPath) error","Funname":"emitPropChangedSources","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Sink) emitPropChangedSupportBalance(value bool) error","Funname":"emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSupportBalance(value bool) error","Funname":"emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedSupportBalance(value bool) error","Funname":"emitPropChangedSupportBalance","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Sink) emitPropChangedSupportFade(value bool) error","Funname":"emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedSupportFade(value bool) error","Funname":"emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Source) emitPropChangedSupportFade(value bool) error","Funname":"emitPropChangedSupportFade","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Meter) emitPropChangedVolume(value float64) error","Funname":"emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) emitPropChangedVolume(value float64) error","Funname":"emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) emitPropChangedVolume(value float64) error","Funname":"emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Source) emitPropChangedVolume(value float64) error","Funname":"emitPropChangedVolume","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropActivePort(value Port) (changed bool)","Funname":"setPropActivePort","Returntype":"(changed bool)","Args":"value Port"},{"Uniquefunname":"func (v *Source) setPropActivePort(value Port) (changed bool)","Funname":"setPropActivePort","Returntype":"(changed bool)","Args":"value Port"},{"Uniquefunname":"func (v *Sink) setPropBalance(value float64) (changed bool)","Funname":"setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropBalance(value float64) (changed bool)","Funname":"setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropBalance(value float64) (changed bool)","Funname":"setPropBalance","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropBaseVolume(value float64) (changed bool)","Funname":"setPropBaseVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropBaseVolume(value float64) (changed bool)","Funname":"setPropBaseVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropCard(value uint32) (changed bool)","Funname":"setPropCard","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Source) setPropCard(value uint32) (changed bool)","Funname":"setPropCard","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Audio) setPropCards(value string) (changed bool)","Funname":"setPropCards","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Audio) setPropCardsWithoutUnavailable(value string) (changed bool)","Funname":"setPropCardsWithoutUnavailable","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Audio) setPropDefaultSink(value dbus.ObjectPath) (changed bool)","Funname":"setPropDefaultSink","Returntype":"(changed bool)","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropDefaultSource(value dbus.ObjectPath) (changed bool)","Funname":"setPropDefaultSource","Returntype":"(changed bool)","Args":"value dbus.ObjectPath"},{"Uniquefunname":"func (v *Sink) setPropDescription(value string) (changed bool)","Funname":"setPropDescription","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Source) setPropDescription(value string) (changed bool)","Funname":"setPropDescription","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Sink) setPropFade(value float64) (changed bool)","Funname":"setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropFade(value float64) (changed bool)","Funname":"setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropFade(value float64) (changed bool)","Funname":"setPropFade","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropIcon(value string) (changed bool)","Funname":"setPropIcon","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Sink) setPropMute(value bool) (changed bool)","Funname":"setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropMute(value bool) (changed bool)","Funname":"setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropMute(value bool) (changed bool)","Funname":"setPropMute","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Sink) setPropName(value string) (changed bool)","Funname":"setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *SinkInput) setPropName(value string) (changed bool)","Funname":"setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Source) setPropName(value string) (changed bool)","Funname":"setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Sink) setPropPorts(value []Port) (changed bool)","Funname":"setPropPorts","Returntype":"(changed bool)","Args":"value []Port"},{"Uniquefunname":"func (v *Source) setPropPorts(value []Port) (changed bool)","Funname":"setPropPorts","Returntype":"(changed bool)","Args":"value []Port"},{"Uniquefunname":"func (v *SinkInput) setPropSinkIndex(value uint32) (changed bool)","Funname":"setPropSinkIndex","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Audio) setPropSinkInputs(value []dbus.ObjectPath) (changed bool)","Funname":"setPropSinkInputs","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropSinks(value []dbus.ObjectPath) (changed bool)","Funname":"setPropSinks","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Audio) setPropSources(value []dbus.ObjectPath) (changed bool)","Funname":"setPropSources","Returntype":"(changed bool)","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Sink) setPropSupportBalance(value bool) (changed bool)","Funname":"setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropSupportBalance(value bool) (changed bool)","Funname":"setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropSupportBalance(value bool) (changed bool)","Funname":"setPropSupportBalance","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Sink) setPropSupportFade(value bool) (changed bool)","Funname":"setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *SinkInput) setPropSupportFade(value bool) (changed bool)","Funname":"setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Source) setPropSupportFade(value bool) (changed bool)","Funname":"setPropSupportFade","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Meter) setPropVolume(value float64) (changed bool)","Funname":"setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Sink) setPropVolume(value float64) (changed bool)","Funname":"setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *SinkInput) setPropVolume(value float64) (changed bool)","Funname":"setPropVolume","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Source) setPropVolume(value float64) (changed bool)","Funname":"setPropVolume","Returntype":"(changed bool)","Args":"value float64"}],"Records":null}
{"Filepath":"audio/audio_events.go","Functions":[{"Uniquefunname":"func (a *Audio) addSink(sinkInfo *pulse.Sink)","Funname":"addSink","Returntype":"","Args":"sinkInfo *pulse.Sink"},{"Uniquefunname":"func (a *Audio) addSinkInput(sinkInputInfo *pulse.SinkInput)","Funname":"addSinkInput","Returntype":"","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func (a *Audio) addSource(sourceInfo *pulse.Source)","Funname":"addSource","Returntype":"","Args":"sourceInfo *pulse.Source"},{"Uniquefunname":"func (a *Audio) addSink(sinkInfo *pulse.Sink)","Funname":"audio.Audio.addSink","Returntype":"","Args":"sinkInfo *pulse.Sink"},{"Uniquefunname":"func (a *Audio) addSinkInput(sinkInputInfo *pulse.SinkInput)","Funname":"audio.Audio.addSinkInput","Returntype":"","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func (a *Audio) addSource(sourceInfo *pulse.Source)","Funname":"audio.Audio.addSource","Returntype":"","Args":"sourceInfo *pulse.Source"},{"Uniquefunname":"func (a *Audio) autoSwitchPort()","Funname":"audio.Audio.autoSwitchPort","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) handleCardEvent(eventType int, idx uint32)","Funname":"audio.Audio.handleCardEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleEvent()","Funname":"audio.Audio.handleEvent","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) handleServerEvent(eventType int)","Funname":"audio.Audio.handleServerEvent","Returntype":"","Args":"eventType int"},{"Uniquefunname":"func (a *Audio) handleSinkEvent(eventType int, idx uint32)","Funname":"audio.Audio.handleSinkEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputAdded(idx uint32)","Funname":"audio.Audio.handleSinkInputAdded","Returntype":"","Args":"idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputEvent(eType int, idx uint32)","Funname":"audio.Audio.handleSinkInputEvent","Returntype":"","Args":"eType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputRemoved(idx uint32)","Funname":"audio.Audio.handleSinkInputRemoved","Returntype":"","Args":"idx uint32"},{"Uniquefunname":"func (a *Audio) handleSourceEvent(eventType int, idx uint32)","Funname":"audio.Audio.handleSourceEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleStateChanged()","Funname":"audio.Audio.handleStateChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) isCardIdValid(cardId uint32) bool","Funname":"audio.Audio.isCardIdValid","Returntype":"bool","Args":"cardId uint32"},{"Uniquefunname":"func (a *Audio) listenGSettingReduceNoiseChanged()","Funname":"audio.Audio.listenGSettingReduceNoiseChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) listenGSettingVolumeIncreaseChanged()","Funname":"audio.Audio.listenGSettingVolumeIncreaseChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) needAutoSwitchInputPort() bool","Funname":"audio.Audio.needAutoSwitchInputPort","Returntype":"bool","Args":""},{"Uniquefunname":"func (a *Audio) needAutoSwitchOutputPort() bool","Funname":"audio.Audio.needAutoSwitchOutputPort","Returntype":"bool","Args":""},{"Uniquefunname":"func audio.Audio.updateObjPathsProp(type0 string, ids []int, setFn func(value []dbus.ObjectPath) bool)","Funname":"audio.Audio.updateObjPathsProp","Returntype":"","Args":"type0 string, ids []int, setFn func(value []dbus.ObjectPath) bool"},{"Uniquefunname":"func (a *Audio) updatePropSinkInputs()","Funname":"audio.Audio.updatePropSinkInputs","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) updatePropSinks()","Funname":"audio.Audio.updatePropSinks","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) updatePropSources()","Funname":"audio.Audio.updatePropSources","Returntype":"","Args":""},{"Uniquefunname":"func isPhysicalDevice(deviceName string) bool","Funname":"audio.isPhysicalDevice","Returntype":"bool","Args":"deviceName string"},{"Uniquefunname":"func (a *Audio) autoSwitchPort()","Funname":"autoSwitchPort","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) handleCardEvent(eventType int, idx uint32)","Funname":"handleCardEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleEvent()","Funname":"handleEvent","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) handleServerEvent(eventType int)","Funname":"handleServerEvent","Returntype":"","Args":"eventType int"},{"Uniquefunname":"func (a *Audio) handleSinkEvent(eventType int, idx uint32)","Funname":"handleSinkEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputAdded(idx uint32)","Funname":"handleSinkInputAdded","Returntype":"","Args":"idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputEvent(eType int, idx uint32)","Funname":"handleSinkInputEvent","Returntype":"","Args":"eType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleSinkInputRemoved(idx uint32)","Funname":"handleSinkInputRemoved","Returntype":"","Args":"idx uint32"},{"Uniquefunname":"func (a *Audio) handleSourceEvent(eventType int, idx uint32)","Funname":"handleSourceEvent","Returntype":"","Args":"eventType int, idx uint32"},{"Uniquefunname":"func (a *Audio) handleStateChanged()","Funname":"handleStateChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) isCardIdValid(cardId uint32) bool","Funname":"isCardIdValid","Returntype":"bool","Args":"cardId uint32"},{"Uniquefunname":"func isPhysicalDevice(deviceName string) bool","Funname":"isPhysicalDevice","Returntype":"bool","Args":"deviceName string"},{"Uniquefunname":"func (a *Audio) listenGSettingReduceNoiseChanged()","Funname":"listenGSettingReduceNoiseChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) listenGSettingVolumeIncreaseChanged()","Funname":"listenGSettingVolumeIncreaseChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) needAutoSwitchInputPort() bool","Funname":"needAutoSwitchInputPort","Returntype":"bool","Args":""},{"Uniquefunname":"func (a *Audio) needAutoSwitchOutputPort() bool","Funname":"needAutoSwitchOutputPort","Returntype":"bool","Args":""},{"Uniquefunname":"func updateObjPathsProp(type0 string, ids []int, setFn func(value []dbus.ObjectPath) bool)","Funname":"updateObjPathsProp","Returntype":"","Args":"type0 string, ids []int, setFn func(value []dbus.ObjectPath) bool"},{"Uniquefunname":"func (a *Audio) updatePropSinkInputs()","Funname":"updatePropSinkInputs","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) updatePropSinks()","Funname":"updatePropSinks","Returntype":"","Args":""},{"Uniquefunname":"func (a *Audio) updatePropSources()","Funname":"updatePropSources","Returntype":"","Args":""}],"Records":null}
{"Filepath":"audio/bluez_audio.go","Functions":[{"Uniquefunname":"func bluezAudioGetSinkProfile(s *Sink) string","Funname":"audio.bluezAudioGetSinkProfile","Returntype":"string","Args":"s *Sink"},{"Uniquefunname":"func bluezAudioParseVirtualPort(virtualPortName string) (string, string)","Funname":"audio.bluezAudioParseVirtualPort","Returntype":"(string, string)","Args":"virtualPortName string"},{"Uniquefunname":"func audio.createBluezVirtualCardPorts(cardName string, ports pulse.CardPortInfos)pulse.CardPortInfos","Funname":"audio.createBluezVirtualCardPorts","Returntype":"pulse.CardPortInfos","Args":"cardName string, ports pulse.CardPortInfos"},{"Uniquefunname":"func createBluezVirtualSinkPorts(ports []Port) []Port","Funname":"audio.createBluezVirtualSinkPorts","Returntype":"[]Port","Args":"ports []Port"},{"Uniquefunname":"func createBluezVirtualSourcePorts(ports []Port) []Port","Funname":"audio.createBluezVirtualSourcePorts","Returntype":"[]Port","Args":"ports []Port"},{"Uniquefunname":"func getBluezConfig(cardName string) string","Funname":"audio.getBluezConfig","Returntype":"string","Args":"cardName string"},{"Uniquefunname":"func isBluezAudio(name string) bool","Funname":"audio.isBluezAudio","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func isBluezDeviceValid(bluezPath string) bool","Funname":"audio.isBluezDeviceValid","Returntype":"bool","Args":"bluezPath string"},{"Uniquefunname":"func loadBluezConfig(filepath string)","Funname":"audio.loadBluezConfig","Returntype":"","Args":"filepath string"},{"Uniquefunname":"func saveBluezConfig(filepath string)","Funname":"audio.saveBluezConfig","Returntype":"","Args":"filepath string"},{"Uniquefunname":"func setBluezConfig(cardName string, mode string)","Funname":"audio.setBluezConfig","Returntype":"","Args":"cardName string, mode string"},{"Uniquefunname":"func bluezAudioGetSinkProfile(s *Sink) string","Funname":"bluezAudioGetSinkProfile","Returntype":"string","Args":"s *Sink"},{"Uniquefunname":"func bluezAudioParseVirtualPort(virtualPortName string) (string, string)","Funname":"bluezAudioParseVirtualPort","Returntype":"(string, string)","Args":"virtualPortName string"},{"Uniquefunname":"func createBluezVirtualCardPorts(cardName string, ports pulse.CardPortInfos)pulse.CardPortInfos","Funname":"createBluezVirtualCardPorts","Returntype":"pulse.CardPortInfos","Args":"cardName string, ports pulse.CardPortInfos"},{"Uniquefunname":"func createBluezVirtualSinkPorts(ports []Port) []Port","Funname":"createBluezVirtualSinkPorts","Returntype":"[]Port","Args":"ports []Port"},{"Uniquefunname":"func createBluezVirtualSourcePorts(ports []Port) []Port","Funname":"createBluezVirtualSourcePorts","Returntype":"[]Port","Args":"ports []Port"},{"Uniquefunname":"func getBluezConfig(cardName string) string","Funname":"getBluezConfig","Returntype":"string","Args":"cardName string"},{"Uniquefunname":"func isBluezAudio(name string) bool","Funname":"isBluezAudio","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func isBluezDeviceValid(bluezPath string) bool","Funname":"isBluezDeviceValid","Returntype":"bool","Args":"bluezPath string"},{"Uniquefunname":"func loadBluezConfig(filepath string)","Funname":"loadBluezConfig","Returntype":"","Args":"filepath string"},{"Uniquefunname":"func saveBluezConfig(filepath string)","Funname":"saveBluezConfig","Returntype":"","Args":"filepath string"},{"Uniquefunname":"func setBluezConfig(cardName string, mode string)","Funname":"setBluezConfig","Returntype":"","Args":"cardName string, mode string"}],"Records":[{"Name":"var:audio","Fields":["audio.bluezAudioConfig","audio.bluezAudioConfigFilePath"]},{"Name":"const:audio","Fields":["audio.bluezModeA2dp","audio.bluezModeDefault","audio.bluezModeHeadset"]}]}
{"Filepath":"audio/bluez_audio_test.go","Functions":[{"Uniquefunname":"func Test_createBluezVirtualCardPorts(t *testing.T)","Funname":"Test_createBluezVirtualCardPorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_createBluezVirtualSinkPorts(t *testing.T)","Funname":"Test_createBluezVirtualSinkPorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_createBluezVirtualSourcePorts(t *testing.T)","Funname":"Test_createBluezVirtualSourcePorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_isBluezAudio(t *testing.T)","Funname":"Test_isBluezAudio","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_createBluezVirtualCardPorts(t *testing.T)","Funname":"audio.Test_createBluezVirtualCardPorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_createBluezVirtualSinkPorts(t *testing.T)","Funname":"audio.Test_createBluezVirtualSinkPorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_createBluezVirtualSourcePorts(t *testing.T)","Funname":"audio.Test_createBluezVirtualSourcePorts","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_isBluezAudio(t *testing.T)","Funname":"audio.Test_isBluezAudio","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"audio/card.go","Functions":[{"Uniquefunname":"func (cards CardList) add(info *Card) (CardList, bool)","Funname":"add","Returntype":"(CardList, bool)","Args":"info *Card"},{"Uniquefunname":"func (a *Audio) getCardNameById(cardId uint32) string","Funname":"audio.Audio.getCardNameById","Returntype":"string","Args":"cardId uint32"},{"Uniquefunname":"func (c *Card) filterProfile(card *pulse.Card)","Funname":"audio.Card.filterProfile","Returntype":"","Args":"card *pulse.Card"},{"Uniquefunname":"func (c *Card) tryGetProfileByPort(portName string) (string, error)","Funname":"audio.Card.tryGetProfileByPort","Returntype":"(string, error)","Args":"portName string"},{"Uniquefunname":"func (c *Card) update(card *pulse.Card)","Funname":"audio.Card.update","Returntype":"","Args":"card *pulse.Card"},{"Uniquefunname":"func (cards CardList) add(info *Card) (CardList, bool)","Funname":"audio.CardList.add","Returntype":"(CardList, bool)","Args":"info *Card"},{"Uniquefunname":"func (cards CardList) delete(id uint32) (CardList, bool)","Funname":"audio.CardList.delete","Returntype":"(CardList, bool)","Args":"id uint32"},{"Uniquefunname":"func (cards CardList) get(id uint32) (*Card, error)","Funname":"audio.CardList.get","Returntype":"(*Card, error)","Args":"id uint32"},{"Uniquefunname":"func (cards CardList) getByName(cardName string) (*Card, error)","Funname":"audio.CardList.getByName","Returntype":"(*Card, error)","Args":"cardName string"},{"Uniquefunname":"func audio.CardList.getPassablePort(direction int)(cardId uint32, port *pulse.CardPortInfo)","Funname":"audio.CardList.getPassablePort","Returntype":"(cardId uint32, port *pulse.CardPortInfo)","Args":"direction int"},{"Uniquefunname":"func (cards CardList) string() string","Funname":"audio.CardList.string","Returntype":"string","Args":""},{"Uniquefunname":"func (cards CardList) stringWithoutUnavailable() string","Funname":"audio.CardList.stringWithoutUnavailable","Returntype":"string","Args":""},{"Uniquefunname":"func getCardName(card *pulse.Card) (name string)","Funname":"audio.getCardName","Returntype":"(name string)","Args":"card *pulse.Card"},{"Uniquefunname":"func getPassablePort(ports pulse.CardPortInfos, direction int) (port *pulse.CardPortInfo)","Funname":"audio.getPassablePort","Returntype":"(port *pulse.CardPortInfo)","Args":"ports pulse.CardPortInfos, direction int"},{"Uniquefunname":"func newCard(card *pulse.Card) *Card","Funname":"audio.newCard","Returntype":"*Card","Args":"card *pulse.Card"},{"Uniquefunname":"func newCardList(cards []*pulse.Card) CardList","Funname":"audio.newCardList","Returntype":"CardList","Args":"cards []*pulse.Card"},{"Uniquefunname":"func portAvailForCompare(v int) int","Funname":"audio.portAvailForCompare","Returntype":"int","Args":"v int"},{"Uniquefunname":"func (cards CardList) delete(id uint32) (CardList, bool)","Funname":"delete","Returntype":"(CardList, bool)","Args":"id uint32"},{"Uniquefunname":"func (c *Card) filterProfile(card *pulse.Card)","Funname":"filterProfile","Returntype":"","Args":"card *pulse.Card"},{"Uniquefunname":"func (cards CardList) get(id uint32) (*Card, error)","Funname":"get","Returntype":"(*Card, error)","Args":"id uint32"},{"Uniquefunname":"func (cards CardList) getByName(cardName string) (*Card, error)","Funname":"getByName","Returntype":"(*Card, error)","Args":"cardName string"},{"Uniquefunname":"func getCardName(card *pulse.Card) (name string)","Funname":"getCardName","Returntype":"(name string)","Args":"card *pulse.Card"},{"Uniquefunname":"func (a *Audio) getCardNameById(cardId uint32) string","Funname":"getCardNameById","Returntype":"string","Args":"cardId uint32"},{"Uniquefunname":"func getPassablePort(direction int)(cardId uint32, port *pulse.CardPortInfo)","Funname":"getPassablePort","Returntype":"(cardId uint32, port *pulse.CardPortInfo)","Args":"direction int"},{"Uniquefunname":"func getPassablePort(ports pulse.CardPortInfos, direction int) (port *pulse.CardPortInfo)","Funname":"getPassablePort","Returntype":"(port *pulse.CardPortInfo)","Args":"ports pulse.CardPortInfos, direction int"},{"Uniquefunname":"func newCard(card *pulse.Card) *Card","Funname":"newCard","Returntype":"*Card","Args":"card *pulse.Card"},{"Uniquefunname":"func newCardList(cards []*pulse.Card) CardList","Funname":"newCardList","Returntype":"CardList","Args":"cards []*pulse.Card"},{"Uniquefunname":"func portAvailForCompare(v int) int","Funname":"portAvailForCompare","Returntype":"int","Args":"v int"},{"Uniquefunname":"func (cards CardList) string() string","Funname":"string","Returntype":"string","Args":""},{"Uniquefunname":"func (cards CardList) stringWithoutUnavailable() string","Funname":"stringWithoutUnavailable","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Card) tryGetProfileByPort(portName string) (string, error)","Funname":"tryGetProfileByPort","Returntype":"(string, error)","Args":"portName string"},{"Uniquefunname":"func (c *Card) update(card *pulse.Card)","Funname":"update","Returntype":"","Args":"card *pulse.Card"}],"Records":[{"Name":"struct:audio.Card","Fields":["audio.Card.ActiveProfile *Profile","audio.Card.Id uint32","audio.Card.Name string","audio.Card.Ports pulse.CardPortInfos","audio.Card.Profiles ProfileList","audio.Card.core *pulse.Card"]},{"Name":"struct:audio.CardExport","Fields":["audio.CardExport.Id uint32","audio.CardExport.Name string","audio.CardExport.Ports []CardPortExport"]},{"Name":"struct:audio.CardPortExport","Fields":["audio.CardPortExport.Description string","audio.CardPortExport.Direction int","audio.CardPortExport.Name string"]}]}
{"Filepath":"audio/card_profile_workaround.go","Functions":[{"Uniquefunname":"func cardType(c *pulse.Card) int","Funname":"audio.cardType","Returntype":"int","Args":"c *pulse.Card"},{"Uniquefunname":"func isBluetoothCard(c *pulse.Card) bool","Funname":"audio.isBluetoothCard","Returntype":"bool","Args":"c *pulse.Card"},{"Uniquefunname":"func profileBlacklist(c *pulse.Card) strv.Strv","Funname":"audio.profileBlacklist","Returntype":"strv.Strv","Args":"c *pulse.Card"},{"Uniquefunname":"func selectNewCardProfile(c *pulse.Card)","Funname":"audio.selectNewCardProfile","Returntype":"","Args":"c *pulse.Card"},{"Uniquefunname":"func tryConnectBluetooth(c *pulse.Card) error","Funname":"audio.tryConnectBluetooth","Returntype":"error","Args":"c *pulse.Card"},{"Uniquefunname":"func cardType(c *pulse.Card) int","Funname":"cardType","Returntype":"int","Args":"c *pulse.Card"},{"Uniquefunname":"func isBluetoothCard(c *pulse.Card) bool","Funname":"isBluetoothCard","Returntype":"bool","Args":"c *pulse.Card"},{"Uniquefunname":"func profileBlacklist(c *pulse.Card) strv.Strv","Funname":"profileBlacklist","Returntype":"strv.Strv","Args":"c *pulse.Card"},{"Uniquefunname":"func selectNewCardProfile(c *pulse.Card)","Funname":"selectNewCardProfile","Returntype":"","Args":"c *pulse.Card"},{"Uniquefunname":"func tryConnectBluetooth(c *pulse.Card) error","Funname":"tryConnectBluetooth","Returntype":"error","Args":"c *pulse.Card"}],"Records":[{"Name":"const:audio","Fields":["audio.CardBluethooh","audio.CardBuildin","audio.CardUnknow","audio.PropDeviceBus","audio.PropDeviceFromFactor"]}]}
{"Filepath":"audio/config.go","Functions":[{"Uniquefunname":"func (c *config) equal(b *config) bool","Funname":"audio.config.equal","Returntype":"bool","Args":"b *config"},{"Uniquefunname":"func (c *config) string() string","Funname":"audio.config.string","Returntype":"string","Args":""},{"Uniquefunname":"func mapStrStrEqual(a, b map[string]string) bool","Funname":"audio.mapStrStrEqual","Returntype":"bool","Args":"a, b map[string]string"},{"Uniquefunname":"func readConfig() (*config, error)","Funname":"audio.readConfig","Returntype":"(*config, error)","Args":""},{"Uniquefunname":"func removeConfig()","Funname":"audio.removeConfig","Returntype":"","Args":""},{"Uniquefunname":"func saveConfig(info *config) error","Funname":"audio.saveConfig","Returntype":"error","Args":"info *config"},{"Uniquefunname":"func (c *config) equal(b *config) bool","Funname":"equal","Returntype":"bool","Args":"b *config"},{"Uniquefunname":"func mapStrStrEqual(a, b map[string]string) bool","Funname":"mapStrStrEqual","Returntype":"bool","Args":"a, b map[string]string"},{"Uniquefunname":"func readConfig() (*config, error)","Funname":"readConfig","Returntype":"(*config, error)","Args":""},{"Uniquefunname":"func removeConfig()","Funname":"removeConfig","Returntype":"","Args":""},{"Uniquefunname":"func saveConfig(info *config) error","Funname":"saveConfig","Returntype":"error","Args":"info *config"},{"Uniquefunname":"func (c *config) string() string","Funname":"string","Returntype":"string","Args":""}],"Records":[{"Name":"struct:audio.config","Fields":["audio.config.Profiles map[string]string","audio.config.Sink string","audio.config.SinkPort string","audio.config.SinkVolume float64","audio.config.Source string","audio.config.SourcePort string","audio.config.SourceVolume float64"]},{"Name":"var:audio","Fields":["audio.configCache","audio.configFile","audio.fileLocker"]}]}
{"Filepath":"audio/config_keeper.go","Functions":[{"Uniquefunname":"func GetCardAndPortConfig(cardName string, portName string)(*CardConfig, *PortConfig)","Funname":"GetCardAndPortConfig","Returntype":"(*CardConfig, *PortConfig)","Args":"cardName string, portName string"},{"Uniquefunname":"func (ck *ConfigKeeper) Load(file string) error","Funname":"Load","Returntype":"error","Args":"file string"},{"Uniquefunname":"func NewCardConfig(name string) *CardConfig","Funname":"NewCardConfig","Returntype":"*CardConfig","Args":"name string"},{"Uniquefunname":"func NewConfigKeeper() *ConfigKeeper","Funname":"NewConfigKeeper","Returntype":"*ConfigKeeper","Args":""},{"Uniquefunname":"func NewPortConfig(name string) *PortConfig","Funname":"NewPortConfig","Returntype":"*PortConfig","Args":"name string"},{"Uniquefunname":"func (ck *ConfigKeeper) Print()","Funname":"Print","Returntype":"","Args":""},{"Uniquefunname":"func (ck *ConfigKeeper) RemoveCardConfig(cardName string)","Funname":"RemoveCardConfig","Returntype":"","Args":"cardName string"},{"Uniquefunname":"func (card *CardConfig) RemovePortConfig(portName string)","Funname":"RemovePortConfig","Returntype":"","Args":"portName string"},{"Uniquefunname":"func (ck *ConfigKeeper) Save(file string) error","Funname":"Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (ck *ConfigKeeper) SetBalance(cardName string, portName string, balance float64)","Funname":"SetBalance","Returntype":"","Args":"cardName string, portName string, balance float64"},{"Uniquefunname":"func (ck *ConfigKeeper) SetEnabled(cardName string, portName string, enabled bool)","Funname":"SetEnabled","Returntype":"","Args":"cardName string, portName string, enabled bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetIncreaseVolume(cardName string, portName string, enhance bool)","Funname":"SetIncreaseVolume","Returntype":"","Args":"cardName string, portName string, enhance bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetMute(cardName string, portName string, mute bool)","Funname":"SetMute","Returntype":"","Args":"cardName string, portName string, mute bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetReduceNoise(cardName string, portName string, reduce bool)","Funname":"SetReduceNoise","Returntype":"","Args":"cardName string, portName string, reduce bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetVolume(cardName string, portName string, volume float64)","Funname":"SetVolume","Returntype":"","Args":"cardName string, portName string, volume float64"},{"Uniquefunname":"func (ck *ConfigKeeper) UpdateCardConfig(cardConfig *CardConfig)","Funname":"UpdateCardConfig","Returntype":"","Args":"cardConfig *CardConfig"},{"Uniquefunname":"func (card *CardConfig) UpdatePortConfig(portConfig *PortConfig)","Funname":"UpdatePortConfig","Returntype":"","Args":"portConfig *PortConfig"},{"Uniquefunname":"func (card *CardConfig) RemovePortConfig(portName string)","Funname":"audio.CardConfig.RemovePortConfig","Returntype":"","Args":"portName string"},{"Uniquefunname":"func (card *CardConfig) UpdatePortConfig(portConfig *PortConfig)","Funname":"audio.CardConfig.UpdatePortConfig","Returntype":"","Args":"portConfig *PortConfig"},{"Uniquefunname":"func audio.ConfigKeeper.GetCardAndPortConfig(cardName string, portName string)(*CardConfig, *PortConfig)","Funname":"audio.ConfigKeeper.GetCardAndPortConfig","Returntype":"(*CardConfig, *PortConfig)","Args":"cardName string, portName string"},{"Uniquefunname":"func (ck *ConfigKeeper) Load(file string) error","Funname":"audio.ConfigKeeper.Load","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (ck *ConfigKeeper) Print()","Funname":"audio.ConfigKeeper.Print","Returntype":"","Args":""},{"Uniquefunname":"func (ck *ConfigKeeper) RemoveCardConfig(cardName string)","Funname":"audio.ConfigKeeper.RemoveCardConfig","Returntype":"","Args":"cardName string"},{"Uniquefunname":"func (ck *ConfigKeeper) Save(file string) error","Funname":"audio.ConfigKeeper.Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (ck *ConfigKeeper) SetBalance(cardName string, portName string, balance float64)","Funname":"audio.ConfigKeeper.SetBalance","Returntype":"","Args":"cardName string, portName string, balance float64"},{"Uniquefunname":"func (ck *ConfigKeeper) SetEnabled(cardName string, portName string, enabled bool)","Funname":"audio.ConfigKeeper.SetEnabled","Returntype":"","Args":"cardName string, portName string, enabled bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetIncreaseVolume(cardName string, portName string, enhance bool)","Funname":"audio.ConfigKeeper.SetIncreaseVolume","Returntype":"","Args":"cardName string, portName string, enhance bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetMute(cardName string, portName string, mute bool)","Funname":"audio.ConfigKeeper.SetMute","Returntype":"","Args":"cardName string, portName string, mute bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetReduceNoise(cardName string, portName string, reduce bool)","Funname":"audio.ConfigKeeper.SetReduceNoise","Returntype":"","Args":"cardName string, portName string, reduce bool"},{"Uniquefunname":"func (ck *ConfigKeeper) SetVolume(cardName string, portName string, volume float64)","Funname":"audio.ConfigKeeper.SetVolume","Returntype":"","Args":"cardName string, portName string, volume float64"},{"Uniquefunname":"func (ck *ConfigKeeper) UpdateCardConfig(cardConfig *CardConfig)","Funname":"audio.ConfigKeeper.UpdateCardConfig","Returntype":"","Args":"cardConfig *CardConfig"},{"Uniquefunname":"func NewCardConfig(name string) *CardConfig","Funname":"audio.NewCardConfig","Returntype":"*CardConfig","Args":"name string"},{"Uniquefunname":"func NewConfigKeeper() *ConfigKeeper","Funname":"audio.NewConfigKeeper","Returntype":"*ConfigKeeper","Args":""},{"Uniquefunname":"func NewPortConfig(name string) *PortConfig","Funname":"audio.NewPortConfig","Returntype":"*PortConfig","Args":"name string"}],"Records":[{"Name":"struct:audio.CardConfig","Fields":["audio.CardConfig.Name string","audio.CardConfig.Ports map[string]*PortConfig"]},{"Name":"struct:audio.ConfigKeeper","Fields":["audio.ConfigKeeper.ConfigMap map[string]*CardConfig"]},{"Name":"struct:audio.PortConfig","Fields":["audio.PortConfig.Balance float64","audio.PortConfig.Enabled bool","audio.PortConfig.IncreaseVolume bool","audio.PortConfig.Mute bool","audio.PortConfig.Name string","audio.PortConfig.ReduceNoise bool","audio.PortConfig.Volume float64"]},{"Name":"var:audio","Fields":["audio.configKeeper","audio.configKeeperFile"]}]}
{"Filepath":"audio/meter.go","Functions":[{"Uniquefunname":"func (*Meter) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Meter) Tick() *dbus.Error","Funname":"Tick","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (*Meter) GetInterfaceName() string","Funname":"audio.Meter.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Meter) Tick() *dbus.Error","Funname":"audio.Meter.Tick","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Meter) getPath() dbus.ObjectPath","Funname":"audio.Meter.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (m *Meter) quit()","Funname":"audio.Meter.quit","Returntype":"","Args":""},{"Uniquefunname":"func (m *Meter) tryQuit()","Funname":"audio.Meter.tryQuit","Returntype":"","Args":""},{"Uniquefunname":"func newMeter(id string, core *pulse.SourceMeter, audio *Audio) *Meter","Funname":"audio.newMeter","Returntype":"*Meter","Args":"id string, core *pulse.SourceMeter, audio *Audio"},{"Uniquefunname":"func (m *Meter) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func newMeter(id string, core *pulse.SourceMeter, audio *Audio) *Meter","Funname":"newMeter","Returntype":"*Meter","Args":"id string, core *pulse.SourceMeter, audio *Audio"},{"Uniquefunname":"func (m *Meter) quit()","Funname":"quit","Returntype":"","Args":""},{"Uniquefunname":"func (m *Meter) tryQuit()","Funname":"tryQuit","Returntype":"","Args":""}],"Records":[{"Name":"struct:audio.Meter","Fields":["audio.Meter.PropsMu sync.RWMutex","audio.Meter.Volume float64","audio.Meter.alive bool","audio.Meter.audio *Audio","audio.Meter.core *pulse.SourceMeter","audio.Meter.id string","audio.Meter.service *dbusutil.Service"]}]}
{"Filepath":"audio/module.go","Functions":[{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"audio.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"audio.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"audio.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) start() error","Funname":"audio.Module.start","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"audio.NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"audio.init","Returntype":"","Args":""},{"Uniquefunname":"func waitSoundThemePlayerExit()","Funname":"audio.waitSoundThemePlayerExit","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Module) start() error","Funname":"start","Returntype":"error","Args":""},{"Uniquefunname":"func waitSoundThemePlayerExit()","Funname":"waitSoundThemePlayerExit","Returntype":"","Args":""}],"Records":[{"Name":"struct:audio.Module","Fields":["audio.Module.audio *Audio"]},{"Name":"var:audio","Fields":["audio.logger"]}]}
{"Filepath":"audio/port.go","Functions":[{"Uniquefunname":"func (p *Port) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (p *Port) String() string","Funname":"audio.Port.String","Returntype":"string","Args":""},{"Uniquefunname":"func getPortByName(ports []Port, name string) (Port, bool)","Funname":"audio.getPortByName","Returntype":"(Port, bool)","Args":"ports []Port, name string"},{"Uniquefunname":"func portAvailToString(v int) string","Funname":"audio.portAvailToString","Returntype":"string","Args":"v int"},{"Uniquefunname":"func portsEqual(a, b []Port) bool","Funname":"audio.portsEqual","Returntype":"bool","Args":"a, b []Port"},{"Uniquefunname":"func toPort(v pulse.PortInfo) Port","Funname":"audio.toPort","Returntype":"Port","Args":"v pulse.PortInfo"},{"Uniquefunname":"func toPorts(portInfoList []pulse.PortInfo) (result []Port)","Funname":"audio.toPorts","Returntype":"(result []Port)","Args":"portInfoList []pulse.PortInfo"},{"Uniquefunname":"func getPortByName(ports []Port, name string) (Port, bool)","Funname":"getPortByName","Returntype":"(Port, bool)","Args":"ports []Port, name string"},{"Uniquefunname":"func portAvailToString(v int) string","Funname":"portAvailToString","Returntype":"string","Args":"v int"},{"Uniquefunname":"func portsEqual(a, b []Port) bool","Funname":"portsEqual","Returntype":"bool","Args":"a, b []Port"},{"Uniquefunname":"func toPort(v pulse.PortInfo) Port","Funname":"toPort","Returntype":"Port","Args":"v pulse.PortInfo"},{"Uniquefunname":"func toPorts(portInfoList []pulse.PortInfo) (result []Port)","Funname":"toPorts","Returntype":"(result []Port)","Args":"portInfoList []pulse.PortInfo"}],"Records":[{"Name":"struct:audio.Port","Fields":["audio.Port.Available byte","audio.Port.Description string","audio.Port.Name string"]}]}
{"Filepath":"audio/priority.go","Functions":[{"Uniquefunname":"func (pr *Priorities) AddAvailable(cards CardList)","Funname":"AddAvailable","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) AddInputPort(cardName string, portName string)","Funname":"AddInputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) AddOutputPort(cardName string, portName string)","Funname":"AddOutputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) GetFirstInput() (string, string)","Funname":"GetFirstInput","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (pr *Priorities) GetFirstInputSkip(skipper Skipper) (string, string)","Funname":"GetFirstInputSkip","Returntype":"(string, string)","Args":"skipper Skipper"},{"Uniquefunname":"func (pr *Priorities) GetFirstOutput() (string, string)","Funname":"GetFirstOutput","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (pr *Priorities) GetFirstOutputSkip(skipper Skipper) (string, string)","Funname":"GetFirstOutputSkip","Returntype":"(string, string)","Args":"skipper Skipper"},{"Uniquefunname":"func GetPortType(cardName string, portName string) int","Funname":"GetPortType","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) IsInputTypeAfter(type1 int, type2 int) bool","Funname":"IsInputTypeAfter","Returntype":"bool","Args":"type1 int, type2 int"},{"Uniquefunname":"func (pr *Priorities) IsOutputTypeAfter(type1 int, type2 int) bool","Funname":"IsOutputTypeAfter","Returntype":"bool","Args":"type1 int, type2 int"},{"Uniquefunname":"func (pr *Priorities) Load(file string, cards CardList)","Funname":"Load","Returntype":"","Args":"file string, cards CardList"},{"Uniquefunname":"func NewPriorities() *Priorities","Funname":"NewPriorities","Returntype":"*Priorities","Args":""},{"Uniquefunname":"func (pr *Priorities) Print()","Funname":"Print","Returntype":"","Args":""},{"Uniquefunname":"func (pr *Priorities) RemoveCard(cardName string)","Funname":"RemoveCard","Returntype":"","Args":"cardName string"},{"Uniquefunname":"func (pr *Priorities) RemoveInputPort(cardName string, portName string)","Funname":"RemoveInputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) RemoveOutputPort(cardName string, portName string)","Funname":"RemoveOutputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) RemoveUnavailable(cards CardList)","Funname":"RemoveUnavailable","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) Save(file string) error","Funname":"Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (pr *Priorities) SetInputPortFirst(cardName string, portName string)","Funname":"SetInputPortFirst","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) SetOutputPortFirst(cardName string, portName string)","Funname":"SetOutputPortFirst","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func GetPortType(cardName string, portName string) int","Funname":"audio.GetPortType","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func NewPriorities() *Priorities","Funname":"audio.NewPriorities","Returntype":"*Priorities","Args":""},{"Uniquefunname":"func (pr *Priorities) AddAvailable(cards CardList)","Funname":"audio.Priorities.AddAvailable","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) AddInputPort(cardName string, portName string)","Funname":"audio.Priorities.AddInputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) AddOutputPort(cardName string, portName string)","Funname":"audio.Priorities.AddOutputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) GetFirstInput() (string, string)","Funname":"audio.Priorities.GetFirstInput","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (pr *Priorities) GetFirstInputSkip(skipper Skipper) (string, string)","Funname":"audio.Priorities.GetFirstInputSkip","Returntype":"(string, string)","Args":"skipper Skipper"},{"Uniquefunname":"func (pr *Priorities) GetFirstOutput() (string, string)","Funname":"audio.Priorities.GetFirstOutput","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (pr *Priorities) GetFirstOutputSkip(skipper Skipper) (string, string)","Funname":"audio.Priorities.GetFirstOutputSkip","Returntype":"(string, string)","Args":"skipper Skipper"},{"Uniquefunname":"func (pr *Priorities) IsInputTypeAfter(type1 int, type2 int) bool","Funname":"audio.Priorities.IsInputTypeAfter","Returntype":"bool","Args":"type1 int, type2 int"},{"Uniquefunname":"func (pr *Priorities) IsOutputTypeAfter(type1 int, type2 int) bool","Funname":"audio.Priorities.IsOutputTypeAfter","Returntype":"bool","Args":"type1 int, type2 int"},{"Uniquefunname":"func (pr *Priorities) Load(file string, cards CardList)","Funname":"audio.Priorities.Load","Returntype":"","Args":"file string, cards CardList"},{"Uniquefunname":"func (pr *Priorities) Print()","Funname":"audio.Priorities.Print","Returntype":"","Args":""},{"Uniquefunname":"func (pr *Priorities) RemoveCard(cardName string)","Funname":"audio.Priorities.RemoveCard","Returntype":"","Args":"cardName string"},{"Uniquefunname":"func (pr *Priorities) RemoveInputPort(cardName string, portName string)","Funname":"audio.Priorities.RemoveInputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) RemoveOutputPort(cardName string, portName string)","Funname":"audio.Priorities.RemoveOutputPort","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) RemoveUnavailable(cards CardList)","Funname":"audio.Priorities.RemoveUnavailable","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) Save(file string) error","Funname":"audio.Priorities.Save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func (pr *Priorities) SetInputPortFirst(cardName string, portName string)","Funname":"audio.Priorities.SetInputPortFirst","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) SetOutputPortFirst(cardName string, portName string)","Funname":"audio.Priorities.SetOutputPortFirst","Returntype":"","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) checkAvailable(cards CardList, cardName string, portName string) bool","Funname":"audio.Priorities.checkAvailable","Returntype":"bool","Args":"cards CardList, cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) defaultInit(cards CardList)","Funname":"audio.Priorities.defaultInit","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) findInput(cardName string, portName string) int","Funname":"audio.Priorities.findInput","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) findOutput(cardName string, portName string) int","Funname":"audio.Priorities.findOutput","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) insertInput(index int, portToken *PortToken)","Funname":"audio.Priorities.insertInput","Returntype":"","Args":"index int, portToken *PortToken"},{"Uniquefunname":"func (pr *Priorities) insertOutput(index int, portToken *PortToken)","Funname":"audio.Priorities.insertOutput","Returntype":"","Args":"index int, portToken *PortToken"},{"Uniquefunname":"func (pr *Priorities) removeInput(index int)","Funname":"audio.Priorities.removeInput","Returntype":"","Args":"index int"},{"Uniquefunname":"func (pr *Priorities) removeOutput(index int)","Funname":"audio.Priorities.removeOutput","Returntype":"","Args":"index int"},{"Uniquefunname":"func (pr *Priorities) setInputTypeFirst(portType int)","Funname":"audio.Priorities.setInputTypeFirst","Returntype":"","Args":"portType int"},{"Uniquefunname":"func (pr *Priorities) setOutputTypeFirst(portType int)","Funname":"audio.Priorities.setOutputTypeFirst","Returntype":"","Args":"portType int"},{"Uniquefunname":"func contains(cardName string, portName string, substr string) bool","Funname":"audio.contains","Returntype":"bool","Args":"cardName string, portName string, substr string"},{"Uniquefunname":"func (pr *Priorities) checkAvailable(cards CardList, cardName string, portName string) bool","Funname":"checkAvailable","Returntype":"bool","Args":"cards CardList, cardName string, portName string"},{"Uniquefunname":"func contains(cardName string, portName string, substr string) bool","Funname":"contains","Returntype":"bool","Args":"cardName string, portName string, substr string"},{"Uniquefunname":"func (pr *Priorities) defaultInit(cards CardList)","Funname":"defaultInit","Returntype":"","Args":"cards CardList"},{"Uniquefunname":"func (pr *Priorities) findInput(cardName string, portName string) int","Funname":"findInput","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) findOutput(cardName string, portName string) int","Funname":"findOutput","Returntype":"int","Args":"cardName string, portName string"},{"Uniquefunname":"func (pr *Priorities) insertInput(index int, portToken *PortToken)","Funname":"insertInput","Returntype":"","Args":"index int, portToken *PortToken"},{"Uniquefunname":"func (pr *Priorities) insertOutput(index int, portToken *PortToken)","Funname":"insertOutput","Returntype":"","Args":"index int, portToken *PortToken"},{"Uniquefunname":"func (pr *Priorities) removeInput(index int)","Funname":"removeInput","Returntype":"","Args":"index int"},{"Uniquefunname":"func (pr *Priorities) removeOutput(index int)","Funname":"removeOutput","Returntype":"","Args":"index int"},{"Uniquefunname":"func (pr *Priorities) setInputTypeFirst(portType int)","Funname":"setInputTypeFirst","Returntype":"","Args":"portType int"},{"Uniquefunname":"func (pr *Priorities) setOutputTypeFirst(portType int)","Funname":"setOutputTypeFirst","Returntype":"","Args":"portType int"}],"Records":[{"Name":"struct:audio.PortToken","Fields":["audio.PortToken.CardName string","audio.PortToken.PortName string"]},{"Name":"const:audio","Fields":["audio.PortTypeBluetooth","audio.PortTypeHdmi","audio.PortTypeHeadset","audio.PortTypeSpeaker"]},{"Name":"struct:audio.Priorities","Fields":["audio.Priorities.InputInstancePriority []*PortToken","audio.Priorities.InputTypePriority []int","audio.Priorities.OutputInstancePriority []*PortToken","audio.Priorities.OutputTypePriority []int"]},{"Name":"var:audio","Fields":["audio.globalPrioritiesFilePath","audio.priorities"]}]}
{"Filepath":"audio/priority_test.go","Functions":[{"Uniquefunname":"func Test_GetPortType(t *testing.T)","Funname":"Test_GetPortType","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsInputTypeAfter(t *testing.T)","Funname":"Test_IsInputTypeAfter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsOutputTypeAfter(t *testing.T)","Funname":"Test_IsOutputTypeAfter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_contains(t *testing.T)","Funname":"Test_contains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GetPortType(t *testing.T)","Funname":"audio.Test_GetPortType","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsInputTypeAfter(t *testing.T)","Funname":"audio.Test_IsInputTypeAfter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_IsOutputTypeAfter(t *testing.T)","Funname":"audio.Test_IsOutputTypeAfter","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_contains(t *testing.T)","Funname":"audio.Test_contains","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"audio/profile.go","Functions":[{"Uniquefunname":"func getCommonProfiles(info1, info2 pulse.CardPortInfo) pulse.ProfileInfos2","Funname":"audio.getCommonProfiles","Returntype":"pulse.ProfileInfos2","Args":"info1, info2 pulse.CardPortInfo"},{"Uniquefunname":"func newProfile(info pulse.ProfileInfo2) *Profile","Funname":"audio.newProfile","Returntype":"*Profile","Args":"info pulse.ProfileInfo2"},{"Uniquefunname":"func newProfileList(src []pulse.ProfileInfo2) ProfileList","Funname":"audio.newProfileList","Returntype":"ProfileList","Args":"src []pulse.ProfileInfo2"},{"Uniquefunname":"func getCommonProfiles(info1, info2 pulse.CardPortInfo) pulse.ProfileInfos2","Funname":"getCommonProfiles","Returntype":"pulse.ProfileInfos2","Args":"info1, info2 pulse.CardPortInfo"},{"Uniquefunname":"func newProfile(info pulse.ProfileInfo2) *Profile","Funname":"newProfile","Returntype":"*Profile","Args":"info pulse.ProfileInfo2"},{"Uniquefunname":"func newProfileList(src []pulse.ProfileInfo2) ProfileList","Funname":"newProfileList","Returntype":"ProfileList","Args":"src []pulse.ProfileInfo2"}],"Records":[{"Name":"struct:audio.Profile","Fields":["audio.Profile.Available int","audio.Profile.Description string","audio.Profile.Name string","audio.Profile.Priority uint32"]}]}
{"Filepath":"audio/sink.go","Functions":[{"Uniquefunname":"func (*Sink) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Sink) GetMeter() (dbus.ObjectPath, *dbus.Error)","Funname":"GetMeter","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Sink) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Sink) SetFade(v float64) *dbus.Error","Funname":"SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *Sink) SetMute(v bool) *dbus.Error","Funname":"SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *Sink) SetPort(name string) *dbus.Error","Funname":"SetPort","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (s *Sink) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (*Sink) GetInterfaceName() string","Funname":"audio.Sink.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Sink) GetMeter() (dbus.ObjectPath, *dbus.Error)","Funname":"audio.Sink.GetMeter","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Sink) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"audio.Sink.SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Sink) SetFade(v float64) *dbus.Error","Funname":"audio.Sink.SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *Sink) SetMute(v bool) *dbus.Error","Funname":"audio.Sink.SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *Sink) SetPort(name string) *dbus.Error","Funname":"audio.Sink.SetPort","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (s *Sink) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"audio.Sink.SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Sink) getPath() dbus.ObjectPath","Funname":"audio.Sink.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (s *Sink) playFeedback()","Funname":"audio.Sink.playFeedback","Returntype":"","Args":""},{"Uniquefunname":"func (s *Sink) setMute(v bool)","Funname":"audio.Sink.setMute","Returntype":"","Args":"v bool"},{"Uniquefunname":"func (s *Sink) setVBF(v, b, f float64) *dbus.Error","Funname":"audio.Sink.setVBF","Returntype":"*dbus.Error","Args":"v, b, f float64"},{"Uniquefunname":"func (s *Sink) update(sinkInfo *pulse.Sink)","Funname":"audio.Sink.update","Returntype":"","Args":"sinkInfo *pulse.Sink"},{"Uniquefunname":"func handleUnplugedEvent(oldActivePort, newActivePort Port, oldPortUnavailable bool)","Funname":"audio.handleUnplugedEvent","Returntype":"","Args":"oldActivePort, newActivePort Port, oldPortUnavailable bool"},{"Uniquefunname":"func isHeadphoneOrHeadsetPort(portName string) bool","Funname":"audio.isHeadphoneOrHeadsetPort","Returntype":"bool","Args":"portName string"},{"Uniquefunname":"func newSink(sinkInfo *pulse.Sink, audio *Audio) *Sink","Funname":"audio.newSink","Returntype":"*Sink","Args":"sinkInfo *pulse.Sink, audio *Audio"},{"Uniquefunname":"func (s *Sink) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func handleUnplugedEvent(oldActivePort, newActivePort Port, oldPortUnavailable bool)","Funname":"handleUnplugedEvent","Returntype":"","Args":"oldActivePort, newActivePort Port, oldPortUnavailable bool"},{"Uniquefunname":"func isHeadphoneOrHeadsetPort(portName string) bool","Funname":"isHeadphoneOrHeadsetPort","Returntype":"bool","Args":"portName string"},{"Uniquefunname":"func newSink(sinkInfo *pulse.Sink, audio *Audio) *Sink","Funname":"newSink","Returntype":"*Sink","Args":"sinkInfo *pulse.Sink, audio *Audio"},{"Uniquefunname":"func (s *Sink) playFeedback()","Funname":"playFeedback","Returntype":"","Args":""},{"Uniquefunname":"func (s *Sink) setMute(v bool)","Funname":"setMute","Returntype":"","Args":"v bool"},{"Uniquefunname":"func (s *Sink) setVBF(v, b, f float64) *dbus.Error","Funname":"setVBF","Returntype":"*dbus.Error","Args":"v, b, f float64"},{"Uniquefunname":"func (s *Sink) update(sinkInfo *pulse.Sink)","Funname":"update","Returntype":"","Args":"sinkInfo *pulse.Sink"}],"Records":[{"Name":"struct:audio.Sink","Fields":["audio.Sink.ActivePort Port","audio.Sink.Balance float64","audio.Sink.BaseVolume float64","audio.Sink.Card uint32","audio.Sink.Description string","audio.Sink.Fade float64","audio.Sink.Mute bool","audio.Sink.Name string","audio.Sink.Ports []Port","audio.Sink.PropsMu sync.RWMutex","audio.Sink.SupportBalance bool","audio.Sink.SupportFade bool","audio.Sink.Volume float64","audio.Sink.audio *Audio","audio.Sink.cVolume pulse.CVolume","audio.Sink.channelMap pulse.ChannelMap","audio.Sink.index uint32","audio.Sink.methods *struct { SetVolume func() `in:\"value,isPlay\"`; SetBalance func() `in:\"value,isPlay\"`; SetFade func() `in:\"value\"`; SetMute func() `in:\"value\"`; SetPort func() `in:\"name\"`; GetMeter func() `out:\"meter\"`; }","audio.Sink.props map[string]string","audio.Sink.service *dbusutil.Service"]}]}
{"Filepath":"audio/sinkinput.go","Functions":[{"Uniquefunname":"func (*SinkInput) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *SinkInput) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *SinkInput) SetFade(v float64) *dbus.Error","Funname":"SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *SinkInput) SetMute(v bool) *dbus.Error","Funname":"SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *SinkInput) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (*SinkInput) GetInterfaceName() string","Funname":"audio.SinkInput.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *SinkInput) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"audio.SinkInput.SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *SinkInput) SetFade(v float64) *dbus.Error","Funname":"audio.SinkInput.SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *SinkInput) SetMute(v bool) *dbus.Error","Funname":"audio.SinkInput.SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *SinkInput) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"audio.SinkInput.SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *SinkInput) correctIcon(sinkInputInfo *pulse.SinkInput) (string, error)","Funname":"audio.SinkInput.correctIcon","Returntype":"(string, error)","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func (s *SinkInput) getPath() dbus.ObjectPath","Funname":"audio.SinkInput.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (s *SinkInput) getPropSinkIndex() uint32","Funname":"audio.SinkInput.getPropSinkIndex","Returntype":"uint32","Args":""},{"Uniquefunname":"func (s *SinkInput) update(sinkInputInfo *pulse.SinkInput)","Funname":"audio.SinkInput.update","Returntype":"","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func getProcessParentCmdline(pidStr string) ([]string, error)","Funname":"audio.getProcessParentCmdline","Returntype":"([]string, error)","Args":"pidStr string"},{"Uniquefunname":"func getSinkInputVisible(sinkInputInfo *pulse.SinkInput) bool","Funname":"audio.getSinkInputVisible","Returntype":"bool","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func isProcessParentFirefox(pidStr string) (bool, error)","Funname":"audio.isProcessParentFirefox","Returntype":"(bool, error)","Args":"pidStr string"},{"Uniquefunname":"func isProcessParentSMPlayer(pidStr string) (bool, error)","Funname":"audio.isProcessParentSMPlayer","Returntype":"(bool, error)","Args":"pidStr string"},{"Uniquefunname":"func newSinkInput(sinkInputInfo *pulse.SinkInput, audio *Audio) *SinkInput","Funname":"audio.newSinkInput","Returntype":"*SinkInput","Args":"sinkInputInfo *pulse.SinkInput, audio *Audio"},{"Uniquefunname":"func (s *SinkInput) correctIcon(sinkInputInfo *pulse.SinkInput) (string, error)","Funname":"correctIcon","Returntype":"(string, error)","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func (s *SinkInput) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func getProcessParentCmdline(pidStr string) ([]string, error)","Funname":"getProcessParentCmdline","Returntype":"([]string, error)","Args":"pidStr string"},{"Uniquefunname":"func (s *SinkInput) getPropSinkIndex() uint32","Funname":"getPropSinkIndex","Returntype":"uint32","Args":""},{"Uniquefunname":"func getSinkInputVisible(sinkInputInfo *pulse.SinkInput) bool","Funname":"getSinkInputVisible","Returntype":"bool","Args":"sinkInputInfo *pulse.SinkInput"},{"Uniquefunname":"func isProcessParentFirefox(pidStr string) (bool, error)","Funname":"isProcessParentFirefox","Returntype":"(bool, error)","Args":"pidStr string"},{"Uniquefunname":"func isProcessParentSMPlayer(pidStr string) (bool, error)","Funname":"isProcessParentSMPlayer","Returntype":"(bool, error)","Args":"pidStr string"},{"Uniquefunname":"func newSinkInput(sinkInputInfo *pulse.SinkInput, audio *Audio) *SinkInput","Funname":"newSinkInput","Returntype":"*SinkInput","Args":"sinkInputInfo *pulse.SinkInput, audio *Audio"},{"Uniquefunname":"func (s *SinkInput) update(sinkInputInfo *pulse.SinkInput)","Funname":"update","Returntype":"","Args":"sinkInputInfo *pulse.SinkInput"}],"Records":[{"Name":"const:audio","Fields":["audio.PropAppIconName","audio.PropAppName","audio.PropAppProcessBinary","audio.PropAppProcessID"]},{"Name":"struct:audio.SinkInput","Fields":["audio.SinkInput.Balance float64","audio.SinkInput.Fade float64","audio.SinkInput.Icon string","audio.SinkInput.Mute bool","audio.SinkInput.Name string","audio.SinkInput.PropsMu sync.RWMutex","audio.SinkInput.SinkIndex uint32","audio.SinkInput.SupportBalance bool","audio.SinkInput.SupportFade bool","audio.SinkInput.Volume float64","audio.SinkInput.audio *Audio","audio.SinkInput.cVolume pulse.CVolume","audio.SinkInput.channelMap pulse.ChannelMap","audio.SinkInput.correctIconCalled bool","audio.SinkInput.correctedIcon string","audio.SinkInput.index uint32","audio.SinkInput.methods *struct { SetVolume func() `in:\"value,isPlay\"`; SetBalance func() `in:\"value,isPlay\"`; SetFade func() `in:\"value\"`; SetMute func() `in:\"value\"`; }","audio.SinkInput.service *dbusutil.Service","audio.SinkInput.visible bool"]}]}
{"Filepath":"audio/source.go","Functions":[{"Uniquefunname":"func (*Source) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Source) GetMeter() (dbus.ObjectPath, *dbus.Error)","Funname":"GetMeter","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Source) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Source) SetFade(v float64) *dbus.Error","Funname":"SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *Source) SetMute(v bool) *dbus.Error","Funname":"SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *Source) SetPort(name string) *dbus.Error","Funname":"SetPort","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (s *Source) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (*Source) GetInterfaceName() string","Funname":"audio.Source.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Source) GetMeter() (dbus.ObjectPath, *dbus.Error)","Funname":"audio.Source.GetMeter","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Source) SetBalance(v float64, isPlay bool) *dbus.Error","Funname":"audio.Source.SetBalance","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Source) SetFade(v float64) *dbus.Error","Funname":"audio.Source.SetFade","Returntype":"*dbus.Error","Args":"v float64"},{"Uniquefunname":"func (s *Source) SetMute(v bool) *dbus.Error","Funname":"audio.Source.SetMute","Returntype":"*dbus.Error","Args":"v bool"},{"Uniquefunname":"func (s *Source) SetPort(name string) *dbus.Error","Funname":"audio.Source.SetPort","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (s *Source) SetVolume(v float64, isPlay bool) *dbus.Error","Funname":"audio.Source.SetVolume","Returntype":"*dbus.Error","Args":"v float64, isPlay bool"},{"Uniquefunname":"func (s *Source) getPath() dbus.ObjectPath","Funname":"audio.Source.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (s *Source) setMute(v bool)","Funname":"audio.Source.setMute","Returntype":"","Args":"v bool"},{"Uniquefunname":"func (s *Source) setVBF(v, b, f float64) *dbus.Error","Funname":"audio.Source.setVBF","Returntype":"*dbus.Error","Args":"v, b, f float64"},{"Uniquefunname":"func (s *Source) update(sourceInfo *pulse.Source)","Funname":"audio.Source.update","Returntype":"","Args":"sourceInfo *pulse.Source"},{"Uniquefunname":"func newSource(sourceInfo *pulse.Source, audio *Audio) *Source","Funname":"audio.newSource","Returntype":"*Source","Args":"sourceInfo *pulse.Source, audio *Audio"},{"Uniquefunname":"func (s *Source) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func newSource(sourceInfo *pulse.Source, audio *Audio) *Source","Funname":"newSource","Returntype":"*Source","Args":"sourceInfo *pulse.Source, audio *Audio"},{"Uniquefunname":"func (s *Source) setMute(v bool)","Funname":"setMute","Returntype":"","Args":"v bool"},{"Uniquefunname":"func (s *Source) setVBF(v, b, f float64) *dbus.Error","Funname":"setVBF","Returntype":"*dbus.Error","Args":"v, b, f float64"},{"Uniquefunname":"func (s *Source) update(sourceInfo *pulse.Source)","Funname":"update","Returntype":"","Args":"sourceInfo *pulse.Source"}],"Records":[{"Name":"struct:audio.Source","Fields":["audio.Source.ActivePort Port","audio.Source.Balance float64","audio.Source.BaseVolume float64","audio.Source.Card uint32","audio.Source.Description string","audio.Source.Fade float64","audio.Source.Mute bool","audio.Source.Name string","audio.Source.Ports []Port","audio.Source.PropsMu sync.RWMutex","audio.Source.SupportBalance bool","audio.Source.SupportFade bool","audio.Source.Volume float64","audio.Source.audio *Audio","audio.Source.cVolume pulse.CVolume","audio.Source.channelMap pulse.ChannelMap","audio.Source.index uint32","audio.Source.methods *struct { SetVolume func() `in:\"value,isPlay\"`; SetBalance func() `in:\"value,isPlay\"`; SetFade func() `in:\"value\"`; SetMute func() `in:\"value\"`; SetPort func() `in:\"name\"`; GetMeter func() `out:\"meter\"`; }","audio.Source.service *dbusutil.Service"]}]}
{"Filepath":"audio/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"audio.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"audio.syncConfig.Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) syncConfigToSoundThemePlayer(enabled bool) error","Funname":"audio.syncConfig.syncConfigToSoundThemePlayer","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (sc *syncConfig) syncConfigToSoundThemePlayer(enabled bool) error","Funname":"syncConfigToSoundThemePlayer","Returntype":"error","Args":"enabled bool"}],"Records":[{"Name":"const:audio","Fields":["audio.gsKeyAudioVolumeChange","audio.gsKeyCameraShutter","audio.gsKeyCompleteCopy","audio.gsKeyCompletePrint","audio.gsKeyDesktopLogin","audio.gsKeyDesktopLogout","audio.gsKeyDeviceAdded","audio.gsKeyDeviceRemoved","audio.gsKeyDialogError","audio.gsKeyDialogErrorCritical","audio.gsKeyDialogErrorSerious","audio.gsKeyMessage","audio.gsKeyPowerPlug","audio.gsKeyPowerUnplug","audio.gsKeyPowerUnplugBatteryLow","audio.gsKeyScreenCapture","audio.gsKeyScreenCaptureComplete","audio.gsKeySuspendResume","audio.gsKeySystemShutdown","audio.gsKeyTrashEmpty","audio.gsKeyXDeepinAppSentToDesktop","audio.syncVersion"]},{"Name":"struct:audio.syncConfig","Fields":["audio.syncConfig.a *Audio"]},{"Name":"struct:audio.syncData","Fields":["audio.syncData.SoundEffect *syncSoundEffect","audio.syncData.Version string"]},{"Name":"struct:audio.syncSoundEffect","Fields":["audio.syncSoundEffect.AudioVolumeChange bool","audio.syncSoundEffect.CameraShutter bool","audio.syncSoundEffect.CompleteCopy bool","audio.syncSoundEffect.CompletePrint bool","audio.syncSoundEffect.DesktopLogin bool","audio.syncSoundEffect.DesktopLogout bool","audio.syncSoundEffect.DeviceAdded bool","audio.syncSoundEffect.DeviceRemoved bool","audio.syncSoundEffect.DialogError bool","audio.syncSoundEffect.DialogErrorCritical bool","audio.syncSoundEffect.DialogErrorSerious bool","audio.syncSoundEffect.Enabled bool","audio.syncSoundEffect.Message bool","audio.syncSoundEffect.PowerPlug bool","audio.syncSoundEffect.PowerUnplug bool","audio.syncSoundEffect.PowerUnplugBatteryLow bool","audio.syncSoundEffect.ScreenCapture bool","audio.syncSoundEffect.ScreenCaptureComplete bool","audio.syncSoundEffect.SuspendResume bool","audio.syncSoundEffect.SystemShutdown bool","audio.syncSoundEffect.TrashEmpty bool","audio.syncSoundEffect.XDeepinAppSentToDesktop bool"]}]}
{"Filepath":"audio/util.go","Functions":[{"Uniquefunname":"func floatPrecision(f float64) float64","Funname":"audio.floatPrecision","Returntype":"float64","Args":"f float64"},{"Uniquefunname":"func getMprisPlayers(sessionConn *dbus.Conn) ([]string, error)","Funname":"audio.getMprisPlayers","Returntype":"([]string, error)","Args":"sessionConn *dbus.Conn"},{"Uniquefunname":"func isVolumeValid(v float64) bool","Funname":"audio.isVolumeValid","Returntype":"bool","Args":"v float64"},{"Uniquefunname":"func loadDefaultPaConfig(filename string) (cfg defaultPaConfig)","Funname":"audio.loadDefaultPaConfig","Returntype":"(cfg defaultPaConfig)","Args":"filename string"},{"Uniquefunname":"func pauseAllPlayers()","Funname":"audio.pauseAllPlayers","Returntype":"","Args":""},{"Uniquefunname":"func playFeedback()","Funname":"audio.playFeedback","Returntype":"","Args":""},{"Uniquefunname":"func playFeedbackWithDevice(device string)","Funname":"audio.playFeedbackWithDevice","Returntype":"","Args":"device string"},{"Uniquefunname":"func toJSON(v interface","Funname":"audio.toJSON","Returntype":"string","Args":"v interface{}"},{"Uniquefunname":"func floatPrecision(f float64) float64","Funname":"floatPrecision","Returntype":"float64","Args":"f float64"},{"Uniquefunname":"func getMprisPlayers(sessionConn *dbus.Conn) ([]string, error)","Funname":"getMprisPlayers","Returntype":"([]string, error)","Args":"sessionConn *dbus.Conn"},{"Uniquefunname":"func isVolumeValid(v float64) bool","Funname":"isVolumeValid","Returntype":"bool","Args":"v float64"},{"Uniquefunname":"func loadDefaultPaConfig(filename string) (cfg defaultPaConfig)","Funname":"loadDefaultPaConfig","Returntype":"(cfg defaultPaConfig)","Args":"filename string"},{"Uniquefunname":"func pauseAllPlayers()","Funname":"pauseAllPlayers","Returntype":"","Args":""},{"Uniquefunname":"func playFeedback()","Funname":"playFeedback","Returntype":"","Args":""},{"Uniquefunname":"func playFeedbackWithDevice(device string)","Funname":"playFeedbackWithDevice","Returntype":"","Args":"device string"},{"Uniquefunname":"func toJSON(v interface","Funname":"toJSON","Returntype":"string","Args":"v interface{}"}],"Records":[{"Name":"struct:audio.defaultPaConfig","Fields":["audio.defaultPaConfig.setDefaultSink bool","audio.defaultPaConfig.setDefaultSource bool"]},{"Name":"const:audio","Fields":["audio.defaultPaFile","audio.mprisPlayerDestPrefix"]}]}
{"Filepath":"audio/util_test.go","Functions":[{"Uniquefunname":"func Test_floatPrecision(t *testing.T)","Funname":"Test_floatPrecision","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_isVolumeValid(t *testing.T)","Funname":"Test_isVolumeValid","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_floatPrecision(t *testing.T)","Funname":"audio.Test_floatPrecision","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_isVolumeValid(t *testing.T)","Funname":"audio.Test_isVolumeValid","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"bin/backlight_helper/main.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) SetBrightness(type0 byte, name string, value int32) *dbus.Error","Funname":"SetBrightness","Returntype":"*dbus.Error","Args":"type0 byte, name string, value int32"},{"Uniquefunname":"func getBrightnessFilename(type0 byte, name string) (string, error)","Funname":"getBrightnessFilename","Returntype":"(string, error)","Args":"type0 byte, name string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) SetBrightness(type0 byte, name string, value int32) *dbus.Error","Funname":"main.Manager.SetBrightness","Returntype":"*dbus.Error","Args":"type0 byte, name string, value int32"},{"Uniquefunname":"func getBrightnessFilename(type0 byte, name string) (string, error)","Funname":"main.getBrightnessFilename","Returntype":"(string, error)","Args":"type0 byte, name string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.DisplayBacklight","main.KeyboardBacklight","main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { SetBrightness func() `in:\"type,name,value\"`; }","main.Manager.service *dbusutil.Service"]},{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"bin/dde-authority/authority.go","Functions":[{"Uniquefunname":"func (a *Authority) CheckCookie(user, cookie string) (bool, string, *dbus.Error)","Funname":"CheckCookie","Returntype":"(bool, string, *dbus.Error)","Args":"user, cookie string"},{"Uniquefunname":"func (*Authority) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Authority) HasCookie(user string) (bool, *dbus.Error)","Funname":"HasCookie","Returntype":"(bool, *dbus.Error)","Args":"user string"},{"Uniquefunname":"func Start(sender dbus.Sender, authType, user string, agent dbus.ObjectPath)(dbus.ObjectPath, *dbus.Error)","Funname":"Start","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"sender dbus.Sender, authType, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func StartFPrint(sender dbus.Sender, user string, agent dbus.ObjectPath)(Transaction, dbus.ObjectPath, error)","Funname":"StartFPrint","Returntype":"(Transaction, dbus.ObjectPath, error)","Args":"sender dbus.Sender, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func StartPAM(sender dbus.Sender, authType, user string, agent dbus.ObjectPath)(Transaction, dbus.ObjectPath, error)","Funname":"StartPAM","Returntype":"(Transaction, dbus.ObjectPath, error)","Args":"sender dbus.Sender, authType, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func (a *Authority) deleteTx(id uint64)","Funname":"deleteTx","Returntype":"","Args":"id uint64"},{"Uniquefunname":"func (a *Authority) getUserLocale(username string) (string, error)","Funname":"getUserLocale","Returntype":"(string, error)","Args":"username string"},{"Uniquefunname":"func isPamServiceExist(name string) bool","Funname":"isPamServiceExist","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (a *Authority) listenDBusSignals()","Funname":"listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (a *Authority) CheckCookie(user, cookie string) (bool, string, *dbus.Error)","Funname":"main.Authority.CheckCookie","Returntype":"(bool, string, *dbus.Error)","Args":"user, cookie string"},{"Uniquefunname":"func (*Authority) GetInterfaceName() string","Funname":"main.Authority.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Authority) HasCookie(user string) (bool, *dbus.Error)","Funname":"main.Authority.HasCookie","Returntype":"(bool, *dbus.Error)","Args":"user string"},{"Uniquefunname":"func main.Authority.Start(sender dbus.Sender, authType, user string, agent dbus.ObjectPath)(dbus.ObjectPath, *dbus.Error)","Funname":"main.Authority.Start","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"sender dbus.Sender, authType, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func main.Authority.StartFPrint(sender dbus.Sender, user string, agent dbus.ObjectPath)(Transaction, dbus.ObjectPath, error)","Funname":"main.Authority.StartFPrint","Returntype":"(Transaction, dbus.ObjectPath, error)","Args":"sender dbus.Sender, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func main.Authority.StartPAM(sender dbus.Sender, authType, user string, agent dbus.ObjectPath)(Transaction, dbus.ObjectPath, error)","Funname":"main.Authority.StartPAM","Returntype":"(Transaction, dbus.ObjectPath, error)","Args":"sender dbus.Sender, authType, user string, agent dbus.ObjectPath"},{"Uniquefunname":"func (a *Authority) deleteTx(id uint64)","Funname":"main.Authority.deleteTx","Returntype":"","Args":"id uint64"},{"Uniquefunname":"func (a *Authority) getUserLocale(username string) (string, error)","Funname":"main.Authority.getUserLocale","Returntype":"(string, error)","Args":"username string"},{"Uniquefunname":"func (a *Authority) listenDBusSignals()","Funname":"main.Authority.listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (a *Authority) releaseFprintTransaction(ignoreTxId uint64, devPath dbus.ObjectPath)","Funname":"main.Authority.releaseFprintTransaction","Returntype":"","Args":"ignoreTxId uint64, devPath dbus.ObjectPath"},{"Uniquefunname":"func main.Authority.startPAMTx(authType, service, user, sender string)(*PAMTransaction, error)","Funname":"main.Authority.startPAMTx","Returntype":"(*PAMTransaction, error)","Args":"authType, service, user, sender string"},{"Uniquefunname":"func isPamServiceExist(name string) bool","Funname":"main.isPamServiceExist","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func newAuthority(service *dbusutil.Service) *Authority","Funname":"main.newAuthority","Returntype":"*Authority","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newAuthority(service *dbusutil.Service) *Authority","Funname":"newAuthority","Returntype":"*Authority","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (a *Authority) releaseFprintTransaction(ignoreTxId uint64, devPath dbus.ObjectPath)","Funname":"releaseFprintTransaction","Returntype":"","Args":"ignoreTxId uint64, devPath dbus.ObjectPath"},{"Uniquefunname":"func startPAMTx(authType, service, user, sender string)(*PAMTransaction, error)","Funname":"startPAMTx","Returntype":"(*PAMTransaction, error)","Args":"authType, service, user, sender string"}],"Records":[{"Name":"struct:main.Authority","Fields":["main.Authority.accounts *accounts.Accounts","main.Authority.count uint64","main.Authority.dbusDaemon *ofdbus.DBus","main.Authority.fprintManager *fprint.Fprintd","main.Authority.methods *struct { Start func() `in:\"authType,user,agentObj\" out:\"transactionObj\"`; CheckCookie func() `in:\"user,cookie\" out:\"result,authToken\"`; HasCookie func() `in:\"user\" out:\"result\"`; }","main.Authority.mu sync.Mutex","main.Authority.service *dbusutil.Service","main.Authority.sigLoop *dbusutil.SignalLoop","main.Authority.txs map[uint64]Transaction"]},{"Name":"const:main","Fields":["main.authTypeFprint","main.pamConfigDir"]},{"Name":"var:main","Fields":["main.authTypeMap"]}]}
{"Filepath":"bin/dde-authority/fprint_transaction.go","Functions":[{"Uniquefunname":"func (tx *FPrintTransaction) Authenticate(sender dbus.Sender) *dbus.Error","Funname":"Authenticate","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *FPrintTransaction) End(sender dbus.Sender) *dbus.Error","Funname":"End","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *FPrintTransaction) SetUser(sender dbus.Sender, user string) *dbus.Error","Funname":"SetUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, user string"},{"Uniquefunname":"func Tr(str string) string","Funname":"Tr","Returntype":"string","Args":"str string"},{"Uniquefunname":"func (tx *FPrintTransaction) authenticate() error","Funname":"authenticate","Returntype":"error","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) claimDevice(deviceObj *fprint.Device, user string) error","Funname":"claimDevice","Returntype":"error","Args":"deviceObj *fprint.Device, user string"},{"Uniquefunname":"func doVerify(deviceObj *fprint.Device, verifyResultCh chan verifyResult, locale string)(ok, continue0 bool)","Funname":"doVerify","Returntype":"(ok, continue0 bool)","Args":"deviceObj *fprint.Device, verifyResultCh chan verifyResult, locale string"},{"Uniquefunname":"func (tx *FPrintTransaction) getDevice() (*fprint.Device, error)","Funname":"getDevice","Returntype":"(*fprint.Device, error)","Args":""},{"Uniquefunname":"func getFprintMsg(locale, msgId string) string","Funname":"getFprintMsg","Returntype":"string","Args":"locale, msgId string"},{"Uniquefunname":"func (tx *FPrintTransaction) getUser() string","Funname":"getUser","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) isClaimOk() bool","Funname":"isClaimOk","Returntype":"bool","Args":""},{"Uniquefunname":"func killFPrintDaemon()","Funname":"killFPrintDaemon","Returntype":"","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) Authenticate(sender dbus.Sender) *dbus.Error","Funname":"main.FPrintTransaction.Authenticate","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *FPrintTransaction) End(sender dbus.Sender) *dbus.Error","Funname":"main.FPrintTransaction.End","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *FPrintTransaction) SetUser(sender dbus.Sender, user string) *dbus.Error","Funname":"main.FPrintTransaction.SetUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, user string"},{"Uniquefunname":"func (tx *FPrintTransaction) authenticate() error","Funname":"main.FPrintTransaction.authenticate","Returntype":"error","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) claimDevice(deviceObj *fprint.Device, user string) error","Funname":"main.FPrintTransaction.claimDevice","Returntype":"error","Args":"deviceObj *fprint.Device, user string"},{"Uniquefunname":"func main.FPrintTransaction.doVerify(deviceObj *fprint.Device, verifyResultCh chan verifyResult, locale string)(ok, continue0 bool)","Funname":"main.FPrintTransaction.doVerify","Returntype":"(ok, continue0 bool)","Args":"deviceObj *fprint.Device, verifyResultCh chan verifyResult, locale string"},{"Uniquefunname":"func (tx *FPrintTransaction) getDevice() (*fprint.Device, error)","Funname":"main.FPrintTransaction.getDevice","Returntype":"(*fprint.Device, error)","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) getUser() string","Funname":"main.FPrintTransaction.getUser","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) isClaimOk() bool","Funname":"main.FPrintTransaction.isClaimOk","Returntype":"bool","Args":""},{"Uniquefunname":"func (tx *FPrintTransaction) releaseOtherTx(devPath dbus.ObjectPath)","Funname":"main.FPrintTransaction.releaseOtherTx","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (tx *FPrintTransaction) setDevicePath(devPath dbus.ObjectPath)","Funname":"main.FPrintTransaction.setDevicePath","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (tx *FPrintTransaction) setPropAuthenticating(value bool)","Funname":"main.FPrintTransaction.setPropAuthenticating","Returntype":"","Args":"value bool"},{"Uniquefunname":"func (tx *FPrintTransaction) verify(deviceObj *fprint.Device, user, scanType string) error","Funname":"main.FPrintTransaction.verify","Returntype":"error","Args":"deviceObj *fprint.Device, user, scanType string"},{"Uniquefunname":"func Tr(str string) string","Funname":"main.Tr","Returntype":"string","Args":"str string"},{"Uniquefunname":"func getFprintMsg(locale, msgId string) string","Funname":"main.getFprintMsg","Returntype":"string","Args":"locale, msgId string"},{"Uniquefunname":"func killFPrintDaemon()","Funname":"main.killFPrintDaemon","Returntype":"","Args":""},{"Uniquefunname":"func shouldLimitVerifyTime(deviceObj *fprint.Device) bool","Funname":"main.shouldLimitVerifyTime","Returntype":"bool","Args":"deviceObj *fprint.Device"},{"Uniquefunname":"func verifyResultStrToMsg(result string, isSwipe bool) string","Funname":"main.verifyResultStrToMsg","Returntype":"string","Args":"result string, isSwipe bool"},{"Uniquefunname":"func (tx *FPrintTransaction) releaseOtherTx(devPath dbus.ObjectPath)","Funname":"releaseOtherTx","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (tx *FPrintTransaction) setDevicePath(devPath dbus.ObjectPath)","Funname":"setDevicePath","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (tx *FPrintTransaction) setPropAuthenticating(value bool)","Funname":"setPropAuthenticating","Returntype":"","Args":"value bool"},{"Uniquefunname":"func shouldLimitVerifyTime(deviceObj *fprint.Device) bool","Funname":"shouldLimitVerifyTime","Returntype":"bool","Args":"deviceObj *fprint.Device"},{"Uniquefunname":"func (tx *FPrintTransaction) verify(deviceObj *fprint.Device, user, scanType string) error","Funname":"verify","Returntype":"error","Args":"deviceObj *fprint.Device, user, scanType string"},{"Uniquefunname":"func verifyResultStrToMsg(result string, isSwipe bool) string","Funname":"verifyResultStrToMsg","Returntype":"string","Args":"result string, isSwipe bool"}],"Records":[{"Name":"struct:main.FPrintTransaction","Fields":["main.FPrintTransaction.Authenticating bool","main.FPrintTransaction.PropsMu sync.RWMutex","main.FPrintTransaction.Sender string","main.FPrintTransaction.devicePath dbus.ObjectPath","main.FPrintTransaction.methods *struct { SetUser func() `in:\"user\"`; }","main.FPrintTransaction.quit chan struct{}","main.FPrintTransaction.release chan struct{}"]},{"Name":"var:main","Fields":["main.errClaimLost","main.msgVerificationFailed","main.msgVerificationTimedOut"]},{"Name":"struct:main.verifyResult","Fields":["main.verifyResult.done bool","main.verifyResult.status string"]}]}
{"Filepath":"bin/dde-authority/main.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.dbusAgentInterface","main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"var:main","Fields":["main.logger","main.noQuitFlag"]}]}
{"Filepath":"bin/dde-authority/pam_transaction.go","Functions":[{"Uniquefunname":"func (tx *PAMTransaction) Authenticate(sender dbus.Sender) *dbus.Error","Funname":"Authenticate","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *PAMTransaction) End(sender dbus.Sender) *dbus.Error","Funname":"End","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *PAMTransaction) RespondPAM(style pam.Style, msg string) (string, error)","Funname":"RespondPAM","Returntype":"(string, error)","Args":"style pam.Style, msg string"},{"Uniquefunname":"func (tx *PAMTransaction) SetUser(sender dbus.Sender, user string) *dbus.Error","Funname":"SetUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, user string"},{"Uniquefunname":"func (tx *PAMTransaction) authenticate() error","Funname":"authenticate","Returntype":"error","Args":""},{"Uniquefunname":"func genCookie() (string, error)","Funname":"genCookie","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (tx *PAMTransaction) Authenticate(sender dbus.Sender) *dbus.Error","Funname":"main.PAMTransaction.Authenticate","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *PAMTransaction) End(sender dbus.Sender) *dbus.Error","Funname":"main.PAMTransaction.End","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *PAMTransaction) RespondPAM(style pam.Style, msg string) (string, error)","Funname":"main.PAMTransaction.RespondPAM","Returntype":"(string, error)","Args":"style pam.Style, msg string"},{"Uniquefunname":"func (tx *PAMTransaction) SetUser(sender dbus.Sender, user string) *dbus.Error","Funname":"main.PAMTransaction.SetUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, user string"},{"Uniquefunname":"func (tx *PAMTransaction) authenticate() error","Funname":"main.PAMTransaction.authenticate","Returntype":"error","Args":""},{"Uniquefunname":"func (tx *PAMTransaction) setPropAuthenticating(value bool)","Funname":"main.PAMTransaction.setPropAuthenticating","Returntype":"","Args":"value bool"},{"Uniquefunname":"func (tx *PAMTransaction) terminate()","Funname":"main.PAMTransaction.terminate","Returntype":"","Args":""},{"Uniquefunname":"func genCookie() (string, error)","Funname":"main.genCookie","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (tx *PAMTransaction) setPropAuthenticating(value bool)","Funname":"setPropAuthenticating","Returntype":"","Args":"value bool"},{"Uniquefunname":"func (tx *PAMTransaction) terminate()","Funname":"terminate","Returntype":"","Args":""}],"Records":[{"Name":"struct:main.PAMTransaction","Fields":["main.PAMTransaction.Authenticating bool","main.PAMTransaction.PropsMu sync.RWMutex","main.PAMTransaction.Sender string","main.PAMTransaction.core *pam.Transaction","main.PAMTransaction.methods *struct { SetUser func() `in:\"user\"`; }"]}]}
{"Filepath":"bin/dde-authority/transaction.go","Functions":[{"Uniquefunname":"func (*baseTransaction) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) checkSender(sender dbus.Sender) *dbus.Error","Funname":"checkSender","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *baseTransaction) clearSecret()","Funname":"clearSecret","Returntype":"","Args":""},{"Uniquefunname":"func (tx *baseTransaction) displayErrorMsg(errType, errMsg string) error","Funname":"displayErrorMsg","Returntype":"error","Args":"errType, errMsg string"},{"Uniquefunname":"func (tx *baseTransaction) displayTextInfo(msg string) error","Funname":"displayTextInfo","Returntype":"error","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) getAuthToken() string","Funname":"getAuthToken","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getId() uint64","Funname":"getId","Returntype":"uint64","Args":""},{"Uniquefunname":"func getTxObjPath(id uint64) dbus.ObjectPath","Funname":"getTxObjPath","Returntype":"dbus.ObjectPath","Args":"id uint64"},{"Uniquefunname":"func (tx *baseTransaction) getUser() string","Funname":"getUser","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getUserCookie() (string, string)","Funname":"getUserCookie","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getUserLocale() string","Funname":"getUserLocale","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) hasEnded() bool","Funname":"hasEnded","Returntype":"bool","Args":""},{"Uniquefunname":"func (*baseTransaction) GetInterfaceName() string","Funname":"main.baseTransaction.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) String() string","Funname":"main.baseTransaction.String","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) checkSender(sender dbus.Sender) *dbus.Error","Funname":"main.baseTransaction.checkSender","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (tx *baseTransaction) clearSecret()","Funname":"main.baseTransaction.clearSecret","Returntype":"","Args":""},{"Uniquefunname":"func (tx *baseTransaction) displayErrorMsg(errType, errMsg string) error","Funname":"main.baseTransaction.displayErrorMsg","Returntype":"error","Args":"errType, errMsg string"},{"Uniquefunname":"func (tx *baseTransaction) displayTextInfo(msg string) error","Funname":"main.baseTransaction.displayTextInfo","Returntype":"error","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) getAuthToken() string","Funname":"main.baseTransaction.getAuthToken","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getId() uint64","Funname":"main.baseTransaction.getId","Returntype":"uint64","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getUser() string","Funname":"main.baseTransaction.getUser","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getUserCookie() (string, string)","Funname":"main.baseTransaction.getUserCookie","Returntype":"(string, string)","Args":""},{"Uniquefunname":"func (tx *baseTransaction) getUserLocale() string","Funname":"main.baseTransaction.getUserLocale","Returntype":"string","Args":""},{"Uniquefunname":"func (tx *baseTransaction) hasEnded() bool","Funname":"main.baseTransaction.hasEnded","Returntype":"bool","Args":""},{"Uniquefunname":"func (tx *baseTransaction) markEnd()","Funname":"main.baseTransaction.markEnd","Returntype":"","Args":""},{"Uniquefunname":"func (tx *baseTransaction) matchSender(name string) bool","Funname":"main.baseTransaction.matchSender","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (tx *baseTransaction) requestEchoOff(msg string) (ret string, err error)","Funname":"main.baseTransaction.requestEchoOff","Returntype":"(ret string, err error)","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) requestEchoOn(msg string) (ret string, err error)","Funname":"main.baseTransaction.requestEchoOn","Returntype":"(ret string, err error)","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) sendResult(success bool)","Funname":"main.baseTransaction.sendResult","Returntype":"","Args":"success bool"},{"Uniquefunname":"func (tx *baseTransaction) setAuthToken(token string)","Funname":"main.baseTransaction.setAuthToken","Returntype":"","Args":"token string"},{"Uniquefunname":"func (tx *baseTransaction) setCookie(cookie string)","Funname":"main.baseTransaction.setCookie","Returntype":"","Args":"cookie string"},{"Uniquefunname":"func (tx *baseTransaction) setUser(user string)","Funname":"main.baseTransaction.setUser","Returntype":"","Args":"user string"},{"Uniquefunname":"func getTxObjPath(id uint64) dbus.ObjectPath","Funname":"main.getTxObjPath","Returntype":"dbus.ObjectPath","Args":"id uint64"},{"Uniquefunname":"func (tx *baseTransaction) markEnd()","Funname":"markEnd","Returntype":"","Args":""},{"Uniquefunname":"func (tx *baseTransaction) matchSender(name string) bool","Funname":"matchSender","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (tx *baseTransaction) requestEchoOff(msg string) (ret string, err error)","Funname":"requestEchoOff","Returntype":"(ret string, err error)","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) requestEchoOn(msg string) (ret string, err error)","Funname":"requestEchoOn","Returntype":"(ret string, err error)","Args":"msg string"},{"Uniquefunname":"func (tx *baseTransaction) sendResult(success bool)","Funname":"sendResult","Returntype":"","Args":"success bool"},{"Uniquefunname":"func (tx *baseTransaction) setAuthToken(token string)","Funname":"setAuthToken","Returntype":"","Args":"token string"},{"Uniquefunname":"func (tx *baseTransaction) setCookie(cookie string)","Funname":"setCookie","Returntype":"","Args":"cookie string"},{"Uniquefunname":"func (tx *baseTransaction) setUser(user string)","Funname":"setUser","Returntype":"","Args":"user string"}],"Records":[{"Name":"interface","Fields":["main.Transaction"]},{"Name":"var:main","Fields":["main._","main._","main.errTxEnd"]},{"Name":"struct:main.baseTransaction","Fields":["main.baseTransaction.agent dbus.BusObject","main.baseTransaction.authToken string","main.baseTransaction.authType string","main.baseTransaction.cookie string","main.baseTransaction.end bool","main.baseTransaction.id uint64","main.baseTransaction.mu sync.Mutex","main.baseTransaction.parent *Authority","main.baseTransaction.user string"]},{"Name":"const:main","Fields":["main.dbusTxInterface","main.dbusTxPathPrefix"]}]}
{"Filepath":"bin/dde-greeter-setter/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"bin/dde-greeter-setter/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) UpdateGreeterQtTheme(fd dbus.UnixFD) *dbus.Error","Funname":"UpdateGreeterQtTheme","Returntype":"*dbus.Error","Args":"fd dbus.UnixFD"},{"Uniquefunname":"func isInteger(str string) bool","Funname":"isInteger","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) UpdateGreeterQtTheme(fd dbus.UnixFD) *dbus.Error","Funname":"main.Manager.UpdateGreeterQtTheme","Returntype":"*dbus.Error","Args":"fd dbus.UnixFD"},{"Uniquefunname":"func isInteger(str string) bool","Funname":"main.isInteger","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func updateGreeterQtTheme(fd dbus.UnixFD) error","Funname":"main.updateGreeterQtTheme","Returntype":"error","Args":"fd dbus.UnixFD"},{"Uniquefunname":"func updateXSettingsConfig()","Funname":"main.updateXSettingsConfig","Returntype":"","Args":""},{"Uniquefunname":"func updateGreeterQtTheme(fd dbus.UnixFD) error","Funname":"updateGreeterQtTheme","Returntype":"error","Args":"fd dbus.UnixFD"},{"Uniquefunname":"func updateXSettingsConfig()","Funname":"updateXSettingsConfig","Returntype":"","Args":""}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { UpdateGreeterQtTheme func() `in:\"fd\"`; }","main.Manager.service *dbusutil.Service"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName","main.themeFile","main.themeKeyFont","main.themeKeyFontSize","main.themeKeyIconThemeName","main.themeKeyMonoFont","main.themeKeyScaleLogicalDpi","main.themeKeyScreenScaleFactors","main.themeSection","main.xsettingsFile","main.xsettingsKeyDpi","main.xsettingsKeyFont","main.xsettingsKeyFontSize","main.xsettingsKeyIconThemeName","main.xsettingsKeyMonoFont"]},{"Name":"var:main","Fields":["main.globalKeyConvertMap"]}]}
{"Filepath":"bin/dde-lockservice/greeter_config.go","Functions":[{"Uniquefunname":"func getGreeterUser(file string) (string, error)","Funname":"getGreeterUser","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func loadKeyFile(file string) (*keyfile.KeyFile, error)","Funname":"loadKeyFile","Returntype":"(*keyfile.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func getGreeterUser(file string) (string, error)","Funname":"main.getGreeterUser","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func loadKeyFile(file string) (*keyfile.KeyFile, error)","Funname":"main.loadKeyFile","Returntype":"(*keyfile.KeyFile, error)","Args":"file string"},{"Uniquefunname":"func setGreeterUser(file, username string) error","Funname":"main.setGreeterUser","Returntype":"error","Args":"file, username string"},{"Uniquefunname":"func setGreeterUser(file, username string) error","Funname":"setGreeterUser","Returntype":"error","Args":"file, username string"}],"Records":[{"Name":"var:main","Fields":["main._kf"]},{"Name":"const:main","Fields":["main.greeterGroupGeneral","main.greeterKeyLastUser","main.greeterUserConfig"]}]}
{"Filepath":"bin/dde-lockservice/livecd.go","Functions":[{"Uniquefunname":"func isInLiveCD(username string) bool","Funname":"isInLiveCD","Returntype":"bool","Args":"username string"},{"Uniquefunname":"func isInLiveCD(username string) bool","Funname":"main.isInLiveCD","Returntype":"bool","Args":"username string"}],"Records":null}
{"Filepath":"bin/dde-lockservice/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) AuthenticateUser(sender dbus.Sender, username string) *dbus.Error","Funname":"AuthenticateUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (m *Manager) CurrentUser() (string, *dbus.Error)","Funname":"CurrentUser","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) IsLiveCD(username string) (bool, *dbus.Error)","Funname":"IsLiveCD","Returntype":"(bool, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (m *Manager) SwitchToUser(username string) *dbus.Error","Funname":"SwitchToUser","Returntype":"*dbus.Error","Args":"username string"},{"Uniquefunname":"func (m *Manager) UnlockCheck(sender dbus.Sender, username, password string) *dbus.Error","Funname":"UnlockCheck","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username, password string"},{"Uniquefunname":"func (m *Manager) doAuthenticate(username, password string, pid uint32)","Funname":"doAuthenticate","Returntype":"","Args":"username, password string, pid uint32"},{"Uniquefunname":"func getId(pid uint32, username string) string","Funname":"getId","Returntype":"string","Args":"pid uint32, username string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) AuthenticateUser(sender dbus.Sender, username string) *dbus.Error","Funname":"main.Manager.AuthenticateUser","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (m *Manager) CurrentUser() (string, *dbus.Error)","Funname":"main.Manager.CurrentUser","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) IsLiveCD(username string) (bool, *dbus.Error)","Funname":"main.Manager.IsLiveCD","Returntype":"(bool, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (m *Manager) SwitchToUser(username string) *dbus.Error","Funname":"main.Manager.SwitchToUser","Returntype":"*dbus.Error","Args":"username string"},{"Uniquefunname":"func (m *Manager) UnlockCheck(sender dbus.Sender, username, password string) *dbus.Error","Funname":"main.Manager.UnlockCheck","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username, password string"},{"Uniquefunname":"func (m *Manager) doAuthenticate(username, password string, pid uint32)","Funname":"main.Manager.doAuthenticate","Returntype":"","Args":"username, password string, pid uint32"},{"Uniquefunname":"func (m *Manager) sendEvent(ty, pid uint32, username, msg string)","Funname":"main.Manager.sendEvent","Returntype":"","Args":"ty, pid uint32, username, msg string"},{"Uniquefunname":"func getId(pid uint32, username string) string","Funname":"main.getId","Returntype":"string","Args":"pid uint32, username string"},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"main.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) sendEvent(ty, pid uint32, username, msg string)","Funname":"sendEvent","Returntype":"","Args":"ty, pid uint32, username, msg string"}],"Records":[{"Name":"const:main","Fields":["main.ErrorMsg","main.Failure","main.PromptQuestion","main.PromptSecret","main.Success","main.TextInfo","main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"struct:main.Manager","Fields":["main.Manager.authLocker sync.Mutex","main.Manager.authUserTable map[string]chan string","main.Manager.methods *struct { CurrentUser func() `out:\"username\"`; IsLiveCD func() `in:\"username\" out:\"result\"`; SwitchToUser func() `in:\"username\"`; AuthenticateUser func() `in:\"username\"`; UnlockCheck func() `in:\"username,password\"`; }","main.Manager.service *dbusutil.Service","main.Manager.signals *struct { Event struct { eventType uint32; pid uint32; username string; message string; }; UserChanged struct { username string; }; }"]},{"Name":"var:main","Fields":["main._m"]}]}
{"Filepath":"bin/dde-session-daemon/daemon.go","Functions":[{"Uniquefunname":"func (s *SessionDaemon) CallTrace(times, seconds uint32) *dbus.Error","Funname":"CallTrace","Returntype":"*dbus.Error","Args":"times, seconds uint32"},{"Uniquefunname":"func (*SessionDaemon) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewSessionDaemon(flags *Flags, settings *gio.Settings, logger *log.Logger) *SessionDaemon","Funname":"NewSessionDaemon","Returntype":"*SessionDaemon","Args":"flags *Flags, settings *gio.Settings, logger *log.Logger"},{"Uniquefunname":"func (s *SessionDaemon) StartPart2() *dbus.Error","Funname":"StartPart2","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (s *SessionDaemon) disableModules(disableModules []string) error","Funname":"disableModules","Returntype":"error","Args":"disableModules []string"},{"Uniquefunname":"func (s *SessionDaemon) enableModules(enablingModules []string) error","Funname":"enableModules","Returntype":"error","Args":"enablingModules []string"},{"Uniquefunname":"func (s *SessionDaemon) execDefaultAction()","Funname":"execDefaultAction","Returntype":"","Args":""},{"Uniquefunname":"func filterList(origin, condition []string) []string","Funname":"filterList","Returntype":"[]string","Args":"origin, condition []string"},{"Uniquefunname":"func (s *SessionDaemon) getAllDefaultDisabledModules() []string","Funname":"getAllDefaultDisabledModules","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *SessionDaemon) getAllDefaultEnabledModules() []string","Funname":"getAllDefaultEnabledModules","Returntype":"[]string","Args":""},{"Uniquefunname":"func getEnableFlag(flag *Flags) loader.EnableFlag","Funname":"getEnableFlag","Returntype":"loader.EnableFlag","Args":"flag *Flags"},{"Uniquefunname":"func (s *SessionDaemon) initModules()","Funname":"initModules","Returntype":"","Args":""},{"Uniquefunname":"func (s *SessionDaemon) isModuleDefaultEnabled(moduleName string) bool","Funname":"isModuleDefaultEnabled","Returntype":"bool","Args":"moduleName string"},{"Uniquefunname":"func (s *SessionDaemon) listModule(name string) error","Funname":"listModule","Returntype":"error","Args":"name string"},{"Uniquefunname":"func NewSessionDaemon(flags *Flags, settings *gio.Settings, logger *log.Logger) *SessionDaemon","Funname":"main.NewSessionDaemon","Returntype":"*SessionDaemon","Args":"flags *Flags, settings *gio.Settings, logger *log.Logger"},{"Uniquefunname":"func (s *SessionDaemon) CallTrace(times, seconds uint32) *dbus.Error","Funname":"main.SessionDaemon.CallTrace","Returntype":"*dbus.Error","Args":"times, seconds uint32"},{"Uniquefunname":"func (*SessionDaemon) GetInterfaceName() string","Funname":"main.SessionDaemon.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *SessionDaemon) StartPart2() *dbus.Error","Funname":"main.SessionDaemon.StartPart2","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (s *SessionDaemon) disableModules(disableModules []string) error","Funname":"main.SessionDaemon.disableModules","Returntype":"error","Args":"disableModules []string"},{"Uniquefunname":"func (s *SessionDaemon) enableModules(enablingModules []string) error","Funname":"main.SessionDaemon.enableModules","Returntype":"error","Args":"enablingModules []string"},{"Uniquefunname":"func (s *SessionDaemon) execDefaultAction()","Funname":"main.SessionDaemon.execDefaultAction","Returntype":"","Args":""},{"Uniquefunname":"func (s *SessionDaemon) getAllDefaultDisabledModules() []string","Funname":"main.SessionDaemon.getAllDefaultDisabledModules","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *SessionDaemon) getAllDefaultEnabledModules() []string","Funname":"main.SessionDaemon.getAllDefaultEnabledModules","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *SessionDaemon) initModules()","Funname":"main.SessionDaemon.initModules","Returntype":"","Args":""},{"Uniquefunname":"func (s *SessionDaemon) isModuleDefaultEnabled(moduleName string) bool","Funname":"main.SessionDaemon.isModuleDefaultEnabled","Returntype":"bool","Args":"moduleName string"},{"Uniquefunname":"func (s *SessionDaemon) listModule(name string) error","Funname":"main.SessionDaemon.listModule","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (s *SessionDaemon) register(service *dbusutil.Service) error","Funname":"main.SessionDaemon.register","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func filterList(origin, condition []string) []string","Funname":"main.filterList","Returntype":"[]string","Args":"origin, condition []string"},{"Uniquefunname":"func getEnableFlag(flag *Flags) loader.EnableFlag","Funname":"main.getEnableFlag","Returntype":"loader.EnableFlag","Args":"flag *Flags"},{"Uniquefunname":"func runMainLoop()","Funname":"main.runMainLoop","Returntype":"","Args":""},{"Uniquefunname":"func (s *SessionDaemon) register(service *dbusutil.Service) error","Funname":"register","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func runMainLoop()","Funname":"runMainLoop","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.ProfTypeCPU","main.ProfTypeMem","main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"struct:main.SessionDaemon","Fields":["main.SessionDaemon.flags *Flags","main.SessionDaemon.log *log.Logger","main.SessionDaemon.methods *struct { CallTrace func() `in:\"times,seconds\"`; }","main.SessionDaemon.part1DisabledModules []string","main.SessionDaemon.part1EnabledModules []string","main.SessionDaemon.part2DisabledModules []string","main.SessionDaemon.part2EnabledModules []string","main.SessionDaemon.settings *gio.Settings"]}]}
{"Filepath":"bin/dde-session-daemon/daemon_test.go","Functions":[{"Uniquefunname":"func TestFilterList(t *testing.T)","Funname":"TestFilterList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestFilterList(t *testing.T)","Funname":"main.TestFilterList","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"bin/dde-session-daemon/flags.go","Functions":null,"Records":[{"Name":"struct:main.Flags","Fields":["main.Flags.ForceStart *bool","main.Flags.IgnoreMissingModules *bool"]}]}
{"Filepath":"bin/dde-session-daemon/main.go","Functions":[{"Uniquefunname":"func allowRun() bool","Funname":"allowRun","Returntype":"bool","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func loadPamEnv(filename string) ([]pamEnvKeyValue, error)","Funname":"loadPamEnv","Returntype":"([]pamEnvKeyValue, error)","Args":"filename string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func allowRun() bool","Funname":"main.allowRun","Returntype":"bool","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func loadPamEnv(filename string) ([]pamEnvKeyValue, error)","Funname":"main.loadPamEnv","Returntype":"([]pamEnvKeyValue, error)","Args":"filename string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func migrateUserEnv() error","Funname":"main.migrateUserEnv","Returntype":"error","Args":""},{"Uniquefunname":"func savePamEnv(filename string, pamEnv []pamEnvKeyValue) error","Funname":"main.savePamEnv","Returntype":"error","Args":"filename string, pamEnv []pamEnvKeyValue"},{"Uniquefunname":"func syncConfigToSoundThemePlayer() error","Funname":"main.syncConfigToSoundThemePlayer","Returntype":"error","Args":""},{"Uniquefunname":"func migrateUserEnv() error","Funname":"migrateUserEnv","Returntype":"error","Args":""},{"Uniquefunname":"func savePamEnv(filename string, pamEnv []pamEnvKeyValue) error","Funname":"savePamEnv","Returntype":"error","Args":"filename string, pamEnv []pamEnvKeyValue"},{"Uniquefunname":"func syncConfigToSoundThemePlayer() error","Funname":"syncConfigToSoundThemePlayer","Returntype":"error","Args":""}],"Records":[{"Name":"var:main","Fields":["main.hasDDECookie","main.logger"]},{"Name":"struct:main.pamEnvKeyValue","Fields":["main.pamEnvKeyValue.key string","main.pamEnvKeyValue.value string"]}]}
{"Filepath":"bin/dde-session-daemon/module.go","Functions":[{"Uniquefunname":"func checkDependencies(s *gio.Settings, module loader.Module, enabled bool) error","Funname":"checkDependencies","Returntype":"error","Args":"s *gio.Settings, module loader.Module, enabled bool"},{"Uniquefunname":"func isStrInList(item string, list []string) bool","Funname":"isStrInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func listenDaemonSettings()","Funname":"listenDaemonSettings","Returntype":"","Args":""},{"Uniquefunname":"func checkDependencies(s *gio.Settings, module loader.Module, enabled bool) error","Funname":"main.checkDependencies","Returntype":"error","Args":"s *gio.Settings, module loader.Module, enabled bool"},{"Uniquefunname":"func isStrInList(item string, list []string) bool","Funname":"main.isStrInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func listenDaemonSettings()","Funname":"main.listenDaemonSettings","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.daemonSchema","main.daemonSettings","main.moduleLocker"]}]}
{"Filepath":"bin/dde-session-daemon/version.go","Functions":null,"Records":[{"Name":"const:main","Fields":["main.__VERSION__"]}]}
{"Filepath":"bin/dde-system-daemon/bluetooth.go","Functions":[{"Uniquefunname":"func (*Daemon) BluetoothGetDeviceTechnologies(adapter, device string) ([]string, *dbus.Error)","Funname":"BluetoothGetDeviceTechnologies","Returntype":"([]string, *dbus.Error)","Args":"adapter, device string"},{"Uniquefunname":"func doBluetoothGetDeviceTechnologies(filename string) ([]string, error)","Funname":"doBluetoothGetDeviceTechnologies","Returntype":"([]string, error)","Args":"filename string"},{"Uniquefunname":"func (*Daemon) BluetoothGetDeviceTechnologies(adapter, device string) ([]string, *dbus.Error)","Funname":"main.Daemon.BluetoothGetDeviceTechnologies","Returntype":"([]string, *dbus.Error)","Args":"adapter, device string"},{"Uniquefunname":"func doBluetoothGetDeviceTechnologies(filename string) ([]string, error)","Funname":"main.doBluetoothGetDeviceTechnologies","Returntype":"([]string, error)","Args":"filename string"}],"Records":[{"Name":"const:main","Fields":["main.bluetoothPrefixDir","main.kfKeyTechnologies","main.kfSectionGeneral"]}]}
{"Filepath":"bin/dde-system-daemon/gesture.go","Functions":[{"Uniquefunname":"func (*Daemon) SetLongPressDuration(duration uint32) *dbus.Error","Funname":"SetLongPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (*Daemon) SetLongPressDuration(duration uint32) *dbus.Error","Funname":"main.Daemon.SetLongPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"}],"Records":null}
{"Filepath":"bin/dde-system-daemon/main.go","Functions":[{"Uniquefunname":"func (*Daemon) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func fixDeepinInstallConfig()","Funname":"fixDeepinInstallConfig","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetInterfaceName() string","Funname":"main.Daemon.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func fixDeepinInstallConfig()","Funname":"main.fixDeepinInstallConfig","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"struct:main.Daemon","Fields":["main.Daemon.loginManager *login1.Manager","main.Daemon.methods *struct { ScalePlymouth func() `in:\"scale\"`; SetLongPressDuration func() `in:\"duration\"`; NetworkGetConnections func() `out:\"data\"`; NetworkSetConnections func() `in:\"data\"`; BluetoothGetDeviceTechnologies func() `in:\"adapter,device\" out:\"technologies\"`; }","main.Daemon.service *dbusutil.Service","main.Daemon.signals *struct { HandleForSleep struct { start bool; }; }","main.Daemon.systemSigLoop *dbusutil.SignalLoop"]},{"Name":"var:main","Fields":["main._daemon","main.logger"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]}]}
{"Filepath":"bin/dde-system-daemon/network.go","Functions":[{"Uniquefunname":"func (*Daemon) NetworkGetConnections() ([]byte, *dbus.Error)","Funname":"NetworkGetConnections","Returntype":"([]byte, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Daemon) NetworkSetConnections(data []byte) *dbus.Error","Funname":"NetworkSetConnections","Returntype":"*dbus.Error","Args":"data []byte"},{"Uniquefunname":"func getConnectionFiles(dir string) ([]string, error)","Funname":"getConnectionFiles","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func getConnectionList(dir string) (ConnectionList, error)","Funname":"getConnectionList","Returntype":"(ConnectionList, error)","Args":"dir string"},{"Uniquefunname":"func loadConnectionFile(filename string) (*Connection, error)","Funname":"loadConnectionFile","Returntype":"(*Connection, error)","Args":"filename string"},{"Uniquefunname":"func (*Daemon) NetworkGetConnections() ([]byte, *dbus.Error)","Funname":"main.Daemon.NetworkGetConnections","Returntype":"([]byte, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Daemon) NetworkSetConnections(data []byte) *dbus.Error","Funname":"main.Daemon.NetworkSetConnections","Returntype":"*dbus.Error","Args":"data []byte"},{"Uniquefunname":"func getConnectionFiles(dir string) ([]string, error)","Funname":"main.getConnectionFiles","Returntype":"([]string, error)","Args":"dir string"},{"Uniquefunname":"func getConnectionList(dir string) (ConnectionList, error)","Funname":"main.getConnectionList","Returntype":"(ConnectionList, error)","Args":"dir string"},{"Uniquefunname":"func loadConnectionFile(filename string) (*Connection, error)","Funname":"main.loadConnectionFile","Returntype":"(*Connection, error)","Args":"filename string"}],"Records":[{"Name":"const:main","Fields":["main.kfKeyInterfaceName","main.kfKeyMac","main.kfKeyMacBlacklist","main.kfKeySeenBSSID","main.kfKeyType","main.kfSectionConnection","main.kfSectionWIFI","main.nmConnDir","main.nmSyncVersion"]}]}
{"Filepath":"bin/dde-system-daemon/plymouth.go","Functions":[{"Uniquefunname":"func (*Daemon) ScalePlymouth(scale uint32) *dbus.Error","Funname":"ScalePlymouth","Returntype":"*dbus.Error","Args":"scale uint32"},{"Uniquefunname":"func (*Daemon) ScalePlymouth(scale uint32) *dbus.Error","Funname":"main.Daemon.ScalePlymouth","Returntype":"*dbus.Error","Args":"scale uint32"}],"Records":[{"Name":"var:main","Fields":["main.plymouthLocker"]}]}
{"Filepath":"bin/dde-system-daemon/power.go","Functions":[{"Uniquefunname":"func (d *Daemon) forwardPrepareForSleepSignal(service *dbusutil.Service) error","Funname":"forwardPrepareForSleepSignal","Returntype":"error","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (d *Daemon) forwardPrepareForSleepSignal(service *dbusutil.Service) error","Funname":"main.Daemon.forwardPrepareForSleepSignal","Returntype":"error","Args":"service *dbusutil.Service"}],"Records":null}
{"Filepath":"bin/dde-system-daemon/utils.go","Functions":[{"Uniquefunname":"func newSettingsBus() (dbus.BusObject, error)","Funname":"main.newSettingsBus","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func reloadConnections() error","Funname":"main.reloadConnections","Returntype":"error","Args":""},{"Uniquefunname":"func startBacklightHelperAsync(conn *dbus.Conn)","Funname":"main.startBacklightHelperAsync","Returntype":"","Args":"conn *dbus.Conn"},{"Uniquefunname":"func newSettingsBus() (dbus.BusObject, error)","Funname":"newSettingsBus","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func reloadConnections() error","Funname":"reloadConnections","Returntype":"error","Args":""},{"Uniquefunname":"func startBacklightHelperAsync(conn *dbus.Conn)","Funname":"startBacklightHelperAsync","Returntype":"","Args":"conn *dbus.Conn"}],"Records":[{"Name":"const:main","Fields":["main.methodNMReloadConns","main.nmService","main.nmSettingsIFC","main.nmSettingsPath"]},{"Name":"var:main","Fields":["main.nmSettingsObj"]}]}
{"Filepath":"bin/default-terminal/main.go","Functions":[{"Uniquefunname":"func getTerminalPath() string","Funname":"getTerminalPath","Returntype":"string","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func getTerminalPath() string","Funname":"main.getTerminalPath","Returntype":"string","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func runFallbackTerm()","Funname":"main.runFallbackTerm","Returntype":"","Args":""},{"Uniquefunname":"func runFallbackTerm()","Funname":"runFallbackTerm","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.gsKeyAppId","main.gsKeyExec","main.gsSchemaDefaultTerminal"]},{"Name":"var:main","Fields":["main.terms"]}]}
{"Filepath":"bin/grub2/main.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"main.init","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.logger","main.optDebug","main.optOSNum","main.optPrepareGfxmodeDetect","main.optSetupTheme"]}]}
{"Filepath":"bin/langselector/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"bin/search/data_rw.go","Functions":[{"Uniquefunname":"func readDatasFromFile(datas interface","Funname":"main.readDatasFromFile","Returntype":"bool","Args":"datas interface{}, filename string"},{"Uniquefunname":"func writeDatasToFile(datas interface","Funname":"main.writeDatasToFile","Returntype":"","Args":"datas interface{}, filename string"},{"Uniquefunname":"func readDatasFromFile(datas interface","Funname":"readDatasFromFile","Returntype":"bool","Args":"datas interface{}, filename string"},{"Uniquefunname":"func writeDatasToFile(datas interface","Funname":"writeDatasToFile","Returntype":"","Args":"datas interface{}, filename string"}],"Records":null}
{"Filepath":"bin/search/ifc.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) NewSearchWithStrDict(dict map[string]string) (string, bool, *dbus.Error)","Funname":"NewSearchWithStrDict","Returntype":"(string, bool, *dbus.Error)","Args":"dict map[string]string"},{"Uniquefunname":"func (m *Manager) NewSearchWithStrList(list []string) (string, bool, *dbus.Error)","Funname":"NewSearchWithStrList","Returntype":"(string, bool, *dbus.Error)","Args":"list []string"},{"Uniquefunname":"func (m *Manager) SearchStartWithString(str, md5 string) ([]string, *dbus.Error)","Funname":"SearchStartWithString","Returntype":"([]string, *dbus.Error)","Args":"str, md5 string"},{"Uniquefunname":"func (m *Manager) SearchString(str, md5 string) ([]string, *dbus.Error)","Funname":"SearchString","Returntype":"([]string, *dbus.Error)","Args":"str, md5 string"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"main.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) NewSearchWithStrDict(dict map[string]string) (string, bool, *dbus.Error)","Funname":"main.Manager.NewSearchWithStrDict","Returntype":"(string, bool, *dbus.Error)","Args":"dict map[string]string"},{"Uniquefunname":"func (m *Manager) NewSearchWithStrList(list []string) (string, bool, *dbus.Error)","Funname":"main.Manager.NewSearchWithStrList","Returntype":"(string, bool, *dbus.Error)","Args":"list []string"},{"Uniquefunname":"func (m *Manager) SearchStartWithString(str, md5 string) ([]string, *dbus.Error)","Funname":"main.Manager.SearchStartWithString","Returntype":"([]string, *dbus.Error)","Args":"str, md5 string"},{"Uniquefunname":"func (m *Manager) SearchString(str, md5 string) ([]string, *dbus.Error)","Funname":"main.Manager.SearchString","Returntype":"([]string, *dbus.Error)","Args":"str, md5 string"},{"Uniquefunname":"func strIsInList(str string, list []string) bool","Funname":"main.strIsInList","Returntype":"bool","Args":"str string, list []string"},{"Uniquefunname":"func strIsInList(str string, list []string) bool","Funname":"strIsInList","Returntype":"bool","Args":"str string, list []string"}],"Records":null}
{"Filepath":"bin/search/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"main.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:main.Manager","Fields":["main.Manager.methods *struct { NewSearchWithStrList func() `in:\"list\" out:\"md5sum,ok\"`; NewSearchWithStrDict func() `in:\"dict\" out:\"md5sum,ok\"`; SearchString func() `in:\"str,md5sum\" out:\"result\"`; SearchStartWithString func() `in:\"str,md5sum\" out:\"result\"`; }","main.Manager.service *dbusutil.Service","main.Manager.writeEnd chan bool","main.Manager.writeStart bool"]},{"Name":"const:main","Fields":["main.dbusInterface","main.dbusPath","main.dbusServiceName"]},{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"bin/search/matcher.go","Functions":[{"Uniquefunname":"func addMatcher(template, key string, score uint32, m map[*regexp.Regexp]uint32)error","Funname":"addMatcher","Returntype":"error","Args":"template, key string, score uint32, m map[*regexp.Regexp]uint32"},{"Uniquefunname":"func getMatchers(key string) map[*regexp.Regexp]uint32","Funname":"getMatchers","Returntype":"map[*regexp.Regexp]uint32","Args":"key string"},{"Uniquefunname":"func main.addMatcher(template, key string, score uint32, m map[*regexp.Regexp]uint32)error","Funname":"main.addMatcher","Returntype":"error","Args":"template, key string, score uint32, m map[*regexp.Regexp]uint32"},{"Uniquefunname":"func getMatchers(key string) map[*regexp.Regexp]uint32","Funname":"main.getMatchers","Returntype":"map[*regexp.Regexp]uint32","Args":"key string"},{"Uniquefunname":"func splitKey(key string) []string","Funname":"main.splitKey","Returntype":"[]string","Args":"key string"},{"Uniquefunname":"func splitKey(key string) []string","Funname":"splitKey","Returntype":"[]string","Args":"key string"}],"Records":[{"Name":"const:main","Fields":["main.ABOVE_AVERAGE","main.AVERAGE","main.BELOW_AVERAGE","main.EXCELLENT","main.GOOD","main.HIGHEST","main.POOR","main.VERY_GOOD"]}]}
{"Filepath":"bin/search/search.go","Functions":[{"Uniquefunname":"func getCachePath() (string, bool)","Funname":"getCachePath","Returntype":"(string, bool)","Args":""},{"Uniquefunname":"func getMatchReuslt(info *dataInfo, matchers map[*regexp.Regexp]uint32, res *matchResInfo)","Funname":"getMatchReuslt","Returntype":"","Args":"info *dataInfo, matchers map[*regexp.Regexp]uint32, res *matchResInfo"},{"Uniquefunname":"func getCachePath() (string, bool)","Funname":"main.getCachePath","Returntype":"(string, bool)","Args":""},{"Uniquefunname":"func main.getMatchReuslt(info *dataInfo, matchers map[*regexp.Regexp]uint32, res *matchResInfo)","Funname":"main.getMatchReuslt","Returntype":"","Args":"info *dataInfo, matchers map[*regexp.Regexp]uint32, res *matchResInfo"},{"Uniquefunname":"func searchStartWithString(key, md5 string) []string","Funname":"main.searchStartWithString","Returntype":"[]string","Args":"key, md5 string"},{"Uniquefunname":"func searchString(key, md5 string) []string","Funname":"main.searchString","Returntype":"[]string","Args":"key, md5 string"},{"Uniquefunname":"func sortMatchResult(res *matchResInfo) []string","Funname":"main.sortMatchResult","Returntype":"[]string","Args":"res *matchResInfo"},{"Uniquefunname":"func searchStartWithString(key, md5 string) []string","Funname":"searchStartWithString","Returntype":"[]string","Args":"key, md5 string"},{"Uniquefunname":"func searchString(key, md5 string) []string","Funname":"searchString","Returntype":"[]string","Args":"key, md5 string"},{"Uniquefunname":"func sortMatchResult(res *matchResInfo) []string","Funname":"sortMatchResult","Returntype":"[]string","Args":"res *matchResInfo"}],"Records":[{"Name":"struct:main.dataInfo","Fields":["main.dataInfo.Key string","main.dataInfo.Value string"]},{"Name":"struct:main.matchResInfo","Fields":["main.matchResInfo.aboveAvgList []string","main.matchResInfo.avgList []string","main.matchResInfo.belowAvgList []string","main.matchResInfo.excellentList []string","main.matchResInfo.goodList []string","main.matchResInfo.highestList []string","main.matchResInfo.poorList []string","main.matchResInfo.veryGoodList []string"]}]}
{"Filepath":"bin/soundeffect/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"bin/theme-thumb-tool/main.go","Functions":[{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""},{"Uniquefunname":"func moveThumbFiles(files []string)","Funname":"main.moveThumbFiles","Returntype":"","Args":"files []string"},{"Uniquefunname":"func usage()","Funname":"main.usage","Returntype":"","Args":""},{"Uniquefunname":"func moveThumbFiles(files []string)","Funname":"moveThumbFiles","Returntype":"","Args":"files []string"},{"Uniquefunname":"func usage()","Funname":"usage","Returntype":"","Args":""}],"Records":[{"Name":"const:main","Fields":["main.TypeAll","main.TypeBackground","main.TypeCursor","main.TypeGtk","main.TypeIcon"]},{"Name":"var:main","Fields":["main.destDir","main.forceFlag","main.thumbType"]}]}
{"Filepath":"bin/theme-thumb-tool/thumbnail.go","Functions":[{"Uniquefunname":"func genAllThumbnails(force bool) []string","Funname":"genAllThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genBgThumbnails(force bool) []string","Funname":"genBgThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genCursorThumbnails(force bool) []string","Funname":"genCursorThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genGtkThumbnails(force bool) []string","Funname":"genGtkThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genIconThumbnails(force bool) []string","Funname":"genIconThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func getImagesInDir() []string","Funname":"getImagesInDir","Returntype":"[]string","Args":""},{"Uniquefunname":"func getThumbBg() string","Funname":"getThumbBg","Returntype":"string","Args":""},{"Uniquefunname":"func genAllThumbnails(force bool) []string","Funname":"main.genAllThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genBgThumbnails(force bool) []string","Funname":"main.genBgThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genCursorThumbnails(force bool) []string","Funname":"main.genCursorThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genGtkThumbnails(force bool) []string","Funname":"main.genGtkThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func genIconThumbnails(force bool) []string","Funname":"main.genIconThumbnails","Returntype":"[]string","Args":"force bool"},{"Uniquefunname":"func getImagesInDir() []string","Funname":"main.getImagesInDir","Returntype":"[]string","Args":""},{"Uniquefunname":"func getThumbBg() string","Funname":"main.getThumbBg","Returntype":"string","Args":""}],"Records":[{"Name":"const:main","Fields":["main.defaultHeight","main.defaultWidth","main.thumbBgDir"]}]}
{"Filepath":"bin/user-config/config_datas.go","Functions":[{"Uniquefunname":"func CopyUserDatas(user string)","Funname":"CopyUserDatas","Returntype":"","Args":"user string"},{"Uniquefunname":"func changeDirOwner(user, dir string) error","Funname":"changeDirOwner","Returntype":"error","Args":"user, dir string"},{"Uniquefunname":"func copyBroswerConfig(home, lang string) error","Funname":"copyBroswerConfig","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copyDeepinManuals(home, lang string) error","Funname":"copyDeepinManuals","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copySoundThemeData(home, lang string) error","Funname":"copySoundThemeData","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copyXDGDirConfig(home, lang string) error","Funname":"copyXDGDirConfig","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func getDefaultLang() string","Funname":"getDefaultLang","Returntype":"string","Args":""},{"Uniquefunname":"func CopyUserDatas(user string)","Funname":"main.CopyUserDatas","Returntype":"","Args":"user string"},{"Uniquefunname":"func changeDirOwner(user, dir string) error","Funname":"main.changeDirOwner","Returntype":"error","Args":"user, dir string"},{"Uniquefunname":"func copyBroswerConfig(home, lang string) error","Funname":"main.copyBroswerConfig","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copyDeepinManuals(home, lang string) error","Funname":"main.copyDeepinManuals","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copySoundThemeData(home, lang string) error","Funname":"main.copySoundThemeData","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func copyXDGDirConfig(home, lang string) error","Funname":"main.copyXDGDirConfig","Returntype":"error","Args":"home, lang string"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"main.doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func getDefaultLang() string","Funname":"main.getDefaultLang","Returntype":"string","Args":""},{"Uniquefunname":"func renameXDGDirs(home, lang string)","Funname":"main.renameXDGDirs","Returntype":"","Args":"home, lang string"},{"Uniquefunname":"func renameXDGDirs(home, lang string)","Funname":"renameXDGDirs","Returntype":"","Args":"home, lang string"}],"Records":[{"Name":"const:main","Fields":["main.defaultLangFile","main.defaultLangName"]}]}
{"Filepath":"bin/user-config/main.go","Functions":[{"Uniquefunname":"func getUsername(args []string) (string, bool, error)","Funname":"getUsername","Returntype":"(string, bool, error)","Args":"args []string"},{"Uniquefunname":"func helper()","Funname":"helper","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func getUsername(args []string) (string, bool, error)","Funname":"main.getUsername","Returntype":"(string, bool, error)","Args":"args []string"},{"Uniquefunname":"func helper()","Funname":"main.helper","Returntype":"","Args":""},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":null}
{"Filepath":"bluetooth/a2dp_workaround.go","Functions":[{"Uniquefunname":"func (b *Bluetooth) disconnectA2DPDeviceExcept(d *device)","Funname":"bluetooth.Bluetooth.disconnectA2DPDeviceExcept","Returntype":"","Args":"d *device"},{"Uniquefunname":"func (b *Bluetooth) disconnectA2DPDeviceExcept(d *device)","Funname":"disconnectA2DPDeviceExcept","Returntype":"","Args":"d *device"}],"Records":null}
{"Filepath":"bluetooth/adapter.go","Functions":[{"Uniquefunname":"func (a *adapter) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (a *adapter) String() string","Funname":"bluetooth.adapter.String","Returntype":"string","Args":""},{"Uniquefunname":"func (a *adapter) connectProperties()","Funname":"bluetooth.adapter.connectProperties","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) destroy()","Funname":"bluetooth.adapter.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) notifyAdapterAdded()","Funname":"bluetooth.adapter.notifyAdapterAdded","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) notifyAdapterRemoved()","Funname":"bluetooth.adapter.notifyAdapterRemoved","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) notifyPropertiesChanged()","Funname":"bluetooth.adapter.notifyPropertiesChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) startDiscovery()","Funname":"bluetooth.adapter.startDiscovery","Returntype":"","Args":""},{"Uniquefunname":"func newAdapter(systemSigLoop *dbusutil.SignalLoop, apath dbus.ObjectPath) (a *adapter)","Funname":"bluetooth.newAdapter","Returntype":"(a *adapter)","Args":"systemSigLoop *dbusutil.SignalLoop, apath dbus.ObjectPath"},{"Uniquefunname":"func (a *adapter) connectProperties()","Funname":"connectProperties","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func newAdapter(systemSigLoop *dbusutil.SignalLoop, apath dbus.ObjectPath) (a *adapter)","Funname":"newAdapter","Returntype":"(a *adapter)","Args":"systemSigLoop *dbusutil.SignalLoop, apath dbus.ObjectPath"},{"Uniquefunname":"func (a *adapter) notifyAdapterAdded()","Funname":"notifyAdapterAdded","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) notifyAdapterRemoved()","Funname":"notifyAdapterRemoved","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) notifyPropertiesChanged()","Funname":"notifyPropertiesChanged","Returntype":"","Args":""},{"Uniquefunname":"func (a *adapter) startDiscovery()","Funname":"startDiscovery","Returntype":"","Args":""}],"Records":[{"Name":"struct:bluetooth.adapter","Fields":["bluetooth.adapter.Alias string","bluetooth.adapter.Discoverable bool","bluetooth.adapter.DiscoverableTimeout uint32","bluetooth.adapter.Discovering bool","bluetooth.adapter.Name string","bluetooth.adapter.Path dbus.ObjectPath","bluetooth.adapter.Powered bool","bluetooth.adapter.address string","bluetooth.adapter.core *bluez.HCI","bluetooth.adapter.discoveringTimeout *time.Timer","bluetooth.adapter.discoveringTimeoutFlag bool","bluetooth.adapter.scanReadyToConnectDeviceTimeout *time.Timer","bluetooth.adapter.scanReadyToConnectDeviceTimeoutFlag bool"]},{"Name":"var:bluetooth","Fields":["bluetooth.defaultDiscoveringTimeout","bluetooth.defaultFindDeviceTimeout"]}]}
{"Filepath":"bluetooth/agent.go","Functions":[{"Uniquefunname":"func (a *agent) AuthorizeService(dpath dbus.ObjectPath, uuid string) *dbus.Error","Funname":"AuthorizeService","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, uuid string"},{"Uniquefunname":"func (a *agent) Cancel() *dbus.Error","Funname":"Cancel","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func DisplayPasskey(dpath dbus.ObjectPath, passkey uint32, entered uint16)*dbus.Error","Funname":"DisplayPasskey","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, passkey uint32, entered uint16"},{"Uniquefunname":"func (a *agent) DisplayPinCode(devPath dbus.ObjectPath, pinCode string) (err *dbus.Error)","Funname":"DisplayPinCode","Returntype":"(err *dbus.Error)","Args":"devPath dbus.ObjectPath, pinCode string"},{"Uniquefunname":"func (*agent) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *agent) Release() *dbus.Error","Funname":"Release","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *agent) RequestAuthorization(dpath dbus.ObjectPath) *dbus.Error","Funname":"RequestAuthorization","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) RequestConfirmation(dpath dbus.ObjectPath, passkey uint32) *dbus.Error","Funname":"RequestConfirmation","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, passkey uint32"},{"Uniquefunname":"func (a *agent) RequestPasskey(dpath dbus.ObjectPath) (passkey uint32, busErr *dbus.Error)","Funname":"RequestPasskey","Returntype":"(passkey uint32, busErr *dbus.Error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) RequestPinCode(dpath dbus.ObjectPath) (pincode string, busErr *dbus.Error)","Funname":"RequestPinCode","Returntype":"(pincode string, busErr *dbus.Error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) AuthorizeService(dpath dbus.ObjectPath, uuid string) *dbus.Error","Funname":"bluetooth.agent.AuthorizeService","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, uuid string"},{"Uniquefunname":"func (a *agent) Cancel() *dbus.Error","Funname":"bluetooth.agent.Cancel","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func bluetooth.agent.DisplayPasskey(dpath dbus.ObjectPath, passkey uint32, entered uint16)*dbus.Error","Funname":"bluetooth.agent.DisplayPasskey","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, passkey uint32, entered uint16"},{"Uniquefunname":"func (a *agent) DisplayPinCode(devPath dbus.ObjectPath, pinCode string) (err *dbus.Error)","Funname":"bluetooth.agent.DisplayPinCode","Returntype":"(err *dbus.Error)","Args":"devPath dbus.ObjectPath, pinCode string"},{"Uniquefunname":"func (*agent) GetInterfaceName() string","Funname":"bluetooth.agent.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *agent) Release() *dbus.Error","Funname":"bluetooth.agent.Release","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (a *agent) RequestAuthorization(dpath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.agent.RequestAuthorization","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) RequestConfirmation(dpath dbus.ObjectPath, passkey uint32) *dbus.Error","Funname":"bluetooth.agent.RequestConfirmation","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, passkey uint32"},{"Uniquefunname":"func (a *agent) RequestPasskey(dpath dbus.ObjectPath) (passkey uint32, busErr *dbus.Error)","Funname":"bluetooth.agent.RequestPasskey","Returntype":"(passkey uint32, busErr *dbus.Error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) RequestPinCode(dpath dbus.ObjectPath) (pincode string, busErr *dbus.Error)","Funname":"bluetooth.agent.RequestPinCode","Returntype":"(pincode string, busErr *dbus.Error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (a *agent) destroy()","Funname":"bluetooth.agent.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (a *agent) emit(signal string, devPath dbus.ObjectPath, args ...interface","Funname":"bluetooth.agent.emit","Returntype":"(err error)","Args":"signal string, devPath dbus.ObjectPath, args ...interface{}"},{"Uniquefunname":"func (a *agent) emitCancelled()","Funname":"bluetooth.agent.emitCancelled","Returntype":"","Args":""},{"Uniquefunname":"func bluetooth.agent.emitRequest(devPath dbus.ObjectPath, signal string, args ...interface{})(auth authorize, err error)","Funname":"bluetooth.agent.emitRequest","Returntype":"(auth authorize, err error)","Args":"devPath dbus.ObjectPath, signal string, args ...interface{}"},{"Uniquefunname":"func (a *agent) init()","Funname":"bluetooth.agent.init","Returntype":"","Args":""},{"Uniquefunname":"func (a *agent) registerDefaultAgent()","Funname":"bluetooth.agent.registerDefaultAgent","Returntype":"","Args":""},{"Uniquefunname":"func (a *agent) waitResponse() (auth authorize, err error)","Funname":"bluetooth.agent.waitResponse","Returntype":"(auth authorize, err error)","Args":""},{"Uniquefunname":"func newAgent(service *dbusutil.Service) (a *agent)","Funname":"bluetooth.newAgent","Returntype":"(a *agent)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (a *agent) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (a *agent) emit(signal string, devPath dbus.ObjectPath, args ...interface","Funname":"emit","Returntype":"(err error)","Args":"signal string, devPath dbus.ObjectPath, args ...interface{}"},{"Uniquefunname":"func (a *agent) emitCancelled()","Funname":"emitCancelled","Returntype":"","Args":""},{"Uniquefunname":"func emitRequest(devPath dbus.ObjectPath, signal string, args ...interface{})(auth authorize, err error)","Funname":"emitRequest","Returntype":"(auth authorize, err error)","Args":"devPath dbus.ObjectPath, signal string, args ...interface{}"},{"Uniquefunname":"func (a *agent) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newAgent(service *dbusutil.Service) (a *agent)","Funname":"newAgent","Returntype":"(a *agent)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (a *agent) registerDefaultAgent()","Funname":"registerDefaultAgent","Returntype":"","Args":""},{"Uniquefunname":"func (a *agent) waitResponse() (auth authorize, err error)","Funname":"waitResponse","Returntype":"(auth authorize, err error)","Args":""}],"Records":[{"Name":"struct:bluetooth.agent","Fields":["bluetooth.agent.b *Bluetooth","bluetooth.agent.bluezManager *bluez.Manager","bluetooth.agent.methods *struct { RequestPinCode func() `in:\"device\" out:\"pinCode\"`; DisplayPinCode func() `in:\"device,pinCode\"`; RequestPasskey func() `in:\"device\" out:\"passkey\"`; DisplayPasskey func() `in:\"device,passkey,entered\"`; RequestConfirmation func() `in:\"device,passkey\"`; RequestAuthorization func() `in:\"device\"`; AuthorizeService func() `in:\"device,uuid\"`; }","bluetooth.agent.mu sync.Mutex","bluetooth.agent.requestDevice dbus.ObjectPath","bluetooth.agent.rspChan chan authorize","bluetooth.agent.service *dbusutil.Service"]},{"Name":"const:bluetooth","Fields":["bluetooth.agentDBusInterface","bluetooth.agentDBusPath"]},{"Name":"struct:bluetooth.authorize","Fields":["bluetooth.authorize.accept bool","bluetooth.authorize.key string","bluetooth.authorize.path dbus.ObjectPath"]}]}
{"Filepath":"bluetooth/bluetooth.go","Functions":[{"Uniquefunname":"func (*Bluetooth) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (b *Bluetooth) addAdapter(apath dbus.ObjectPath)","Funname":"addAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) addConnectedDevice(connectedDev *device)","Funname":"addConnectedDevice","Returntype":"","Args":"connectedDev *device"},{"Uniquefunname":"func (b *Bluetooth) addDevice(dpath dbus.ObjectPath)","Funname":"addDevice","Returntype":"","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (*Bluetooth) GetInterfaceName() string","Funname":"bluetooth.Bluetooth.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (b *Bluetooth) addAdapter(apath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.addAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) addConnectedDevice(connectedDev *device)","Funname":"bluetooth.Bluetooth.addConnectedDevice","Returntype":"","Args":"connectedDev *device"},{"Uniquefunname":"func (b *Bluetooth) addDevice(dpath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.addDevice","Returntype":"","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) destroy()","Funname":"bluetooth.Bluetooth.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) doRemoveAdapter(apath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.doRemoveAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) doRemoveDevice(devices []*device, i int) []*device","Funname":"bluetooth.Bluetooth.doRemoveDevice","Returntype":"[]*device","Args":"devices []*device, i int"},{"Uniquefunname":"func (b *Bluetooth) doSendFiles(session *obex.Session, files []string, totalSize uint64)","Funname":"bluetooth.Bluetooth.doSendFiles","Returntype":"","Args":"session *obex.Session, files []string, totalSize uint64"},{"Uniquefunname":"func (b *Bluetooth) emitObexSessionCreated(sessionPath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.emitObexSessionCreated","Returntype":"","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func bluetooth.Bluetooth.emitObexSessionProgress(sessionPath dbus.ObjectPath, totalSize uint64, transferred uint64, currentIdx int)","Funname":"bluetooth.Bluetooth.emitObexSessionProgress","Returntype":"","Args":"sessionPath dbus.ObjectPath, totalSize uint64, transferred uint64, currentIdx int"},{"Uniquefunname":"func (b *Bluetooth) emitObexSessionRemoved(sessionPath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.emitObexSessionRemoved","Returntype":"","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func bluetooth.Bluetooth.emitTransferCreated(file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.emitTransferCreated","Returntype":"","Args":"file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath"},{"Uniquefunname":"func bluetooth.Bluetooth.emitTransferFailed(file string, sessionPath dbus.ObjectPath, errInfo string)","Funname":"bluetooth.Bluetooth.emitTransferFailed","Returntype":"","Args":"file string, sessionPath dbus.ObjectPath, errInfo string"},{"Uniquefunname":"func bluetooth.Bluetooth.emitTransferRemoved(file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath, done bool)","Funname":"bluetooth.Bluetooth.emitTransferRemoved","Returntype":"","Args":"file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath, done bool"},{"Uniquefunname":"func (b *Bluetooth) feed(devPath dbus.ObjectPath, accept bool, key string) (err error)","Funname":"bluetooth.Bluetooth.feed","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, accept bool, key string"},{"Uniquefunname":"func (b *Bluetooth) findBackupDevice(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"bluetooth.Bluetooth.findBackupDevice","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) findDevice(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"bluetooth.Bluetooth.findDevice","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getAdapter(apath dbus.ObjectPath) (a *adapter, err error)","Funname":"bluetooth.Bluetooth.getAdapter","Returntype":"(a *adapter, err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getAdapterDevices(adapterAddress string) []*device","Funname":"bluetooth.Bluetooth.getAdapterDevices","Returntype":"[]*device","Args":"adapterAddress string"},{"Uniquefunname":"func (b *Bluetooth) getBackupDevice(dpath dbus.ObjectPath) (*backupDevice, error)","Funname":"bluetooth.Bluetooth.getBackupDevice","Returntype":"(*backupDevice, error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getConnectedDeviceByAddress(address string) *device","Funname":"bluetooth.Bluetooth.getConnectedDeviceByAddress","Returntype":"*device","Args":"address string"},{"Uniquefunname":"func (b *Bluetooth) getDevice(dpath dbus.ObjectPath) (*device, error)","Funname":"bluetooth.Bluetooth.getDevice","Returntype":"(*device, error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getDeviceIndex(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"bluetooth.Bluetooth.getDeviceIndex","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getPairedDeviceList() []*device","Funname":"bluetooth.Bluetooth.getPairedDeviceList","Returntype":"[]*device","Args":""},{"Uniquefunname":"func (b *Bluetooth) getTechnologies(dev *device) ([]string, error)","Funname":"bluetooth.Bluetooth.getTechnologies","Returntype":"([]string, error)","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) handleDBusNameOwnerChanged(name, oldOwner, newOwner string)","Funname":"bluetooth.Bluetooth.handleDBusNameOwnerChanged","Returntype":"","Args":"name, oldOwner, newOwner string"},{"Uniquefunname":"func bluetooth.Bluetooth.handleInterfacesAdded(path dbus.ObjectPath, data map[string]map[string]dbus.Variant)","Funname":"bluetooth.Bluetooth.handleInterfacesAdded","Returntype":"","Args":"path dbus.ObjectPath, data map[string]map[string]dbus.Variant"},{"Uniquefunname":"func (b *Bluetooth) handleInterfacesRemoved(path dbus.ObjectPath, interfaces []string)","Funname":"bluetooth.Bluetooth.handleInterfacesRemoved","Returntype":"","Args":"path dbus.ObjectPath, interfaces []string"},{"Uniquefunname":"func (b *Bluetooth) init()","Funname":"bluetooth.Bluetooth.init","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) isAdapterExists(apath dbus.ObjectPath) bool","Funname":"bluetooth.Bluetooth.isAdapterExists","Returntype":"bool","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) isBREDRDevice(dev *device) bool","Funname":"bluetooth.Bluetooth.isBREDRDevice","Returntype":"bool","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) isDeviceExists(dpath dbus.ObjectPath) bool","Funname":"bluetooth.Bluetooth.isDeviceExists","Returntype":"bool","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) loadObjects()","Funname":"bluetooth.Bluetooth.loadObjects","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) removeAdapter(apath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.removeAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) removeAllObjects()","Funname":"bluetooth.Bluetooth.removeAllObjects","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) removeConnectedDevice(disconnectedDev *device)","Funname":"bluetooth.Bluetooth.removeConnectedDevice","Returntype":"","Args":"disconnectedDev *device"},{"Uniquefunname":"func (b *Bluetooth) removeDevice(dpath dbus.ObjectPath)","Funname":"bluetooth.Bluetooth.removeDevice","Returntype":"","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) sendFiles(dev *device, files []string) (dbus.ObjectPath, error)","Funname":"bluetooth.Bluetooth.sendFiles","Returntype":"(dbus.ObjectPath, error)","Args":"dev *device, files []string"},{"Uniquefunname":"func (b *Bluetooth) tryConnectPairedDevice(dev *device) bool","Funname":"bluetooth.Bluetooth.tryConnectPairedDevice","Returntype":"bool","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) tryConnectPairedDevices()","Funname":"bluetooth.Bluetooth.tryConnectPairedDevices","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) unblockBluetoothDevice()","Funname":"bluetooth.Bluetooth.unblockBluetoothDevice","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) updateState()","Funname":"bluetooth.Bluetooth.updateState","Returntype":"","Args":""},{"Uniquefunname":"func newBluetooth(service *dbusutil.Service) (b *Bluetooth)","Funname":"bluetooth.newBluetooth","Returntype":"(b *Bluetooth)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (b *Bluetooth) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) doRemoveAdapter(apath dbus.ObjectPath)","Funname":"doRemoveAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) doRemoveDevice(devices []*device, i int) []*device","Funname":"doRemoveDevice","Returntype":"[]*device","Args":"devices []*device, i int"},{"Uniquefunname":"func (b *Bluetooth) doSendFiles(session *obex.Session, files []string, totalSize uint64)","Funname":"doSendFiles","Returntype":"","Args":"session *obex.Session, files []string, totalSize uint64"},{"Uniquefunname":"func (b *Bluetooth) emitObexSessionCreated(sessionPath dbus.ObjectPath)","Funname":"emitObexSessionCreated","Returntype":"","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func emitObexSessionProgress(sessionPath dbus.ObjectPath, totalSize uint64, transferred uint64, currentIdx int)","Funname":"emitObexSessionProgress","Returntype":"","Args":"sessionPath dbus.ObjectPath, totalSize uint64, transferred uint64, currentIdx int"},{"Uniquefunname":"func (b *Bluetooth) emitObexSessionRemoved(sessionPath dbus.ObjectPath)","Funname":"emitObexSessionRemoved","Returntype":"","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func emitTransferCreated(file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath)","Funname":"emitTransferCreated","Returntype":"","Args":"file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath"},{"Uniquefunname":"func emitTransferFailed(file string, sessionPath dbus.ObjectPath, errInfo string)","Funname":"emitTransferFailed","Returntype":"","Args":"file string, sessionPath dbus.ObjectPath, errInfo string"},{"Uniquefunname":"func emitTransferRemoved(file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath, done bool)","Funname":"emitTransferRemoved","Returntype":"","Args":"file string, transferPath dbus.ObjectPath, sessionPath dbus.ObjectPath, done bool"},{"Uniquefunname":"func (b *Bluetooth) feed(devPath dbus.ObjectPath, accept bool, key string) (err error)","Funname":"feed","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, accept bool, key string"},{"Uniquefunname":"func (b *Bluetooth) findBackupDevice(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"findBackupDevice","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) findDevice(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"findDevice","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getAdapter(apath dbus.ObjectPath) (a *adapter, err error)","Funname":"getAdapter","Returntype":"(a *adapter, err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getAdapterDevices(adapterAddress string) []*device","Funname":"getAdapterDevices","Returntype":"[]*device","Args":"adapterAddress string"},{"Uniquefunname":"func (b *Bluetooth) getBackupDevice(dpath dbus.ObjectPath) (*backupDevice, error)","Funname":"getBackupDevice","Returntype":"(*backupDevice, error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getConnectedDeviceByAddress(address string) *device","Funname":"getConnectedDeviceByAddress","Returntype":"*device","Args":"address string"},{"Uniquefunname":"func (b *Bluetooth) getDevice(dpath dbus.ObjectPath) (*device, error)","Funname":"getDevice","Returntype":"(*device, error)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getDeviceIndex(dpath dbus.ObjectPath) (apath dbus.ObjectPath, index int)","Funname":"getDeviceIndex","Returntype":"(apath dbus.ObjectPath, index int)","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) getPairedDeviceList() []*device","Funname":"getPairedDeviceList","Returntype":"[]*device","Args":""},{"Uniquefunname":"func (b *Bluetooth) getTechnologies(dev *device) ([]string, error)","Funname":"getTechnologies","Returntype":"([]string, error)","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) handleDBusNameOwnerChanged(name, oldOwner, newOwner string)","Funname":"handleDBusNameOwnerChanged","Returntype":"","Args":"name, oldOwner, newOwner string"},{"Uniquefunname":"func handleInterfacesAdded(path dbus.ObjectPath, data map[string]map[string]dbus.Variant)","Funname":"handleInterfacesAdded","Returntype":"","Args":"path dbus.ObjectPath, data map[string]map[string]dbus.Variant"},{"Uniquefunname":"func (b *Bluetooth) handleInterfacesRemoved(path dbus.ObjectPath, interfaces []string)","Funname":"handleInterfacesRemoved","Returntype":"","Args":"path dbus.ObjectPath, interfaces []string"},{"Uniquefunname":"func (b *Bluetooth) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) isAdapterExists(apath dbus.ObjectPath) bool","Funname":"isAdapterExists","Returntype":"bool","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) isBREDRDevice(dev *device) bool","Funname":"isBREDRDevice","Returntype":"bool","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) isDeviceExists(dpath dbus.ObjectPath) bool","Funname":"isDeviceExists","Returntype":"bool","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) loadObjects()","Funname":"loadObjects","Returntype":"","Args":""},{"Uniquefunname":"func newBluetooth(service *dbusutil.Service) (b *Bluetooth)","Funname":"newBluetooth","Returntype":"(b *Bluetooth)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (b *Bluetooth) removeAdapter(apath dbus.ObjectPath)","Funname":"removeAdapter","Returntype":"","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) removeAllObjects()","Funname":"removeAllObjects","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) removeConnectedDevice(disconnectedDev *device)","Funname":"removeConnectedDevice","Returntype":"","Args":"disconnectedDev *device"},{"Uniquefunname":"func (b *Bluetooth) removeDevice(dpath dbus.ObjectPath)","Funname":"removeDevice","Returntype":"","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) sendFiles(dev *device, files []string) (dbus.ObjectPath, error)","Funname":"sendFiles","Returntype":"(dbus.ObjectPath, error)","Args":"dev *device, files []string"},{"Uniquefunname":"func (b *Bluetooth) tryConnectPairedDevice(dev *device) bool","Funname":"tryConnectPairedDevice","Returntype":"bool","Args":"dev *device"},{"Uniquefunname":"func (b *Bluetooth) tryConnectPairedDevices()","Funname":"tryConnectPairedDevices","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) unblockBluetoothDevice()","Funname":"unblockBluetoothDevice","Returntype":"","Args":""},{"Uniquefunname":"func (b *Bluetooth) updateState()","Funname":"updateState","Returntype":"","Args":""}],"Records":[{"Name":"const:bluetooth","Fields":["bluetooth.AudioCard","bluetooth.CameraPhone","bluetooth.CameraVideo","bluetooth.Computer","bluetooth.InputGaming","bluetooth.InputKeyboard","bluetooth.InputMouse","bluetooth.InputTablet","bluetooth.Modem","bluetooth.NetworkWireless","bluetooth.Phone","bluetooth.Printer","bluetooth.StateAvailable","bluetooth.StateConnected","bluetooth.StateUnavailable","bluetooth.bluetoothSchema","bluetooth.bluezAdapterDBusInterface","bluetooth.bluezDBusServiceName","bluetooth.bluezDeviceDBusInterface","bluetooth.daemonSysIFC","bluetooth.daemonSysPath","bluetooth.daemonSysService","bluetooth.dbusInterface","bluetooth.dbusPath","bluetooth.dbusServiceName","bluetooth.displaySwitch","bluetooth.methodSysBlueGetDeviceTech","bluetooth.transferStatusActive","bluetooth.transferStatusComplete","bluetooth.transferStatusError","bluetooth.transferStatusQueued","bluetooth.transferStatusSuspended"]},{"Name":"struct:bluetooth.Bluetooth","Fields":["bluetooth.Bluetooth.DisplaySwitch gsprop.Bool","bluetooth.Bluetooth.PropsMu sync.RWMutex","bluetooth.Bluetooth.State uint32","bluetooth.Bluetooth.Transportable bool","bluetooth.Bluetooth.adapters map[dbus.ObjectPath]*adapter","bluetooth.Bluetooth.adaptersLock sync.Mutex","bluetooth.Bluetooth.agent *agent","bluetooth.Bluetooth.apiDevice *apidevice.Device","bluetooth.Bluetooth.backupDeviceLock sync.Mutex","bluetooth.Bluetooth.backupDevices map[dbus.ObjectPath][]*backupDevice","bluetooth.Bluetooth.config *config","bluetooth.Bluetooth.connectedDevices map[dbus.ObjectPath][]*device","bluetooth.Bluetooth.connectedLock sync.RWMutex","bluetooth.Bluetooth.devices map[dbus.ObjectPath][]*device","bluetooth.Bluetooth.devicesLock sync.Mutex","bluetooth.Bluetooth.methods *struct { DebugInfo func() `out:\"info\"`; GetDevices func() `in:\"adapter\" out:\"devicesJSON\"`; ConnectDevice func() `in:\"device,adapter\"`; DisconnectDevice func() `in:\"device\"`; RemoveDevice func() `in:\"adapter,device\"`; SetDeviceAlias func() `in:\"device,alias\"`; SetDeviceTrusted func() `in:\"device,trusted\"`; Confirm func() `in:\"device,accept\"`; FeedPinCode func() `in:\"device,accept,pinCode\"`; FeedPasskey func() `in:\"device,accept,passkey\"`; GetAdapters func() `out:\"adaptersJSON\"`; RequestDiscovery func()","bluetooth.Bluetooth.obexAgent *obexAgent","bluetooth.Bluetooth.obexManager *obex.Manager","bluetooth.Bluetooth.objectManager *bluez.ObjectManager","bluetooth.Bluetooth.prepareToConnectedDevice dbus.ObjectPath","bluetooth.Bluetooth.prepareToConnectedLock sync.Mutex","bluetooth.Bluetooth.service *dbusutil.Service","bluetooth.Bluetooth.sessionCancelChMap map[dbus.ObjectPath]chan struct{}","bluetooth.Bluetooth.sessionCancelChMapMu sync.Mutex","bluetooth.Bluetooth.settings *gio.Settings","bluetooth.Bluetooth.sigLoop *dbusutil.SignalLoop","bluetooth.Bluetooth.signals *struct { AdapterAdded, AdapterRemoved, AdapterPropertiesChanged struct { adapterJSON string; }; DeviceAdded, DeviceRemoved, DevicePropertiesChanged struct { devJSON string; }; DisplayPinCode struct { device dbus.ObjectPath; pinCode string; }; DisplayPasskey struct { device dbus.ObjectPath; passkey uint32; entered uint32; }; RequestConfirmation struct { device dbus.ObjectPath; passkey string; }; RequestAuthorization struct { device dbus.ObjectPath; }; RequestPinCode struct { device dbus.ObjectPath; };","bluetooth.Bluetooth.sysDBusDaemon *ofdbus.DBus","bluetooth.Bluetooth.systemSigLoop *dbusutil.SignalLoop"]},{"Name":"var:bluetooth","Fields":["bluetooth.DeviceTypes"]}]}
{"Filepath":"bluetooth/bluetooth_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Bluetooth) emitPropChangedState(value uint32) error","Funname":"bluetooth.Bluetooth.emitPropChangedState","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Bluetooth) emitPropChangedTransportable(value bool) error","Funname":"bluetooth.Bluetooth.emitPropChangedTransportable","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Bluetooth) setPropState(value uint32) (changed bool)","Funname":"bluetooth.Bluetooth.setPropState","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Bluetooth) setPropTransportable(value bool) (changed bool)","Funname":"bluetooth.Bluetooth.setPropTransportable","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Bluetooth) emitPropChangedState(value uint32) error","Funname":"emitPropChangedState","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Bluetooth) emitPropChangedTransportable(value bool) error","Funname":"emitPropChangedTransportable","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Bluetooth) setPropState(value uint32) (changed bool)","Funname":"setPropState","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Bluetooth) setPropTransportable(value bool) (changed bool)","Funname":"setPropTransportable","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"bluetooth/bluetooth_ifc.go","Functions":[{"Uniquefunname":"func (b *Bluetooth) CancelTransferSession(sessionPath dbus.ObjectPath) *dbus.Error","Funname":"CancelTransferSession","Returntype":"*dbus.Error","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) ClearUnpairedDevice() *dbus.Error","Funname":"ClearUnpairedDevice","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (b *Bluetooth) Confirm(devPath dbus.ObjectPath, accept bool) *dbus.Error","Funname":"Confirm","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool"},{"Uniquefunname":"func (b *Bluetooth) ConnectDevice(dpath dbus.ObjectPath, apath dbus.ObjectPath) *dbus.Error","Funname":"ConnectDevice","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) DebugInfo() (string, *dbus.Error)","Funname":"DebugInfo","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bluetooth) DisconnectDevice(dpath dbus.ObjectPath) *dbus.Error","Funname":"DisconnectDevice","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func FeedPasskey(devPath dbus.ObjectPath, accept bool, passkey uint32)*dbus.Error","Funname":"FeedPasskey","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool, passkey uint32"},{"Uniquefunname":"func FeedPinCode(devPath dbus.ObjectPath, accept bool, pinCode string)*dbus.Error","Funname":"FeedPinCode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool, pinCode string"},{"Uniquefunname":"func (b *Bluetooth) GetAdapters() (adaptersJSON string, err *dbus.Error)","Funname":"GetAdapters","Returntype":"(adaptersJSON string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bluetooth) GetDevices(apath dbus.ObjectPath) (devicesJSON string, err *dbus.Error)","Funname":"GetDevices","Returntype":"(devicesJSON string, err *dbus.Error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) RemoveDevice(apath, dpath dbus.ObjectPath) *dbus.Error","Funname":"RemoveDevice","Returntype":"*dbus.Error","Args":"apath, dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) RequestDiscovery(apath dbus.ObjectPath) *dbus.Error","Funname":"RequestDiscovery","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func SendFiles(devAddress string, files []string)(dbus.ObjectPath, *dbus.Error)","Funname":"SendFiles","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"devAddress string, files []string"},{"Uniquefunname":"func (b *Bluetooth) SetAdapterAlias(apath dbus.ObjectPath, alias string) *dbus.Error","Funname":"SetAdapterAlias","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, alias string"},{"Uniquefunname":"func SetAdapterDiscoverable(apath dbus.ObjectPath, discoverable bool)*dbus.Error","Funname":"SetAdapterDiscoverable","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discoverable bool"},{"Uniquefunname":"func SetAdapterDiscoverableTimeout(apath dbus.ObjectPath, discoverableTimeout uint32)*dbus.Error","Funname":"SetAdapterDiscoverableTimeout","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discoverableTimeout uint32"},{"Uniquefunname":"func SetAdapterDiscovering(apath dbus.ObjectPath, discovering bool)*dbus.Error","Funname":"SetAdapterDiscovering","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discovering bool"},{"Uniquefunname":"func SetAdapterPowered(apath dbus.ObjectPath, powered bool)*dbus.Error","Funname":"SetAdapterPowered","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, powered bool"},{"Uniquefunname":"func (b *Bluetooth) SetDeviceAlias(dpath dbus.ObjectPath, alias string) *dbus.Error","Funname":"SetDeviceAlias","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, alias string"},{"Uniquefunname":"func (b *Bluetooth) SetDeviceTrusted(dpath dbus.ObjectPath, trusted bool) *dbus.Error","Funname":"SetDeviceTrusted","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, trusted bool"},{"Uniquefunname":"func (b *Bluetooth) CancelTransferSession(sessionPath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.Bluetooth.CancelTransferSession","Returntype":"*dbus.Error","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) ClearUnpairedDevice() *dbus.Error","Funname":"bluetooth.Bluetooth.ClearUnpairedDevice","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (b *Bluetooth) Confirm(devPath dbus.ObjectPath, accept bool) *dbus.Error","Funname":"bluetooth.Bluetooth.Confirm","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool"},{"Uniquefunname":"func (b *Bluetooth) ConnectDevice(dpath dbus.ObjectPath, apath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.Bluetooth.ConnectDevice","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) DebugInfo() (string, *dbus.Error)","Funname":"bluetooth.Bluetooth.DebugInfo","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bluetooth) DisconnectDevice(dpath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.Bluetooth.DisconnectDevice","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func bluetooth.Bluetooth.FeedPasskey(devPath dbus.ObjectPath, accept bool, passkey uint32)*dbus.Error","Funname":"bluetooth.Bluetooth.FeedPasskey","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool, passkey uint32"},{"Uniquefunname":"func bluetooth.Bluetooth.FeedPinCode(devPath dbus.ObjectPath, accept bool, pinCode string)*dbus.Error","Funname":"bluetooth.Bluetooth.FeedPinCode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, accept bool, pinCode string"},{"Uniquefunname":"func (b *Bluetooth) GetAdapters() (adaptersJSON string, err *dbus.Error)","Funname":"bluetooth.Bluetooth.GetAdapters","Returntype":"(adaptersJSON string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (b *Bluetooth) GetDevices(apath dbus.ObjectPath) (devicesJSON string, err *dbus.Error)","Funname":"bluetooth.Bluetooth.GetDevices","Returntype":"(devicesJSON string, err *dbus.Error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) RemoveDevice(apath, dpath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.Bluetooth.RemoveDevice","Returntype":"*dbus.Error","Args":"apath, dpath dbus.ObjectPath"},{"Uniquefunname":"func (b *Bluetooth) RequestDiscovery(apath dbus.ObjectPath) *dbus.Error","Funname":"bluetooth.Bluetooth.RequestDiscovery","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func bluetooth.Bluetooth.SendFiles(devAddress string, files []string)(dbus.ObjectPath, *dbus.Error)","Funname":"bluetooth.Bluetooth.SendFiles","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"devAddress string, files []string"},{"Uniquefunname":"func (b *Bluetooth) SetAdapterAlias(apath dbus.ObjectPath, alias string) *dbus.Error","Funname":"bluetooth.Bluetooth.SetAdapterAlias","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, alias string"},{"Uniquefunname":"func bluetooth.Bluetooth.SetAdapterDiscoverable(apath dbus.ObjectPath, discoverable bool)*dbus.Error","Funname":"bluetooth.Bluetooth.SetAdapterDiscoverable","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discoverable bool"},{"Uniquefunname":"func bluetooth.Bluetooth.SetAdapterDiscoverableTimeout(apath dbus.ObjectPath, discoverableTimeout uint32)*dbus.Error","Funname":"bluetooth.Bluetooth.SetAdapterDiscoverableTimeout","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discoverableTimeout uint32"},{"Uniquefunname":"func bluetooth.Bluetooth.SetAdapterDiscovering(apath dbus.ObjectPath, discovering bool)*dbus.Error","Funname":"bluetooth.Bluetooth.SetAdapterDiscovering","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, discovering bool"},{"Uniquefunname":"func bluetooth.Bluetooth.SetAdapterPowered(apath dbus.ObjectPath, powered bool)*dbus.Error","Funname":"bluetooth.Bluetooth.SetAdapterPowered","Returntype":"*dbus.Error","Args":"apath dbus.ObjectPath, powered bool"},{"Uniquefunname":"func (b *Bluetooth) SetDeviceAlias(dpath dbus.ObjectPath, alias string) *dbus.Error","Funname":"bluetooth.Bluetooth.SetDeviceAlias","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, alias string"},{"Uniquefunname":"func (b *Bluetooth) SetDeviceTrusted(dpath dbus.ObjectPath, trusted bool) *dbus.Error","Funname":"bluetooth.Bluetooth.SetDeviceTrusted","Returntype":"*dbus.Error","Args":"dpath dbus.ObjectPath, trusted bool"}],"Records":null}
{"Filepath":"bluetooth/bluez_error.go","Functions":null,"Records":[{"Name":"var:bluetooth","Fields":["bluetooth.bluezErrorInvalidKey","bluetooth.errBluezCanceled","bluetooth.errBluezRejected"]}]}
{"Filepath":"bluetooth/bluez_profile.go","Functions":null,"Records":[{"Name":"struct:bluetooth.profile","Fields":["bluetooth.profile.name string","bluetooth.profile.uuid string"]},{"Name":"var:bluetooth","Fields":["bluetooth.profiles"]}]}
{"Filepath":"bluetooth/bluez_uuid.go","Functions":null,"Records":[{"Name":"const:bluetooth","Fields":["bluetooth.A2DP_SINK_UUID","bluetooth.A2DP_SOURCE_UUID","bluetooth.ADVANCED_AUDIO_UUID","bluetooth.AVRCP_REMOTE_UUID","bluetooth.AVRCP_TARGET_UUID","bluetooth.BNEP_SVC_UUID","bluetooth.BODY_SENSOR_LOCATION_UUID","bluetooth.CSC_FEATURE_UUID","bluetooth.CSC_MEASUREMENT_UUID","bluetooth.CYCLING_SC_UUID","bluetooth.DEVICE_INFORMATION_UUID","bluetooth.DUN_GW_UUID","bluetooth.GAP_UUID","bluetooth.GATT_CHARAC_AGREG_FMT_UUID","bluetooth.GATT_CHARAC_APPEARANCE","bluetooth.GATT_CHARAC_DEVICE_NAME","bluetooth.GATT_CHARAC_EXT_PROPER_UUID","bluetooth.GATT_CHARAC_FMT_UUID","bluetooth.GATT_CHARAC_PERIPHERAL_PREF_CONN","bluetooth.GATT_CHARAC_PERIPHERAL_PRIV_FLAG","bluetooth.GATT_CHARAC_RECONNECTION_ADDRESS","bluetooth.GATT_CHARAC_SERVICE_CHANGED","bluetooth.GATT_CHARAC_USER_DESC_UUID","bluetooth.GATT_CHARAC_UUID","bluetooth.GATT_CHARAC_VALID_RANGE_UUID","bluetooth.GATT_CLIENT_CHARAC_CFG_UUID","bluetooth.GATT_EXTERNAL_REPORT_REFERENCE","bluetooth.GATT_INCLUDE_UUID","bluetooth.GATT_PRIM_SVC_UUID","bluetooth.GATT_REPORT_REFERENCE","bluetooth.GATT_SERVER_CHARAC_CFG_UUID","bluetooth.GATT_SND_SVC_UUID","bluetooth.GATT_UUID","bluetooth.GENERIC_AUDIO_UUID","bluetooth.GN_UUID","bluetooth.HDP_SINK_UUID","bluetooth.HDP_SOURCE_UUID","bluetooth.HDP_UUID","bluetooth.HEALTH_THERMOMETER_UUID","bluetooth.HEART_RATE_CONTROL_POINT_UUID","bluetooth.HEART_RATE_MEASUREMENT_UUID","bluetooth.HEART_RATE_UUID","bluetooth.HFP_AG_UUID","bluetooth.HFP_HS_UUID","bluetooth.HID_UUID","bluetooth.HSP_AG_UUID","bluetooth.HSP_HS_UUID","bluetooth.IMMEDIATE_ALERT_UUID","bluetooth.INTERMEDIATE_TEMPERATURE_UUID","bluetooth.LINK_LOSS_UUID","bluetooth.MEASUREMENT_INTERVAL_UUID","bluetooth.NAP_UUID","bluetooth.OBEX_FTP_UUID","bluetooth.OBEX_MAP_UUID","bluetooth.OBEX_MAS_UUID","bluetooth.OBEX_MNS_UUID","bluetooth.OBEX_OPP_UUID","bluetooth.OBEX_PBAP_UUID","bluetooth.OBEX_PCE_UUID","bluetooth.OBEX_PSE_UUID","bluetooth.OBEX_SYNC_UUID","bluetooth.PANU_UUID","bluetooth.PNPID_UUID","bluetooth.PNP_UUID","bluetooth.RFCOMM_UUID_STR","bluetooth.SAP_UUID","bluetooth.SC_CONTROL_POINT_UUID","bluetooth.SENSOR_LOCATION_UUID","bluetooth.SPP_UUID","bluetooth.TEMPERATURE_MEASUREMENT_UUID","bluetooth.TEMPERATURE_TYPE_UUID","bluetooth.TX_POWER_UUID"]}]}
{"Filepath":"bluetooth/config.go","Functions":[{"Uniquefunname":"func (c *config) addAdapterConfig(address string)","Funname":"addAdapterConfig","Returntype":"","Args":"address string"},{"Uniquefunname":"func (c *config) addDeviceConfig(addDevice *device)","Funname":"addDeviceConfig","Returntype":"","Args":"addDevice *device"},{"Uniquefunname":"func (c *config) addAdapterConfig(address string)","Funname":"bluetooth.config.addAdapterConfig","Returntype":"","Args":"address string"},{"Uniquefunname":"func (c *config) addDeviceConfig(addDevice *device)","Funname":"bluetooth.config.addDeviceConfig","Returntype":"","Args":"addDevice *device"},{"Uniquefunname":"func (c *config) clearSpareConfig(b *Bluetooth)","Funname":"bluetooth.config.clearSpareConfig","Returntype":"","Args":"b *Bluetooth"},{"Uniquefunname":"func (c *config) filterDemandedTypeDevices(devAddressMap map[string]*device) []*device","Funname":"bluetooth.config.filterDemandedTypeDevices","Returntype":"[]*device","Args":"devAddressMap map[string]*device"},{"Uniquefunname":"func (c *config) getAdapterConfigPowered(address string) (powered bool)","Funname":"bluetooth.config.getAdapterConfigPowered","Returntype":"(powered bool)","Args":"address string"},{"Uniquefunname":"func (c *config) getDeviceConfig(address string) (dc *deviceConfig, ok bool)","Funname":"bluetooth.config.getDeviceConfig","Returntype":"(dc *deviceConfig, ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) getDeviceConfigConnected(address string) (connected bool)","Funname":"bluetooth.config.getDeviceConfigConnected","Returntype":"(connected bool)","Args":"address string"},{"Uniquefunname":"func (c *config) isAdapterConfigExists(address string) (ok bool)","Funname":"bluetooth.config.isAdapterConfigExists","Returntype":"(ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) isDeviceConfigExist(address string) (ok bool)","Funname":"bluetooth.config.isDeviceConfigExist","Returntype":"(ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) load()","Funname":"bluetooth.config.load","Returntype":"","Args":""},{"Uniquefunname":"func (c *config) save()","Funname":"bluetooth.config.save","Returntype":"","Args":""},{"Uniquefunname":"func (c *config) setAdapterConfigPowered(address string, powered bool)","Funname":"bluetooth.config.setAdapterConfigPowered","Returntype":"","Args":"address string, powered bool"},{"Uniquefunname":"func (c *config) setDeviceConfigConnected(device *device, connected bool)","Funname":"bluetooth.config.setDeviceConfigConnected","Returntype":"","Args":"device *device, connected bool"},{"Uniquefunname":"func newAdapterConfig() (ac *adapterConfig)","Funname":"bluetooth.newAdapterConfig","Returntype":"(ac *adapterConfig)","Args":""},{"Uniquefunname":"func newConfig() (c *config)","Funname":"bluetooth.newConfig","Returntype":"(c *config)","Args":""},{"Uniquefunname":"func newDeviceConfig() (ac *deviceConfig)","Funname":"bluetooth.newDeviceConfig","Returntype":"(ac *deviceConfig)","Args":""},{"Uniquefunname":"func (c *config) clearSpareConfig(b *Bluetooth)","Funname":"clearSpareConfig","Returntype":"","Args":"b *Bluetooth"},{"Uniquefunname":"func (c *config) filterDemandedTypeDevices(devAddressMap map[string]*device) []*device","Funname":"filterDemandedTypeDevices","Returntype":"[]*device","Args":"devAddressMap map[string]*device"},{"Uniquefunname":"func (c *config) getAdapterConfigPowered(address string) (powered bool)","Funname":"getAdapterConfigPowered","Returntype":"(powered bool)","Args":"address string"},{"Uniquefunname":"func (c *config) getDeviceConfig(address string) (dc *deviceConfig, ok bool)","Funname":"getDeviceConfig","Returntype":"(dc *deviceConfig, ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) getDeviceConfigConnected(address string) (connected bool)","Funname":"getDeviceConfigConnected","Returntype":"(connected bool)","Args":"address string"},{"Uniquefunname":"func (c *config) isAdapterConfigExists(address string) (ok bool)","Funname":"isAdapterConfigExists","Returntype":"(ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) isDeviceConfigExist(address string) (ok bool)","Funname":"isDeviceConfigExist","Returntype":"(ok bool)","Args":"address string"},{"Uniquefunname":"func (c *config) load()","Funname":"load","Returntype":"","Args":""},{"Uniquefunname":"func newAdapterConfig() (ac *adapterConfig)","Funname":"newAdapterConfig","Returntype":"(ac *adapterConfig)","Args":""},{"Uniquefunname":"func newConfig() (c *config)","Funname":"newConfig","Returntype":"(c *config)","Args":""},{"Uniquefunname":"func newDeviceConfig() (ac *deviceConfig)","Funname":"newDeviceConfig","Returntype":"(ac *deviceConfig)","Args":""},{"Uniquefunname":"func (c *config) save()","Funname":"save","Returntype":"","Args":""},{"Uniquefunname":"func (c *config) setAdapterConfigPowered(address string, powered bool)","Funname":"setAdapterConfigPowered","Returntype":"","Args":"address string, powered bool"},{"Uniquefunname":"func (c *config) setDeviceConfigConnected(device *device, connected bool)","Funname":"setDeviceConfigConnected","Returntype":"","Args":"device *device, connected bool"}],"Records":[{"Name":"struct:bluetooth.adapterConfig","Fields":["bluetooth.adapterConfig.Powered bool"]},{"Name":"struct:bluetooth.config","Fields":["bluetooth.config.Adapters map[string]*adapterConfig","bluetooth.config.Devices map[string]*deviceConfig","bluetooth.config.Discoverable bool","bluetooth.config.core utils.Config"]},{"Name":"struct:bluetooth.deviceConfig","Fields":["bluetooth.deviceConfig.Connected bool","bluetooth.deviceConfig.Icon string","bluetooth.deviceConfig.LatestTime int64"]},{"Name":"struct:bluetooth.deviceConfigWithAddress","Fields":["bluetooth.deviceConfigWithAddress.Address string","bluetooth.deviceConfigWithAddress.Connected bool","bluetooth.deviceConfigWithAddress.Icon string","bluetooth.deviceConfigWithAddress.LatestTime int64"]}]}
{"Filepath":"bluetooth/device.go","Functions":[{"Uniquefunname":"func (d *device) Connect()","Funname":"Connect","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) Disconnect()","Funname":"Disconnect","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) GetInitiativeConnect() bool","Funname":"GetInitiativeConnect","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *device) SetInitiativeConnect(isInitiativeConnect bool)","Funname":"SetInitiativeConnect","Returntype":"","Args":"isInitiativeConnect bool"},{"Uniquefunname":"func (d *device) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (s deviceState) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (d *device) agentWorkEnd()","Funname":"agentWorkEnd","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) agentWorkStart()","Funname":"agentWorkStart","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) audioA2DPWorkaround()","Funname":"audioA2DPWorkaround","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) Connect()","Funname":"bluetooth.device.Connect","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) Disconnect()","Funname":"bluetooth.device.Disconnect","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) GetInitiativeConnect() bool","Funname":"bluetooth.device.GetInitiativeConnect","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *device) SetInitiativeConnect(isInitiativeConnect bool)","Funname":"bluetooth.device.SetInitiativeConnect","Returntype":"","Args":"isInitiativeConnect bool"},{"Uniquefunname":"func (d *device) String() string","Funname":"bluetooth.device.String","Returntype":"string","Args":""},{"Uniquefunname":"func (d *device) agentWorkEnd()","Funname":"bluetooth.device.agentWorkEnd","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) agentWorkStart()","Funname":"bluetooth.device.agentWorkStart","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) audioA2DPWorkaround()","Funname":"bluetooth.device.audioA2DPWorkaround","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) cancelBlock() error","Funname":"bluetooth.device.cancelBlock","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) connectProperties()","Funname":"bluetooth.device.connectProperties","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) destroy()","Funname":"bluetooth.device.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) doConnect(hasNotify bool) error","Funname":"bluetooth.device.doConnect","Returntype":"error","Args":"hasNotify bool"},{"Uniquefunname":"func (d *device) doPair() error","Funname":"bluetooth.device.doPair","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) doRealConnect() error","Funname":"bluetooth.device.doRealConnect","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) doTrust() error","Funname":"bluetooth.device.doTrust","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) getAddress() string","Funname":"bluetooth.device.getAddress","Returntype":"string","Args":""},{"Uniquefunname":"func (d *device) getAndResetNeedRemove() bool","Funname":"bluetooth.device.getAndResetNeedRemove","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *device) getConnectPhase() connectPhase","Funname":"bluetooth.device.getConnectPhase","Returntype":"connectPhase","Args":""},{"Uniquefunname":"func (d *device) getDisconnectPhase() disconnectPhase","Funname":"bluetooth.device.getDisconnectPhase","Returntype":"disconnectPhase","Args":""},{"Uniquefunname":"func (d *device) getState() deviceState","Funname":"bluetooth.device.getState","Returntype":"deviceState","Args":""},{"Uniquefunname":"func (d *device) goWaitDisconnect() chan struct","Funname":"bluetooth.device.goWaitDisconnect","Returntype":"chan struct{}","Args":""},{"Uniquefunname":"func (d *device) markNeedRemove(need bool)","Funname":"bluetooth.device.markNeedRemove","Returntype":"","Args":"need bool"},{"Uniquefunname":"func (d *device) notifyConnectedChanged()","Funname":"bluetooth.device.notifyConnectedChanged","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDeviceAdded()","Funname":"bluetooth.device.notifyDeviceAdded","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDevicePropertiesChanged()","Funname":"bluetooth.device.notifyDevicePropertiesChanged","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDeviceRemoved()","Funname":"bluetooth.device.notifyDeviceRemoved","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) setConnectPhase(value connectPhase)","Funname":"bluetooth.device.setConnectPhase","Returntype":"","Args":"value connectPhase"},{"Uniquefunname":"func (d *device) setDisconnectPhase(value disconnectPhase)","Funname":"bluetooth.device.setDisconnectPhase","Returntype":"","Args":"value disconnectPhase"},{"Uniquefunname":"func (d *device) updateState()","Funname":"bluetooth.device.updateState","Returntype":"","Args":""},{"Uniquefunname":"func (s deviceState) String() string","Funname":"bluetooth.deviceState.String","Returntype":"string","Args":""},{"Uniquefunname":"func newBackupDevice(d *device) (bd *backupDevice)","Funname":"bluetooth.newBackupDevice","Returntype":"(bd *backupDevice)","Args":"d *device"},{"Uniquefunname":"func newDevice(systemSigLoop *dbusutil.SignalLoop, dpath dbus.ObjectPath) (d *device)","Funname":"bluetooth.newDevice","Returntype":"(d *device)","Args":"systemSigLoop *dbusutil.SignalLoop, dpath dbus.ObjectPath"},{"Uniquefunname":"func (d *device) cancelBlock() error","Funname":"cancelBlock","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) connectProperties()","Funname":"connectProperties","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) doConnect(hasNotify bool) error","Funname":"doConnect","Returntype":"error","Args":"hasNotify bool"},{"Uniquefunname":"func (d *device) doPair() error","Funname":"doPair","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) doRealConnect() error","Funname":"doRealConnect","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) doTrust() error","Funname":"doTrust","Returntype":"error","Args":""},{"Uniquefunname":"func (d *device) getAddress() string","Funname":"getAddress","Returntype":"string","Args":""},{"Uniquefunname":"func (d *device) getAndResetNeedRemove() bool","Funname":"getAndResetNeedRemove","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *device) getConnectPhase() connectPhase","Funname":"getConnectPhase","Returntype":"connectPhase","Args":""},{"Uniquefunname":"func (d *device) getDisconnectPhase() disconnectPhase","Funname":"getDisconnectPhase","Returntype":"disconnectPhase","Args":""},{"Uniquefunname":"func (d *device) getState() deviceState","Funname":"getState","Returntype":"deviceState","Args":""},{"Uniquefunname":"func (d *device) goWaitDisconnect() chan struct","Funname":"goWaitDisconnect","Returntype":"chan struct{}","Args":""},{"Uniquefunname":"func (d *device) markNeedRemove(need bool)","Funname":"markNeedRemove","Returntype":"","Args":"need bool"},{"Uniquefunname":"func newBackupDevice(d *device) (bd *backupDevice)","Funname":"newBackupDevice","Returntype":"(bd *backupDevice)","Args":"d *device"},{"Uniquefunname":"func newDevice(systemSigLoop *dbusutil.SignalLoop, dpath dbus.ObjectPath) (d *device)","Funname":"newDevice","Returntype":"(d *device)","Args":"systemSigLoop *dbusutil.SignalLoop, dpath dbus.ObjectPath"},{"Uniquefunname":"func (d *device) notifyConnectedChanged()","Funname":"notifyConnectedChanged","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDeviceAdded()","Funname":"notifyDeviceAdded","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDevicePropertiesChanged()","Funname":"notifyDevicePropertiesChanged","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) notifyDeviceRemoved()","Funname":"notifyDeviceRemoved","Returntype":"","Args":""},{"Uniquefunname":"func (d *device) setConnectPhase(value connectPhase)","Funname":"setConnectPhase","Returntype":"","Args":"value connectPhase"},{"Uniquefunname":"func (d *device) setDisconnectPhase(value disconnectPhase)","Funname":"setDisconnectPhase","Returntype":"","Args":"value disconnectPhase"},{"Uniquefunname":"func (d *device) updateState()","Funname":"updateState","Returntype":"","Args":""}],"Records":[{"Name":"struct:bluetooth.backupDevice","Fields":["bluetooth.backupDevice.AdapterPath dbus.ObjectPath","bluetooth.backupDevice.Address string","bluetooth.backupDevice.Alias string","bluetooth.backupDevice.ConnectState bool","bluetooth.backupDevice.Icon string","bluetooth.backupDevice.Name string","bluetooth.backupDevice.Paired bool","bluetooth.backupDevice.Path dbus.ObjectPath","bluetooth.backupDevice.RSSI int16","bluetooth.backupDevice.ServicesResolved bool","bluetooth.backupDevice.State deviceState","bluetooth.backupDevice.Trusted bool","bluetooth.backupDevice.UUIDs []string","bluetooth.backupDevice.connected bool"]},{"Name":"const:bluetooth","Fields":["bluetooth.connectPhaseConnectProfilesEnd","bluetooth.connectPhaseConnectProfilesStart","bluetooth.connectPhaseNone","bluetooth.connectPhasePairEnd","bluetooth.connectPhasePairStart","bluetooth.connectPhaseStart","bluetooth.deviceStateConnected","bluetooth.deviceStateConnecting","bluetooth.deviceStateDisconnected","bluetooth.deviceStateDisconnecting","bluetooth.disconnectPhaseDisconnectEnd","bluetooth.disconnectPhaseDisconnectStart","bluetooth.disconnectPhaseNone","bluetooth.disconnectPhaseStart"]},{"Name":"struct:bluetooth.device","Fields":["bluetooth.device.AdapterPath dbus.ObjectPath","bluetooth.device.Address string","bluetooth.device.Alias string","bluetooth.device.ConnectState bool","bluetooth.device.Icon string","bluetooth.device.Name string","bluetooth.device.Paired bool","bluetooth.device.Path dbus.ObjectPath","bluetooth.device.RSSI int16","bluetooth.device.ServicesResolved bool","bluetooth.device.State deviceState","bluetooth.device.Trusted bool","bluetooth.device.UUIDs []string","bluetooth.device.adapter *adapter","bluetooth.device.agentWorking bool","bluetooth.device.connectPhase connectPhase","bluetooth.device.connected bool","bluetooth.device.connectedTime time.Time","bluetooth.device.core *bluez.Device","bluetooth.device.disconnectChan chan struct{}","bluetooth.device.disconnectPhase disconnectPhase","bluetooth.device.isInitiativeConnect bool","bluetooth.device.mu sync.Mutex","bluetooth.device.needNotify bool","bluetooth.device.needRemove bool","bluetooth.device.pairingFailedTime time.Time","bluetooth.device.removeLock sync.Mutex","bluetooth.device.retryConnectCount int"]},{"Name":"var:bluetooth","Fields":["bluetooth.errInvalidDevicePath"]}]}
{"Filepath":"bluetooth/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"bluetooth.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"var:bluetooth","Fields":["bluetooth.logger"]}]}
{"Filepath":"bluetooth/main.go","Functions":[{"Uniquefunname":"func (*daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func (*daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"bluetooth.HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func (*daemon) GetDependencies() []string","Funname":"bluetooth.daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*daemon) Start() error","Funname":"bluetooth.daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*daemon) Stop() error","Funname":"bluetooth.daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func newBluetoothDaemon(logger *log.Logger) *daemon","Funname":"bluetooth.newBluetoothDaemon","Returntype":"*daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func newBluetoothDaemon(logger *log.Logger) *daemon","Funname":"newBluetoothDaemon","Returntype":"*daemon","Args":"logger *log.Logger"}],"Records":[{"Name":"var:bluetooth","Fields":["bluetooth.globalAgent","bluetooth.globalBluetooth"]}]}
{"Filepath":"bluetooth/obex_agent.go","Functions":[{"Uniquefunname":"func (a *obexAgent) AuthorizePush(transferPath dbus.ObjectPath) (string, *dbus.Error)","Funname":"AuthorizePush","Returntype":"(string, *dbus.Error)","Args":"transferPath dbus.ObjectPath"},{"Uniquefunname":"func (a *obexAgent) Cancel() *dbus.Error","Funname":"Cancel","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (*obexAgent) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func newObexAgent(service *dbusutil.Service, bluetooth *Bluetooth) *obexAgent","Funname":"bluetooth.newObexAgent","Returntype":"*obexAgent","Args":"service *dbusutil.Service, bluetooth *Bluetooth"},{"Uniquefunname":"func (a *obexAgent) AuthorizePush(transferPath dbus.ObjectPath) (string, *dbus.Error)","Funname":"bluetooth.obexAgent.AuthorizePush","Returntype":"(string, *dbus.Error)","Args":"transferPath dbus.ObjectPath"},{"Uniquefunname":"func (a *obexAgent) Cancel() *dbus.Error","Funname":"bluetooth.obexAgent.Cancel","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (*obexAgent) GetInterfaceName() string","Funname":"bluetooth.obexAgent.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (a *obexAgent) init()","Funname":"bluetooth.obexAgent.init","Returntype":"","Args":""},{"Uniquefunname":"func bluetooth.obexAgent.isSessionAccepted(sessionPath dbus.ObjectPath, deviceName, filename string, transfer *obex.Transfer)(bool, error)","Funname":"bluetooth.obexAgent.isSessionAccepted","Returntype":"(bool, error)","Args":"sessionPath dbus.ObjectPath, deviceName, filename string, transfer *obex.Transfer"},{"Uniquefunname":"func bluetooth.obexAgent.notifyFailed(notify *notifications.Notifications, replaceID uint32, isCancel bool)uint32","Funname":"bluetooth.obexAgent.notifyFailed","Returntype":"uint32","Args":"notify *notifications.Notifications, replaceID uint32, isCancel bool"},{"Uniquefunname":"func bluetooth.obexAgent.notifyProgress(notify *notifications.Notifications, replaceID uint32, filename string, device string, progress uint64)uint32","Funname":"bluetooth.obexAgent.notifyProgress","Returntype":"uint32","Args":"notify *notifications.Notifications, replaceID uint32, filename string, device string, progress uint64"},{"Uniquefunname":"func bluetooth.obexAgent.notifyReceiveFileTimeout(notify *notifications.Notifications, replaceID uint32, filename string)","Funname":"bluetooth.obexAgent.notifyReceiveFileTimeout","Returntype":"","Args":"notify *notifications.Notifications, replaceID uint32, filename string"},{"Uniquefunname":"func bluetooth.obexAgent.receiveProgress(device string, sessionPath dbus.ObjectPath, transfer *obex.Transfer)","Funname":"bluetooth.obexAgent.receiveProgress","Returntype":"","Args":"device string, sessionPath dbus.ObjectPath, transfer *obex.Transfer"},{"Uniquefunname":"func (a *obexAgent) registerAgent()","Funname":"bluetooth.obexAgent.registerAgent","Returntype":"","Args":""},{"Uniquefunname":"func (a *obexAgent) requestReceive(deviceName, filename string) (bool, error)","Funname":"bluetooth.obexAgent.requestReceive","Returntype":"(bool, error)","Args":"deviceName, filename string"},{"Uniquefunname":"func (a *obexAgent) unregisterAgent()","Funname":"bluetooth.obexAgent.unregisterAgent","Returntype":"","Args":""},{"Uniquefunname":"func (a *obexAgent) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isSessionAccepted(sessionPath dbus.ObjectPath, deviceName, filename string, transfer *obex.Transfer)(bool, error)","Funname":"isSessionAccepted","Returntype":"(bool, error)","Args":"sessionPath dbus.ObjectPath, deviceName, filename string, transfer *obex.Transfer"},{"Uniquefunname":"func newObexAgent(service *dbusutil.Service, bluetooth *Bluetooth) *obexAgent","Funname":"newObexAgent","Returntype":"*obexAgent","Args":"service *dbusutil.Service, bluetooth *Bluetooth"},{"Uniquefunname":"func notifyFailed(notify *notifications.Notifications, replaceID uint32, isCancel bool)uint32","Funname":"notifyFailed","Returntype":"uint32","Args":"notify *notifications.Notifications, replaceID uint32, isCancel bool"},{"Uniquefunname":"func notifyProgress(notify *notifications.Notifications, replaceID uint32, filename string, device string, progress uint64)uint32","Funname":"notifyProgress","Returntype":"uint32","Args":"notify *notifications.Notifications, replaceID uint32, filename string, device string, progress uint64"},{"Uniquefunname":"func notifyReceiveFileTimeout(notify *notifications.Notifications, replaceID uint32, filename string)","Funname":"notifyReceiveFileTimeout","Returntype":"","Args":"notify *notifications.Notifications, replaceID uint32, filename string"},{"Uniquefunname":"func receiveProgress(device string, sessionPath dbus.ObjectPath, transfer *obex.Transfer)","Funname":"receiveProgress","Returntype":"","Args":"device string, sessionPath dbus.ObjectPath, transfer *obex.Transfer"},{"Uniquefunname":"func (a *obexAgent) registerAgent()","Funname":"registerAgent","Returntype":"","Args":""},{"Uniquefunname":"func (a *obexAgent) requestReceive(deviceName, filename string) (bool, error)","Funname":"requestReceive","Returntype":"(bool, error)","Args":"deviceName, filename string"},{"Uniquefunname":"func (a *obexAgent) unregisterAgent()","Funname":"unregisterAgent","Returntype":"","Args":""}],"Records":[{"Name":"struct:bluetooth.obexAgent","Fields":["bluetooth.obexAgent.acceptedSessions map[dbus.ObjectPath]int","bluetooth.obexAgent.acceptedSessionsMu sync.Mutex","bluetooth.obexAgent.b *Bluetooth","bluetooth.obexAgent.isCancel bool","bluetooth.obexAgent.methods *struct { AuthorizePush func() `in:\"transferPath\" out:\"filename\"`; Cancel func(); }","bluetooth.obexAgent.notify *notifications.Notifications","bluetooth.obexAgent.notifyID uint32","bluetooth.obexAgent.obexManager *obex.Manager","bluetooth.obexAgent.receiveCh chan struct{}","bluetooth.obexAgent.recevieChMu sync.Mutex","bluetooth.obexAgent.requestNotifyCh chan bool","bluetooth.obexAgent.requestNotifyChMu sync.Mutex","bluetooth.obexAgent.service *dbusutil.Service","bluetooth.obexAgent.sigLoop *dbusutil.SignalLoop"]},{"Name":"const:bluetooth","Fields":["bluetooth.obexAgentDBusInterface","bluetooth.obexAgentDBusPath","bluetooth.receiveFileNotifyTimeout","bluetooth.receiveFileTimeout"]},{"Name":"var:bluetooth","Fields":["bluetooth.receiveBaseDir"]}]}
{"Filepath":"bluetooth/utils.go","Functions":[{"Uniquefunname":"func checkProcessExists(processName string) bool","Funname":"bluetooth.checkProcessExists","Returntype":"bool","Args":"processName string"},{"Uniquefunname":"func isStringInArray(str string, list []string) bool","Funname":"bluetooth.isStringInArray","Returntype":"bool","Args":"str string, list []string"},{"Uniquefunname":"func marshalJSON(v interface","Funname":"bluetooth.marshalJSON","Returntype":"(strJSON string)","Args":"v interface{}"},{"Uniquefunname":"func checkProcessExists(processName string) bool","Funname":"checkProcessExists","Returntype":"bool","Args":"processName string"},{"Uniquefunname":"func isStringInArray(str string, list []string) bool","Funname":"isStringInArray","Returntype":"bool","Args":"str string, list []string"},{"Uniquefunname":"func marshalJSON(v interface","Funname":"marshalJSON","Returntype":"(strJSON string)","Args":"v interface{}"}],"Records":null}
{"Filepath":"bluetooth/utils_notify.go","Functions":[{"Uniquefunname":"func GetTimerNotifyInstance() *timerNotify","Funname":"GetTimerNotifyInstance","Returntype":"*timerNotify","Args":""},{"Uniquefunname":"func beginTimerNotify(notifyTimer *timerNotify)","Funname":"beginTimerNotify","Returntype":"","Args":"notifyTimer *timerNotify"},{"Uniquefunname":"func GetTimerNotifyInstance() *timerNotify","Funname":"bluetooth.GetTimerNotifyInstance","Returntype":"*timerNotify","Args":""},{"Uniquefunname":"func beginTimerNotify(notifyTimer *timerNotify)","Funname":"bluetooth.beginTimerNotify","Returntype":"","Args":"notifyTimer *timerNotify"},{"Uniquefunname":"func initNotifications() error","Funname":"bluetooth.initNotifications","Returntype":"error","Args":""},{"Uniquefunname":"func notify(icon, summary, body string)","Funname":"bluetooth.notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func notifyConnectFailedAux(alias, format string)","Funname":"bluetooth.notifyConnectFailedAux","Returntype":"","Args":"alias, format string"},{"Uniquefunname":"func notifyConnectFailedHostDown(alias string)","Funname":"bluetooth.notifyConnectFailedHostDown","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyConnected(alias string)","Funname":"bluetooth.notifyConnected","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyDisconnected(alias string)","Funname":"bluetooth.notifyDisconnected","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyInitiativeConnect(dev *device, pinCode string) error","Funname":"bluetooth.notifyInitiativeConnect","Returntype":"error","Args":"dev *device, pinCode string"},{"Uniquefunname":"func notifyPassiveConnect(dev *device, pinCode string) error","Funname":"bluetooth.notifyPassiveConnect","Returntype":"error","Args":"dev *device, pinCode string"},{"Uniquefunname":"func initNotifications() error","Funname":"initNotifications","Returntype":"error","Args":""},{"Uniquefunname":"func notify(icon, summary, body string)","Funname":"notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func notifyConnectFailedAux(alias, format string)","Funname":"notifyConnectFailedAux","Returntype":"","Args":"alias, format string"},{"Uniquefunname":"func notifyConnectFailedHostDown(alias string)","Funname":"notifyConnectFailedHostDown","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyConnected(alias string)","Funname":"notifyConnected","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyDisconnected(alias string)","Funname":"notifyDisconnected","Returntype":"","Args":"alias string"},{"Uniquefunname":"func notifyInitiativeConnect(dev *device, pinCode string) error","Funname":"notifyInitiativeConnect","Returntype":"error","Args":"dev *device, pinCode string"},{"Uniquefunname":"func notifyPassiveConnect(dev *device, pinCode string) error","Funname":"notifyPassiveConnect","Returntype":"error","Args":"dev *device, pinCode string"}],"Records":[{"Name":"const:bluetooth","Fields":["bluetooth.bluetoothDialog","bluetooth.notifyDdeDialogPath","bluetooth.notifyIconBluetoothConnectFailed","bluetooth.notifyIconBluetoothConnected","bluetooth.notifyIconBluetoothDisconnected","bluetooth.notifyTimerDuration"]},{"Name":"var:bluetooth","Fields":["bluetooth.globalNotifications","bluetooth.globalNotifyId","bluetooth.globalNotifyMu","bluetooth.globalTimerNotifier"]},{"Name":"struct:bluetooth.timerNotify","Fields":["bluetooth.timerNotify.actionInvokedChan chan bool","bluetooth.timerNotify.timeout *time.Timer"]}]}
{"Filepath":"bluetooth/utils_test.go","Functions":[{"Uniquefunname":"func TestIsStringInArray(t *testing.T)","Funname":"TestIsStringInArray","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMarshalJSON(t *testing.T)","Funname":"TestMarshalJSON","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStringInArray(t *testing.T)","Funname":"bluetooth.TestIsStringInArray","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMarshalJSON(t *testing.T)","Funname":"bluetooth.TestMarshalJSON","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"var:bluetooth","Fields":["bluetooth.str"]}]}
{"Filepath":"calendar/date.go","Functions":[{"Uniquefunname":"func (d Date) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (d Date) String() string","Funname":"calendar.Date.String","Returntype":"string","Args":""}],"Records":[{"Name":"struct:calendar.Date","Fields":["calendar.Date.Day int","calendar.Date.Month time.Month","calendar.Date.Year int"]}]}
{"Filepath":"calendar/job.go","Functions":[{"Uniquefunname":"func (j *Job) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (j *Job) between(startDate, endDate libdate.Date) ([]jobTime, error)","Funname":"between","Returntype":"([]jobTime, error)","Args":"startDate, endDate libdate.Date"},{"Uniquefunname":"func (j *Job) String() string","Funname":"calendar.Job.String","Returntype":"string","Args":""},{"Uniquefunname":"func (j *Job) between(startDate, endDate libdate.Date) ([]jobTime, error)","Funname":"calendar.Job.between","Returntype":"([]jobTime, error)","Args":"startDate, endDate libdate.Date"},{"Uniquefunname":"func (j *Job) clone(start, end time.Time, recurID int) *Job","Funname":"calendar.Job.clone","Returntype":"*Job","Args":"start, end time.Time, recurID int"},{"Uniquefunname":"func (j *Job) getIgnore() (result []time.Time, err error)","Funname":"calendar.Job.getIgnore","Returntype":"(result []time.Time, err error)","Args":""},{"Uniquefunname":"func (j *Job) getRemindTime() (time.Time, error)","Funname":"calendar.Job.getRemindTime","Returntype":"(time.Time, error)","Args":""},{"Uniquefunname":"func (j *Job) setIgnore(ignore []time.Time) error","Funname":"calendar.Job.setIgnore","Returntype":"error","Args":"ignore []time.Time"},{"Uniquefunname":"func (j *Job) timeRange() TimeRange","Funname":"calendar.Job.timeRange","Returntype":"TimeRange","Args":""},{"Uniquefunname":"func (j *Job) toJobJSON() (*JobJSON, error)","Funname":"calendar.Job.toJobJSON","Returntype":"(*JobJSON, error)","Args":""},{"Uniquefunname":"func (j *Job) validate() error","Funname":"calendar.Job.validate","Returntype":"error","Args":""},{"Uniquefunname":"func (job *JobJSON) getRemindBody(now time.Time) (body string)","Funname":"calendar.JobJSON.getRemindBody","Returntype":"(body string)","Args":"now time.Time"},{"Uniquefunname":"func (j *JobJSON) toJob() (*Job, error)","Funname":"calendar.JobJSON.toJob","Returntype":"(*Job, error)","Args":""},{"Uniquefunname":"func fillFestivalJobs(startDate, endDate libdate.Date, queryKey string, wraps []dateJobsWrap)","Funname":"calendar.fillFestivalJobs","Returntype":"","Args":"startDate, endDate libdate.Date, queryKey string, wraps []dateJobsWrap"},{"Uniquefunname":"func calendar.filterDayFestivalSlice(dayFestivalSlice []lunarcalendar.DayFestival, queryKey string)[]lunarcalendar.DayFestival","Funname":"calendar.filterDayFestivalSlice","Returntype":"[]lunarcalendar.DayFestival","Args":"dayFestivalSlice []lunarcalendar.DayFestival, queryKey string"},{"Uniquefunname":"func getBodyTimePart(today libdate.Date, allDay bool, t time.Time, start bool) (msgStr string)","Funname":"calendar.getBodyTimePart","Returntype":"(msgStr string)","Args":"today libdate.Date, allDay bool, t time.Time, start bool"},{"Uniquefunname":"func getFestivalJobId(name string) uint","Funname":"calendar.getFestivalJobId","Returntype":"uint","Args":"name string"},{"Uniquefunname":"func calendar.getJobsBetween(startDate, endDate libdate.Date, jobs []*Job, extend bool, queryKey string, needFestival bool)(wraps []dateJobsWrap)","Funname":"calendar.getJobsBetween","Returntype":"(wraps []dateJobsWrap)","Args":"startDate, endDate libdate.Date, jobs []*Job, extend bool, queryKey string, needFestival bool"},{"Uniquefunname":"func getRemindAdvanceDays(remind string) (int, error)","Funname":"calendar.getRemindAdvanceDays","Returntype":"(int, error)","Args":"remind string"},{"Uniquefunname":"func parseRemind(startTime time.Time, remind string) (t time.Time, err error)","Funname":"calendar.parseRemind","Returntype":"(t time.Time, err error)","Args":"startTime time.Time, remind string"},{"Uniquefunname":"func timeSliceContains(timeSlice []time.Time, t time.Time) bool","Funname":"calendar.timeSliceContains","Returntype":"bool","Args":"timeSlice []time.Time, t time.Time"},{"Uniquefunname":"func (j *Job) clone(start, end time.Time, recurID int) *Job","Funname":"clone","Returntype":"*Job","Args":"start, end time.Time, recurID int"},{"Uniquefunname":"func fillFestivalJobs(startDate, endDate libdate.Date, queryKey string, wraps []dateJobsWrap)","Funname":"fillFestivalJobs","Returntype":"","Args":"startDate, endDate libdate.Date, queryKey string, wraps []dateJobsWrap"},{"Uniquefunname":"func filterDayFestivalSlice(dayFestivalSlice []lunarcalendar.DayFestival, queryKey string)[]lunarcalendar.DayFestival","Funname":"filterDayFestivalSlice","Returntype":"[]lunarcalendar.DayFestival","Args":"dayFestivalSlice []lunarcalendar.DayFestival, queryKey string"},{"Uniquefunname":"func getBodyTimePart(today libdate.Date, allDay bool, t time.Time, start bool) (msgStr string)","Funname":"getBodyTimePart","Returntype":"(msgStr string)","Args":"today libdate.Date, allDay bool, t time.Time, start bool"},{"Uniquefunname":"func getFestivalJobId(name string) uint","Funname":"getFestivalJobId","Returntype":"uint","Args":"name string"},{"Uniquefunname":"func (j *Job) getIgnore() (result []time.Time, err error)","Funname":"getIgnore","Returntype":"(result []time.Time, err error)","Args":""},{"Uniquefunname":"func getJobsBetween(startDate, endDate libdate.Date, jobs []*Job, extend bool, queryKey string, needFestival bool)(wraps []dateJobsWrap)","Funname":"getJobsBetween","Returntype":"(wraps []dateJobsWrap)","Args":"startDate, endDate libdate.Date, jobs []*Job, extend bool, queryKey string, needFestival bool"},{"Uniquefunname":"func getRemindAdvanceDays(remind string) (int, error)","Funname":"getRemindAdvanceDays","Returntype":"(int, error)","Args":"remind string"},{"Uniquefunname":"func (job *JobJSON) getRemindBody(now time.Time) (body string)","Funname":"getRemindBody","Returntype":"(body string)","Args":"now time.Time"},{"Uniquefunname":"func (j *Job) getRemindTime() (time.Time, error)","Funname":"getRemindTime","Returntype":"(time.Time, error)","Args":""},{"Uniquefunname":"func parseRemind(startTime time.Time, remind string) (t time.Time, err error)","Funname":"parseRemind","Returntype":"(t time.Time, err error)","Args":"startTime time.Time, remind string"},{"Uniquefunname":"func (j *Job) setIgnore(ignore []time.Time) error","Funname":"setIgnore","Returntype":"error","Args":"ignore []time.Time"},{"Uniquefunname":"func (j *Job) timeRange() TimeRange","Funname":"timeRange","Returntype":"TimeRange","Args":""},{"Uniquefunname":"func timeSliceContains(timeSlice []time.Time, t time.Time) bool","Funname":"timeSliceContains","Returntype":"bool","Args":"timeSlice []time.Time, t time.Time"},{"Uniquefunname":"func (j *JobJSON) toJob() (*Job, error)","Funname":"toJob","Returntype":"(*Job, error)","Args":""},{"Uniquefunname":"func (j *Job) toJobJSON() (*JobJSON, error)","Funname":"toJobJSON","Returntype":"(*JobJSON, error)","Args":""},{"Uniquefunname":"func (j *Job) validate() error","Funname":"validate","Returntype":"error","Args":""}],"Records":[{"Name":"struct:calendar.Job","Fields":["calendar.Job.AllDay bool","calendar.Job.Description string","calendar.Job.End time.Time","calendar.Job.Ignore string","calendar.Job.RRule string","calendar.Job.RecurID int","calendar.Job.Remind string","calendar.Job.Start time.Time","calendar.Job.Title string","calendar.Job.TitlePinyin string","calendar.Job.Type int","calendar.Job.remindTime time.Time"]},{"Name":"struct:calendar.JobJSON","Fields":["calendar.JobJSON.AllDay bool","calendar.JobJSON.Description string","calendar.JobJSON.End time.Time","calendar.JobJSON.ID uint","calendar.JobJSON.Ignore []time.Time","calendar.JobJSON.RRule string","calendar.JobJSON.RecurID int","calendar.JobJSON.Remind string","calendar.JobJSON.Start time.Time","calendar.JobJSON.Title string","calendar.JobJSON.Type int","calendar.JobJSON.remindLaterCount int"]},{"Name":"var:calendar","Fields":["calendar.festivalIdMap","calendar.festivalIdMapMu","calendar.nextFestivalJobId","calendar.remindReg1"]},{"Name":"struct:calendar.jobTime","Fields":["calendar.jobTime.recurID int","calendar.jobTime.start time.Time"]},{"Name":"const:calendar","Fields":["calendar.recurrenceLimit"]}]}
{"Filepath":"calendar/module.go","Functions":[{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"calendar.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"calendar.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"calendar.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) start() error","Funname":"calendar.Module.start","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"calendar.init","Returntype":"","Args":""},{"Uniquefunname":"func initJobTypeTable(db *gorm.DB) error","Funname":"calendar.initJobTypeTable","Returntype":"error","Args":"db *gorm.DB"},{"Uniquefunname":"func newModule() *Module","Funname":"calendar.newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func initJobTypeTable(db *gorm.DB) error","Funname":"initJobTypeTable","Returntype":"error","Args":"db *gorm.DB"},{"Uniquefunname":"func newModule() *Module","Funname":"newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func (m *Module) start() error","Funname":"start","Returntype":"error","Args":""}],"Records":[{"Name":"struct:calendar.Module","Fields":["calendar.Module.scheduler *Scheduler"]},{"Name":"var:calendar","Fields":["calendar.dbFile","calendar.logger"]}]}
{"Filepath":"calendar/pinyin.go","Functions":[{"Uniquefunname":"func canQueryByPinyin(str string) bool","Funname":"calendar.canQueryByPinyin","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func createPinyin(zh string) string","Funname":"calendar.createPinyin","Returntype":"string","Args":"zh string"},{"Uniquefunname":"func createPinyinQuery(pinyin string) string","Funname":"calendar.createPinyinQuery","Returntype":"string","Args":"pinyin string"},{"Uniquefunname":"func createPinyinRegexp(pinyin string) string","Funname":"calendar.createPinyinRegexp","Returntype":"string","Args":"pinyin string"},{"Uniquefunname":"func init()","Funname":"calendar.init","Returntype":"","Args":""},{"Uniquefunname":"func pinyinMatch(zh string, py string) bool","Funname":"calendar.pinyinMatch","Returntype":"bool","Args":"zh string, py string"},{"Uniquefunname":"func canQueryByPinyin(str string) bool","Funname":"canQueryByPinyin","Returntype":"bool","Args":"str string"},{"Uniquefunname":"func createPinyin(zh string) string","Funname":"createPinyin","Returntype":"string","Args":"zh string"},{"Uniquefunname":"func createPinyinQuery(pinyin string) string","Funname":"createPinyinQuery","Returntype":"string","Args":"pinyin string"},{"Uniquefunname":"func createPinyinRegexp(pinyin string) string","Funname":"createPinyinRegexp","Returntype":"string","Args":"pinyin string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func pinyinMatch(zh string, py string) bool","Funname":"pinyinMatch","Returntype":"bool","Args":"zh string, py string"}],"Records":[{"Name":"var:calendar","Fields":["calendar.singlePinyinMaxLength","calendar.validPinyinList","calendar.validPinyinMap"]}]}
{"Filepath":"calendar/scheduler.go","Functions":[{"Uniquefunname":"func (s *Scheduler) DebugRemindJob(id int64) *dbus.Error","Funname":"DebugRemindJob","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (w *dateJobsWrap) MarshalJSON() ([]byte, error)","Funname":"MarshalJSON","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (tg *timerGroup) addJob(job *Job, m *Scheduler)","Funname":"addJob","Returntype":"","Args":"job *Job, m *Scheduler"},{"Uniquefunname":"func (s *Scheduler) DebugRemindJob(id int64) *dbus.Error","Funname":"calendar.Scheduler.DebugRemindJob","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetInterfaceName() string","Funname":"calendar.Scheduler.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (s *Scheduler) createJob(job *Job) error","Funname":"calendar.Scheduler.createJob","Returntype":"error","Args":"job *Job"},{"Uniquefunname":"func (s *Scheduler) createType(jobType *JobType) error","Funname":"calendar.Scheduler.createType","Returntype":"error","Args":"jobType *JobType"},{"Uniquefunname":"func (s *Scheduler) deleteJob(id uint) error","Funname":"calendar.Scheduler.deleteJob","Returntype":"error","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) deleteType(id uint) error","Funname":"calendar.Scheduler.deleteType","Returntype":"error","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) destroy()","Funname":"calendar.Scheduler.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (s *Scheduler) emitJobsUpdated(ids ...uint)","Funname":"calendar.Scheduler.emitJobsUpdated","Returntype":"","Args":"ids ...uint"},{"Uniquefunname":"func (s *Scheduler) getJob(id uint) (*JobJSON, error)","Funname":"calendar.Scheduler.getJob","Returntype":"(*JobJSON, error)","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) getJobs(startDate, endDate libdate.Date) ([]dateJobsWrap, error)","Funname":"calendar.Scheduler.getJobs","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date"},{"Uniquefunname":"func (s *Scheduler) getRemindJobs(tr TimeRange) ([]*Job, error)","Funname":"calendar.Scheduler.getRemindJobs","Returntype":"([]*Job, error)","Args":"tr TimeRange"},{"Uniquefunname":"func (s *Scheduler) getType(id uint) (*JobTypeJSON, error)","Funname":"calendar.Scheduler.getType","Returntype":"(*JobTypeJSON, error)","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) getTypes() ([]*JobTypeJSON, error)","Funname":"calendar.Scheduler.getTypes","Returntype":"([]*JobTypeJSON, error)","Args":""},{"Uniquefunname":"func (s *Scheduler) listenDBusSignals()","Funname":"calendar.Scheduler.listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (s *Scheduler) notifyJobsChange(ids ...uint)","Funname":"calendar.Scheduler.notifyJobsChange","Returntype":"","Args":"ids ...uint"},{"Uniquefunname":"func calendar.Scheduler.queryJobs(key string, startTime, endTime time.Time)([]dateJobsWrap, error)","Funname":"calendar.Scheduler.queryJobs","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime, endTime time.Time"},{"Uniquefunname":"func calendar.Scheduler.queryJobsWithLimit(key string, startTime, endTime time.Time, maxNum int32)([]dateJobsWrap, error)","Funname":"calendar.Scheduler.queryJobsWithLimit","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime, endTime time.Time, maxNum int32"},{"Uniquefunname":"func calendar.Scheduler.queryJobsWithRule(key string, startTime time.Time, endTime time.Time, rule string)([]dateJobsWrap, error)","Funname":"calendar.Scheduler.queryJobsWithRule","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime time.Time, endTime time.Time, rule string"},{"Uniquefunname":"func (s *Scheduler) remindJob(job *JobJSON)","Funname":"calendar.Scheduler.remindJob","Returntype":"","Args":"job *JobJSON"},{"Uniquefunname":"func (s *Scheduler) remindJobLater(job *JobJSON)","Funname":"calendar.Scheduler.remindJobLater","Returntype":"","Args":"job *JobJSON"},{"Uniquefunname":"func (s *Scheduler) setJobRemind(jj *JobJSON, remind string) error","Funname":"calendar.Scheduler.setJobRemind","Returntype":"error","Args":"jj *JobJSON, remind string"},{"Uniquefunname":"func (s *Scheduler) setJobRemindOneDayBefore(jj *JobJSON) error","Funname":"calendar.Scheduler.setJobRemindOneDayBefore","Returntype":"error","Args":"jj *JobJSON"},{"Uniquefunname":"func (s *Scheduler) setJobRemindTomorrow(jj *JobJSON) error","Funname":"calendar.Scheduler.setJobRemindTomorrow","Returntype":"error","Args":"jj *JobJSON"},{"Uniquefunname":"func (s *Scheduler) startRemindLoop()","Funname":"calendar.Scheduler.startRemindLoop","Returntype":"","Args":""},{"Uniquefunname":"func (s *Scheduler) updateJob(job *Job) error","Funname":"calendar.Scheduler.updateJob","Returntype":"error","Args":"job *Job"},{"Uniquefunname":"func (s *Scheduler) updateType(jobType *JobType) error","Funname":"calendar.Scheduler.updateType","Returntype":"error","Args":"jobType *JobType"},{"Uniquefunname":"func (s *Scheduler) withTx(fn func(db *gorm.DB) error) (err error)","Funname":"calendar.Scheduler.withTx","Returntype":"(err error)","Args":"fn func(db *gorm.DB) error"},{"Uniquefunname":"func callUIOpenSchedule(job *JobJSON) error","Funname":"calendar.callUIOpenSchedule","Returntype":"error","Args":"job *JobJSON"},{"Uniquefunname":"func (w *dateJobsWrap) MarshalJSON() ([]byte, error)","Funname":"calendar.dateJobsWrap.MarshalJSON","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func filterDateJobsWrap(wraps []dateJobsWrap, timeRange TimeRange) []dateJobsWrap","Funname":"calendar.filterDateJobsWrap","Returntype":"[]dateJobsWrap","Args":"wraps []dateJobsWrap, timeRange TimeRange"},{"Uniquefunname":"func filterJobs(jobs []*Job, timeRange TimeRange) []*Job","Funname":"calendar.filterJobs","Returntype":"[]*Job","Args":"jobs []*Job, timeRange TimeRange"},{"Uniquefunname":"func getJobsWithRule(db *gorm.DB, rule string) ([]*Job, error)","Funname":"calendar.getJobsWithRule","Returntype":"([]*Job, error)","Args":"db *gorm.DB, rule string"},{"Uniquefunname":"func getRemindLaterDuration(count int) (time.Duration, bool)","Funname":"calendar.getRemindLaterDuration","Returntype":"(time.Duration, bool)","Args":"count int"},{"Uniquefunname":"func newScheduler(db *gorm.DB, service *dbusutil.Service) *Scheduler","Funname":"calendar.newScheduler","Returntype":"*Scheduler","Args":"db *gorm.DB, service *dbusutil.Service"},{"Uniquefunname":"func takeFirstNJobs(wraps []dateJobsWrap, maxNum int32) []dateJobsWrap","Funname":"calendar.takeFirstNJobs","Returntype":"[]dateJobsWrap","Args":"wraps []dateJobsWrap, maxNum int32"},{"Uniquefunname":"func (tg *timerGroup) addJob(job *Job, m *Scheduler)","Funname":"calendar.timerGroup.addJob","Returntype":"","Args":"job *Job, m *Scheduler"},{"Uniquefunname":"func (tg *timerGroup) reset()","Funname":"calendar.timerGroup.reset","Returntype":"","Args":""},{"Uniquefunname":"func wrapDBConditionWithKey(db *gorm.DB, key string) *gorm.DB","Funname":"calendar.wrapDBConditionWithKey","Returntype":"*gorm.DB","Args":"db *gorm.DB, key string"},{"Uniquefunname":"func callUIOpenSchedule(job *JobJSON) error","Funname":"callUIOpenSchedule","Returntype":"error","Args":"job *JobJSON"},{"Uniquefunname":"func (s *Scheduler) createJob(job *Job) error","Funname":"createJob","Returntype":"error","Args":"job *Job"},{"Uniquefunname":"func (s *Scheduler) createType(jobType *JobType) error","Funname":"createType","Returntype":"error","Args":"jobType *JobType"},{"Uniquefunname":"func (s *Scheduler) deleteJob(id uint) error","Funname":"deleteJob","Returntype":"error","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) deleteType(id uint) error","Funname":"deleteType","Returntype":"error","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (s *Scheduler) emitJobsUpdated(ids ...uint)","Funname":"emitJobsUpdated","Returntype":"","Args":"ids ...uint"},{"Uniquefunname":"func filterDateJobsWrap(wraps []dateJobsWrap, timeRange TimeRange) []dateJobsWrap","Funname":"filterDateJobsWrap","Returntype":"[]dateJobsWrap","Args":"wraps []dateJobsWrap, timeRange TimeRange"},{"Uniquefunname":"func filterJobs(jobs []*Job, timeRange TimeRange) []*Job","Funname":"filterJobs","Returntype":"[]*Job","Args":"jobs []*Job, timeRange TimeRange"},{"Uniquefunname":"func (s *Scheduler) getJob(id uint) (*JobJSON, error)","Funname":"getJob","Returntype":"(*JobJSON, error)","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) getJobs(startDate, endDate libdate.Date) ([]dateJobsWrap, error)","Funname":"getJobs","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date"},{"Uniquefunname":"func getJobsWithRule(db *gorm.DB, rule string) ([]*Job, error)","Funname":"getJobsWithRule","Returntype":"([]*Job, error)","Args":"db *gorm.DB, rule string"},{"Uniquefunname":"func (s *Scheduler) getRemindJobs(tr TimeRange) ([]*Job, error)","Funname":"getRemindJobs","Returntype":"([]*Job, error)","Args":"tr TimeRange"},{"Uniquefunname":"func getRemindLaterDuration(count int) (time.Duration, bool)","Funname":"getRemindLaterDuration","Returntype":"(time.Duration, bool)","Args":"count int"},{"Uniquefunname":"func (s *Scheduler) getType(id uint) (*JobTypeJSON, error)","Funname":"getType","Returntype":"(*JobTypeJSON, error)","Args":"id uint"},{"Uniquefunname":"func (s *Scheduler) getTypes() ([]*JobTypeJSON, error)","Funname":"getTypes","Returntype":"([]*JobTypeJSON, error)","Args":""},{"Uniquefunname":"func (s *Scheduler) listenDBusSignals()","Funname":"listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func newScheduler(db *gorm.DB, service *dbusutil.Service) *Scheduler","Funname":"newScheduler","Returntype":"*Scheduler","Args":"db *gorm.DB, service *dbusutil.Service"},{"Uniquefunname":"func (s *Scheduler) notifyJobsChange(ids ...uint)","Funname":"notifyJobsChange","Returntype":"","Args":"ids ...uint"},{"Uniquefunname":"func queryJobs(key string, startTime, endTime time.Time)([]dateJobsWrap, error)","Funname":"queryJobs","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime, endTime time.Time"},{"Uniquefunname":"func queryJobsWithLimit(key string, startTime, endTime time.Time, maxNum int32)([]dateJobsWrap, error)","Funname":"queryJobsWithLimit","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime, endTime time.Time, maxNum int32"},{"Uniquefunname":"func queryJobsWithRule(key string, startTime time.Time, endTime time.Time, rule string)([]dateJobsWrap, error)","Funname":"queryJobsWithRule","Returntype":"([]dateJobsWrap, error)","Args":"key string, startTime time.Time, endTime time.Time, rule string"},{"Uniquefunname":"func (s *Scheduler) remindJob(job *JobJSON)","Funname":"remindJob","Returntype":"","Args":"job *JobJSON"},{"Uniquefunname":"func (s *Scheduler) remindJobLater(job *JobJSON)","Funname":"remindJobLater","Returntype":"","Args":"job *JobJSON"},{"Uniquefunname":"func (tg *timerGroup) reset()","Funname":"reset","Returntype":"","Args":""},{"Uniquefunname":"func (s *Scheduler) setJobRemind(jj *JobJSON, remind string) error","Funname":"setJobRemind","Returntype":"error","Args":"jj *JobJSON, remind string"},{"Uniquefunname":"func (s *Scheduler) setJobRemindOneDayBefore(jj *JobJSON) error","Funname":"setJobRemindOneDayBefore","Returntype":"error","Args":"jj *JobJSON"},{"Uniquefunname":"func (s *Scheduler) setJobRemindTomorrow(jj *JobJSON) error","Funname":"setJobRemindTomorrow","Returntype":"error","Args":"jj *JobJSON"},{"Uniquefunname":"func (s *Scheduler) startRemindLoop()","Funname":"startRemindLoop","Returntype":"","Args":""},{"Uniquefunname":"func takeFirstNJobs(wraps []dateJobsWrap, maxNum int32) []dateJobsWrap","Funname":"takeFirstNJobs","Returntype":"[]dateJobsWrap","Args":"wraps []dateJobsWrap, maxNum int32"},{"Uniquefunname":"func (s *Scheduler) updateJob(job *Job) error","Funname":"updateJob","Returntype":"error","Args":"job *Job"},{"Uniquefunname":"func (s *Scheduler) updateType(jobType *JobType) error","Funname":"updateType","Returntype":"error","Args":"jobType *JobType"},{"Uniquefunname":"func (s *Scheduler) withTx(fn func(db *gorm.DB) error) (err error)","Funname":"withTx","Returntype":"(err error)","Args":"fn func(db *gorm.DB) error"},{"Uniquefunname":"func wrapDBConditionWithKey(db *gorm.DB, key string) *gorm.DB","Funname":"wrapDBConditionWithKey","Returntype":"*gorm.DB","Args":"db *gorm.DB, key string"}],"Records":[{"Name":"struct:calendar.Scheduler","Fields":["calendar.Scheduler.changeChan chan []uint","calendar.Scheduler.db *gorm.DB","calendar.Scheduler.festivalJobEnabled bool","calendar.Scheduler.methods *struct { GetJobs func() `in:\"startYear,startMonth,startDay,endYear,endMonth,endDay\" out:\"jobs\"`; GetJob func() `in:\"id\" out:\"job\"`; GetJobsWithLimit func() `in:\"startYear,startMonth,startDay,endYear,endMonth,endDay,maxNum\" out:\"jobs\"`; GetJobsWithRule func() `in:\"startYear,startMonth,startDay,endYear,endMonth,endDay,rule\" out:\"jobs\"`; QueryJobs func() `in:\"params\" out:\"jobs\"`; QueryJobsWithLimit func() `in:\"params,maxNum\" out:\"jobs\"`; QueryJobsWithRule func() `in:\"params,rule\" out:\"jobs\"`; DeleteJob func(","calendar.Scheduler.notifications *notifications.Notifications","calendar.Scheduler.notifyJobMap map[uint32]*JobJSON","calendar.Scheduler.notifyJobMapMu sync.Mutex","calendar.Scheduler.quitChan chan struct{}","calendar.Scheduler.remindLaterTimers map[uint]*time.Timer","calendar.Scheduler.remindLaterTimersMu sync.Mutex","calendar.Scheduler.service *dbusutil.Service","calendar.Scheduler.signalLoop *dbusutil.SignalLoop","calendar.Scheduler.signals *struct { JobsUpdated struct { Ids []int64; }; }","calendar.Scheduler.timerGroup timerGroup"]},{"Name":"struct:calendar.dateJobsWrap","Fields":["calendar.dateJobsWrap.date libdate.Date","calendar.dateJobsWrap.extendJobs []*Job","calendar.dateJobsWrap.jobs []*Job"]},{"Name":"struct:calendar.dateJobsWrapJSON","Fields":["calendar.dateJobsWrapJSON.Date string","calendar.dateJobsWrapJSON.Jobs []*JobJSON"]},{"Name":"const:calendar","Fields":["calendar.layoutHM","calendar.notifyActKeyClose","calendar.notifyActKeyRemind1DayBefore","calendar.notifyActKeyRemindLater","calendar.notifyActKeyRemindTomorrow","calendar.notifyCloseReasonDismissedByUser","calendar.uiDBusInterface","calendar.uiDBusPath","calendar.uiDBusService"]},{"Name":"struct:calendar.timerGroup","Fields":["calendar.timerGroup.timers []*time.Timer"]}]}
{"Filepath":"calendar/scheduler_ifc.go","Functions":[{"Uniquefunname":"func (s *Scheduler) CreateJob(jobStr string) (int64, *dbus.Error)","Funname":"CreateJob","Returntype":"(int64, *dbus.Error)","Args":"jobStr string"},{"Uniquefunname":"func (s *Scheduler) CreateType(typeStr string) (int64, *dbus.Error)","Funname":"CreateType","Returntype":"(int64, *dbus.Error)","Args":"typeStr string"},{"Uniquefunname":"func (s *Scheduler) DeleteJob(id int64) *dbus.Error","Funname":"DeleteJob","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) DeleteType(id int64) *dbus.Error","Funname":"DeleteType","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetJob(id int64) (string, *dbus.Error)","Funname":"GetJob","Returntype":"(string, *dbus.Error)","Args":"id int64"},{"Uniquefunname":"func GetJobs(startYear, startMonth, startDay, endYear, endMonth, endDay int32)(string, *dbus.Error)","Funname":"GetJobs","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32"},{"Uniquefunname":"func GetJobsWithLimit(startYear, startMonth, startDay, endYear, endMonth, endDay int32, maxNum int32)(string, *dbus.Error)","Funname":"GetJobsWithLimit","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32, maxNum int32"},{"Uniquefunname":"func GetJobsWithRule(startYear, startMonth, startDay, endYear, endMonth, endDay int32, rule string)(string, *dbus.Error)","Funname":"GetJobsWithRule","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32, rule string"},{"Uniquefunname":"func (s *Scheduler) GetType(id int64) (string, *dbus.Error)","Funname":"GetType","Returntype":"(string, *dbus.Error)","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetTypes() (string, *dbus.Error)","Funname":"GetTypes","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Scheduler) QueryJobs(paramsStr string) (string, *dbus.Error)","Funname":"QueryJobs","Returntype":"(string, *dbus.Error)","Args":"paramsStr string"},{"Uniquefunname":"func (s *Scheduler) QueryJobsWithLimit(paramsStr string, maxNum int32) (string, *dbus.Error)","Funname":"QueryJobsWithLimit","Returntype":"(string, *dbus.Error)","Args":"paramsStr string, maxNum int32"},{"Uniquefunname":"func (s *Scheduler) QueryJobsWithRule(paramsStr string, rule string) (string, *dbus.Error)","Funname":"QueryJobsWithRule","Returntype":"(string, *dbus.Error)","Args":"paramsStr string, rule string"},{"Uniquefunname":"func (s *Scheduler) UpdateJob(jobStr string) *dbus.Error","Funname":"UpdateJob","Returntype":"*dbus.Error","Args":"jobStr string"},{"Uniquefunname":"func (s *Scheduler) UpdateType(typeStr string) *dbus.Error","Funname":"UpdateType","Returntype":"*dbus.Error","Args":"typeStr string"},{"Uniquefunname":"func (s *Scheduler) CreateJob(jobStr string) (int64, *dbus.Error)","Funname":"calendar.Scheduler.CreateJob","Returntype":"(int64, *dbus.Error)","Args":"jobStr string"},{"Uniquefunname":"func (s *Scheduler) CreateType(typeStr string) (int64, *dbus.Error)","Funname":"calendar.Scheduler.CreateType","Returntype":"(int64, *dbus.Error)","Args":"typeStr string"},{"Uniquefunname":"func (s *Scheduler) DeleteJob(id int64) *dbus.Error","Funname":"calendar.Scheduler.DeleteJob","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) DeleteType(id int64) *dbus.Error","Funname":"calendar.Scheduler.DeleteType","Returntype":"*dbus.Error","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetJob(id int64) (string, *dbus.Error)","Funname":"calendar.Scheduler.GetJob","Returntype":"(string, *dbus.Error)","Args":"id int64"},{"Uniquefunname":"func calendar.Scheduler.GetJobs(startYear, startMonth, startDay, endYear, endMonth, endDay int32)(string, *dbus.Error)","Funname":"calendar.Scheduler.GetJobs","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32"},{"Uniquefunname":"func calendar.Scheduler.GetJobsWithLimit(startYear, startMonth, startDay, endYear, endMonth, endDay int32, maxNum int32)(string, *dbus.Error)","Funname":"calendar.Scheduler.GetJobsWithLimit","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32, maxNum int32"},{"Uniquefunname":"func calendar.Scheduler.GetJobsWithRule(startYear, startMonth, startDay, endYear, endMonth, endDay int32, rule string)(string, *dbus.Error)","Funname":"calendar.Scheduler.GetJobsWithRule","Returntype":"(string, *dbus.Error)","Args":"startYear, startMonth, startDay, endYear, endMonth, endDay int32, rule string"},{"Uniquefunname":"func (s *Scheduler) GetType(id int64) (string, *dbus.Error)","Funname":"calendar.Scheduler.GetType","Returntype":"(string, *dbus.Error)","Args":"id int64"},{"Uniquefunname":"func (s *Scheduler) GetTypes() (string, *dbus.Error)","Funname":"calendar.Scheduler.GetTypes","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (s *Scheduler) QueryJobs(paramsStr string) (string, *dbus.Error)","Funname":"calendar.Scheduler.QueryJobs","Returntype":"(string, *dbus.Error)","Args":"paramsStr string"},{"Uniquefunname":"func (s *Scheduler) QueryJobsWithLimit(paramsStr string, maxNum int32) (string, *dbus.Error)","Funname":"calendar.Scheduler.QueryJobsWithLimit","Returntype":"(string, *dbus.Error)","Args":"paramsStr string, maxNum int32"},{"Uniquefunname":"func (s *Scheduler) QueryJobsWithRule(paramsStr string, rule string) (string, *dbus.Error)","Funname":"calendar.Scheduler.QueryJobsWithRule","Returntype":"(string, *dbus.Error)","Args":"paramsStr string, rule string"},{"Uniquefunname":"func (s *Scheduler) UpdateJob(jobStr string) *dbus.Error","Funname":"calendar.Scheduler.UpdateJob","Returntype":"*dbus.Error","Args":"jobStr string"},{"Uniquefunname":"func (s *Scheduler) UpdateType(typeStr string) *dbus.Error","Funname":"calendar.Scheduler.UpdateType","Returntype":"*dbus.Error","Args":"typeStr string"},{"Uniquefunname":"func calendar.Scheduler.getJobsWithLimit(startDate, endDate libdate.Date, maxNum int32)([]dateJobsWrap, error)","Funname":"calendar.Scheduler.getJobsWithLimit","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date, maxNum int32"},{"Uniquefunname":"func calendar.Scheduler.getJobsWithRule(startDate, endDate libdate.Date, rule string)([]dateJobsWrap, error)","Funname":"calendar.Scheduler.getJobsWithRule","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date, rule string"},{"Uniquefunname":"func getJobsWithLimit(startDate, endDate libdate.Date, maxNum int32)([]dateJobsWrap, error)","Funname":"getJobsWithLimit","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date, maxNum int32"},{"Uniquefunname":"func getJobsWithRule(startDate, endDate libdate.Date, rule string)([]dateJobsWrap, error)","Funname":"getJobsWithRule","Returntype":"([]dateJobsWrap, error)","Args":"startDate, endDate libdate.Date, rule string"}],"Records":[{"Name":"const:calendar","Fields":["calendar.dbusInterface","calendar.dbusPath","calendar.dbusServiceName"]},{"Name":"struct:calendar.queryJobsParams","Fields":["calendar.queryJobsParams.End time.Time","calendar.queryJobsParams.Key string","calendar.queryJobsParams.Start time.Time"]}]}
{"Filepath":"calendar/t1_test.go","Functions":[{"Uniquefunname":"func TestBetween(t *testing.T)","Funname":"TestBetween","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetBodyTimePart(t *testing.T)","Funname":"TestGetBodyTimePart","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetRemindAdvanceDays(t *testing.T)","Funname":"TestGetRemindAdvanceDays","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetRemindJobBody(t *testing.T)","Funname":"TestGetRemindJobBody","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseRemind(t *testing.T)","Funname":"TestParseRemind","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestTimeRangeContains(t *testing.T)","Funname":"TestTimeRangeContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestTimeRangeOverlap(t *testing.T)","Funname":"TestTimeRangeOverlap","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestBetween(t *testing.T)","Funname":"calendar.TestBetween","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetBodyTimePart(t *testing.T)","Funname":"calendar.TestGetBodyTimePart","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetRemindAdvanceDays(t *testing.T)","Funname":"calendar.TestGetRemindAdvanceDays","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetRemindJobBody(t *testing.T)","Funname":"calendar.TestGetRemindJobBody","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseRemind(t *testing.T)","Funname":"calendar.TestParseRemind","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestTimeRangeContains(t *testing.T)","Funname":"calendar.TestTimeRangeContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestTimeRangeOverlap(t *testing.T)","Funname":"calendar.TestTimeRangeOverlap","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"calendar/time_range.go","Functions":[{"Uniquefunname":"func (r TimeRange) contains(r1 TimeRange) bool","Funname":"calendar.TimeRange.contains","Returntype":"bool","Args":"r1 TimeRange"},{"Uniquefunname":"func (r TimeRange) overlap(r1 TimeRange) bool","Funname":"calendar.TimeRange.overlap","Returntype":"bool","Args":"r1 TimeRange"},{"Uniquefunname":"func (r dateRange) overlap(r1 dateRange) bool","Funname":"calendar.dateRange.overlap","Returntype":"bool","Args":"r1 dateRange"},{"Uniquefunname":"func getTimeRange(start, end time.Time) TimeRange","Funname":"calendar.getTimeRange","Returntype":"TimeRange","Args":"start, end time.Time"},{"Uniquefunname":"func (r TimeRange) contains(r1 TimeRange) bool","Funname":"contains","Returntype":"bool","Args":"r1 TimeRange"},{"Uniquefunname":"func getTimeRange(start, end time.Time) TimeRange","Funname":"getTimeRange","Returntype":"TimeRange","Args":"start, end time.Time"},{"Uniquefunname":"func (r TimeRange) overlap(r1 TimeRange) bool","Funname":"overlap","Returntype":"bool","Args":"r1 TimeRange"},{"Uniquefunname":"func (r dateRange) overlap(r1 dateRange) bool","Funname":"overlap","Returntype":"bool","Args":"r1 dateRange"}],"Records":[{"Name":"struct:calendar.TimeRange","Fields":["calendar.TimeRange.end time.Time","calendar.TimeRange.start time.Time"]},{"Name":"struct:calendar.dateRange","Fields":["calendar.dateRange.end libdate.Date","calendar.dateRange.start libdate.Date"]}]}
{"Filepath":"calendar/type.go","Functions":[{"Uniquefunname":"func (j *JobType) validate() error","Funname":"calendar.JobType.validate","Returntype":"error","Args":""},{"Uniquefunname":"func (j *JobTypeJSON) toJobType() *JobType","Funname":"calendar.JobTypeJSON.toJobType","Returntype":"*JobType","Args":""},{"Uniquefunname":"func initPredefinedJobTypes()","Funname":"calendar.initPredefinedJobTypes","Returntype":"","Args":""},{"Uniquefunname":"func initPredefinedJobTypes()","Funname":"initPredefinedJobTypes","Returntype":"","Args":""},{"Uniquefunname":"func (j *JobTypeJSON) toJobType() *JobType","Funname":"toJobType","Returntype":"*JobType","Args":""},{"Uniquefunname":"func (j *JobType) validate() error","Funname":"validate","Returntype":"error","Args":""}],"Records":[{"Name":"struct:calendar.JobType","Fields":["calendar.JobType.Color string","calendar.JobType.Name string"]},{"Name":"const:calendar","Fields":["calendar.JobTypeFestival","calendar.jobTypeLife","calendar.jobTypeOther","calendar.jobTypeWork"]},{"Name":"struct:calendar.JobTypeJSON","Fields":["calendar.JobTypeJSON.Color string","calendar.JobTypeJSON.ID uint","calendar.JobTypeJSON.Name string"]},{"Name":"var:calendar","Fields":["calendar.colorReg","calendar.globalPredefinedTypes"]}]}
{"Filepath":"calendar/util.go","Functions":[{"Uniquefunname":"func cFormatTime(format string, t time.Time) string","Funname":"cFormatTime","Returntype":"string","Args":"format string, t time.Time"},{"Uniquefunname":"func cFormatTime(format string, t time.Time) string","Funname":"calendar.cFormatTime","Returntype":"string","Args":"format string, t time.Time"},{"Uniquefunname":"func formatTime(t time.Time) string","Funname":"calendar.formatTime","Returntype":"string","Args":"t time.Time"},{"Uniquefunname":"func fromJson(jStr string, v interface","Funname":"calendar.fromJson","Returntype":"error","Args":"jStr string, v interface{}"},{"Uniquefunname":"func isZH() bool","Funname":"calendar.isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func newTimeYMDHM(y int, m time.Month, d int, h int, min int) time.Time","Funname":"calendar.newTimeYMDHM","Returntype":"time.Time","Args":"y int, m time.Month, d int, h int, min int"},{"Uniquefunname":"func newTimeYMDHMS(y int, m time.Month, d int, h int, min int, s int) time.Time","Funname":"calendar.newTimeYMDHMS","Returntype":"time.Time","Args":"y int, m time.Month, d int, h int, min int, s int"},{"Uniquefunname":"func setClock(t1 time.Time, c Clock) time.Time","Funname":"calendar.setClock","Returntype":"time.Time","Args":"t1 time.Time, c Clock"},{"Uniquefunname":"func toJson(v interface","Funname":"calendar.toJson","Returntype":"(string, error)","Args":"v interface{}"},{"Uniquefunname":"func formatTime(t time.Time) string","Funname":"formatTime","Returntype":"string","Args":"t time.Time"},{"Uniquefunname":"func fromJson(jStr string, v interface","Funname":"fromJson","Returntype":"error","Args":"jStr string, v interface{}"},{"Uniquefunname":"func isZH() bool","Funname":"isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func newTimeYMDHM(y int, m time.Month, d int, h int, min int) time.Time","Funname":"newTimeYMDHM","Returntype":"time.Time","Args":"y int, m time.Month, d int, h int, min int"},{"Uniquefunname":"func newTimeYMDHMS(y int, m time.Month, d int, h int, min int, s int) time.Time","Funname":"newTimeYMDHMS","Returntype":"time.Time","Args":"y int, m time.Month, d int, h int, min int, s int"},{"Uniquefunname":"func setClock(t1 time.Time, c Clock) time.Time","Funname":"setClock","Returntype":"time.Time","Args":"t1 time.Time, c Clock"},{"Uniquefunname":"func toJson(v interface","Funname":"toJson","Returntype":"(string, error)","Args":"v interface{}"}],"Records":[{"Name":"struct:calendar.Clock","Fields":["calendar.Clock.Hour int","calendar.Clock.Minute int","calendar.Clock.Second int"]}]}
{"Filepath":"calltrace/calltrace.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"calltrace.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"calltrace.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"calltrace.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) handleProcessStat(cpuPercentage, memUsage, duration int32)","Funname":"calltrace.Daemon.handleProcessStat","Returntype":"","Args":"cpuPercentage, memUsage, duration int32"},{"Uniquefunname":"func (d *Daemon) loop()","Funname":"calltrace.Daemon.loop","Returntype":"","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"calltrace.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func init()","Funname":"calltrace.init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) handleProcessStat(cpuPercentage, memUsage, duration int32)","Funname":"handleProcessStat","Returntype":"","Args":"cpuPercentage, memUsage, duration int32"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) loop()","Funname":"loop","Returntype":"","Args":""}],"Records":[{"Name":"struct:calltrace.Daemon","Fields":["calltrace.Daemon.ct *Manager","calltrace.Daemon.quit chan bool"]},{"Name":"var:calltrace","Fields":["calltrace.logger"]}]}
{"Filepath":"calltrace/cpu.go","Functions":[{"Uniquefunname":"func (info *cpuTimeInfo) Percentage() float64","Funname":"Percentage","Returntype":"float64","Args":""},{"Uniquefunname":"func (info *cpuTimeInfo) Total() int64","Funname":"Total","Returntype":"int64","Args":""},{"Uniquefunname":"func (info *cpuTimeInfo) Percentage() float64","Funname":"calltrace.cpuTimeInfo.Percentage","Returntype":"float64","Args":""},{"Uniquefunname":"func (info *cpuTimeInfo) Total() int64","Funname":"calltrace.cpuTimeInfo.Total","Returntype":"int64","Args":""},{"Uniquefunname":"func getCPUPercentage() (float64, error)","Funname":"calltrace.getCPUPercentage","Returntype":"(float64, error)","Args":""},{"Uniquefunname":"func getHertz() int64","Funname":"calltrace.getHertz","Returntype":"int64","Args":""},{"Uniquefunname":"func getUptime() float64","Funname":"calltrace.getUptime","Returntype":"float64","Args":""},{"Uniquefunname":"func stoi64(s string) int64","Funname":"calltrace.stoi64","Returntype":"int64","Args":"s string"},{"Uniquefunname":"func getCPUPercentage() (float64, error)","Funname":"getCPUPercentage","Returntype":"(float64, error)","Args":""},{"Uniquefunname":"func getHertz() int64","Funname":"getHertz","Returntype":"int64","Args":""},{"Uniquefunname":"func getUptime() float64","Funname":"getUptime","Returntype":"float64","Args":""},{"Uniquefunname":"func stoi64(s string) int64","Funname":"stoi64","Returntype":"int64","Args":"s string"}],"Records":[{"Name":"var:calltrace","Fields":["calltrace._hertz"]},{"Name":"struct:calltrace.cpuTimeInfo","Fields":["calltrace.cpuTimeInfo.cstime int64","calltrace.cpuTimeInfo.cutime int64","calltrace.cpuTimeInfo.hertz int64","calltrace.cpuTimeInfo.nice int64","calltrace.cpuTimeInfo.start int64","calltrace.cpuTimeInfo.stime int64","calltrace.cpuTimeInfo.utime int64"]}]}
{"Filepath":"calltrace/manager.go","Functions":[{"Uniquefunname":"func NewManager(duration uint32) (*Manager, error)","Funname":"NewManager","Returntype":"(*Manager, error)","Args":"duration uint32"},{"Uniquefunname":"func (ct *Manager) SetAutoDestroy(seconds uint32)","Funname":"SetAutoDestroy","Returntype":"","Args":"seconds uint32"},{"Uniquefunname":"func (ct *Manager) SetAutoDestroy(seconds uint32)","Funname":"calltrace.Manager.SetAutoDestroy","Returntype":"","Args":"seconds uint32"},{"Uniquefunname":"func (ct *Manager) loop()","Funname":"calltrace.Manager.loop","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) recordStack()","Funname":"calltrace.Manager.recordStack","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) stop()","Funname":"calltrace.Manager.stop","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) writeHeap()","Funname":"calltrace.Manager.writeHeap","Returntype":"","Args":""},{"Uniquefunname":"func NewManager(duration uint32) (*Manager, error)","Funname":"calltrace.NewManager","Returntype":"(*Manager, error)","Args":"duration uint32"},{"Uniquefunname":"func ensureDirExist() (string, error)","Funname":"calltrace.ensureDirExist","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func ensureDirExist() (string, error)","Funname":"ensureDirExist","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (ct *Manager) loop()","Funname":"loop","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) recordStack()","Funname":"recordStack","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) stop()","Funname":"stop","Returntype":"","Args":""},{"Uniquefunname":"func (ct *Manager) writeHeap()","Funname":"writeHeap","Returntype":"","Args":""}],"Records":[{"Name":"struct:calltrace.Manager","Fields":["calltrace.Manager.cpuFile *os.File","calltrace.Manager.duration uint32","calltrace.Manager.quit chan bool","calltrace.Manager.stackFile *os.File"]}]}
{"Filepath":"calltrace/mem.go","Functions":[{"Uniquefunname":"func getInterge(line string) (int64, error)","Funname":"calltrace.getInterge","Returntype":"(int64, error)","Args":"line string"},{"Uniquefunname":"func getMemoryUsage() (int64, error)","Funname":"calltrace.getMemoryUsage","Returntype":"(int64, error)","Args":""},{"Uniquefunname":"func sumMemByFile(filename string) (int64, error)","Funname":"calltrace.sumMemByFile","Returntype":"(int64, error)","Args":"filename string"},{"Uniquefunname":"func getInterge(line string) (int64, error)","Funname":"getInterge","Returntype":"(int64, error)","Args":"line string"},{"Uniquefunname":"func getMemoryUsage() (int64, error)","Funname":"getMemoryUsage","Returntype":"(int64, error)","Args":""},{"Uniquefunname":"func sumMemByFile(filename string) (int64, error)","Funname":"sumMemByFile","Returntype":"(int64, error)","Args":"filename string"}],"Records":null}
{"Filepath":"clipboard/clipboard_test.go","Functions":[{"Uniquefunname":"func TestEventCaptor(t *testing.T)","Funname":"TestEventCaptor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_emptyDir(t *testing.T)","Funname":"Test_emptyDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getAtomListFormReply(t *testing.T)","Funname":"Test_getAtomListFormReply","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getBytesMd5sum(t *testing.T)","Funname":"Test_getBytesMd5sum","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getSelectionOwner(t *testing.T)","Funname":"Test_getSelectionOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_setSelectionOwner(t *testing.T)","Funname":"Test_setSelectionOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestEventCaptor(t *testing.T)","Funname":"clipboard.TestEventCaptor","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_emptyDir(t *testing.T)","Funname":"clipboard.Test_emptyDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getAtomListFormReply(t *testing.T)","Funname":"clipboard.Test_getAtomListFormReply","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getBytesMd5sum(t *testing.T)","Funname":"clipboard.Test_getBytesMd5sum","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getSelectionOwner(t *testing.T)","Funname":"clipboard.Test_getSelectionOwner","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_setSelectionOwner(t *testing.T)","Funname":"clipboard.Test_setSelectionOwner","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"clipboard/event_captor.go","Functions":[{"Uniquefunname":"func captureEvent(begin func() error, cond func(interface{}) bool)(interface{}, error)","Funname":"captureEvent","Returntype":"(interface{}, error)","Args":"begin func() error, cond func(interface{}) bool"},{"Uniquefunname":"func capturePropertyNotifyEvent(begin func() error, cond func(*x.PropertyNotifyEvent) bool)(*x.PropertyNotifyEvent, error)","Funname":"capturePropertyNotifyEvent","Returntype":"(*x.PropertyNotifyEvent, error)","Args":"begin func() error, cond func(*x.PropertyNotifyEvent) bool"},{"Uniquefunname":"func captureSelectionNotifyEvent(begin func() error, cond func(event *x.SelectionNotifyEvent) bool)(*x.SelectionNotifyEvent, error)","Funname":"captureSelectionNotifyEvent","Returntype":"(*x.SelectionNotifyEvent, error)","Args":"begin func() error, cond func(event *x.SelectionNotifyEvent) bool"},{"Uniquefunname":"func clipboard.eventCaptor.captureEvent(begin func() error, cond func(interface{}) bool)(interface{}, error)","Funname":"clipboard.eventCaptor.captureEvent","Returntype":"(interface{}, error)","Args":"begin func() error, cond func(interface{}) bool"},{"Uniquefunname":"func clipboard.eventCaptor.capturePropertyNotifyEvent(begin func() error, cond func(*x.PropertyNotifyEvent) bool)(*x.PropertyNotifyEvent, error)","Funname":"clipboard.eventCaptor.capturePropertyNotifyEvent","Returntype":"(*x.PropertyNotifyEvent, error)","Args":"begin func() error, cond func(*x.PropertyNotifyEvent) bool"},{"Uniquefunname":"func clipboard.eventCaptor.captureSelectionNotifyEvent(begin func() error, cond func(event *x.SelectionNotifyEvent) bool)(*x.SelectionNotifyEvent, error)","Funname":"clipboard.eventCaptor.captureSelectionNotifyEvent","Returntype":"(*x.SelectionNotifyEvent, error)","Args":"begin func() error, cond func(event *x.SelectionNotifyEvent) bool"},{"Uniquefunname":"func (ec *eventCaptor) handleEvent(event interface","Funname":"clipboard.eventCaptor.handleEvent","Returntype":"bool","Args":"event interface{}"},{"Uniquefunname":"func (ec *eventCaptor) loopCheck()","Funname":"clipboard.eventCaptor.loopCheck","Returntype":"","Args":""},{"Uniquefunname":"func newEventCaptor() *eventCaptor","Funname":"clipboard.newEventCaptor","Returntype":"*eventCaptor","Args":""},{"Uniquefunname":"func (ec *eventCaptor) handleEvent(event interface","Funname":"handleEvent","Returntype":"bool","Args":"event interface{}"},{"Uniquefunname":"func (ec *eventCaptor) loopCheck()","Funname":"loopCheck","Returntype":"","Args":""},{"Uniquefunname":"func newEventCaptor() *eventCaptor","Funname":"newEventCaptor","Returntype":"*eventCaptor","Args":""}],"Records":[{"Name":"var:clipboard","Fields":["clipboard.errTimeout"]},{"Name":"struct:clipboard.eventCaptor","Fields":["clipboard.eventCaptor.hooks *list.List","clipboard.eventCaptor.interval time.Duration","clipboard.eventCaptor.mu sync.Mutex","clipboard.eventCaptor.quit chan struct{}","clipboard.eventCaptor.timer *time.Timer"]},{"Name":"struct:clipboard.eventCaptorHook","Fields":["clipboard.eventCaptorHook.ch chan interface{}","clipboard.eventCaptorHook.cond func(ev interface{}) bool","clipboard.eventCaptorHook.time time.Time"]}]}
{"Filepath":"clipboard/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) addTargetData(targetData *TargetData)","Funname":"addTargetData","Returntype":"","Args":"targetData *TargetData"},{"Uniquefunname":"func (m *Manager) becomeClipboardOwner(ts x.Timestamp) error","Funname":"becomeClipboardOwner","Returntype":"error","Args":"ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"clipboard.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) addTargetData(targetData *TargetData)","Funname":"clipboard.Manager.addTargetData","Returntype":"","Args":"targetData *TargetData"},{"Uniquefunname":"func (m *Manager) becomeClipboardOwner(ts x.Timestamp) error","Funname":"clipboard.Manager.becomeClipboardOwner","Returntype":"error","Args":"ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) convertClipboard(ev *x.SelectionRequestEvent)","Funname":"clipboard.Manager.convertClipboard","Returntype":"","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func (m *Manager) convertClipboardManager(ev *x.SelectionRequestEvent)","Funname":"clipboard.Manager.convertClipboardManager","Returntype":"","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func (m *Manager) finishSelectionRequest(ev *x.SelectionRequestEvent, success bool)","Funname":"clipboard.Manager.finishSelectionRequest","Returntype":"","Args":"ev *x.SelectionRequestEvent, success bool"},{"Uniquefunname":"func (m *Manager) getClipboardTargets(ts x.Timestamp) ([]x.Atom, error)","Funname":"clipboard.Manager.getClipboardTargets","Returntype":"([]x.Atom, error)","Args":"ts x.Timestamp"},{"Uniquefunname":"func clipboard.Manager.getProperty(win x.Window, propertyAtom x.Atom, delete bool)(*x.GetPropertyReply, error)","Funname":"clipboard.Manager.getProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"win x.Window, propertyAtom x.Atom, delete bool"},{"Uniquefunname":"func (m *Manager) getTargetData(target x.Atom) *TargetData","Funname":"clipboard.Manager.getTargetData","Returntype":"*TargetData","Args":"target x.Atom"},{"Uniquefunname":"func (m *Manager) getTimestamp() (x.Timestamp, error)","Funname":"clipboard.Manager.getTimestamp","Returntype":"(x.Timestamp, error)","Args":""},{"Uniquefunname":"func (m *Manager) handleEvent(ev x.GenericEvent)","Funname":"clipboard.Manager.handleEvent","Returntype":"","Args":"ev x.GenericEvent"},{"Uniquefunname":"func (m *Manager) recvTargetIncr(target, prop x.Atom) error","Funname":"clipboard.Manager.recvTargetIncr","Returntype":"error","Args":"target, prop x.Atom"},{"Uniquefunname":"func (m *Manager) saveTarget(target x.Atom, ts x.Timestamp) error","Funname":"clipboard.Manager.saveTarget","Returntype":"error","Args":"target x.Atom, ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) saveTargets(targets []x.Atom, ts x.Timestamp)","Funname":"clipboard.Manager.saveTargets","Returntype":"","Args":"targets []x.Atom, ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) sendTargetIncr(targetData *TargetData, ev *x.SelectionRequestEvent) error","Funname":"clipboard.Manager.sendTargetIncr","Returntype":"error","Args":"targetData *TargetData, ev *x.SelectionRequestEvent"},{"Uniquefunname":"func (m *Manager) start() error","Funname":"clipboard.Manager.start","Returntype":"error","Args":""},{"Uniquefunname":"func (td *TargetData) needINCR() bool","Funname":"clipboard.TargetData.needINCR","Returntype":"bool","Args":""},{"Uniquefunname":"func initAtoms(xConn *x.Conn)","Funname":"clipboard.initAtoms","Returntype":"","Args":"xConn *x.Conn"},{"Uniquefunname":"func setSelectionOwner(xc XClient, win x.Window, selection x.Atom, ts x.Timestamp) error","Funname":"clipboard.setSelectionOwner","Returntype":"error","Args":"xc XClient, win x.Window, selection x.Atom, ts x.Timestamp"},{"Uniquefunname":"func shouldIgnoreSaveTarget(target x.Atom, targetName string) bool","Funname":"clipboard.shouldIgnoreSaveTarget","Returntype":"bool","Args":"target x.Atom, targetName string"},{"Uniquefunname":"func (m *Manager) convertClipboard(ev *x.SelectionRequestEvent)","Funname":"convertClipboard","Returntype":"","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func (m *Manager) convertClipboardManager(ev *x.SelectionRequestEvent)","Funname":"convertClipboardManager","Returntype":"","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func (m *Manager) finishSelectionRequest(ev *x.SelectionRequestEvent, success bool)","Funname":"finishSelectionRequest","Returntype":"","Args":"ev *x.SelectionRequestEvent, success bool"},{"Uniquefunname":"func (m *Manager) getClipboardTargets(ts x.Timestamp) ([]x.Atom, error)","Funname":"getClipboardTargets","Returntype":"([]x.Atom, error)","Args":"ts x.Timestamp"},{"Uniquefunname":"func getProperty(win x.Window, propertyAtom x.Atom, delete bool)(*x.GetPropertyReply, error)","Funname":"getProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"win x.Window, propertyAtom x.Atom, delete bool"},{"Uniquefunname":"func (m *Manager) getTargetData(target x.Atom) *TargetData","Funname":"getTargetData","Returntype":"*TargetData","Args":"target x.Atom"},{"Uniquefunname":"func (m *Manager) getTimestamp() (x.Timestamp, error)","Funname":"getTimestamp","Returntype":"(x.Timestamp, error)","Args":""},{"Uniquefunname":"func (m *Manager) handleEvent(ev x.GenericEvent)","Funname":"handleEvent","Returntype":"","Args":"ev x.GenericEvent"},{"Uniquefunname":"func initAtoms(xConn *x.Conn)","Funname":"initAtoms","Returntype":"","Args":"xConn *x.Conn"},{"Uniquefunname":"func (td *TargetData) needINCR() bool","Funname":"needINCR","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) recvTargetIncr(target, prop x.Atom) error","Funname":"recvTargetIncr","Returntype":"error","Args":"target, prop x.Atom"},{"Uniquefunname":"func (m *Manager) saveTarget(target x.Atom, ts x.Timestamp) error","Funname":"saveTarget","Returntype":"error","Args":"target x.Atom, ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) saveTargets(targets []x.Atom, ts x.Timestamp)","Funname":"saveTargets","Returntype":"","Args":"targets []x.Atom, ts x.Timestamp"},{"Uniquefunname":"func (m *Manager) sendTargetIncr(targetData *TargetData, ev *x.SelectionRequestEvent) error","Funname":"sendTargetIncr","Returntype":"error","Args":"targetData *TargetData, ev *x.SelectionRequestEvent"},{"Uniquefunname":"func setSelectionOwner(xc XClient, win x.Window, selection x.Atom, ts x.Timestamp) error","Funname":"setSelectionOwner","Returntype":"error","Args":"xc XClient, win x.Window, selection x.Atom, ts x.Timestamp"},{"Uniquefunname":"func shouldIgnoreSaveTarget(target x.Atom, targetName string) bool","Funname":"shouldIgnoreSaveTarget","Returntype":"bool","Args":"target x.Atom, targetName string"},{"Uniquefunname":"func (m *Manager) start() error","Funname":"start","Returntype":"error","Args":""}],"Records":[{"Name":"struct:clipboard.Manager","Fields":["clipboard.Manager.content []*TargetData","clipboard.Manager.contentMu sync.Mutex","clipboard.Manager.ec *eventCaptor","clipboard.Manager.methods *struct { RemoveTarget func() `in:\"target\"`; }","clipboard.Manager.timestamp x.Timestamp","clipboard.Manager.window x.Window","clipboard.Manager.xc XClient"]},{"Name":"struct:clipboard.TargetData","Fields":["clipboard.TargetData.Data []byte","clipboard.TargetData.Format uint8","clipboard.TargetData.Target x.Atom","clipboard.TargetData.Type x.Atom"]},{"Name":"var:clipboard","Fields":["clipboard.atomAtomPair","clipboard.atomClipboard","clipboard.atomClipboardManager","clipboard.atomDelete","clipboard.atomFromClipboardManager","clipboard.atomIncr","clipboard.atomInsertProperty","clipboard.atomInsertSelection","clipboard.atomMultiple","clipboard.atomNull","clipboard.atomSaveTargets","clipboard.atomTargets","clipboard.atomTimestamp","clipboard.atomTimestampProp","clipboard.selectionMaxSize"]}]}
{"Filepath":"clipboard/manager_debug.go","Functions":[{"Uniquefunname":"func (m *Manager) BecomeClipboardOwner() *dbus.Error","Funname":"BecomeClipboardOwner","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RemoveTarget(target uint32) *dbus.Error","Funname":"RemoveTarget","Returntype":"*dbus.Error","Args":"target uint32"},{"Uniquefunname":"func (m *Manager) SaveClipboard() *dbus.Error","Funname":"SaveClipboard","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) WriteContent() *dbus.Error","Funname":"WriteContent","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) BecomeClipboardOwner() *dbus.Error","Funname":"clipboard.Manager.BecomeClipboardOwner","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RemoveTarget(target uint32) *dbus.Error","Funname":"clipboard.Manager.RemoveTarget","Returntype":"*dbus.Error","Args":"target uint32"},{"Uniquefunname":"func (m *Manager) SaveClipboard() *dbus.Error","Funname":"clipboard.Manager.SaveClipboard","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) WriteContent() *dbus.Error","Funname":"clipboard.Manager.WriteContent","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) removeTarget(target x.Atom)","Funname":"clipboard.Manager.removeTarget","Returntype":"","Args":"target x.Atom"},{"Uniquefunname":"func (m *Manager) saveClipboard() error","Funname":"clipboard.Manager.saveClipboard","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) writeContent() error","Funname":"clipboard.Manager.writeContent","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) removeTarget(target x.Atom)","Funname":"removeTarget","Returntype":"","Args":"target x.Atom"},{"Uniquefunname":"func (m *Manager) saveClipboard() error","Funname":"saveClipboard","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) writeContent() error","Funname":"writeContent","Returntype":"error","Args":""}],"Records":null}
{"Filepath":"clipboard/manager_test.go","Functions":[{"Uniquefunname":"func TestManagerAddGetTargetData(t *testing.T)","Funname":"TestManagerAddGetTargetData","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestManager_finishSelectionRequest(t *testing.T)","Funname":"TestManager_finishSelectionRequest","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestManager_getProperty(t *testing.T)","Funname":"TestManager_getProperty","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_shouldIgnoreSaveTarget(t *testing.T)","Funname":"Test_shouldIgnoreSaveTarget","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestManagerAddGetTargetData(t *testing.T)","Funname":"clipboard.TestManagerAddGetTargetData","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestManager_finishSelectionRequest(t *testing.T)","Funname":"clipboard.TestManager_finishSelectionRequest","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestManager_getProperty(t *testing.T)","Funname":"clipboard.TestManager_getProperty","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_shouldIgnoreSaveTarget(t *testing.T)","Funname":"clipboard.Test_shouldIgnoreSaveTarget","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func initAtomsForTest()","Funname":"clipboard.initAtomsForTest","Returntype":"","Args":""},{"Uniquefunname":"func initAtomsForTest()","Funname":"initAtomsForTest","Returntype":"","Args":""}],"Records":null}
{"Filepath":"clipboard/module.go","Functions":[{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) GetDependencies() []string","Funname":"clipboard.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Module) Start() error","Funname":"clipboard.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Module) Stop() error","Funname":"clipboard.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"clipboard.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"clipboard.newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"newModule","Returntype":"*Module","Args":""}],"Records":[{"Name":"const:clipboard","Fields":["clipboard.dbusServiceName"]},{"Name":"var:clipboard","Fields":["clipboard.logger"]}]}
{"Filepath":"clipboard/util.go","Functions":[{"Uniquefunname":"func announceManageSelection(xConn *x.Conn, owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"announceManageSelection","Returntype":"error","Args":"xConn *x.Conn, owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func changeWindowEventMask(conn *x.Conn, win x.Window, evMask uint32) error","Funname":"changeWindowEventMask","Returntype":"error","Args":"conn *x.Conn, win x.Window, evMask uint32"},{"Uniquefunname":"func clipboard.announceManageSelection(xConn *x.Conn, owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"clipboard.announceManageSelection","Returntype":"error","Args":"xConn *x.Conn, owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func changeWindowEventMask(conn *x.Conn, win x.Window, evMask uint32) error","Funname":"clipboard.changeWindowEventMask","Returntype":"error","Args":"conn *x.Conn, win x.Window, evMask uint32"},{"Uniquefunname":"func createWindow(xConn *x.Conn) (x.Window, error)","Funname":"clipboard.createWindow","Returntype":"(x.Window, error)","Args":"xConn *x.Conn"},{"Uniquefunname":"func destroyNotifyEventToString(ev *x.DestroyNotifyEvent) string","Funname":"clipboard.destroyNotifyEventToString","Returntype":"string","Args":"ev *x.DestroyNotifyEvent"},{"Uniquefunname":"func emptyDir(dir string) error","Funname":"clipboard.emptyDir","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func getAtomListFormReply(reply *x.GetPropertyReply) ([]x.Atom, error)","Funname":"clipboard.getAtomListFormReply","Returntype":"([]x.Atom, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getBytesMd5sum(data []byte) string","Funname":"clipboard.getBytesMd5sum","Returntype":"string","Args":"data []byte"},{"Uniquefunname":"func getSelectionOwner(conn *x.Conn, selection x.Atom) (x.Window, error)","Funname":"clipboard.getSelectionOwner","Returntype":"(x.Window, error)","Args":"conn *x.Conn, selection x.Atom"},{"Uniquefunname":"func propNotifyEventToString(ev *x.PropertyNotifyEvent) string","Funname":"clipboard.propNotifyEventToString","Returntype":"string","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func selClearEventToString(ev *x.SelectionClearEvent) string","Funname":"clipboard.selClearEventToString","Returntype":"string","Args":"ev *x.SelectionClearEvent"},{"Uniquefunname":"func selNotifyEventToString(ev *x.SelectionNotifyEvent) string","Funname":"clipboard.selNotifyEventToString","Returntype":"string","Args":"ev *x.SelectionNotifyEvent"},{"Uniquefunname":"func selReqEventToString(ev *x.SelectionRequestEvent) string","Funname":"clipboard.selReqEventToString","Returntype":"string","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func clipboard.sendClientMsg(xConn *x.Conn, win x.Window, typeAtom x.Atom, data x.ClientMessageData)error","Funname":"clipboard.sendClientMsg","Returntype":"error","Args":"xConn *x.Conn, win x.Window, typeAtom x.Atom, data x.ClientMessageData"},{"Uniquefunname":"func xfixesSelNotifyEventToString(ev *xfixes.SelectionNotifyEvent) string","Funname":"clipboard.xfixesSelNotifyEventToString","Returntype":"string","Args":"ev *xfixes.SelectionNotifyEvent"},{"Uniquefunname":"func createWindow(xConn *x.Conn) (x.Window, error)","Funname":"createWindow","Returntype":"(x.Window, error)","Args":"xConn *x.Conn"},{"Uniquefunname":"func destroyNotifyEventToString(ev *x.DestroyNotifyEvent) string","Funname":"destroyNotifyEventToString","Returntype":"string","Args":"ev *x.DestroyNotifyEvent"},{"Uniquefunname":"func emptyDir(dir string) error","Funname":"emptyDir","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func getAtomListFormReply(reply *x.GetPropertyReply) ([]x.Atom, error)","Funname":"getAtomListFormReply","Returntype":"([]x.Atom, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getBytesMd5sum(data []byte) string","Funname":"getBytesMd5sum","Returntype":"string","Args":"data []byte"},{"Uniquefunname":"func getSelectionOwner(conn *x.Conn, selection x.Atom) (x.Window, error)","Funname":"getSelectionOwner","Returntype":"(x.Window, error)","Args":"conn *x.Conn, selection x.Atom"},{"Uniquefunname":"func propNotifyEventToString(ev *x.PropertyNotifyEvent) string","Funname":"propNotifyEventToString","Returntype":"string","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func selClearEventToString(ev *x.SelectionClearEvent) string","Funname":"selClearEventToString","Returntype":"string","Args":"ev *x.SelectionClearEvent"},{"Uniquefunname":"func selNotifyEventToString(ev *x.SelectionNotifyEvent) string","Funname":"selNotifyEventToString","Returntype":"string","Args":"ev *x.SelectionNotifyEvent"},{"Uniquefunname":"func selReqEventToString(ev *x.SelectionRequestEvent) string","Funname":"selReqEventToString","Returntype":"string","Args":"ev *x.SelectionRequestEvent"},{"Uniquefunname":"func sendClientMsg(xConn *x.Conn, win x.Window, typeAtom x.Atom, data x.ClientMessageData)error","Funname":"sendClientMsg","Returntype":"error","Args":"xConn *x.Conn, win x.Window, typeAtom x.Atom, data x.ClientMessageData"},{"Uniquefunname":"func xfixesSelNotifyEventToString(ev *xfixes.SelectionNotifyEvent) string","Funname":"xfixesSelNotifyEventToString","Returntype":"string","Args":"ev *xfixes.SelectionNotifyEvent"}],"Records":null}
{"Filepath":"clipboard/x_client.go","Functions":[{"Uniquefunname":"func ChangePropertyE(mode uint8, window x.Window, property, type0 x.Atom, format uint8, data []byte)error","Funname":"ChangePropertyE","Returntype":"error","Args":"mode uint8, window x.Window, property, type0 x.Atom, format uint8, data []byte"},{"Uniquefunname":"func (xc *xClient) ChangeWindowEventMask(win x.Window, evMask uint32) error","Funname":"ChangeWindowEventMask","Returntype":"error","Args":"win x.Window, evMask uint32"},{"Uniquefunname":"func (xc *xClient) Conn() *x.Conn","Funname":"Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func ConvertSelection(requestor x.Window, selection, target, property x.Atom, time x.Timestamp)","Funname":"ConvertSelection","Returntype":"","Args":"requestor x.Window, selection, target, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func ConvertSelectionE(requestor x.Window, selection, target, property x.Atom, time x.Timestamp)error","Funname":"ConvertSelectionE","Returntype":"error","Args":"requestor x.Window, selection, target, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func (xc *xClient) CreateWindow() (x.Window, error)","Funname":"CreateWindow","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func (xc *xClient) DeletePropertyE(window x.Window, property x.Atom) error","Funname":"DeletePropertyE","Returntype":"error","Args":"window x.Window, property x.Atom"},{"Uniquefunname":"func (xc *xClient) Flush() error","Funname":"Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (xc *xClient) GetAtom(name string) (x.Atom, error)","Funname":"GetAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func (xc *xClient) GetAtomName(atom x.Atom) (string, error)","Funname":"GetAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func GetProperty(delete bool, window x.Window, property, type0 x.Atom, longOffset, longLength uint32)(*x.GetPropertyReply, error)","Funname":"GetProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"delete bool, window x.Window, property, type0 x.Atom, longOffset, longLength uint32"},{"Uniquefunname":"func (xc *xClient) GetSelectionOwner(selection x.Atom) (x.Window, error)","Funname":"GetSelectionOwner","Returntype":"(x.Window, error)","Args":"selection x.Atom"},{"Uniquefunname":"func (xc *xClient) GetTimestamp()","Funname":"GetTimestamp","Returntype":"","Args":""},{"Uniquefunname":"func SelectSelectionInputE(window x.Window, selection x.Atom, eventMask uint32)error","Funname":"SelectSelectionInputE","Returntype":"error","Args":"window x.Window, selection x.Atom, eventMask uint32"},{"Uniquefunname":"func SendEventE(propagate bool, destination x.Window, eventMask uint32, event interface{})error","Funname":"SendEventE","Returntype":"error","Args":"propagate bool, destination x.Window, eventMask uint32, event interface{}"},{"Uniquefunname":"func SetSelectionOwner(owner x.Window, selection x.Atom, time x.Timestamp)","Funname":"SetSelectionOwner","Returntype":"","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func SetSelectionOwnerE(owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"SetSelectionOwnerE","Returntype":"error","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func clipboard.xClient.ChangePropertyE(mode uint8, window x.Window, property, type0 x.Atom, format uint8, data []byte)error","Funname":"clipboard.xClient.ChangePropertyE","Returntype":"error","Args":"mode uint8, window x.Window, property, type0 x.Atom, format uint8, data []byte"},{"Uniquefunname":"func (xc *xClient) ChangeWindowEventMask(win x.Window, evMask uint32) error","Funname":"clipboard.xClient.ChangeWindowEventMask","Returntype":"error","Args":"win x.Window, evMask uint32"},{"Uniquefunname":"func (xc *xClient) Conn() *x.Conn","Funname":"clipboard.xClient.Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func clipboard.xClient.ConvertSelection(requestor x.Window, selection, target, property x.Atom, time x.Timestamp)","Funname":"clipboard.xClient.ConvertSelection","Returntype":"","Args":"requestor x.Window, selection, target, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func clipboard.xClient.ConvertSelectionE(requestor x.Window, selection, target, property x.Atom, time x.Timestamp)error","Funname":"clipboard.xClient.ConvertSelectionE","Returntype":"error","Args":"requestor x.Window, selection, target, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func (xc *xClient) CreateWindow() (x.Window, error)","Funname":"clipboard.xClient.CreateWindow","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func (xc *xClient) DeletePropertyE(window x.Window, property x.Atom) error","Funname":"clipboard.xClient.DeletePropertyE","Returntype":"error","Args":"window x.Window, property x.Atom"},{"Uniquefunname":"func (xc *xClient) Flush() error","Funname":"clipboard.xClient.Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (xc *xClient) GetAtom(name string) (x.Atom, error)","Funname":"clipboard.xClient.GetAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func (xc *xClient) GetAtomName(atom x.Atom) (string, error)","Funname":"clipboard.xClient.GetAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func clipboard.xClient.GetProperty(delete bool, window x.Window, property, type0 x.Atom, longOffset, longLength uint32)(*x.GetPropertyReply, error)","Funname":"clipboard.xClient.GetProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"delete bool, window x.Window, property, type0 x.Atom, longOffset, longLength uint32"},{"Uniquefunname":"func (xc *xClient) GetSelectionOwner(selection x.Atom) (x.Window, error)","Funname":"clipboard.xClient.GetSelectionOwner","Returntype":"(x.Window, error)","Args":"selection x.Atom"},{"Uniquefunname":"func (xc *xClient) GetTimestamp()","Funname":"clipboard.xClient.GetTimestamp","Returntype":"","Args":""},{"Uniquefunname":"func clipboard.xClient.SelectSelectionInputE(window x.Window, selection x.Atom, eventMask uint32)error","Funname":"clipboard.xClient.SelectSelectionInputE","Returntype":"error","Args":"window x.Window, selection x.Atom, eventMask uint32"},{"Uniquefunname":"func clipboard.xClient.SendEventE(propagate bool, destination x.Window, eventMask uint32, event interface{})error","Funname":"clipboard.xClient.SendEventE","Returntype":"error","Args":"propagate bool, destination x.Window, eventMask uint32, event interface{}"},{"Uniquefunname":"func clipboard.xClient.SetSelectionOwner(owner x.Window, selection x.Atom, time x.Timestamp)","Funname":"clipboard.xClient.SetSelectionOwner","Returntype":"","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func clipboard.xClient.SetSelectionOwnerE(owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"clipboard.xClient.SetSelectionOwnerE","Returntype":"error","Args":"owner x.Window, selection x.Atom, time x.Timestamp"}],"Records":[{"Name":"interface","Fields":["clipboard.XClient"]},{"Name":"struct:clipboard.xClient","Fields":["clipboard.xClient.conn *x.Conn"]}]}
{"Filepath":"clipboard/mocks/XClient.go","Functions":[{"Uniquefunname":"func ChangePropertyE(mode uint8, window x.Window, property x.Atom, type0 x.Atom, format uint8, data []byte)error","Funname":"ChangePropertyE","Returntype":"error","Args":"mode uint8, window x.Window, property x.Atom, type0 x.Atom, format uint8, data []byte"},{"Uniquefunname":"func (_m *XClient) ChangeWindowEventMask(win x.Window, evMask uint32) error","Funname":"ChangeWindowEventMask","Returntype":"error","Args":"win x.Window, evMask uint32"},{"Uniquefunname":"func (_m *XClient) Conn() *x.Conn","Funname":"Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func ConvertSelection(requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp)","Funname":"ConvertSelection","Returntype":"","Args":"requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func ConvertSelectionE(requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp)error","Funname":"ConvertSelectionE","Returntype":"error","Args":"requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func (_m *XClient) CreateWindow() (x.Window, error)","Funname":"CreateWindow","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func (_m *XClient) DeletePropertyE(window x.Window, property x.Atom) error","Funname":"DeletePropertyE","Returntype":"error","Args":"window x.Window, property x.Atom"},{"Uniquefunname":"func (_m *XClient) Flush() error","Funname":"Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (_m *XClient) GetAtom(name string) (x.Atom, error)","Funname":"GetAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func (_m *XClient) GetAtomName(atom x.Atom) (string, error)","Funname":"GetAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func GetProperty(delete bool, window x.Window, property x.Atom, type0 x.Atom, longOffset uint32, longLength uint32)(*x.GetPropertyReply, error)","Funname":"GetProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"delete bool, window x.Window, property x.Atom, type0 x.Atom, longOffset uint32, longLength uint32"},{"Uniquefunname":"func (_m *XClient) GetSelectionOwner(selection x.Atom) (x.Window, error)","Funname":"GetSelectionOwner","Returntype":"(x.Window, error)","Args":"selection x.Atom"},{"Uniquefunname":"func SelectSelectionInputE(window x.Window, selection x.Atom, eventMask uint32)error","Funname":"SelectSelectionInputE","Returntype":"error","Args":"window x.Window, selection x.Atom, eventMask uint32"},{"Uniquefunname":"func SendEventE(propagate bool, destination x.Window, eventMask uint32, event interface{})error","Funname":"SendEventE","Returntype":"error","Args":"propagate bool, destination x.Window, eventMask uint32, event interface{}"},{"Uniquefunname":"func (_m *XClient) SetSelectionOwner(owner x.Window, selection x.Atom, time x.Timestamp)","Funname":"SetSelectionOwner","Returntype":"","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func SetSelectionOwnerE(owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"SetSelectionOwnerE","Returntype":"error","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func mocks.XClient.ChangePropertyE(mode uint8, window x.Window, property x.Atom, type0 x.Atom, format uint8, data []byte)error","Funname":"mocks.XClient.ChangePropertyE","Returntype":"error","Args":"mode uint8, window x.Window, property x.Atom, type0 x.Atom, format uint8, data []byte"},{"Uniquefunname":"func (_m *XClient) ChangeWindowEventMask(win x.Window, evMask uint32) error","Funname":"mocks.XClient.ChangeWindowEventMask","Returntype":"error","Args":"win x.Window, evMask uint32"},{"Uniquefunname":"func (_m *XClient) Conn() *x.Conn","Funname":"mocks.XClient.Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func mocks.XClient.ConvertSelection(requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp)","Funname":"mocks.XClient.ConvertSelection","Returntype":"","Args":"requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func mocks.XClient.ConvertSelectionE(requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp)error","Funname":"mocks.XClient.ConvertSelectionE","Returntype":"error","Args":"requestor x.Window, selection x.Atom, target x.Atom, property x.Atom, time x.Timestamp"},{"Uniquefunname":"func (_m *XClient) CreateWindow() (x.Window, error)","Funname":"mocks.XClient.CreateWindow","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func (_m *XClient) DeletePropertyE(window x.Window, property x.Atom) error","Funname":"mocks.XClient.DeletePropertyE","Returntype":"error","Args":"window x.Window, property x.Atom"},{"Uniquefunname":"func (_m *XClient) Flush() error","Funname":"mocks.XClient.Flush","Returntype":"error","Args":""},{"Uniquefunname":"func (_m *XClient) GetAtom(name string) (x.Atom, error)","Funname":"mocks.XClient.GetAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func (_m *XClient) GetAtomName(atom x.Atom) (string, error)","Funname":"mocks.XClient.GetAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func mocks.XClient.GetProperty(delete bool, window x.Window, property x.Atom, type0 x.Atom, longOffset uint32, longLength uint32)(*x.GetPropertyReply, error)","Funname":"mocks.XClient.GetProperty","Returntype":"(*x.GetPropertyReply, error)","Args":"delete bool, window x.Window, property x.Atom, type0 x.Atom, longOffset uint32, longLength uint32"},{"Uniquefunname":"func (_m *XClient) GetSelectionOwner(selection x.Atom) (x.Window, error)","Funname":"mocks.XClient.GetSelectionOwner","Returntype":"(x.Window, error)","Args":"selection x.Atom"},{"Uniquefunname":"func mocks.XClient.SelectSelectionInputE(window x.Window, selection x.Atom, eventMask uint32)error","Funname":"mocks.XClient.SelectSelectionInputE","Returntype":"error","Args":"window x.Window, selection x.Atom, eventMask uint32"},{"Uniquefunname":"func mocks.XClient.SendEventE(propagate bool, destination x.Window, eventMask uint32, event interface{})error","Funname":"mocks.XClient.SendEventE","Returntype":"error","Args":"propagate bool, destination x.Window, eventMask uint32, event interface{}"},{"Uniquefunname":"func (_m *XClient) SetSelectionOwner(owner x.Window, selection x.Atom, time x.Timestamp)","Funname":"mocks.XClient.SetSelectionOwner","Returntype":"","Args":"owner x.Window, selection x.Atom, time x.Timestamp"},{"Uniquefunname":"func mocks.XClient.SetSelectionOwnerE(owner x.Window, selection x.Atom, time x.Timestamp)error","Funname":"mocks.XClient.SetSelectionOwnerE","Returntype":"error","Args":"owner x.Window, selection x.Atom, time x.Timestamp"}],"Records":null}
{"Filepath":"common/dsync/dsync.go","Functions":[{"Uniquefunname":"func (c *Config) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *Config) Get() ([]byte, *dbus.Error)","Funname":"Get","Returntype":"([]byte, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Config) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewConfig(name string, core Interface, sessionSigLoop *dbusutil.SignalLoop, path dbus.ObjectPath, logger *log.Logger)*Config","Funname":"NewConfig","Returntype":"*Config","Args":"name string, core Interface, sessionSigLoop *dbusutil.SignalLoop, path dbus.ObjectPath, logger *log.Logger"},{"Uniquefunname":"func (c *Config) Register() error","Funname":"Register","Returntype":"error","Args":""},{"Uniquefunname":"func (c *Config) Set(data []byte) *dbus.Error","Funname":"Set","Returntype":"*dbus.Error","Args":"data []byte"},{"Uniquefunname":"func (c *Config) Destroy()","Funname":"dsync.Config.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *Config) Get() ([]byte, *dbus.Error)","Funname":"dsync.Config.Get","Returntype":"([]byte, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Config) GetInterfaceName() string","Funname":"dsync.Config.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (c *Config) Register() error","Funname":"dsync.Config.Register","Returntype":"error","Args":""},{"Uniquefunname":"func (c *Config) Set(data []byte) *dbus.Error","Funname":"dsync.Config.Set","Returntype":"*dbus.Error","Args":"data []byte"},{"Uniquefunname":"func dsync.NewConfig(name string, core Interface, sessionSigLoop *dbusutil.SignalLoop, path dbus.ObjectPath, logger *log.Logger)*Config","Funname":"dsync.NewConfig","Returntype":"*Config","Args":"name string, core Interface, sessionSigLoop *dbusutil.SignalLoop, path dbus.ObjectPath, logger *log.Logger"}],"Records":[{"Name":"struct:dsync.Config","Fields":["dsync.Config.core Interface","dsync.Config.dbusDaemon *ofdbus.DBus","dsync.Config.logger *log.Logger","dsync.Config.methods *struct { Get func() `out:\"data\"`; Set func() `in:\"data\"`; }","dsync.Config.name string","dsync.Config.path dbus.ObjectPath","dsync.Config.sigLoop *dbusutil.SignalLoop"]},{"Name":"interface","Fields":["dsync.Interface"]},{"Name":"const:dsync","Fields":["dsync.serviceName","dsync.servicePath"]}]}
{"Filepath":"common/dsync/network.go","Functions":[{"Uniquefunname":"func (data *Connection) Check() error","Funname":"Check","Returntype":"error","Args":""},{"Uniquefunname":"func (datas ConnectionList) Check() error","Funname":"Check","Returntype":"error","Args":""},{"Uniquefunname":"func (datas ConnectionList) Diff(list ConnectionList) ConnectionList","Funname":"Diff","Returntype":"ConnectionList","Args":"list ConnectionList"},{"Uniquefunname":"func (data *Connection) Equal(info *Connection) bool","Funname":"Equal","Returntype":"bool","Args":"info *Connection"},{"Uniquefunname":"func (datas ConnectionList) Exists(data *Connection) bool","Funname":"Exists","Returntype":"bool","Args":"data *Connection"},{"Uniquefunname":"func (datas ConnectionList) Get(ty, filename string) *Connection","Funname":"Get","Returntype":"*Connection","Args":"ty, filename string"},{"Uniquefunname":"func (datas ConnectionList) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (datas ConnectionList) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (data *Connection) RemoveFile(dir string) error","Funname":"RemoveFile","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func (datas ConnectionList) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func (data *Connection) WriteFile(dir string) error","Funname":"WriteFile","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func (data *Connection) Check() error","Funname":"dsync.Connection.Check","Returntype":"error","Args":""},{"Uniquefunname":"func (data *Connection) Equal(info *Connection) bool","Funname":"dsync.Connection.Equal","Returntype":"bool","Args":"info *Connection"},{"Uniquefunname":"func (data *Connection) RemoveFile(dir string) error","Funname":"dsync.Connection.RemoveFile","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func (data *Connection) WriteFile(dir string) error","Funname":"dsync.Connection.WriteFile","Returntype":"error","Args":"dir string"},{"Uniquefunname":"func (datas ConnectionList) Check() error","Funname":"dsync.ConnectionList.Check","Returntype":"error","Args":""},{"Uniquefunname":"func (datas ConnectionList) Diff(list ConnectionList) ConnectionList","Funname":"dsync.ConnectionList.Diff","Returntype":"ConnectionList","Args":"list ConnectionList"},{"Uniquefunname":"func (datas ConnectionList) Exists(data *Connection) bool","Funname":"dsync.ConnectionList.Exists","Returntype":"bool","Args":"data *Connection"},{"Uniquefunname":"func (datas ConnectionList) Get(ty, filename string) *Connection","Funname":"dsync.ConnectionList.Get","Returntype":"*Connection","Args":"ty, filename string"},{"Uniquefunname":"func (datas ConnectionList) Len() int","Funname":"dsync.ConnectionList.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (datas ConnectionList) Less(i, j int) bool","Funname":"dsync.ConnectionList.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (datas ConnectionList) Swap(i, j int)","Funname":"dsync.ConnectionList.Swap","Returntype":"","Args":"i, j int"}],"Records":[{"Name":"const:dsync","Fields":["dsync.ConnTypeWIFI"]},{"Name":"struct:dsync.Connection","Fields":["dsync.Connection.Contents []byte","dsync.Connection.Filename string","dsync.Connection.Type string"]},{"Name":"var:dsync","Fields":["dsync.ErrConnUnsupportedType"]},{"Name":"struct:dsync.NetworkData","Fields":["dsync.NetworkData.Connections ConnectionList","dsync.NetworkData.Version string"]}]}
{"Filepath":"dbus/accounts.go","Functions":[{"Uniquefunname":"func NewAccounts(systemConn *dbus.Conn) *accounts.Accounts","Funname":"NewAccounts","Returntype":"*accounts.Accounts","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func NewUserByName(systemConn *dbus.Conn, name string) (*accounts.User, error)","Funname":"NewUserByName","Returntype":"(*accounts.User, error)","Args":"systemConn *dbus.Conn, name string"},{"Uniquefunname":"func NewUserByUid(systemConn *dbus.Conn, uid string) (*accounts.User, error)","Funname":"NewUserByUid","Returntype":"(*accounts.User, error)","Args":"systemConn *dbus.Conn, uid string"},{"Uniquefunname":"func NewAccounts(systemConn *dbus.Conn) *accounts.Accounts","Funname":"dbus.NewAccounts","Returntype":"*accounts.Accounts","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func NewUserByName(systemConn *dbus.Conn, name string) (*accounts.User, error)","Funname":"dbus.NewUserByName","Returntype":"(*accounts.User, error)","Args":"systemConn *dbus.Conn, name string"},{"Uniquefunname":"func NewUserByUid(systemConn *dbus.Conn, uid string) (*accounts.User, error)","Funname":"dbus.NewUserByUid","Returntype":"(*accounts.User, error)","Args":"systemConn *dbus.Conn, uid string"}],"Records":null}
{"Filepath":"dbus/dbus.go","Functions":[{"Uniquefunname":"func IsSessionBusActivated(dest string) bool","Funname":"IsSessionBusActivated","Returntype":"bool","Args":"dest string"},{"Uniquefunname":"func IsSystemBusActivated(dest string) bool","Funname":"IsSystemBusActivated","Returntype":"bool","Args":"dest string"},{"Uniquefunname":"func IsSessionBusActivated(dest string) bool","Funname":"dbus.IsSessionBusActivated","Returntype":"bool","Args":"dest string"},{"Uniquefunname":"func IsSystemBusActivated(dest string) bool","Funname":"dbus.IsSystemBusActivated","Returntype":"bool","Args":"dest string"},{"Uniquefunname":"func releaseDBusName(bus *dbus.Conn, name string)","Funname":"dbus.releaseDBusName","Returntype":"","Args":"bus *dbus.Conn, name string"},{"Uniquefunname":"func releaseDBusName(bus *dbus.Conn, name string)","Funname":"releaseDBusName","Returntype":"","Args":"bus *dbus.Conn, name string"}],"Records":null}
{"Filepath":"debug/debug.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"debug.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"debug.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"debug.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"debug.NewDaemon","Returntype":"*Daemon","Args":""}],"Records":[{"Name":"struct:debug.Daemon","Fields":["debug.Daemon.pprofExists bool"]},{"Name":"var:debug","Fields":["debug.logger"]}]}
{"Filepath":"debug/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"debug.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"dock/app_entries.go","Functions":[{"Uniquefunname":"func (entries *AppEntries) Append(entry *AppEntry)","Funname":"Append","Returntype":"","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) FilterDocked() (dockedEntries []*AppEntry)","Funname":"FilterDocked","Returntype":"(dockedEntries []*AppEntry)","Args":""},{"Uniquefunname":"func (entries *AppEntries) GetByDesktopFilePath(desktopFilePath string) (*AppEntry, error)","Funname":"GetByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"desktopFilePath string"},{"Uniquefunname":"func (entries *AppEntries) GetByInnerId(id string) *AppEntry","Funname":"GetByInnerId","Returntype":"*AppEntry","Args":"id string"},{"Uniquefunname":"func (entries *AppEntries) GetByWindowPid(pid uint) *AppEntry","Funname":"GetByWindowPid","Returntype":"*AppEntry","Args":"pid uint"},{"Uniquefunname":"func (entries *AppEntries) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (entries *AppEntries) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (entries *AppEntries) IndexOf(entry *AppEntry) int","Funname":"IndexOf","Returntype":"int","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) Insert(entry *AppEntry, index int)","Funname":"Insert","Returntype":"","Args":"entry *AppEntry, index int"},{"Uniquefunname":"func (entries *AppEntries) Move(index, newIndex int) error","Funname":"Move","Returntype":"error","Args":"index, newIndex int"},{"Uniquefunname":"func (entries *AppEntries) Remove(entry *AppEntry)","Funname":"Remove","Returntype":"","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) SetNotifyChangedFunc(func(val interface","Funname":"SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (entries *AppEntries) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (entries *AppEntries) Append(entry *AppEntry)","Funname":"dock.AppEntries.Append","Returntype":"","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) FilterDocked() (dockedEntries []*AppEntry)","Funname":"dock.AppEntries.FilterDocked","Returntype":"(dockedEntries []*AppEntry)","Args":""},{"Uniquefunname":"func (entries *AppEntries) GetByDesktopFilePath(desktopFilePath string) (*AppEntry, error)","Funname":"dock.AppEntries.GetByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"desktopFilePath string"},{"Uniquefunname":"func (entries *AppEntries) GetByInnerId(id string) *AppEntry","Funname":"dock.AppEntries.GetByInnerId","Returntype":"*AppEntry","Args":"id string"},{"Uniquefunname":"func (entries *AppEntries) GetByWindowPid(pid uint) *AppEntry","Funname":"dock.AppEntries.GetByWindowPid","Returntype":"*AppEntry","Args":"pid uint"},{"Uniquefunname":"func (entries *AppEntries) GetType() reflect.Type","Funname":"dock.AppEntries.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (entries *AppEntries) GetValue() (val interface","Funname":"dock.AppEntries.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (entries *AppEntries) IndexOf(entry *AppEntry) int","Funname":"dock.AppEntries.IndexOf","Returntype":"int","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) Insert(entry *AppEntry, index int)","Funname":"dock.AppEntries.Insert","Returntype":"","Args":"entry *AppEntry, index int"},{"Uniquefunname":"func (entries *AppEntries) Move(index, newIndex int) error","Funname":"dock.AppEntries.Move","Returntype":"error","Args":"index, newIndex int"},{"Uniquefunname":"func (entries *AppEntries) Remove(entry *AppEntry)","Funname":"dock.AppEntries.Remove","Returntype":"","Args":"entry *AppEntry"},{"Uniquefunname":"func (entries *AppEntries) SetNotifyChangedFunc(func(val interface","Funname":"dock.AppEntries.SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (entries *AppEntries) SetValue(val interface","Funname":"dock.AppEntries.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (entries *AppEntries) getByWindowId(winId x.Window) *AppEntry","Funname":"dock.AppEntries.getByWindowId","Returntype":"*AppEntry","Args":"winId x.Window"},{"Uniquefunname":"func (entries *AppEntries) indexOf(entry *AppEntry) int","Funname":"dock.AppEntries.indexOf","Returntype":"int","Args":"entry *AppEntry"},{"Uniquefunname":"func getByDesktopFilePath(entriesItems []*AppEntry, desktopFilePath string) (*AppEntry, error)","Funname":"dock.getByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"entriesItems []*AppEntry, desktopFilePath string"},{"Uniquefunname":"func getByDesktopFilePath(entriesItems []*AppEntry, desktopFilePath string) (*AppEntry, error)","Funname":"getByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"entriesItems []*AppEntry, desktopFilePath string"},{"Uniquefunname":"func (entries *AppEntries) getByWindowId(winId x.Window) *AppEntry","Funname":"getByWindowId","Returntype":"*AppEntry","Args":"winId x.Window"},{"Uniquefunname":"func (entries *AppEntries) indexOf(entry *AppEntry) int","Funname":"indexOf","Returntype":"int","Args":"entry *AppEntry"}],"Records":[{"Name":"struct:dock.AppEntries","Fields":["dock.AppEntries.insertCb func(entry *AppEntry, index int)","dock.AppEntries.items []*AppEntry","dock.AppEntries.mu sync.RWMutex","dock.AppEntries.removeCb func(entry *AppEntry)"]}]}
{"Filepath":"dock/app_entry.go","Functions":[{"Uniquefunname":"func (entry *AppEntry) attachWindow(winInfo *WindowInfo) bool","Funname":"attachWindow","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) detachWindow(winInfo *WindowInfo) bool","Funname":"detachWindow","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) attachWindow(winInfo *WindowInfo) bool","Funname":"dock.AppEntry.attachWindow","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) detachWindow(winInfo *WindowInfo) bool","Funname":"dock.AppEntry.detachWindow","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) findNextLeader() x.Window","Funname":"dock.AppEntry.findNextLeader","Returntype":"x.Window","Args":""},{"Uniquefunname":"func (entry *AppEntry) getAllowedCloseWindows() []x.Window","Funname":"dock.AppEntry.getAllowedCloseWindows","Returntype":"[]x.Window","Args":""},{"Uniquefunname":"func (entry *AppEntry) getExec(oneLine bool) string","Funname":"dock.AppEntry.getExec","Returntype":"string","Args":"oneLine bool"},{"Uniquefunname":"func (entry *AppEntry) getIcon() string","Funname":"dock.AppEntry.getIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (entry *AppEntry) getName() (name string)","Funname":"dock.AppEntry.getName","Returntype":"(name string)","Args":""},{"Uniquefunname":"func (entry *AppEntry) getWindowIds() []uint32","Funname":"dock.AppEntry.getWindowIds","Returntype":"[]uint32","Args":""},{"Uniquefunname":"func (entry *AppEntry) getWindowInfoSlice() []*WindowInfo","Funname":"dock.AppEntry.getWindowInfoSlice","Returntype":"[]*WindowInfo","Args":""},{"Uniquefunname":"func (entry *AppEntry) hasAllowedCloseWindow() bool","Funname":"dock.AppEntry.hasAllowedCloseWindow","Returntype":"bool","Args":""},{"Uniquefunname":"func (entry *AppEntry) hasWindow() bool","Funname":"dock.AppEntry.hasWindow","Returntype":"bool","Args":""},{"Uniquefunname":"func (entry *AppEntry) setAppInfo(newAppInfo *AppInfo)","Funname":"dock.AppEntry.setAppInfo","Returntype":"","Args":"newAppInfo *AppInfo"},{"Uniquefunname":"func (entry *AppEntry) setCurrentWindowInfo(winInfo *WindowInfo)","Funname":"dock.AppEntry.setCurrentWindowInfo","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) updateIcon()","Funname":"dock.AppEntry.updateIcon","Returntype":"","Args":""},{"Uniquefunname":"func (e *AppEntry) updateIsActive()","Funname":"dock.AppEntry.updateIsActive","Returntype":"","Args":""},{"Uniquefunname":"func (entry *AppEntry) updateName()","Funname":"dock.AppEntry.updateName","Returntype":"","Args":""},{"Uniquefunname":"func (e *AppEntry) updateWindowInfos()","Funname":"dock.AppEntry.updateWindowInfos","Returntype":"","Args":""},{"Uniquefunname":"func newAppEntry(dockManager *Manager, innerId string, appInfo *AppInfo) *AppEntry","Funname":"dock.newAppEntry","Returntype":"*AppEntry","Args":"dockManager *Manager, innerId string, appInfo *AppInfo"},{"Uniquefunname":"func (entry *AppEntry) findNextLeader() x.Window","Funname":"findNextLeader","Returntype":"x.Window","Args":""},{"Uniquefunname":"func (entry *AppEntry) getAllowedCloseWindows() []x.Window","Funname":"getAllowedCloseWindows","Returntype":"[]x.Window","Args":""},{"Uniquefunname":"func (entry *AppEntry) getExec(oneLine bool) string","Funname":"getExec","Returntype":"string","Args":"oneLine bool"},{"Uniquefunname":"func (entry *AppEntry) getIcon() string","Funname":"getIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (entry *AppEntry) getName() (name string)","Funname":"getName","Returntype":"(name string)","Args":""},{"Uniquefunname":"func (entry *AppEntry) getWindowIds() []uint32","Funname":"getWindowIds","Returntype":"[]uint32","Args":""},{"Uniquefunname":"func (entry *AppEntry) getWindowInfoSlice() []*WindowInfo","Funname":"getWindowInfoSlice","Returntype":"[]*WindowInfo","Args":""},{"Uniquefunname":"func (entry *AppEntry) hasAllowedCloseWindow() bool","Funname":"hasAllowedCloseWindow","Returntype":"bool","Args":""},{"Uniquefunname":"func (entry *AppEntry) hasWindow() bool","Funname":"hasWindow","Returntype":"bool","Args":""},{"Uniquefunname":"func newAppEntry(dockManager *Manager, innerId string, appInfo *AppInfo) *AppEntry","Funname":"newAppEntry","Returntype":"*AppEntry","Args":"dockManager *Manager, innerId string, appInfo *AppInfo"},{"Uniquefunname":"func (entry *AppEntry) setAppInfo(newAppInfo *AppInfo)","Funname":"setAppInfo","Returntype":"","Args":"newAppInfo *AppInfo"},{"Uniquefunname":"func (entry *AppEntry) setCurrentWindowInfo(winInfo *WindowInfo)","Funname":"setCurrentWindowInfo","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (entry *AppEntry) updateIcon()","Funname":"updateIcon","Returntype":"","Args":""},{"Uniquefunname":"func (e *AppEntry) updateIsActive()","Funname":"updateIsActive","Returntype":"","Args":""},{"Uniquefunname":"func (entry *AppEntry) updateName()","Funname":"updateName","Returntype":"","Args":""},{"Uniquefunname":"func (e *AppEntry) updateWindowInfos()","Funname":"updateWindowInfos","Returntype":"","Args":""}],"Records":[{"Name":"struct:dock.AppEntry","Fields":["dock.AppEntry.CurrentWindow x.Window","dock.AppEntry.DesktopFile string","dock.AppEntry.Icon string","dock.AppEntry.Id string","dock.AppEntry.IsActive bool","dock.AppEntry.IsDocked bool","dock.AppEntry.Menu AppEntryMenu","dock.AppEntry.Name string","dock.AppEntry.PropsMu sync.RWMutex","dock.AppEntry.WindowInfos windowInfosType","dock.AppEntry.appInfo *AppInfo","dock.AppEntry.current *WindowInfo","dock.AppEntry.innerId string","dock.AppEntry.manager *Manager","dock.AppEntry.methods *struct { Activate func() `in:\"timestamp\"`; HandleMenuItem func() `in:\"timestamp,id\"`; HandleDragDrop func() `in:\"timestamp,files\"`; NewInstance func() `in:\"timestamp\"`; GetAllowedCloseWindows func() `out:\"windows\"`; }","dock.AppEntry.service *dbusutil.Service","dock.AppEntry.winIconPreferred bool","dock.AppEntry.windows map[x.Window]*WindowInfo"]},{"Name":"const:dock","Fields":["dock.entryDBusInterface","dock.entryDBusObjPathPrefix"]}]}
{"Filepath":"dock/app_entry_ifc.go","Functions":[{"Uniquefunname":"func (entry *AppEntry) Activate(timestamp uint32) *dbus.Error","Funname":"Activate","Returntype":"*dbus.Error","Args":"timestamp uint32"},{"Uniquefunname":"func (entry *AppEntry) Check() *dbus.Error","Funname":"Check","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) ForceQuit() *dbus.Error","Funname":"ForceQuit","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) GetAllowedCloseWindows() ([]uint32, *dbus.Error)","Funname":"GetAllowedCloseWindows","Returntype":"([]uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (e *AppEntry) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (e *AppEntry) HandleDragDrop(timestamp uint32, files []string) *dbus.Error","Funname":"HandleDragDrop","Returntype":"*dbus.Error","Args":"timestamp uint32, files []string"},{"Uniquefunname":"func (e *AppEntry) HandleMenuItem(timestamp uint32, id string) *dbus.Error","Funname":"HandleMenuItem","Returntype":"*dbus.Error","Args":"timestamp uint32, id string"},{"Uniquefunname":"func (entry *AppEntry) NewInstance(timestamp uint32) *dbus.Error","Funname":"NewInstance","Returntype":"*dbus.Error","Args":"timestamp uint32"},{"Uniquefunname":"func (entry *AppEntry) PresentWindows() *dbus.Error","Funname":"PresentWindows","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) RequestDock() *dbus.Error","Funname":"RequestDock","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) RequestUndock() *dbus.Error","Funname":"RequestUndock","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) Activate(timestamp uint32) *dbus.Error","Funname":"dock.AppEntry.Activate","Returntype":"*dbus.Error","Args":"timestamp uint32"},{"Uniquefunname":"func (entry *AppEntry) Check() *dbus.Error","Funname":"dock.AppEntry.Check","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) ForceQuit() *dbus.Error","Funname":"dock.AppEntry.ForceQuit","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) GetAllowedCloseWindows() ([]uint32, *dbus.Error)","Funname":"dock.AppEntry.GetAllowedCloseWindows","Returntype":"([]uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (e *AppEntry) GetInterfaceName() string","Funname":"dock.AppEntry.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (e *AppEntry) HandleDragDrop(timestamp uint32, files []string) *dbus.Error","Funname":"dock.AppEntry.HandleDragDrop","Returntype":"*dbus.Error","Args":"timestamp uint32, files []string"},{"Uniquefunname":"func (e *AppEntry) HandleMenuItem(timestamp uint32, id string) *dbus.Error","Funname":"dock.AppEntry.HandleMenuItem","Returntype":"*dbus.Error","Args":"timestamp uint32, id string"},{"Uniquefunname":"func (entry *AppEntry) NewInstance(timestamp uint32) *dbus.Error","Funname":"dock.AppEntry.NewInstance","Returntype":"*dbus.Error","Args":"timestamp uint32"},{"Uniquefunname":"func (entry *AppEntry) PresentWindows() *dbus.Error","Funname":"dock.AppEntry.PresentWindows","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) RequestDock() *dbus.Error","Funname":"dock.AppEntry.RequestDock","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (entry *AppEntry) RequestUndock() *dbus.Error","Funname":"dock.AppEntry.RequestUndock","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func killProcess(pid uint) error","Funname":"dock.killProcess","Returntype":"error","Args":"pid uint"},{"Uniquefunname":"func killProcess(pid uint) error","Funname":"killProcess","Returntype":"error","Args":"pid uint"}],"Records":null}
{"Filepath":"dock/app_entry_menu.go","Functions":[{"Uniquefunname":"func (*AppEntryMenu) GetType() reflect.Type","Funname":"GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (m *AppEntryMenu) GetValue() (val interface","Funname":"GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (*AppEntryMenu) SetNotifyChangedFunc(func(val interface","Funname":"SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (*AppEntryMenu) SetValue(val interface","Funname":"SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (entry *AppEntry) getMenuItemAllWindows() *MenuItem","Funname":"dock.AppEntry.getMenuItemAllWindows","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemCloseAll() *MenuItem","Funname":"dock.AppEntry.getMenuItemCloseAll","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemDesktopActions() []*MenuItem","Funname":"dock.AppEntry.getMenuItemDesktopActions","Returntype":"[]*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemDock() *MenuItem","Funname":"dock.AppEntry.getMenuItemDock","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemForceQuit() *MenuItem","Funname":"dock.AppEntry.getMenuItemForceQuit","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemLaunch() *MenuItem","Funname":"dock.AppEntry.getMenuItemLaunch","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemUndock() *MenuItem","Funname":"dock.AppEntry.getMenuItemUndock","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) launchApp(timestamp uint32)","Funname":"dock.AppEntry.launchApp","Returntype":"","Args":"timestamp uint32"},{"Uniquefunname":"func (entry *AppEntry) updateMenu()","Funname":"dock.AppEntry.updateMenu","Returntype":"","Args":""},{"Uniquefunname":"func (*AppEntryMenu) GetType() reflect.Type","Funname":"dock.AppEntryMenu.GetType","Returntype":"reflect.Type","Args":""},{"Uniquefunname":"func (m *AppEntryMenu) GetValue() (val interface","Funname":"dock.AppEntryMenu.GetValue","Returntype":"(val interface{}, err *dbus.Error)","Args":""},{"Uniquefunname":"func (*AppEntryMenu) SetNotifyChangedFunc(func(val interface","Funname":"dock.AppEntryMenu.SetNotifyChangedFunc","Returntype":"","Args":"func(val interface{})"},{"Uniquefunname":"func (*AppEntryMenu) SetValue(val interface","Funname":"dock.AppEntryMenu.SetValue","Returntype":"(changed bool, err *dbus.Error)","Args":"val interface{}"},{"Uniquefunname":"func (m *AppEntryMenu) getMenu() *Menu","Funname":"dock.AppEntryMenu.getMenu","Returntype":"*Menu","Args":""},{"Uniquefunname":"func (m *AppEntryMenu) setMenu(menu *Menu)","Funname":"dock.AppEntryMenu.setMenu","Returntype":"","Args":"menu *Menu"},{"Uniquefunname":"func (m *AppEntryMenu) getMenu() *Menu","Funname":"getMenu","Returntype":"*Menu","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemAllWindows() *MenuItem","Funname":"getMenuItemAllWindows","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemCloseAll() *MenuItem","Funname":"getMenuItemCloseAll","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemDesktopActions() []*MenuItem","Funname":"getMenuItemDesktopActions","Returntype":"[]*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemDock() *MenuItem","Funname":"getMenuItemDock","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemForceQuit() *MenuItem","Funname":"getMenuItemForceQuit","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemLaunch() *MenuItem","Funname":"getMenuItemLaunch","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) getMenuItemUndock() *MenuItem","Funname":"getMenuItemUndock","Returntype":"*MenuItem","Args":""},{"Uniquefunname":"func (entry *AppEntry) launchApp(timestamp uint32)","Funname":"launchApp","Returntype":"","Args":"timestamp uint32"},{"Uniquefunname":"func (m *AppEntryMenu) setMenu(menu *Menu)","Funname":"setMenu","Returntype":"","Args":"menu *Menu"},{"Uniquefunname":"func (entry *AppEntry) updateMenu()","Funname":"updateMenu","Returntype":"","Args":""}],"Records":[{"Name":"struct:dock.AppEntryMenu","Fields":["dock.AppEntryMenu.cache string","dock.AppEntryMenu.dirty bool","dock.AppEntryMenu.is3DWM bool","dock.AppEntryMenu.manager *Manager","dock.AppEntryMenu.menu *Menu","dock.AppEntryMenu.mu sync.Mutex"]}]}
{"Filepath":"dock/app_info.go","Functions":[{"Uniquefunname":"func NewAppInfo(id string) *AppInfo","Funname":"NewAppInfo","Returntype":"*AppInfo","Args":"id string"},{"Uniquefunname":"func NewAppInfoFromFile(file string) *AppInfo","Funname":"NewAppInfoFromFile","Returntype":"*AppInfo","Args":"file string"},{"Uniquefunname":"func NewDockedAppInfo(app string) *AppInfo","Funname":"NewDockedAppInfo","Returntype":"*AppInfo","Args":"app string"},{"Uniquefunname":"func (ai *AppInfo) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *AppInfo) String() string","Funname":"dock.AppInfo.String","Returntype":"string","Args":""},{"Uniquefunname":"func (ai *AppInfo) genInnerId()","Funname":"dock.AppInfo.genInnerId","Returntype":"","Args":""},{"Uniquefunname":"func NewAppInfo(id string) *AppInfo","Funname":"dock.NewAppInfo","Returntype":"*AppInfo","Args":"id string"},{"Uniquefunname":"func NewAppInfoFromFile(file string) *AppInfo","Funname":"dock.NewAppInfoFromFile","Returntype":"*AppInfo","Args":"file string"},{"Uniquefunname":"func NewDockedAppInfo(app string) *AppInfo","Funname":"dock.NewDockedAppInfo","Returntype":"*AppInfo","Args":"app string"},{"Uniquefunname":"func getDockedDesktopAppInfo(app string) *desktopappinfo.DesktopAppInfo","Funname":"dock.getDockedDesktopAppInfo","Returntype":"*desktopappinfo.DesktopAppInfo","Args":"app string"},{"Uniquefunname":"func newAppInfo(dai *desktopappinfo.DesktopAppInfo) *AppInfo","Funname":"dock.newAppInfo","Returntype":"*AppInfo","Args":"dai *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func (ai *AppInfo) genInnerId()","Funname":"genInnerId","Returntype":"","Args":""},{"Uniquefunname":"func getDockedDesktopAppInfo(app string) *desktopappinfo.DesktopAppInfo","Funname":"getDockedDesktopAppInfo","Returntype":"*desktopappinfo.DesktopAppInfo","Args":"app string"},{"Uniquefunname":"func newAppInfo(dai *desktopappinfo.DesktopAppInfo) *AppInfo","Funname":"newAppInfo","Returntype":"*AppInfo","Args":"dai *desktopappinfo.DesktopAppInfo"}],"Records":[{"Name":"struct:dock.AppInfo","Fields":["dock.AppInfo.identifyMethod string","dock.AppInfo.innerId string","dock.AppInfo.name string"]},{"Name":"const:dock","Fields":["dock.desktopHashPrefix"]}]}
{"Filepath":"dock/bamf.go","Functions":[{"Uniquefunname":"func getDesktopFromWindowByBamf(win x.Window) (string, error)","Funname":"dock.getDesktopFromWindowByBamf","Returntype":"(string, error)","Args":"win x.Window"},{"Uniquefunname":"func getDesktopFromWindowByBamf(win x.Window) (string, error)","Funname":"getDesktopFromWindowByBamf","Returntype":"(string, error)","Args":"win x.Window"}],"Records":[{"Name":"const:dock","Fields":["dock.bamfAppInterface","dock.bamfDBusObjPathPrefix","dock.bamfDBusServiceName","dock.bamfMatcherInterface","dock.bamfMatcherObjPath"]}]}
{"Filepath":"dock/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"dock.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"dock.Daemon.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"dock.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"dock.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) startFailed()","Funname":"dock.Daemon.startFailed","Returntype":"","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"dock.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) startFailed()","Funname":"startFailed","Returntype":"","Args":""}],"Records":[{"Name":"const:dock","Fields":["dock.moduleName"]}]}
{"Filepath":"dock/desktop_file_path.go","Functions":[{"Uniquefunname":"func addDesktopExt(str string) string","Funname":"addDesktopExt","Returntype":"string","Args":"str string"},{"Uniquefunname":"func addDirTrailingSlash(dir string) string","Funname":"addDirTrailingSlash","Returntype":"string","Args":"dir string"},{"Uniquefunname":"func addDesktopExt(str string) string","Funname":"dock.addDesktopExt","Returntype":"string","Args":"str string"},{"Uniquefunname":"func addDirTrailingSlash(dir string) string","Funname":"dock.addDirTrailingSlash","Returntype":"string","Args":"dir string"},{"Uniquefunname":"func getDesktopIdByFilePath(path string) string","Funname":"dock.getDesktopIdByFilePath","Returntype":"string","Args":"path string"},{"Uniquefunname":"func initPathDirCodeMap()","Funname":"dock.initPathDirCodeMap","Returntype":"","Args":""},{"Uniquefunname":"func trimDesktopExt(str string) string","Funname":"dock.trimDesktopExt","Returntype":"string","Args":"str string"},{"Uniquefunname":"func unzipDesktopPath(path string) string","Funname":"dock.unzipDesktopPath","Returntype":"string","Args":"path string"},{"Uniquefunname":"func zipDesktopPath(path string) string","Funname":"dock.zipDesktopPath","Returntype":"string","Args":"path string"},{"Uniquefunname":"func getDesktopIdByFilePath(path string) string","Funname":"getDesktopIdByFilePath","Returntype":"string","Args":"path string"},{"Uniquefunname":"func initPathDirCodeMap()","Funname":"initPathDirCodeMap","Returntype":"","Args":""},{"Uniquefunname":"func trimDesktopExt(str string) string","Funname":"trimDesktopExt","Returntype":"string","Args":"str string"},{"Uniquefunname":"func unzipDesktopPath(path string) string","Funname":"unzipDesktopPath","Returntype":"string","Args":"path string"},{"Uniquefunname":"func zipDesktopPath(path string) string","Funname":"zipDesktopPath","Returntype":"string","Args":"path string"}],"Records":[{"Name":"const:dock","Fields":["dock.desktopExt"]},{"Name":"var:dock","Fields":["dock.pathCodeDirMap","dock.pathDirCodeMap"]}]}
{"Filepath":"dock/desktop_file_path_test.go","Functions":[{"Uniquefunname":"func Test_addDesktopExt(t *testing.T)","Funname":"Test_addDesktopExt","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_addDirTrailingSlash(t *testing.T)","Funname":"Test_addDirTrailingSlash","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getDesktopIdByFilePath(t *testing.T)","Funname":"Test_getDesktopIdByFilePath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_trimDesktopExt(t *testing.T)","Funname":"Test_trimDesktopExt","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_unzipDesktopPath(t *testing.T)","Funname":"Test_unzipDesktopPath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_zipDesktopPath(t *testing.T)","Funname":"Test_zipDesktopPath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_addDesktopExt(t *testing.T)","Funname":"dock.Test_addDesktopExt","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_addDirTrailingSlash(t *testing.T)","Funname":"dock.Test_addDirTrailingSlash","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getDesktopIdByFilePath(t *testing.T)","Funname":"dock.Test_getDesktopIdByFilePath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_trimDesktopExt(t *testing.T)","Funname":"dock.Test_trimDesktopExt","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_unzipDesktopPath(t *testing.T)","Funname":"dock.Test_unzipDesktopPath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_zipDesktopPath(t *testing.T)","Funname":"dock.Test_zipDesktopPath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"dock.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"var:dock","Fields":["dock.deskotpFilePathTestMap"]}]}
{"Filepath":"dock/dock_dbusutil.go","Functions":[{"Uniquefunname":"func (v *AppEntry) emitPropChangedCurrentWindow(value x.Window) error","Funname":"dock.AppEntry.emitPropChangedCurrentWindow","Returntype":"error","Args":"value x.Window"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedDesktopFile(value string) error","Funname":"dock.AppEntry.emitPropChangedDesktopFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIcon(value string) error","Funname":"dock.AppEntry.emitPropChangedIcon","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedId(value string) error","Funname":"dock.AppEntry.emitPropChangedId","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIsActive(value bool) error","Funname":"dock.AppEntry.emitPropChangedIsActive","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIsDocked(value bool) error","Funname":"dock.AppEntry.emitPropChangedIsDocked","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedName(value string) error","Funname":"dock.AppEntry.emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedWindowInfos(value windowInfosType) error","Funname":"dock.AppEntry.emitPropChangedWindowInfos","Returntype":"error","Args":"value windowInfosType"},{"Uniquefunname":"func (v *AppEntry) setPropCurrentWindow(value x.Window) (changed bool)","Funname":"dock.AppEntry.setPropCurrentWindow","Returntype":"(changed bool)","Args":"value x.Window"},{"Uniquefunname":"func (v *AppEntry) setPropDesktopFile(value string) (changed bool)","Funname":"dock.AppEntry.setPropDesktopFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropIcon(value string) (changed bool)","Funname":"dock.AppEntry.setPropIcon","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropId(value string) (changed bool)","Funname":"dock.AppEntry.setPropId","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropIsActive(value bool) (changed bool)","Funname":"dock.AppEntry.setPropIsActive","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) setPropIsDocked(value bool) (changed bool)","Funname":"dock.AppEntry.setPropIsDocked","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) setPropName(value string) (changed bool)","Funname":"dock.AppEntry.setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropWindowInfos(value windowInfosType) (changed bool)","Funname":"dock.AppEntry.setPropWindowInfos","Returntype":"(changed bool)","Args":"value windowInfosType"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedCurrentWindow(value x.Window) error","Funname":"emitPropChangedCurrentWindow","Returntype":"error","Args":"value x.Window"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedDesktopFile(value string) error","Funname":"emitPropChangedDesktopFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIcon(value string) error","Funname":"emitPropChangedIcon","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedId(value string) error","Funname":"emitPropChangedId","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIsActive(value bool) error","Funname":"emitPropChangedIsActive","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedIsDocked(value bool) error","Funname":"emitPropChangedIsDocked","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedName(value string) error","Funname":"emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) emitPropChangedWindowInfos(value windowInfosType) error","Funname":"emitPropChangedWindowInfos","Returntype":"error","Args":"value windowInfosType"},{"Uniquefunname":"func (v *AppEntry) setPropCurrentWindow(value x.Window) (changed bool)","Funname":"setPropCurrentWindow","Returntype":"(changed bool)","Args":"value x.Window"},{"Uniquefunname":"func (v *AppEntry) setPropDesktopFile(value string) (changed bool)","Funname":"setPropDesktopFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropIcon(value string) (changed bool)","Funname":"setPropIcon","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropId(value string) (changed bool)","Funname":"setPropId","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropIsActive(value bool) (changed bool)","Funname":"setPropIsActive","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) setPropIsDocked(value bool) (changed bool)","Funname":"setPropIsDocked","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *AppEntry) setPropName(value string) (changed bool)","Funname":"setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *AppEntry) setPropWindowInfos(value windowInfosType) (changed bool)","Funname":"setPropWindowInfos","Returntype":"(changed bool)","Args":"value windowInfosType"}],"Records":null}
{"Filepath":"dock/dock_manager.go","Functions":[{"Uniquefunname":"func (m *Manager) ActivateWindow(win uint32) *dbus.Error","Funname":"ActivateWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) CancelPreviewWindow() *dbus.Error","Funname":"CancelPreviewWindow","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) CloseWindow(win uint32) *dbus.Error","Funname":"CloseWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) GetDockedAppsDesktopFiles() ([]string, *dbus.Error)","Funname":"GetDockedAppsDesktopFiles","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetEntryIDs() ([]string, *dbus.Error)","Funname":"GetEntryIDs","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetPluginSettings() (string, *dbus.Error)","Funname":"GetPluginSettings","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) IsDocked(desktopFile string) (bool, *dbus.Error)","Funname":"IsDocked","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) IsOnDock(desktopFile string) (bool, *dbus.Error)","Funname":"IsOnDock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) MakeWindowAbove(win uint32) *dbus.Error","Funname":"MakeWindowAbove","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MaximizeWindow(win uint32) *dbus.Error","Funname":"MaximizeWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MergePluginSettings(jsonStr string) *dbus.Error","Funname":"MergePluginSettings","Returntype":"*dbus.Error","Args":"jsonStr string"},{"Uniquefunname":"func (m *Manager) MinimizeWindow(win uint32) *dbus.Error","Funname":"MinimizeWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MoveEntry(index, newIndex int32) *dbus.Error","Funname":"MoveEntry","Returntype":"*dbus.Error","Args":"index, newIndex int32"},{"Uniquefunname":"func (m *Manager) MoveWindow(win uint32) *dbus.Error","Funname":"MoveWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) PreviewWindow(win uint32) *dbus.Error","Funname":"PreviewWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) QueryWindowIdentifyMethod(wid uint32) (string, *dbus.Error)","Funname":"QueryWindowIdentifyMethod","Returntype":"(string, *dbus.Error)","Args":"wid uint32"},{"Uniquefunname":"func (m *Manager) RemovePluginSettings(key1 string, key2List []string) *dbus.Error","Funname":"RemovePluginSettings","Returntype":"*dbus.Error","Args":"key1 string, key2List []string"},{"Uniquefunname":"func (m *Manager) RequestDock(desktopFile string, index int32) (bool, *dbus.Error)","Funname":"RequestDock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string, index int32"},{"Uniquefunname":"func (m *Manager) RequestUndock(desktopFile string) (bool, *dbus.Error)","Funname":"RequestUndock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) SetFrontendWindowRect(x, y int32, width, height uint32) *dbus.Error","Funname":"SetFrontendWindowRect","Returntype":"*dbus.Error","Args":"x, y int32, width, height uint32"},{"Uniquefunname":"func (m *Manager) SetPluginSettings(jsonStr string) *dbus.Error","Funname":"SetPluginSettings","Returntype":"*dbus.Error","Args":"jsonStr string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) ActivateWindow(win uint32) *dbus.Error","Funname":"dock.Manager.ActivateWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) CancelPreviewWindow() *dbus.Error","Funname":"dock.Manager.CancelPreviewWindow","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) CloseWindow(win uint32) *dbus.Error","Funname":"dock.Manager.CloseWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) GetDockedAppsDesktopFiles() ([]string, *dbus.Error)","Funname":"dock.Manager.GetDockedAppsDesktopFiles","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetEntryIDs() ([]string, *dbus.Error)","Funname":"dock.Manager.GetEntryIDs","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"dock.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetPluginSettings() (string, *dbus.Error)","Funname":"dock.Manager.GetPluginSettings","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) IsDocked(desktopFile string) (bool, *dbus.Error)","Funname":"dock.Manager.IsDocked","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) IsOnDock(desktopFile string) (bool, *dbus.Error)","Funname":"dock.Manager.IsOnDock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) MakeWindowAbove(win uint32) *dbus.Error","Funname":"dock.Manager.MakeWindowAbove","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MaximizeWindow(win uint32) *dbus.Error","Funname":"dock.Manager.MaximizeWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MergePluginSettings(jsonStr string) *dbus.Error","Funname":"dock.Manager.MergePluginSettings","Returntype":"*dbus.Error","Args":"jsonStr string"},{"Uniquefunname":"func (m *Manager) MinimizeWindow(win uint32) *dbus.Error","Funname":"dock.Manager.MinimizeWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) MoveEntry(index, newIndex int32) *dbus.Error","Funname":"dock.Manager.MoveEntry","Returntype":"*dbus.Error","Args":"index, newIndex int32"},{"Uniquefunname":"func (m *Manager) MoveWindow(win uint32) *dbus.Error","Funname":"dock.Manager.MoveWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) PreviewWindow(win uint32) *dbus.Error","Funname":"dock.Manager.PreviewWindow","Returntype":"*dbus.Error","Args":"win uint32"},{"Uniquefunname":"func (m *Manager) QueryWindowIdentifyMethod(wid uint32) (string, *dbus.Error)","Funname":"dock.Manager.QueryWindowIdentifyMethod","Returntype":"(string, *dbus.Error)","Args":"wid uint32"},{"Uniquefunname":"func (m *Manager) RemovePluginSettings(key1 string, key2List []string) *dbus.Error","Funname":"dock.Manager.RemovePluginSettings","Returntype":"*dbus.Error","Args":"key1 string, key2List []string"},{"Uniquefunname":"func (m *Manager) RequestDock(desktopFile string, index int32) (bool, *dbus.Error)","Funname":"dock.Manager.RequestDock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string, index int32"},{"Uniquefunname":"func (m *Manager) RequestUndock(desktopFile string) (bool, *dbus.Error)","Funname":"dock.Manager.RequestUndock","Returntype":"(bool, *dbus.Error)","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) SetFrontendWindowRect(x, y int32, width, height uint32) *dbus.Error","Funname":"dock.Manager.SetFrontendWindowRect","Returntype":"*dbus.Error","Args":"x, y int32, width, height uint32"},{"Uniquefunname":"func (m *Manager) SetPluginSettings(jsonStr string) *dbus.Error","Funname":"dock.Manager.SetPluginSettings","Returntype":"*dbus.Error","Args":"jsonStr string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"dock.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) launch(desktopFile string, timestamp uint32, files []string)","Funname":"dock.Manager.launch","Returntype":"","Args":"desktopFile string, timestamp uint32, files []string"},{"Uniquefunname":"func (m *Manager) requestDock(desktopFile string, index int32) (bool, error)","Funname":"dock.Manager.requestDock","Returntype":"(bool, error)","Args":"desktopFile string, index int32"},{"Uniquefunname":"func (m *Manager) requestUndock(desktopFile string) (bool, error)","Funname":"dock.Manager.requestUndock","Returntype":"(bool, error)","Args":"desktopFile string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"dock.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) launch(desktopFile string, timestamp uint32, files []string)","Funname":"launch","Returntype":"","Args":"desktopFile string, timestamp uint32, files []string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) requestDock(desktopFile string, index int32) (bool, error)","Funname":"requestDock","Returntype":"(bool, error)","Args":"desktopFile string, index int32"},{"Uniquefunname":"func (m *Manager) requestUndock(desktopFile string) (bool, error)","Funname":"requestUndock","Returntype":"(bool, error)","Args":"desktopFile string"}],"Records":[{"Name":"struct:dock.Manager","Fields":["dock.Manager.DisplayMode gsprop.Enum","dock.Manager.DockedApps gsprop.Strv","dock.Manager.Entries AppEntries","dock.Manager.FrontendWindowRect *Rect","dock.Manager.HideMode gsprop.Enum","dock.Manager.HideState HideStateType","dock.Manager.HideTimeout gsprop.Uint","dock.Manager.IconSize gsprop.Uint","dock.Manager.Opacity gsprop.Double","dock.Manager.Position gsprop.Enum","dock.Manager.PropsMu sync.RWMutex","dock.Manager.ShowTimeout gsprop.Uint","dock.Manager.WindowSizeEfficient gsprop.Uint","dock.Manager.WindowSizeFashion gsprop.Uint","dock.Manager.activeWindow x.Window","dock.Manager.activeWindowMu sync.Mutex","dock.Manager.activeWindowOld x.Window","dock.Manager.appearanceSettings *gio.Settings","dock.Manager.appsObj *libApps.Apps","dock.Manager.clientList windowSlice","dock.Manager.clientListInited bool","dock.Manager.ddeLauncher *libDDELauncher.Launcher","dock.Manager.ddeLauncherVisible bool","dock.Manager.ddeLauncherVisibleMu sync.Mutex","dock.Manager.entryCount uint","dock.Manager.identifyWindowFuns []*IdentifyWindowFunc","dock.Manager.launcher *launcher.Launcher","dock.Manager.methods *struct { ActivateWindow func() `in:\"win\"`; CloseWindow func() `in:\"win\"`; MaximizeWindow func() `in:\"win\"`; MinimizeWindow func() `in:\"win\"`; MakeWindowAbove func() `in:\"win\"`; MoveWindow func() `in:\"win\"`; PreviewWindow func() `in:\"win\"`; GetEntryIDs func() `out:\"list\"`; SetFrontendWindowRect func() `in:\"x,y,width,height\"`; IsDocked func() `in:\"desktopFile\" out:\"value\"`; RequestDock func() `in:\"desktopFile,index\" out:\"ok\"`; RequestUndock func() `in:\"desktopFile\" out:\"ok\"`; MoveEntry func()","dock.Manager.pluginSettings *pluginSettingsStorage","dock.Manager.rootWindow x.Window","dock.Manager.service *dbusutil.Service","dock.Manager.sessionSigLoop *dbusutil.SignalLoop","dock.Manager.settings *gio.Settings","dock.Manager.signals *struct { ServiceRestarted struct{}; EntryAdded struct { path dbus.ObjectPath; index int32; }; EntryRemoved struct { entryId string; }; PluginSettingsSynced struct{}; DockAppSettingsSynced struct{}; }","dock.Manager.smartHideModeMutex sync.Mutex","dock.Manager.smartHideModeTimer *time.Timer","dock.Manager.startManager *sessionmanager.StartManager","dock.Manager.syncConfig *dsync.Config","dock.Manager.windowInfoMap map[x.Window]*WindowInfo","dock.Manager.windowInfoMapMutex sync.RWMutex","dock.Manager.windowPatterns WindowPatterns","dock.Manager.wm *wm.Wm","dock.Manager.wmName string","dock.Manager.wmSwitcher *wmswitcher.WMSwitcher"]},{"Name":"const:dock","Fields":["dock.appearanceSchema","dock.dbusInterface","dock.dbusPath","dock.dbusServiceName","dock.dockSchema","dock.frontendWindowWmClass","dock.settingKeyDisplayMode","dock.settingKeyDockedApps","dock.settingKeyHideMode","dock.settingKeyHideTimeout","dock.settingKeyIconSize","dock.settingKeyOpacity","dock.settingKeyPluginSettings","dock.settingKeyPosition","dock.settingKeyShowTimeout","dock.settingKeyWinIconPreferredApps","dock.settingKeyWindowSizeEfficient","dock.settingKeyWindowSizeFashion"]}]}
{"Filepath":"dock/dock_manager_dock_app.go","Functions":[{"Uniquefunname":"func createScratchDesktopFile(id, title, icon, cmd string) (string, error)","Funname":"createScratchDesktopFile","Returntype":"(string, error)","Args":"id, title, icon, cmd string"},{"Uniquefunname":"func createScratchDesktopFileWithAppEntry(entry *AppEntry) (string, error)","Funname":"createScratchDesktopFileWithAppEntry","Returntype":"(string, error)","Args":"entry *AppEntry"},{"Uniquefunname":"func (m *Manager) dockEntry(entry *AppEntry) (bool, error)","Funname":"dock.Manager.dockEntry","Returntype":"(bool, error)","Args":"entry *AppEntry"},{"Uniquefunname":"func dock.Manager.getDockedAppEntryByDesktopFilePath(desktopFilePath string)(*AppEntry, error)","Funname":"dock.Manager.getDockedAppEntryByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"desktopFilePath string"},{"Uniquefunname":"func (m *Manager) saveDockedApps()","Funname":"dock.Manager.saveDockedApps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) undockEntry(entry *AppEntry)","Funname":"dock.Manager.undockEntry","Returntype":"","Args":"entry *AppEntry"},{"Uniquefunname":"func createScratchDesktopFile(id, title, icon, cmd string) (string, error)","Funname":"dock.createScratchDesktopFile","Returntype":"(string, error)","Args":"id, title, icon, cmd string"},{"Uniquefunname":"func createScratchDesktopFileWithAppEntry(entry *AppEntry) (string, error)","Funname":"dock.createScratchDesktopFileWithAppEntry","Returntype":"(string, error)","Args":"entry *AppEntry"},{"Uniquefunname":"func isFileInDir(file, dir string) bool","Funname":"dock.isFileInDir","Returntype":"bool","Args":"file, dir string"},{"Uniquefunname":"func needScratchDesktop(appInfo *AppInfo) bool","Funname":"dock.needScratchDesktop","Returntype":"bool","Args":"appInfo *AppInfo"},{"Uniquefunname":"func removeScratchFiles(desktopFile string)","Funname":"dock.removeScratchFiles","Returntype":"","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) dockEntry(entry *AppEntry) (bool, error)","Funname":"dockEntry","Returntype":"(bool, error)","Args":"entry *AppEntry"},{"Uniquefunname":"func getDockedAppEntryByDesktopFilePath(desktopFilePath string)(*AppEntry, error)","Funname":"getDockedAppEntryByDesktopFilePath","Returntype":"(*AppEntry, error)","Args":"desktopFilePath string"},{"Uniquefunname":"func isFileInDir(file, dir string) bool","Funname":"isFileInDir","Returntype":"bool","Args":"file, dir string"},{"Uniquefunname":"func needScratchDesktop(appInfo *AppInfo) bool","Funname":"needScratchDesktop","Returntype":"bool","Args":"appInfo *AppInfo"},{"Uniquefunname":"func removeScratchFiles(desktopFile string)","Funname":"removeScratchFiles","Returntype":"","Args":"desktopFile string"},{"Uniquefunname":"func (m *Manager) saveDockedApps()","Funname":"saveDockedApps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) undockEntry(entry *AppEntry)","Funname":"undockEntry","Returntype":"","Args":"entry *AppEntry"}],"Records":[{"Name":"struct:dock.dockedItemInfo","Fields":["dock.dockedItemInfo.Exec string","dock.dockedItemInfo.Icon string","dock.dockedItemInfo.Name string"]},{"Name":"const:dock","Fields":["dock.dockedItemTemplate"]}]}
{"Filepath":"dock/dock_manager_entries.go","Functions":[{"Uniquefunname":"func (m *Manager) allocEntryId() string","Funname":"allocEntryId","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) appendDockedApp(app string)","Funname":"appendDockedApp","Returntype":"","Args":"app string"},{"Uniquefunname":"func (m *Manager) attachOrDetachWindow(winInfo *WindowInfo)","Funname":"attachOrDetachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) attachWindow(winInfo *WindowInfo)","Funname":"attachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) detachWindow(winInfo *WindowInfo)","Funname":"detachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) allocEntryId() string","Funname":"dock.Manager.allocEntryId","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) appendDockedApp(app string)","Funname":"dock.Manager.appendDockedApp","Returntype":"","Args":"app string"},{"Uniquefunname":"func (m *Manager) attachOrDetachWindow(winInfo *WindowInfo)","Funname":"dock.Manager.attachOrDetachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) attachWindow(winInfo *WindowInfo)","Funname":"dock.Manager.attachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) detachWindow(winInfo *WindowInfo)","Funname":"dock.Manager.detachWindow","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) exportAppEntry(e *AppEntry) error","Funname":"dock.Manager.exportAppEntry","Returntype":"error","Args":"e *AppEntry"},{"Uniquefunname":"func (m *Manager) initClientList()","Funname":"dock.Manager.initClientList","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initDockedApps()","Funname":"dock.Manager.initDockedApps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) markAppLaunched(appInfo *AppInfo)","Funname":"dock.Manager.markAppLaunched","Returntype":"","Args":"appInfo *AppInfo"},{"Uniquefunname":"func (m *Manager) removeAppEntry(e *AppEntry)","Funname":"dock.Manager.removeAppEntry","Returntype":"","Args":"e *AppEntry"},{"Uniquefunname":"func (m *Manager) exportAppEntry(e *AppEntry) error","Funname":"exportAppEntry","Returntype":"error","Args":"e *AppEntry"},{"Uniquefunname":"func (m *Manager) initClientList()","Funname":"initClientList","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initDockedApps()","Funname":"initDockedApps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) markAppLaunched(appInfo *AppInfo)","Funname":"markAppLaunched","Returntype":"","Args":"appInfo *AppInfo"},{"Uniquefunname":"func (m *Manager) removeAppEntry(e *AppEntry)","Funname":"removeAppEntry","Returntype":"","Args":"e *AppEntry"}],"Records":null}
{"Filepath":"dock/dock_manager_hide_state.go","Functions":[{"Uniquefunname":"func (m *Manager) getActiveWinGroup(activeWin x.Window) (ret []x.Window)","Funname":"dock.Manager.getActiveWinGroup","Returntype":"(ret []x.Window)","Args":"activeWin x.Window"},{"Uniquefunname":"func (m *Manager) getActiveWindow() (activeWin x.Window)","Funname":"dock.Manager.getActiveWindow","Returntype":"(activeWin x.Window)","Args":""},{"Uniquefunname":"func (m *Manager) isWindowDockOverlap(win x.Window) (bool, error)","Funname":"dock.Manager.isWindowDockOverlap","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) resetSmartHideModeTimer(delay time.Duration)","Funname":"dock.Manager.resetSmartHideModeTimer","Returntype":"","Args":"delay time.Duration"},{"Uniquefunname":"func (m *Manager) setPropHideState(hideState HideStateType)","Funname":"dock.Manager.setPropHideState","Returntype":"","Args":"hideState HideStateType"},{"Uniquefunname":"func (m *Manager) shouldHideOnSmartHideMode() (bool, error)","Funname":"dock.Manager.shouldHideOnSmartHideMode","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) smartHideModeTimerExpired()","Funname":"dock.Manager.smartHideModeTimerExpired","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updateHideState(delay bool)","Funname":"dock.Manager.updateHideState","Returntype":"","Args":"delay bool"},{"Uniquefunname":"func hasIntersection(rectA, rectB *Rect) bool","Funname":"dock.hasIntersection","Returntype":"bool","Args":"rectA, rectB *Rect"},{"Uniquefunname":"func isDDELauncher(win x.Window) (bool, error)","Funname":"dock.isDDELauncher","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func max(a, b int) int","Funname":"dock.max","Returntype":"int","Args":"a, b int"},{"Uniquefunname":"func min(a, b int) int","Funname":"dock.min","Returntype":"int","Args":"a, b int"},{"Uniquefunname":"func (m *Manager) getActiveWinGroup(activeWin x.Window) (ret []x.Window)","Funname":"getActiveWinGroup","Returntype":"(ret []x.Window)","Args":"activeWin x.Window"},{"Uniquefunname":"func (m *Manager) getActiveWindow() (activeWin x.Window)","Funname":"getActiveWindow","Returntype":"(activeWin x.Window)","Args":""},{"Uniquefunname":"func hasIntersection(rectA, rectB *Rect) bool","Funname":"hasIntersection","Returntype":"bool","Args":"rectA, rectB *Rect"},{"Uniquefunname":"func isDDELauncher(win x.Window) (bool, error)","Funname":"isDDELauncher","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) isWindowDockOverlap(win x.Window) (bool, error)","Funname":"isWindowDockOverlap","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func max(a, b int) int","Funname":"max","Returntype":"int","Args":"a, b int"},{"Uniquefunname":"func min(a, b int) int","Funname":"min","Returntype":"int","Args":"a, b int"},{"Uniquefunname":"func (m *Manager) resetSmartHideModeTimer(delay time.Duration)","Funname":"resetSmartHideModeTimer","Returntype":"","Args":"delay time.Duration"},{"Uniquefunname":"func (m *Manager) setPropHideState(hideState HideStateType)","Funname":"setPropHideState","Returntype":"","Args":"hideState HideStateType"},{"Uniquefunname":"func (m *Manager) shouldHideOnSmartHideMode() (bool, error)","Funname":"shouldHideOnSmartHideMode","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) smartHideModeTimerExpired()","Funname":"smartHideModeTimerExpired","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updateHideState(delay bool)","Funname":"updateHideState","Returntype":"","Args":"delay bool"}],"Records":[{"Name":"const:dock","Fields":["dock.ddeLauncherWMClass"]}]}
{"Filepath":"dock/dock_manager_hide_state_test.go","Functions":[{"Uniquefunname":"func Test_hasIntersection(t *testing.T)","Funname":"Test_hasIntersection","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_hasIntersection(t *testing.T)","Funname":"dock.Test_hasIntersection","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dock/dock_manager_init.go","Functions":[{"Uniquefunname":"func (m *Manager) connectSettingKeyChanged(key string, handler func(key string))","Funname":"connectSettingKeyChanged","Returntype":"","Args":"key string, handler func(key string)"},{"Uniquefunname":"func (m *Manager) connectSettingKeyChanged(key string, handler func(key string))","Funname":"dock.Manager.connectSettingKeyChanged","Returntype":"","Args":"key string, handler func(key string)"},{"Uniquefunname":"func (m *Manager) getWinIconPreferredApps() []string","Funname":"dock.Manager.getWinIconPreferredApps","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) handleLauncherItemCreated(itemInfo launcher.ItemInfo)","Funname":"dock.Manager.handleLauncherItemCreated","Returntype":"","Args":"itemInfo launcher.ItemInfo"},{"Uniquefunname":"func (m *Manager) handleLauncherItemDeleted(itemInfo launcher.ItemInfo)","Funname":"dock.Manager.handleLauncherItemDeleted","Returntype":"","Args":"itemInfo launcher.ItemInfo"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"dock.Manager.init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initEntries()","Funname":"dock.Manager.initEntries","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) is3DWM() (ret bool)","Funname":"dock.Manager.is3DWM","Returntype":"(ret bool)","Args":""},{"Uniquefunname":"func (m *Manager) isDDELauncherVisible() bool","Funname":"dock.Manager.isDDELauncherVisible","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) listenLauncherSignal()","Funname":"dock.Manager.listenLauncherSignal","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenSettingsChanged()","Funname":"dock.Manager.listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenWMSwitcherSignal()","Funname":"dock.Manager.listenWMSwitcherSignal","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getWinIconPreferredApps() []string","Funname":"getWinIconPreferredApps","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) handleLauncherItemCreated(itemInfo launcher.ItemInfo)","Funname":"handleLauncherItemCreated","Returntype":"","Args":"itemInfo launcher.ItemInfo"},{"Uniquefunname":"func (m *Manager) handleLauncherItemDeleted(itemInfo launcher.ItemInfo)","Funname":"handleLauncherItemDeleted","Returntype":"","Args":"itemInfo launcher.ItemInfo"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initEntries()","Funname":"initEntries","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) is3DWM() (ret bool)","Funname":"is3DWM","Returntype":"(ret bool)","Args":""},{"Uniquefunname":"func (m *Manager) isDDELauncherVisible() bool","Funname":"isDDELauncherVisible","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) listenLauncherSignal()","Funname":"listenLauncherSignal","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenSettingsChanged()","Funname":"listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenWMSwitcherSignal()","Funname":"listenWMSwitcherSignal","Returntype":"","Args":""}],"Records":[{"Name":"const:dock","Fields":["dock.ddeDataDir","dock.windowPatternsFile"]}]}
{"Filepath":"dock/dock_manager_xevent.go","Functions":[{"Uniquefunname":"func (m *Manager) eventHandleLoop()","Funname":"dock.Manager.eventHandleLoop","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getWindowInfo(win x.Window) *WindowInfo","Funname":"dock.Manager.getWindowInfo","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) handleActiveWindowChanged()","Funname":"dock.Manager.handleActiveWindowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleClientListChanged()","Funname":"dock.Manager.handleClientListChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleConfigureNotifyEvent(ev *x.ConfigureNotifyEvent)","Funname":"dock.Manager.handleConfigureNotifyEvent","Returntype":"","Args":"ev *x.ConfigureNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleDestroyNotifyEvent(ev *x.DestroyNotifyEvent)","Funname":"dock.Manager.handleDestroyNotifyEvent","Returntype":"","Args":"ev *x.DestroyNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleMapNotifyEvent(ev *x.MapNotifyEvent)","Funname":"dock.Manager.handleMapNotifyEvent","Returntype":"","Args":"ev *x.MapNotifyEvent"},{"Uniquefunname":"func (m *Manager) handlePropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"dock.Manager.handlePropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleRootWindowPropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"dock.Manager.handleRootWindowPropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (m *Manager) isWindowRegistered(win x.Window) bool","Funname":"dock.Manager.isWindowRegistered","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) listenRootWindowXEvent()","Funname":"dock.Manager.listenRootWindowXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenWindowXEvent(winInfo *WindowInfo)","Funname":"dock.Manager.listenWindowXEvent","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) registerWindow(win x.Window) *WindowInfo","Funname":"dock.Manager.registerWindow","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) unregisterWindow(win x.Window)","Funname":"dock.Manager.unregisterWindow","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) eventHandleLoop()","Funname":"eventHandleLoop","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getWindowInfo(win x.Window) *WindowInfo","Funname":"getWindowInfo","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) handleActiveWindowChanged()","Funname":"handleActiveWindowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleClientListChanged()","Funname":"handleClientListChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleConfigureNotifyEvent(ev *x.ConfigureNotifyEvent)","Funname":"handleConfigureNotifyEvent","Returntype":"","Args":"ev *x.ConfigureNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleDestroyNotifyEvent(ev *x.DestroyNotifyEvent)","Funname":"handleDestroyNotifyEvent","Returntype":"","Args":"ev *x.DestroyNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleMapNotifyEvent(ev *x.MapNotifyEvent)","Funname":"handleMapNotifyEvent","Returntype":"","Args":"ev *x.MapNotifyEvent"},{"Uniquefunname":"func (m *Manager) handlePropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"handlePropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (m *Manager) handleRootWindowPropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"handleRootWindowPropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (m *Manager) isWindowRegistered(win x.Window) bool","Funname":"isWindowRegistered","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) listenRootWindowXEvent()","Funname":"listenRootWindowXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenWindowXEvent(winInfo *WindowInfo)","Funname":"listenWindowXEvent","Returntype":"","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) registerWindow(win x.Window) *WindowInfo","Funname":"registerWindow","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func (m *Manager) unregisterWindow(win x.Window)","Funname":"unregisterWindow","Returntype":"","Args":"win x.Window"}],"Records":null}
{"Filepath":"dock/identify_window.go","Functions":[{"Uniquefunname":"func (m *Manager) identifyWindow(winInfo *WindowInfo) (innerId string, appInfo *AppInfo)","Funname":"dock.Manager.identifyWindow","Returntype":"(innerId string, appInfo *AppInfo)","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) registerIdentifyWindowFunc(name string, fn _IdentifyWindowFunc)","Funname":"dock.Manager.registerIdentifyWindowFunc","Returntype":"","Args":"name string, fn _IdentifyWindowFunc"},{"Uniquefunname":"func (m *Manager) registerIdentifyWindowFuncs()","Funname":"dock.Manager.registerIdentifyWindowFuncs","Returntype":"","Args":""},{"Uniquefunname":"func fixAutostartAppInfo(appInfo *AppInfo) *AppInfo","Funname":"dock.fixAutostartAppInfo","Returntype":"*AppInfo","Args":"appInfo *AppInfo"},{"Uniquefunname":"func identifyWindowByBamf(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByBamf","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCmdlineTurboBooster(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByCmdlineTurboBooster","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCmdlineXWalk(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByCmdlineXWalk","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCrxId(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByCrxId","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByFlatpakAppID(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByFlatpakAppID","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByGtkAppId(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByGtkAppId","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByPid(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByPid","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByPidEnv(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByPidEnv","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByRule(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByRule","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByScratch(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByScratch","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByWmClass(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"dock.identifyWindowByWmClass","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func fixAutostartAppInfo(appInfo *AppInfo) *AppInfo","Funname":"fixAutostartAppInfo","Returntype":"*AppInfo","Args":"appInfo *AppInfo"},{"Uniquefunname":"func (m *Manager) identifyWindow(winInfo *WindowInfo) (innerId string, appInfo *AppInfo)","Funname":"identifyWindow","Returntype":"(innerId string, appInfo *AppInfo)","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByBamf(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByBamf","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCmdlineTurboBooster(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByCmdlineTurboBooster","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCmdlineXWalk(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByCmdlineXWalk","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByCrxId(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByCrxId","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByFlatpakAppID(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByFlatpakAppID","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByGtkAppId(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByGtkAppId","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByPid(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByPid","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByPidEnv(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByPidEnv","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByRule(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByRule","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByScratch(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByScratch","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func identifyWindowByWmClass(m *Manager, winInfo *WindowInfo) (string, *AppInfo)","Funname":"identifyWindowByWmClass","Returntype":"(string, *AppInfo)","Args":"m *Manager, winInfo *WindowInfo"},{"Uniquefunname":"func (m *Manager) registerIdentifyWindowFunc(name string, fn _IdentifyWindowFunc)","Funname":"registerIdentifyWindowFunc","Returntype":"","Args":"name string, fn _IdentifyWindowFunc"},{"Uniquefunname":"func (m *Manager) registerIdentifyWindowFuncs()","Funname":"registerIdentifyWindowFuncs","Returntype":"","Args":""}],"Records":[{"Name":"struct:dock.IdentifyWindowFunc","Fields":["dock.IdentifyWindowFunc.Fn _IdentifyWindowFunc","dock.IdentifyWindowFunc.Name string"]},{"Name":"var:dock","Fields":["dock.crxAppIdMap"]}]}
{"Filepath":"dock/identify_window_pattern.go","Functions":[{"Uniquefunname":"func (patterns WindowPatterns) Match(winInfo *WindowInfo) string","Funname":"Match","Returntype":"string","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (rule *WindowRuleParsed) Match(winInfo *WindowInfo) bool","Funname":"Match","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (rule *WindowRule) Parse() *WindowRuleParsed","Funname":"Parse","Returntype":"*WindowRuleParsed","Args":""},{"Uniquefunname":"func (p *RuleValueParsed) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (p *RuleValueParsed) String() string","Funname":"dock.RuleValueParsed.String","Returntype":"string","Args":""},{"Uniquefunname":"func (patterns WindowPatterns) Match(winInfo *WindowInfo) string","Funname":"dock.WindowPatterns.Match","Returntype":"string","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (rule *WindowRule) Parse() *WindowRuleParsed","Funname":"dock.WindowRule.Parse","Returntype":"*WindowRuleParsed","Args":""},{"Uniquefunname":"func (rule *WindowRuleParsed) Match(winInfo *WindowInfo) bool","Funname":"dock.WindowRuleParsed.Match","Returntype":"bool","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func getRegexp(expr string) *regexp.Regexp","Funname":"dock.getRegexp","Returntype":"*regexp.Regexp","Args":"expr string"},{"Uniquefunname":"func loadWindowPatterns(file string) (WindowPatterns, error)","Funname":"dock.loadWindowPatterns","Returntype":"(WindowPatterns, error)","Args":"file string"},{"Uniquefunname":"func negativeRule(fn RuleMatchFunc) RuleMatchFunc","Funname":"dock.negativeRule","Returntype":"RuleMatchFunc","Args":"fn RuleMatchFunc"},{"Uniquefunname":"func parseRuleKey(winInfo *WindowInfo, key string) string","Funname":"dock.parseRuleKey","Returntype":"string","Args":"winInfo *WindowInfo, key string"},{"Uniquefunname":"func parseRuleValue(val string) *RuleValueParsed","Funname":"dock.parseRuleValue","Returntype":"*RuleValueParsed","Args":"val string"},{"Uniquefunname":"func getRegexp(expr string) *regexp.Regexp","Funname":"getRegexp","Returntype":"*regexp.Regexp","Args":"expr string"},{"Uniquefunname":"func loadWindowPatterns(file string) (WindowPatterns, error)","Funname":"loadWindowPatterns","Returntype":"(WindowPatterns, error)","Args":"file string"},{"Uniquefunname":"func negativeRule(fn RuleMatchFunc) RuleMatchFunc","Funname":"negativeRule","Returntype":"RuleMatchFunc","Args":"fn RuleMatchFunc"},{"Uniquefunname":"func parseRuleKey(winInfo *WindowInfo, key string) string","Funname":"parseRuleKey","Returntype":"string","Args":"winInfo *WindowInfo, key string"},{"Uniquefunname":"func parseRuleValue(val string) *RuleValueParsed","Funname":"parseRuleValue","Returntype":"*RuleValueParsed","Args":"val string"}],"Records":[{"Name":"struct:dock.RuleValueParsed","Fields":["dock.RuleValueParsed.Flags RuleValueParsedFlag","dock.RuleValueParsed.Fn RuleMatchFunc","dock.RuleValueParsed.Original string","dock.RuleValueParsed.Type byte","dock.RuleValueParsed.Value string"]},{"Name":"const:dock","Fields":["dock.RuleValueParsedFlagIgnoreCase","dock.RuleValueParsedFlagNegative","dock.RuleValueParsedFlagNone"]},{"Name":"struct:dock.WindowPattern","Fields":["dock.WindowPattern.ParsedRules []*WindowRuleParsed","dock.WindowPattern.Result string","dock.WindowPattern.Rules []WindowRule"]},{"Name":"struct:dock.WindowRuleParsed","Fields":["dock.WindowRuleParsed.Key string","dock.WindowRuleParsed.ValueParsed *RuleValueParsed"]},{"Name":"var:dock","Fields":["dock.regexpCache","dock.regexpCacheMutex"]}]}
{"Filepath":"dock/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"dock.init","Returntype":"","Args":""},{"Uniquefunname":"func initAtom()","Funname":"dock.initAtom","Returntype":"","Args":""},{"Uniquefunname":"func initDir()","Funname":"dock.initDir","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func initAtom()","Funname":"initAtom","Returntype":"","Args":""},{"Uniquefunname":"func initDir()","Funname":"initDir","Returntype":"","Args":""}],"Records":[{"Name":"var:dock","Fields":["dock.atomFlatpakAppId","dock.atomGtkApplicationId","dock.atomGtkFrameExtents","dock.atomMotifWmHints","dock.atomNetActiveWindow","dock.atomNetClientList","dock.atomNetFrameExtents","dock.atomNetShowingDesktop","dock.atomNetWMIcon","dock.atomNetWMName","dock.atomNetWMState","dock.atomNetWMWindowType","dock.atomNetWmActionClose","dock.atomNetWmActionMinimize","dock.atomNetWmAllowedActions","dock.atomNetWmPid","dock.atomNetWmStateAbove","dock.atomNetWmStateFocused","dock.atomNetWmStateHidden","dock.atomNetWmStateMaximizedHorz","dock.atomNetWmStateMaximizedVert","dock.atomNetWmStateModal","dock.atomNetWmStateSkipTaskbar","dock.atomNetWmWindowOpacity","dock.atomNetWmWindowTypeDesktop","dock.atomNetWmWindowTypeDialog","dock.atomUTF8String","dock.atomWmClientLeader","dock.atomWmCommand","dock.atomWmStateDemandsAttention","dock.atomWmWindowRole","dock.atomXEmbedInfo","dock.dockManager","dock.globalXConn","dock.homeDir","dock.logger","dock.scratchDir"]}]}
{"Filepath":"dock/menu.go","Functions":[{"Uniquefunname":"func (m *Menu) AppendItem(items ...*MenuItem)","Funname":"AppendItem","Returntype":"","Args":"items ...*MenuItem"},{"Uniquefunname":"func (m *Menu) GenerateJSON() string","Funname":"GenerateJSON","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Menu) HandleAction(id string, timestamp uint32) error","Funname":"HandleAction","Returntype":"error","Args":"id string, timestamp uint32"},{"Uniquefunname":"func NewMenu() *Menu","Funname":"NewMenu","Returntype":"*Menu","Args":""},{"Uniquefunname":"func NewMenuItem(name string, action func(uint32), enable bool) *MenuItem","Funname":"NewMenuItem","Returntype":"*MenuItem","Args":"name string, action func(uint32), enable bool"},{"Uniquefunname":"func (m *Menu) allocateId() string","Funname":"allocateId","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Menu) AppendItem(items ...*MenuItem)","Funname":"dock.Menu.AppendItem","Returntype":"","Args":"items ...*MenuItem"},{"Uniquefunname":"func (m *Menu) GenerateJSON() string","Funname":"dock.Menu.GenerateJSON","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Menu) HandleAction(id string, timestamp uint32) error","Funname":"dock.Menu.HandleAction","Returntype":"error","Args":"id string, timestamp uint32"},{"Uniquefunname":"func (m *Menu) allocateId() string","Funname":"dock.Menu.allocateId","Returntype":"string","Args":""},{"Uniquefunname":"func NewMenu() *Menu","Funname":"dock.NewMenu","Returntype":"*Menu","Args":""},{"Uniquefunname":"func NewMenuItem(name string, action func(uint32), enable bool) *MenuItem","Funname":"dock.NewMenuItem","Returntype":"*MenuItem","Args":"name string, action func(uint32), enable bool"}],"Records":[{"Name":"struct:dock.Menu","Fields":["dock.Menu.CheckableMenu bool","dock.Menu.Items []*MenuItem","dock.Menu.SingleCheck bool","dock.Menu.itemCount int64"]},{"Name":"struct:dock.MenuItem","Fields":["dock.MenuItem.Checked bool","dock.MenuItem.Icon string","dock.MenuItem.IconHover string","dock.MenuItem.IconInactive string","dock.MenuItem.Id string","dock.MenuItem.IsActive bool","dock.MenuItem.IsCheckable bool","dock.MenuItem.ShowCheckMark bool","dock.MenuItem.SubMenu *Menu","dock.MenuItem.Text string","dock.MenuItem.action func(uint32)","dock.MenuItem.hint int"]},{"Name":"const:dock","Fields":["dock.menuItemHintShowAllWindows"]}]}
{"Filepath":"dock/menu_test.go","Functions":[{"Uniquefunname":"func IsContainItem(items []*MenuItem, item *MenuItem) bool","Funname":"IsContainItem","Returntype":"bool","Args":"items []*MenuItem, item *MenuItem"},{"Uniquefunname":"func Test_AppendItem(t *testing.T)","Funname":"Test_AppendItem","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GenerateMenuJson(t *testing.T)","Funname":"Test_GenerateMenuJson","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func IsContainItem(items []*MenuItem, item *MenuItem) bool","Funname":"dock.IsContainItem","Returntype":"bool","Args":"items []*MenuItem, item *MenuItem"},{"Uniquefunname":"func Test_AppendItem(t *testing.T)","Funname":"dock.Test_AppendItem","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_GenerateMenuJson(t *testing.T)","Funname":"dock.Test_GenerateMenuJson","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dock/plugin_settings.go","Functions":[{"Uniquefunname":"func newPluginSettingsStorage(m *Manager) *pluginSettingsStorage","Funname":"dock.newPluginSettingsStorage","Returntype":"*pluginSettingsStorage","Args":"m *Manager"},{"Uniquefunname":"func (s *pluginSettingsStorage) equal(v pluginSettings) bool","Funname":"dock.pluginSettingsStorage.equal","Returntype":"bool","Args":"v pluginSettings"},{"Uniquefunname":"func (s *pluginSettingsStorage) getJsonStr() (string, error)","Funname":"dock.pluginSettingsStorage.getJsonStr","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) merge(v pluginSettings)","Funname":"dock.pluginSettingsStorage.merge","Returntype":"","Args":"v pluginSettings"},{"Uniquefunname":"func (s *pluginSettingsStorage) remove(key1 string, key2List []string)","Funname":"dock.pluginSettingsStorage.remove","Returntype":"","Args":"key1 string, key2List []string"},{"Uniquefunname":"func (s *pluginSettingsStorage) requestSave()","Funname":"dock.pluginSettingsStorage.requestSave","Returntype":"","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) save()","Funname":"dock.pluginSettingsStorage.save","Returntype":"","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) set(v pluginSettings)","Funname":"dock.pluginSettingsStorage.set","Returntype":"","Args":"v pluginSettings"},{"Uniquefunname":"func (s *pluginSettingsStorage) equal(v pluginSettings) bool","Funname":"equal","Returntype":"bool","Args":"v pluginSettings"},{"Uniquefunname":"func (s *pluginSettingsStorage) getJsonStr() (string, error)","Funname":"getJsonStr","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) merge(v pluginSettings)","Funname":"merge","Returntype":"","Args":"v pluginSettings"},{"Uniquefunname":"func newPluginSettingsStorage(m *Manager) *pluginSettingsStorage","Funname":"newPluginSettingsStorage","Returntype":"*pluginSettingsStorage","Args":"m *Manager"},{"Uniquefunname":"func (s *pluginSettingsStorage) remove(key1 string, key2List []string)","Funname":"remove","Returntype":"","Args":"key1 string, key2List []string"},{"Uniquefunname":"func (s *pluginSettingsStorage) requestSave()","Funname":"requestSave","Returntype":"","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) save()","Funname":"save","Returntype":"","Args":""},{"Uniquefunname":"func (s *pluginSettingsStorage) set(v pluginSettings)","Funname":"set","Returntype":"","Args":"v pluginSettings"}],"Records":[{"Name":"struct:dock.pluginSettingsStorage","Fields":["dock.pluginSettingsStorage.data pluginSettings","dock.pluginSettingsStorage.dataMu sync.Mutex","dock.pluginSettingsStorage.m *Manager","dock.pluginSettingsStorage.saveStateMu sync.Mutex","dock.pluginSettingsStorage.saving bool","dock.pluginSettingsStorage.timer *time.Timer"]}]}
{"Filepath":"dock/process_info.go","Functions":[{"Uniquefunname":"func (p *ProcessInfo) GetOneCommandLine() string","Funname":"GetOneCommandLine","Returntype":"string","Args":""},{"Uniquefunname":"func (p *ProcessInfo) GetShellScriptLines() string","Funname":"GetShellScriptLines","Returntype":"string","Args":""},{"Uniquefunname":"func NewProcessInfo(pid uint) (*ProcessInfo, error)","Funname":"NewProcessInfo","Returntype":"(*ProcessInfo, error)","Args":"pid uint"},{"Uniquefunname":"func NewProcessInfoWithCmdline(cmd []string) *ProcessInfo","Funname":"NewProcessInfoWithCmdline","Returntype":"*ProcessInfo","Args":"cmd []string"},{"Uniquefunname":"func NewProcessInfo(pid uint) (*ProcessInfo, error)","Funname":"dock.NewProcessInfo","Returntype":"(*ProcessInfo, error)","Args":"pid uint"},{"Uniquefunname":"func NewProcessInfoWithCmdline(cmd []string) *ProcessInfo","Funname":"dock.NewProcessInfoWithCmdline","Returntype":"*ProcessInfo","Args":"cmd []string"},{"Uniquefunname":"func (p *ProcessInfo) GetOneCommandLine() string","Funname":"dock.ProcessInfo.GetOneCommandLine","Returntype":"string","Args":""},{"Uniquefunname":"func (p *ProcessInfo) GetShellScriptLines() string","Funname":"dock.ProcessInfo.GetShellScriptLines","Returntype":"string","Args":""},{"Uniquefunname":"func (p *ProcessInfo) getJoinedExeArgs() string","Funname":"dock.ProcessInfo.getJoinedExeArgs","Returntype":"string","Args":""},{"Uniquefunname":"func getCmdlineArgs(exe, cwd string, cmdline []string) []string","Funname":"dock.getCmdlineArgs","Returntype":"[]string","Args":"exe, cwd string, cmdline []string"},{"Uniquefunname":"func verifyExe(exe, cwd, firstArg string) bool","Funname":"dock.verifyExe","Returntype":"bool","Args":"exe, cwd, firstArg string"},{"Uniquefunname":"func getCmdlineArgs(exe, cwd string, cmdline []string) []string","Funname":"getCmdlineArgs","Returntype":"[]string","Args":"exe, cwd string, cmdline []string"},{"Uniquefunname":"func (p *ProcessInfo) getJoinedExeArgs() string","Funname":"getJoinedExeArgs","Returntype":"string","Args":""},{"Uniquefunname":"func verifyExe(exe, cwd, firstArg string) bool","Funname":"verifyExe","Returntype":"bool","Args":"exe, cwd, firstArg string"}],"Records":[{"Name":"struct:dock.ProcessInfo","Fields":["dock.ProcessInfo.args []string","dock.ProcessInfo.cmdline []string","dock.ProcessInfo.cwd string","dock.ProcessInfo.environ procfs.EnvVars","dock.ProcessInfo.exe string","dock.ProcessInfo.hasPid bool","dock.ProcessInfo.ppid uint","dock.ProcessInfo.process procfs.Process"]}]}
{"Filepath":"dock/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"dock.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"dock.syncConfig.Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) setDockedApps(dockedApps []string)","Funname":"dock.syncConfig.setDockedApps","Returntype":"","Args":"dockedApps []string"},{"Uniquefunname":"func (sc *syncConfig) setPluginSettings(settings pluginSettings)","Funname":"dock.syncConfig.setPluginSettings","Returntype":"","Args":"settings pluginSettings"},{"Uniquefunname":"func (sc *syncConfig) setDockedApps(dockedApps []string)","Funname":"setDockedApps","Returntype":"","Args":"dockedApps []string"},{"Uniquefunname":"func (sc *syncConfig) setPluginSettings(settings pluginSettings)","Funname":"setPluginSettings","Returntype":"","Args":"settings pluginSettings"}],"Records":[{"Name":"struct:dock.syncConfig","Fields":["dock.syncConfig.m *Manager"]},{"Name":"const:dock","Fields":["dock.syncConfigVersion"]},{"Name":"struct:dock.syncData","Fields":["dock.syncData.DisplayMode string","dock.syncData.DockedApps []string","dock.syncData.HideMode string","dock.syncData.Plugins pluginSettings","dock.syncData.Position string","dock.syncData.Version string","dock.syncData.WindowSizeEfficient uint32","dock.syncData.WindowSizeFashion uint32"]}]}
{"Filepath":"dock/types.go","Functions":[{"Uniquefunname":"func NewRect() *Rect","Funname":"NewRect","Returntype":"*Rect","Args":""},{"Uniquefunname":"func (r *Rect) Pieces() (int, int, int, int)","Funname":"Pieces","Returntype":"(int, int, int, int)","Args":""},{"Uniquefunname":"func (p positionType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (s HideStateType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t DisplayModeType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t HideModeType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t DisplayModeType) String() string","Funname":"dock.DisplayModeType.String","Returntype":"string","Args":""},{"Uniquefunname":"func (t HideModeType) String() string","Funname":"dock.HideModeType.String","Returntype":"string","Args":""},{"Uniquefunname":"func (s HideStateType) String() string","Funname":"dock.HideStateType.String","Returntype":"string","Args":""},{"Uniquefunname":"func NewRect() *Rect","Funname":"dock.NewRect","Returntype":"*Rect","Args":""},{"Uniquefunname":"func (r *Rect) Pieces() (int, int, int, int)","Funname":"dock.Rect.Pieces","Returntype":"(int, int, int, int)","Args":""},{"Uniquefunname":"func (p positionType) String() string","Funname":"dock.positionType.String","Returntype":"string","Args":""}],"Records":[{"Name":"const:dock","Fields":["dock.DisplayModeClassicMode","dock.DisplayModeEfficientMode","dock.DisplayModeFashionMode","dock.HideModeAutoHide","dock.HideModeKeepHidden","dock.HideModeKeepShowing","dock.HideModeSmartHide","dock.HideStateHide","dock.HideStateShow","dock.HideStateUnknown","dock.positionBottom","dock.positionLeft","dock.positionRight","dock.positionTop"]},{"Name":"struct:dock.Rect","Fields":["dock.Rect.Height uint32","dock.Rect.Width uint32","dock.Rect.X int32","dock.Rect.Y int32"]}]}
{"Filepath":"dock/util.go","Functions":[{"Uniquefunname":"func copyFileContents(src, dst string) (err error)","Funname":"copyFileContents","Returntype":"(err error)","Args":"src, dst string"},{"Uniquefunname":"func dataUriToFile(dataUri, path string) (string, error)","Funname":"dataUriToFile","Returntype":"(string, error)","Args":"dataUri, path string"},{"Uniquefunname":"func copyFileContents(src, dst string) (err error)","Funname":"dock.copyFileContents","Returntype":"(err error)","Args":"src, dst string"},{"Uniquefunname":"func dataUriToFile(dataUri, path string) (string, error)","Funname":"dock.dataUriToFile","Returntype":"(string, error)","Args":"dataUri, path string"},{"Uniquefunname":"func getCurrentTimestamp() uint32","Funname":"dock.getCurrentTimestamp","Returntype":"uint32","Args":""},{"Uniquefunname":"func init()","Funname":"dock.init","Returntype":"","Args":""},{"Uniquefunname":"func isInAutostartDir(file string) bool","Funname":"dock.isInAutostartDir","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func strSliceContains(slice []string, v string) bool","Funname":"dock.strSliceContains","Returntype":"bool","Args":"slice []string, v string"},{"Uniquefunname":"func strSliceEqual(sa, sb []string) bool","Funname":"dock.strSliceEqual","Returntype":"bool","Args":"sa, sb []string"},{"Uniquefunname":"func toLocalPath(in string) string","Funname":"dock.toLocalPath","Returntype":"string","Args":"in string"},{"Uniquefunname":"func uniqStrSlice(slice []string) []string","Funname":"dock.uniqStrSlice","Returntype":"[]string","Args":"slice []string"},{"Uniquefunname":"func getCurrentTimestamp() uint32","Funname":"getCurrentTimestamp","Returntype":"uint32","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isInAutostartDir(file string) bool","Funname":"isInAutostartDir","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func strSliceContains(slice []string, v string) bool","Funname":"strSliceContains","Returntype":"bool","Args":"slice []string, v string"},{"Uniquefunname":"func strSliceEqual(sa, sb []string) bool","Funname":"strSliceEqual","Returntype":"bool","Args":"sa, sb []string"},{"Uniquefunname":"func toLocalPath(in string) string","Funname":"toLocalPath","Returntype":"string","Args":"in string"},{"Uniquefunname":"func uniqStrSlice(slice []string) []string","Funname":"uniqStrSlice","Returntype":"[]string","Args":"slice []string"}],"Records":[{"Name":"var:dock","Fields":["dock.xdgAutostartDirs"]}]}
{"Filepath":"dock/util_test.go","Functions":[{"Uniquefunname":"func Test_strSliceContains(t *testing.T)","Funname":"Test_strSliceContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_strSliceEqual(t *testing.T)","Funname":"Test_strSliceEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_uniqStrSlice(t *testing.T)","Funname":"Test_uniqStrSlice","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_strSliceContains(t *testing.T)","Funname":"dock.Test_strSliceContains","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_strSliceEqual(t *testing.T)","Funname":"dock.Test_strSliceEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_uniqStrSlice(t *testing.T)","Funname":"dock.Test_uniqStrSlice","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dock/window_info.go","Functions":[{"Uniquefunname":"func NewWindowInfo(win x.Window) *WindowInfo","Funname":"NewWindowInfo","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func NewWindowInfo(win x.Window) *WindowInfo","Funname":"dock.NewWindowInfo","Returntype":"*WindowInfo","Args":"win x.Window"},{"Uniquefunname":"func (winInfo *WindowInfo) getDisplayName() (name string)","Funname":"dock.WindowInfo.getDisplayName","Returntype":"(name string)","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getDisplayName0() string","Funname":"dock.WindowInfo.getDisplayName0","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getIcon() string","Funname":"dock.WindowInfo.getIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getTitle() string","Funname":"dock.WindowInfo.getTitle","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateDemandsAttention() bool","Funname":"dock.WindowInfo.hasWmStateDemandsAttention","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateModal() bool","Funname":"dock.WindowInfo.hasWmStateModal","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateSkipTaskBar() bool","Funname":"dock.WindowInfo.hasWmStateSkipTaskBar","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) isActionMinimizeAllowed() bool","Funname":"dock.WindowInfo.isActionMinimizeAllowed","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) isValidModal() bool","Funname":"dock.WindowInfo.isValidModal","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) shouldSkip() bool","Funname":"dock.WindowInfo.shouldSkip","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) shouldSkipWithWMClass() bool","Funname":"dock.WindowInfo.shouldSkipWithWMClass","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) update()","Funname":"dock.WindowInfo.update","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateHasWmTransientFor()","Funname":"dock.WindowInfo.updateHasWmTransientFor","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateHasXEmbedInfo()","Funname":"dock.WindowInfo.updateHasXEmbedInfo","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateIcon()","Funname":"dock.WindowInfo.updateIcon","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateMotifWmHints()","Funname":"dock.WindowInfo.updateMotifWmHints","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateProcessInfo()","Funname":"dock.WindowInfo.updateProcessInfo","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmAllowedActions()","Funname":"dock.WindowInfo.updateWmAllowedActions","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmClass()","Funname":"dock.WindowInfo.updateWmClass","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmName()","Funname":"dock.WindowInfo.updateWmName","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmState()","Funname":"dock.WindowInfo.updateWmState","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmWindowType()","Funname":"dock.WindowInfo.updateWmWindowType","Returntype":"","Args":""},{"Uniquefunname":"func filterFilePath(args []string) string","Funname":"dock.filterFilePath","Returntype":"string","Args":"args []string"},{"Uniquefunname":"func genInnerId(winInfo *WindowInfo) string","Funname":"dock.genInnerId","Returntype":"string","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func filterFilePath(args []string) string","Funname":"filterFilePath","Returntype":"string","Args":"args []string"},{"Uniquefunname":"func genInnerId(winInfo *WindowInfo) string","Funname":"genInnerId","Returntype":"string","Args":"winInfo *WindowInfo"},{"Uniquefunname":"func (winInfo *WindowInfo) getDisplayName() (name string)","Funname":"getDisplayName","Returntype":"(name string)","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getDisplayName0() string","Funname":"getDisplayName0","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getIcon() string","Funname":"getIcon","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) getTitle() string","Funname":"getTitle","Returntype":"string","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateDemandsAttention() bool","Funname":"hasWmStateDemandsAttention","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateModal() bool","Funname":"hasWmStateModal","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) hasWmStateSkipTaskBar() bool","Funname":"hasWmStateSkipTaskBar","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) isActionMinimizeAllowed() bool","Funname":"isActionMinimizeAllowed","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) isValidModal() bool","Funname":"isValidModal","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) shouldSkip() bool","Funname":"shouldSkip","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) shouldSkipWithWMClass() bool","Funname":"shouldSkipWithWMClass","Returntype":"bool","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) update()","Funname":"update","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateHasWmTransientFor()","Funname":"updateHasWmTransientFor","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateHasXEmbedInfo()","Funname":"updateHasXEmbedInfo","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateIcon()","Funname":"updateIcon","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateMotifWmHints()","Funname":"updateMotifWmHints","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateProcessInfo()","Funname":"updateProcessInfo","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmAllowedActions()","Funname":"updateWmAllowedActions","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmClass()","Funname":"updateWmClass","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmName()","Funname":"updateWmName","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmState()","Funname":"updateWmState","Returntype":"","Args":""},{"Uniquefunname":"func (winInfo *WindowInfo) updateWmWindowType()","Funname":"updateWmWindowType","Returntype":"","Args":""}],"Records":[{"Name":"struct:dock.WindowInfo","Fields":["dock.WindowInfo.Icon string","dock.WindowInfo.Title string","dock.WindowInfo.appInfo *AppInfo","dock.WindowInfo.entry *AppEntry","dock.WindowInfo.entryInnerId string","dock.WindowInfo.flatpakAppID string","dock.WindowInfo.gtkAppId string","dock.WindowInfo.hasWmTransientFor bool","dock.WindowInfo.hasXEmbedInfo bool","dock.WindowInfo.height uint16","dock.WindowInfo.innerId string","dock.WindowInfo.lastConfigureNotifyEvent *x.ConfigureNotifyEvent","dock.WindowInfo.motifWmHints *MotifWmHints","dock.WindowInfo.mu sync.Mutex","dock.WindowInfo.pid uint","dock.WindowInfo.process *ProcessInfo","dock.WindowInfo.updateCalled bool","dock.WindowInfo.updateConfigureTimer *time.Timer","dock.WindowInfo.width uint16","dock.WindowInfo.window x.Window","dock.WindowInfo.wmAllowedActions []x.Atom","dock.WindowInfo.wmClass *icccm.WMClass","dock.WindowInfo.wmName string","dock.WindowInfo.wmRole string","dock.WindowInfo.wmState []x.Atom","dock.WindowInfo.wmWindowType []x.Atom","dock.WindowInfo.x int16","dock.WindowInfo.y int16"]},{"Name":"var:dock","Fields":["dock.skipTaskBarWindowTypes"]},{"Name":"const:dock","Fields":["dock.windowHashPrefix"]}]}
{"Filepath":"dock/window_infos.go","Functions":[{"Uniquefunname":"func (a windowInfosType) Equal(b windowInfosType) bool","Funname":"Equal","Returntype":"bool","Args":"b windowInfosType"},{"Uniquefunname":"func newWindowInfos() windowInfosType","Funname":"dock.newWindowInfos","Returntype":"windowInfosType","Args":""},{"Uniquefunname":"func (a windowInfosType) Equal(b windowInfosType) bool","Funname":"dock.windowInfosType.Equal","Returntype":"bool","Args":"b windowInfosType"},{"Uniquefunname":"func newWindowInfos() windowInfosType","Funname":"newWindowInfos","Returntype":"windowInfosType","Args":""}],"Records":[{"Name":"struct:dock.ExportWindowInfo","Fields":["dock.ExportWindowInfo.Flash bool","dock.ExportWindowInfo.Title string"]}]}
{"Filepath":"dock/window_infos_test.go","Functions":[{"Uniquefunname":"func Test_windowInfosTypeEqual(t *testing.T)","Funname":"Test_windowInfosTypeEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_windowInfosTypeEqual(t *testing.T)","Funname":"dock.Test_windowInfosTypeEqual","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dock/window_slice.go","Functions":[{"Uniquefunname":"func (winSlice windowSlice) Contains(win x.Window) bool","Funname":"Contains","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func Len()int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func Less(i, j int)bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func diffSortedWindowSlice(a, b windowSlice) (add, remove windowSlice)","Funname":"diffSortedWindowSlice","Returntype":"(add, remove windowSlice)","Args":"a, b windowSlice"},{"Uniquefunname":"func diffSortedWindowSlice(a, b windowSlice) (add, remove windowSlice)","Funname":"dock.diffSortedWindowSlice","Returntype":"(add, remove windowSlice)","Args":"a, b windowSlice"},{"Uniquefunname":"func (winSlice windowSlice) Contains(win x.Window) bool","Funname":"dock.windowSlice.Contains","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func dock.windowSlice.Len()int","Funname":"dock.windowSlice.Len","Returntype":"int","Args":""},{"Uniquefunname":"func dock.windowSlice.Less(i, j int)bool","Funname":"dock.windowSlice.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func dock.windowSlice.Swap(i, j int)","Funname":"dock.windowSlice.Swap","Returntype":"","Args":"i, j int"}],"Records":null}
{"Filepath":"dock/window_slice_test.go","Functions":[{"Uniquefunname":"func Test_diffSortedWindowSlice(t *testing.T)","Funname":"Test_diffSortedWindowSlice","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_diffSortedWindowSlice(t *testing.T)","Funname":"dock.Test_diffSortedWindowSlice","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"dock/xutils.go","Functions":[{"Uniquefunname":"func NewNRGBAImageFromEwmhIcon(icon *ewmh.WMIcon) *image.NRGBA","Funname":"NewNRGBAImageFromEwmhIcon","Returntype":"*image.NRGBA","Args":"icon *ewmh.WMIcon"},{"Uniquefunname":"func activateWindow(win x.Window) error","Funname":"activateWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func (h *MotifWmHints) allowedClose() bool","Funname":"allowedClose","Returntype":"bool","Args":""},{"Uniquefunname":"func atomsContains(slice []x.Atom, atom x.Atom) bool","Funname":"atomsContains","Returntype":"bool","Args":"slice []x.Atom, atom x.Atom"},{"Uniquefunname":"func changeCurrentWorkspaceToWindowWorkspace(win x.Window) error","Funname":"changeCurrentWorkspaceToWindowWorkspace","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func closeWindow(win x.Window, ts x.Timestamp) error","Funname":"closeWindow","Returntype":"error","Args":"win x.Window, ts x.Timestamp"},{"Uniquefunname":"func (h *MotifWmHints) allowedClose() bool","Funname":"dock.MotifWmHints.allowedClose","Returntype":"bool","Args":""},{"Uniquefunname":"func NewNRGBAImageFromEwmhIcon(icon *ewmh.WMIcon) *image.NRGBA","Funname":"dock.NewNRGBAImageFromEwmhIcon","Returntype":"*image.NRGBA","Args":"icon *ewmh.WMIcon"},{"Uniquefunname":"func activateWindow(win x.Window) error","Funname":"dock.activateWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func atomsContains(slice []x.Atom, atom x.Atom) bool","Funname":"dock.atomsContains","Returntype":"bool","Args":"slice []x.Atom, atom x.Atom"},{"Uniquefunname":"func changeCurrentWorkspaceToWindowWorkspace(win x.Window) error","Funname":"dock.changeCurrentWorkspaceToWindowWorkspace","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func closeWindow(win x.Window, ts x.Timestamp) error","Funname":"dock.closeWindow","Returntype":"error","Args":"win x.Window, ts x.Timestamp"},{"Uniquefunname":"func findBestEwmhIcon(width, height int, icons []ewmh.WMIcon) *ewmh.WMIcon","Funname":"dock.findBestEwmhIcon","Returntype":"*ewmh.WMIcon","Args":"width, height int, icons []ewmh.WMIcon"},{"Uniquefunname":"func findIconEwmh(win x.Window) (image.Image, error)","Funname":"dock.findIconEwmh","Returntype":"(image.Image, error)","Args":"win x.Window"},{"Uniquefunname":"func findIconIcccm(wid x.Window) (image.Image, error)","Funname":"dock.findIconIcccm","Returntype":"(image.Image, error)","Args":"wid x.Window"},{"Uniquefunname":"func getAtom(name string) (x.Atom, error)","Funname":"dock.getAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func getAtomName(atom x.Atom) (string, error)","Funname":"dock.getAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func getBestEwmhIcon(win x.Window) (*ewmh.WMIcon, error)","Funname":"dock.getBestEwmhIcon","Returntype":"(*ewmh.WMIcon, error)","Args":"win x.Window"},{"Uniquefunname":"func getCardinalFromReply(r *x.GetPropertyReply) (uint32, error)","Funname":"dock.getCardinalFromReply","Returntype":"(uint32, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getCardinalsFromReply(r *x.GetPropertyReply) ([]uint32, error)","Funname":"dock.getCardinalsFromReply","Returntype":"([]uint32, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getDecorativeWindow(conn *x.Conn, win x.Window) (x.Window, error)","Funname":"dock.getDecorativeWindow","Returntype":"(x.Window, error)","Args":"conn *x.Conn, win x.Window"},{"Uniquefunname":"func getFrameExtentsFromReply(reply *x.GetPropertyReply) (*windowFrameExtents, error)","Funname":"dock.getFrameExtentsFromReply","Returntype":"(*windowFrameExtents, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getGeometry(xConn *x.Conn, win x.Window) (*Rect, error)","Funname":"dock.getGeometry","Returntype":"(*Rect, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getIconFromWindow(win x.Window) string","Funname":"dock.getIconFromWindow","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getMotifWmHints(xConn *x.Conn, win x.Window) (*MotifWmHints, error)","Funname":"dock.getMotifWmHints","Returntype":"(*MotifWmHints, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getMotifWmHintsFromReply(reply *x.GetPropertyReply) (*MotifWmHints, error)","Funname":"dock.getMotifWmHintsFromReply","Returntype":"(*MotifWmHints, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getUTF8StrFromReply(reply *x.GetPropertyReply) (string, error)","Funname":"dock.getUTF8StrFromReply","Returntype":"(string, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getUTF8StrsFromReply(reply *x.GetPropertyReply) ([]string, error)","Funname":"dock.getUTF8StrsFromReply","Returntype":"([]string, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getWindowFlatpakAppID(win x.Window) string","Funname":"dock.getWindowFlatpakAppID","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWindowFrameExtents(xConn *x.Conn, win x.Window) (*windowFrameExtents, error)","Funname":"dock.getWindowFrameExtents","Returntype":"(*windowFrameExtents, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getWindowFromReply(r *x.GetPropertyReply) (x.Window, error)","Funname":"dock.getWindowFromReply","Returntype":"(x.Window, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getWindowGeometry(xConn *x.Conn, win x.Window) (*Rect, error)","Funname":"dock.getWindowGeometry","Returntype":"(*Rect, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getWindowGtkApplicationId(win x.Window) string","Funname":"dock.getWindowGtkApplicationId","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWindowPropertyString(win x.Window, atom x.Atom) (string, error)","Funname":"dock.getWindowPropertyString","Returntype":"(string, error)","Args":"win x.Window, atom x.Atom"},{"Uniquefunname":"func getWindowUserTime(win x.Window) (uint, error)","Funname":"dock.getWindowUserTime","Returntype":"(uint, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmClass(win x.Window) (*icccm.WMClass, error)","Funname":"dock.getWmClass","Returntype":"(*icccm.WMClass, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmClientLeader(win x.Window) (x.Window, error)","Funname":"dock.getWmClientLeader","Returntype":"(x.Window, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmCommand(win x.Window) ([]string, error)","Funname":"dock.getWmCommand","Returntype":"([]string, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmName(win x.Window) string","Funname":"dock.getWmName","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWmPid(win x.Window) uint","Funname":"dock.getWmPid","Returntype":"uint","Args":"win x.Window"},{"Uniquefunname":"func getWmTransientFor(win x.Window) (x.Window, error)","Funname":"dock.getWmTransientFor","Returntype":"(x.Window, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmWindowOpacity(win x.Window) (uint, error)","Funname":"dock.getWmWindowOpacity","Returntype":"(uint, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmWindowRole(win x.Window) string","Funname":"dock.getWmWindowRole","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func isGoodWindow(win x.Window) bool","Funname":"dock.isGoodWindow","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func isHiddenPre(win x.Window) bool","Funname":"dock.isHiddenPre","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func isWindowOnCurrentWorkspace(win x.Window) (bool, error)","Funname":"dock.isWindowOnCurrentWorkspace","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func killClient(win x.Window)","Funname":"dock.killClient","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func makeWindowAbove(win x.Window) error","Funname":"dock.makeWindowAbove","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func maximizeWindow(win x.Window) error","Funname":"dock.maximizeWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func minimizeWindow(win x.Window) error","Funname":"dock.minimizeWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func moveWindow(win x.Window) error","Funname":"dock.moveWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func onCurrentWorkspacePre(win x.Window) bool","Funname":"dock.onCurrentWorkspacePre","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func findBestEwmhIcon(width, height int, icons []ewmh.WMIcon) *ewmh.WMIcon","Funname":"findBestEwmhIcon","Returntype":"*ewmh.WMIcon","Args":"width, height int, icons []ewmh.WMIcon"},{"Uniquefunname":"func findIconEwmh(win x.Window) (image.Image, error)","Funname":"findIconEwmh","Returntype":"(image.Image, error)","Args":"win x.Window"},{"Uniquefunname":"func findIconIcccm(wid x.Window) (image.Image, error)","Funname":"findIconIcccm","Returntype":"(image.Image, error)","Args":"wid x.Window"},{"Uniquefunname":"func getAtom(name string) (x.Atom, error)","Funname":"getAtom","Returntype":"(x.Atom, error)","Args":"name string"},{"Uniquefunname":"func getAtomName(atom x.Atom) (string, error)","Funname":"getAtomName","Returntype":"(string, error)","Args":"atom x.Atom"},{"Uniquefunname":"func getBestEwmhIcon(win x.Window) (*ewmh.WMIcon, error)","Funname":"getBestEwmhIcon","Returntype":"(*ewmh.WMIcon, error)","Args":"win x.Window"},{"Uniquefunname":"func getCardinalFromReply(r *x.GetPropertyReply) (uint32, error)","Funname":"getCardinalFromReply","Returntype":"(uint32, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getCardinalsFromReply(r *x.GetPropertyReply) ([]uint32, error)","Funname":"getCardinalsFromReply","Returntype":"([]uint32, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getDecorativeWindow(conn *x.Conn, win x.Window) (x.Window, error)","Funname":"getDecorativeWindow","Returntype":"(x.Window, error)","Args":"conn *x.Conn, win x.Window"},{"Uniquefunname":"func getFrameExtentsFromReply(reply *x.GetPropertyReply) (*windowFrameExtents, error)","Funname":"getFrameExtentsFromReply","Returntype":"(*windowFrameExtents, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getGeometry(xConn *x.Conn, win x.Window) (*Rect, error)","Funname":"getGeometry","Returntype":"(*Rect, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getIconFromWindow(win x.Window) string","Funname":"getIconFromWindow","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getMotifWmHints(xConn *x.Conn, win x.Window) (*MotifWmHints, error)","Funname":"getMotifWmHints","Returntype":"(*MotifWmHints, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getMotifWmHintsFromReply(reply *x.GetPropertyReply) (*MotifWmHints, error)","Funname":"getMotifWmHintsFromReply","Returntype":"(*MotifWmHints, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getUTF8StrFromReply(reply *x.GetPropertyReply) (string, error)","Funname":"getUTF8StrFromReply","Returntype":"(string, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getUTF8StrsFromReply(reply *x.GetPropertyReply) ([]string, error)","Funname":"getUTF8StrsFromReply","Returntype":"([]string, error)","Args":"reply *x.GetPropertyReply"},{"Uniquefunname":"func getWindowFlatpakAppID(win x.Window) string","Funname":"getWindowFlatpakAppID","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWindowFrameExtents(xConn *x.Conn, win x.Window) (*windowFrameExtents, error)","Funname":"getWindowFrameExtents","Returntype":"(*windowFrameExtents, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getWindowFromReply(r *x.GetPropertyReply) (x.Window, error)","Funname":"getWindowFromReply","Returntype":"(x.Window, error)","Args":"r *x.GetPropertyReply"},{"Uniquefunname":"func getWindowGeometry(xConn *x.Conn, win x.Window) (*Rect, error)","Funname":"getWindowGeometry","Returntype":"(*Rect, error)","Args":"xConn *x.Conn, win x.Window"},{"Uniquefunname":"func getWindowGtkApplicationId(win x.Window) string","Funname":"getWindowGtkApplicationId","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWindowPropertyString(win x.Window, atom x.Atom) (string, error)","Funname":"getWindowPropertyString","Returntype":"(string, error)","Args":"win x.Window, atom x.Atom"},{"Uniquefunname":"func getWindowUserTime(win x.Window) (uint, error)","Funname":"getWindowUserTime","Returntype":"(uint, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmClass(win x.Window) (*icccm.WMClass, error)","Funname":"getWmClass","Returntype":"(*icccm.WMClass, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmClientLeader(win x.Window) (x.Window, error)","Funname":"getWmClientLeader","Returntype":"(x.Window, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmCommand(win x.Window) ([]string, error)","Funname":"getWmCommand","Returntype":"([]string, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmName(win x.Window) string","Funname":"getWmName","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func getWmPid(win x.Window) uint","Funname":"getWmPid","Returntype":"uint","Args":"win x.Window"},{"Uniquefunname":"func getWmTransientFor(win x.Window) (x.Window, error)","Funname":"getWmTransientFor","Returntype":"(x.Window, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmWindowOpacity(win x.Window) (uint, error)","Funname":"getWmWindowOpacity","Returntype":"(uint, error)","Args":"win x.Window"},{"Uniquefunname":"func getWmWindowRole(win x.Window) string","Funname":"getWmWindowRole","Returntype":"string","Args":"win x.Window"},{"Uniquefunname":"func isGoodWindow(win x.Window) bool","Funname":"isGoodWindow","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func isHiddenPre(win x.Window) bool","Funname":"isHiddenPre","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func isWindowOnCurrentWorkspace(win x.Window) (bool, error)","Funname":"isWindowOnCurrentWorkspace","Returntype":"(bool, error)","Args":"win x.Window"},{"Uniquefunname":"func killClient(win x.Window)","Funname":"killClient","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func makeWindowAbove(win x.Window) error","Funname":"makeWindowAbove","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func maximizeWindow(win x.Window) error","Funname":"maximizeWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func minimizeWindow(win x.Window) error","Funname":"minimizeWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func moveWindow(win x.Window) error","Funname":"moveWindow","Returntype":"error","Args":"win x.Window"},{"Uniquefunname":"func onCurrentWorkspacePre(win x.Window) bool","Funname":"onCurrentWorkspacePre","Returntype":"bool","Args":"win x.Window"}],"Records":[{"Name":"const:dock","Fields":["dock.MotifFunctionAll","dock.MotifFunctionClose","dock.MotifFunctionMaximize","dock.MotifFunctionMinimize","dock.MotifFunctionMove","dock.MotifFunctionNone","dock.MotifFunctionResize","dock.MotifHintDecorations","dock.MotifHintFunctions","dock.MotifHintInputMode","dock.MotifHintStatus","dock.bestIconSize","dock.lengthMax"]},{"Name":"struct:dock.MotifWmHints","Fields":["dock.MotifWmHints.Decorations uint32","dock.MotifWmHints.Flags uint32","dock.MotifWmHints.Functions uint32","dock.MotifWmHints.InputMode int32","dock.MotifWmHints.Status uint32"]},{"Name":"struct:dock.windowFrameExtents","Fields":["dock.windowFrameExtents.Bottom uint","dock.windowFrameExtents.Left uint","dock.windowFrameExtents.Right uint","dock.windowFrameExtents.Top uint"]}]}
{"Filepath":"fprintd/device.go","Functions":[{"Uniquefunname":"func Add(objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop)Devices","Funname":"Add","Returntype":"Devices","Args":"objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func (dev *Device) Claim(username string) *dbus.Error","Funname":"Claim","Returntype":"*dbus.Error","Args":"username string"},{"Uniquefunname":"func (dev *Device) ClaimForce(sender dbus.Sender, username string) *dbus.Error","Funname":"ClaimForce","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (devList Devices) Delete(objPath dbus.ObjectPath) Devices","Funname":"Delete","Returntype":"Devices","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func DeleteEnrolledFinger(sender dbus.Sender, username string, finger string)*dbus.Error","Funname":"DeleteEnrolledFinger","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string, finger string"},{"Uniquefunname":"func (dev *Device) DeleteEnrolledFingers(sender dbus.Sender, username string) *dbus.Error","Funname":"DeleteEnrolledFingers","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *Device) EnrollStart(sender dbus.Sender, finger string) *dbus.Error","Funname":"EnrollStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func (dev *Device) EnrollStop(sender dbus.Sender) *dbus.Error","Funname":"EnrollStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (devList Devices) Get(objPath dbus.ObjectPath) IDevice","Funname":"Get","Returntype":"IDevice","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (dev *Device) GetCapabilities() ([]string, *dbus.Error)","Funname":"GetCapabilities","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Device) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (dev *Device) ListEnrolledFingers(username string) ([]string, *dbus.Error)","Funname":"ListEnrolledFingers","Returntype":"([]string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (dev *Device) Release() *dbus.Error","Funname":"Release","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (dev *Device) VerifyStart(finger string) *dbus.Error","Funname":"VerifyStart","Returntype":"*dbus.Error","Args":"finger string"},{"Uniquefunname":"func (dev *Device) VerifyStop() *dbus.Error","Funname":"VerifyStop","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func convertFPrintPath(objPath dbus.ObjectPath) dbus.ObjectPath","Funname":"convertFPrintPath","Returntype":"dbus.ObjectPath","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (dev *Device) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func destroyDevices(list Devices)","Funname":"destroyDevices","Returntype":"","Args":"list Devices"},{"Uniquefunname":"func (dev *Device) Claim(username string) *dbus.Error","Funname":"fprintd.Device.Claim","Returntype":"*dbus.Error","Args":"username string"},{"Uniquefunname":"func (dev *Device) ClaimForce(sender dbus.Sender, username string) *dbus.Error","Funname":"fprintd.Device.ClaimForce","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func fprintd.Device.DeleteEnrolledFinger(sender dbus.Sender, username string, finger string)*dbus.Error","Funname":"fprintd.Device.DeleteEnrolledFinger","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string, finger string"},{"Uniquefunname":"func (dev *Device) DeleteEnrolledFingers(sender dbus.Sender, username string) *dbus.Error","Funname":"fprintd.Device.DeleteEnrolledFingers","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *Device) EnrollStart(sender dbus.Sender, finger string) *dbus.Error","Funname":"fprintd.Device.EnrollStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func (dev *Device) EnrollStop(sender dbus.Sender) *dbus.Error","Funname":"fprintd.Device.EnrollStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *Device) GetCapabilities() ([]string, *dbus.Error)","Funname":"fprintd.Device.GetCapabilities","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Device) GetInterfaceName() string","Funname":"fprintd.Device.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (dev *Device) ListEnrolledFingers(username string) ([]string, *dbus.Error)","Funname":"fprintd.Device.ListEnrolledFingers","Returntype":"([]string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (dev *Device) Release() *dbus.Error","Funname":"fprintd.Device.Release","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (dev *Device) VerifyStart(finger string) *dbus.Error","Funname":"fprintd.Device.VerifyStart","Returntype":"*dbus.Error","Args":"finger string"},{"Uniquefunname":"func (dev *Device) VerifyStop() *dbus.Error","Funname":"fprintd.Device.VerifyStop","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (dev *Device) destroy()","Funname":"fprintd.Device.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (dev *Device) getCorePath() dbus.ObjectPath","Funname":"fprintd.Device.getCorePath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (dev *Device) getPath() dbus.ObjectPath","Funname":"fprintd.Device.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (dev *Device) isFree() (bool, error)","Funname":"fprintd.Device.isFree","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (dev *Device) listenDBusSignals(sigLoop *dbusutil.SignalLoop)","Funname":"fprintd.Device.listenDBusSignals","Returntype":"","Args":"sigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func fprintd.Devices.Add(objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop)Devices","Funname":"fprintd.Devices.Add","Returntype":"Devices","Args":"objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func (devList Devices) Delete(objPath dbus.ObjectPath) Devices","Funname":"fprintd.Devices.Delete","Returntype":"Devices","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (devList Devices) Get(objPath dbus.ObjectPath) IDevice","Funname":"fprintd.Devices.Get","Returntype":"IDevice","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func convertFPrintPath(objPath dbus.ObjectPath) dbus.ObjectPath","Funname":"fprintd.convertFPrintPath","Returntype":"dbus.ObjectPath","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func destroyDevices(list Devices)","Funname":"fprintd.destroyDevices","Returntype":"","Args":"list Devices"},{"Uniquefunname":"func fprintd.newDevice(objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop)*Device","Funname":"fprintd.newDevice","Returntype":"*Device","Args":"objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func (dev *Device) getCorePath() dbus.ObjectPath","Funname":"getCorePath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (dev *Device) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (dev *Device) isFree() (bool, error)","Funname":"isFree","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (dev *Device) listenDBusSignals(sigLoop *dbusutil.SignalLoop)","Funname":"listenDBusSignals","Returntype":"","Args":"sigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func newDevice(objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop)*Device","Funname":"newDevice","Returntype":"*Device","Args":"objPath dbus.ObjectPath, service *dbusutil.Service, systemSigLoop *dbusutil.SignalLoop"}],"Records":[{"Name":"struct:fprintd.Device","Fields":["fprintd.Device.ScanType string","fprintd.Device.core *fprint.Device","fprintd.Device.methods *deviceMethods","fprintd.Device.service *dbusutil.Service"]},{"Name":"interface","Fields":["fprintd.IDevice"]},{"Name":"const:fprintd","Fields":["fprintd.actionIdDelete","fprintd.actionIdEnroll"]},{"Name":"struct:fprintd.deviceMethods","Fields":["fprintd.deviceMethods.Claim func()","fprintd.deviceMethods.ClaimForce func()","fprintd.deviceMethods.DeleteEnrolledFinger func()","fprintd.deviceMethods.DeleteEnrolledFingers func()","fprintd.deviceMethods.EnrollStart func()","fprintd.deviceMethods.GetCapabilities func()","fprintd.deviceMethods.ListEnrolledFingers func()","fprintd.deviceMethods.VerifyStart func()"]},{"Name":"struct:fprintd.deviceSignals","Fields":["fprintd.deviceSignals.EnrollStatus struct { status string; done bool; }","fprintd.deviceSignals.VerifyFingerSelected struct { finger string; }","fprintd.deviceSignals.VerifyStatus struct { status string; done bool; }"]}]}
{"Filepath":"fprintd/fprintd.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"fprintd.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"fprintd.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"fprintd.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"fprintd.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func init()","Funname":"fprintd.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:fprintd.Daemon","Fields":["fprintd.Daemon.manager *Manager"]},{"Name":"var:fprintd","Fields":["fprintd.logger"]}]}
{"Filepath":"fprintd/fprintd_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedDevices(value []dbus.ObjectPath) error","Funname":"emitPropChangedDevices","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Manager) emitPropChangedDevices(value []dbus.ObjectPath) error","Funname":"fprintd.Manager.emitPropChangedDevices","Returntype":"error","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Manager) setPropDevices(value []dbus.ObjectPath)","Funname":"fprintd.Manager.setPropDevices","Returntype":"","Args":"value []dbus.ObjectPath"},{"Uniquefunname":"func (v *Manager) setPropDevices(value []dbus.ObjectPath)","Funname":"setPropDevices","Returntype":"","Args":"value []dbus.ObjectPath"}],"Records":null}
{"Filepath":"fprintd/huawei_device.go","Functions":[{"Uniquefunname":"func (dev *HuaweiDevice) Claim(sender dbus.Sender, username string) *dbus.Error","Funname":"Claim","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) ClaimForce(sender dbus.Sender, username string) *dbus.Error","Funname":"ClaimForce","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func DeleteEnrolledFinger(sender dbus.Sender, username, finger string)*dbus.Error","Funname":"DeleteEnrolledFinger","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username, finger string"},{"Uniquefunname":"func DeleteEnrolledFingers(sender dbus.Sender, username string)*dbus.Error","Funname":"DeleteEnrolledFingers","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) EnrollStart(sender dbus.Sender, finger string) *dbus.Error","Funname":"EnrollStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) EnrollStop(sender dbus.Sender) *dbus.Error","Funname":"EnrollStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) GetCapabilities() ([]string, *dbus.Error)","Funname":"GetCapabilities","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*HuaweiDevice) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) ListEnrolledFingers(username string) ([]string, *dbus.Error)","Funname":"ListEnrolledFingers","Returntype":"([]string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (dev *HuaweiDevice) Release(sender dbus.Sender) *dbus.Error","Funname":"Release","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) VerifyStart(sender dbus.Sender, _finger string) *dbus.Error","Funname":"VerifyStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, _finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) VerifyStop(sender dbus.Sender) *dbus.Error","Funname":"VerifyStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) checkClaimed(sender dbus.Sender) (userUuid string, err error)","Funname":"checkClaimed","Returntype":"(userUuid string, err error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) claim(sender, username string) error","Funname":"claim","Returntype":"error","Args":"sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) claimForce(sender, username string) error","Funname":"claimForce","Returntype":"error","Args":"sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) close() error","Funname":"close","Returntype":"error","Args":""},{"Uniquefunname":"func deleteEnrolledFinger(sender dbus.Sender, username, finger string)error","Funname":"deleteEnrolledFinger","Returntype":"error","Args":"sender dbus.Sender, username, finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) deleteEnrolledFingers(sender dbus.Sender, username string) error","Funname":"deleteEnrolledFingers","Returntype":"error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (d *HuaweiDevice) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) doClose() error","Funname":"doClose","Returntype":"error","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) emitSignalEnrollStatus(status string, done bool)","Funname":"emitSignalEnrollStatus","Returntype":"","Args":"status string, done bool"},{"Uniquefunname":"func (dev *HuaweiDevice) emitSignalVerifyStatus(status string, done bool)","Funname":"emitSignalVerifyStatus","Returntype":"","Args":"status string, done bool"},{"Uniquefunname":"func (dev *HuaweiDevice) enrollStart(sender dbus.Sender, finger string) error","Funname":"enrollStart","Returntype":"error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func ensureHuaweiFprintDir(userUuid string) (dir string, err error)","Funname":"ensureHuaweiFprintDir","Returntype":"(dir string, err error)","Args":"userUuid string"},{"Uniquefunname":"func (dev *HuaweiDevice) Claim(sender dbus.Sender, username string) *dbus.Error","Funname":"fprintd.HuaweiDevice.Claim","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) ClaimForce(sender dbus.Sender, username string) *dbus.Error","Funname":"fprintd.HuaweiDevice.ClaimForce","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func fprintd.HuaweiDevice.DeleteEnrolledFinger(sender dbus.Sender, username, finger string)*dbus.Error","Funname":"fprintd.HuaweiDevice.DeleteEnrolledFinger","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username, finger string"},{"Uniquefunname":"func fprintd.HuaweiDevice.DeleteEnrolledFingers(sender dbus.Sender, username string)*dbus.Error","Funname":"fprintd.HuaweiDevice.DeleteEnrolledFingers","Returntype":"*dbus.Error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) EnrollStart(sender dbus.Sender, finger string) *dbus.Error","Funname":"fprintd.HuaweiDevice.EnrollStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) EnrollStop(sender dbus.Sender) *dbus.Error","Funname":"fprintd.HuaweiDevice.EnrollStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) GetCapabilities() ([]string, *dbus.Error)","Funname":"fprintd.HuaweiDevice.GetCapabilities","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*HuaweiDevice) GetInterfaceName() string","Funname":"fprintd.HuaweiDevice.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) ListEnrolledFingers(username string) ([]string, *dbus.Error)","Funname":"fprintd.HuaweiDevice.ListEnrolledFingers","Returntype":"([]string, *dbus.Error)","Args":"username string"},{"Uniquefunname":"func (dev *HuaweiDevice) Release(sender dbus.Sender) *dbus.Error","Funname":"fprintd.HuaweiDevice.Release","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) VerifyStart(sender dbus.Sender, _finger string) *dbus.Error","Funname":"fprintd.HuaweiDevice.VerifyStart","Returntype":"*dbus.Error","Args":"sender dbus.Sender, _finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) VerifyStop(sender dbus.Sender) *dbus.Error","Funname":"fprintd.HuaweiDevice.VerifyStop","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) checkClaimed(sender dbus.Sender) (userUuid string, err error)","Funname":"fprintd.HuaweiDevice.checkClaimed","Returntype":"(userUuid string, err error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) claim(sender, username string) error","Funname":"fprintd.HuaweiDevice.claim","Returntype":"error","Args":"sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) claimForce(sender, username string) error","Funname":"fprintd.HuaweiDevice.claimForce","Returntype":"error","Args":"sender, username string"},{"Uniquefunname":"func (dev *HuaweiDevice) close() error","Funname":"fprintd.HuaweiDevice.close","Returntype":"error","Args":""},{"Uniquefunname":"func fprintd.HuaweiDevice.deleteEnrolledFinger(sender dbus.Sender, username, finger string)error","Funname":"fprintd.HuaweiDevice.deleteEnrolledFinger","Returntype":"error","Args":"sender dbus.Sender, username, finger string"},{"Uniquefunname":"func (dev *HuaweiDevice) deleteEnrolledFingers(sender dbus.Sender, username string) error","Funname":"fprintd.HuaweiDevice.deleteEnrolledFingers","Returntype":"error","Args":"sender dbus.Sender, username string"},{"Uniquefunname":"func (d *HuaweiDevice) destroy()","Funname":"fprintd.HuaweiDevice.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) doClose() error","Funname":"fprintd.HuaweiDevice.doClose","Returntype":"error","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) emitSignalEnrollStatus(status string, done bool)","Funname":"fprintd.HuaweiDevice.emitSignalEnrollStatus","Returntype":"","Args":"status string, done bool"},{"Uniquefunname":"func (dev *HuaweiDevice) emitSignalVerifyStatus(status string, done bool)","Funname":"fprintd.HuaweiDevice.emitSignalVerifyStatus","Returntype":"","Args":"status string, done bool"},{"Uniquefunname":"func (dev *HuaweiDevice) enrollStart(sender dbus.Sender, finger string) error","Funname":"fprintd.HuaweiDevice.enrollStart","Returntype":"error","Args":"sender dbus.Sender, finger string"},{"Uniquefunname":"func (d *HuaweiDevice) getCorePath() dbus.ObjectPath","Funname":"fprintd.HuaweiDevice.getCorePath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (d *HuaweiDevice) getPath() dbus.ObjectPath","Funname":"fprintd.HuaweiDevice.getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) handleNameLost(name string)","Funname":"fprintd.HuaweiDevice.handleNameLost","Returntype":"","Args":"name string"},{"Uniquefunname":"func (dev *HuaweiDevice) handleSignalEnrollStatus(progress int32, result int32)","Funname":"fprintd.HuaweiDevice.handleSignalEnrollStatus","Returntype":"","Args":"progress int32, result int32"},{"Uniquefunname":"func (dev *HuaweiDevice) handleSignalIdentifyStatus(result int32)","Funname":"fprintd.HuaweiDevice.handleSignalIdentifyStatus","Returntype":"","Args":"result int32"},{"Uniquefunname":"func (dev *HuaweiDevice) isFree() (bool, error)","Funname":"fprintd.HuaweiDevice.isFree","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) listEnrolledFingers(username string) ([]string, error)","Funname":"fprintd.HuaweiDevice.listEnrolledFingers","Returntype":"([]string, error)","Args":"username string"},{"Uniquefunname":"func (dev *HuaweiDevice) release(sender string) error","Funname":"fprintd.HuaweiDevice.release","Returntype":"error","Args":"sender string"},{"Uniquefunname":"func (dev *HuaweiDevice) releaseAux()","Funname":"fprintd.HuaweiDevice.releaseAux","Returntype":"","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) stop(sender dbus.Sender) error","Funname":"fprintd.HuaweiDevice.stop","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) verifyStart(sender dbus.Sender) error","Funname":"fprintd.HuaweiDevice.verifyStart","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func ensureHuaweiFprintDir(userUuid string) (dir string, err error)","Funname":"fprintd.ensureHuaweiFprintDir","Returntype":"(dir string, err error)","Args":"userUuid string"},{"Uniquefunname":"func getUserUuid(username string) (string, error)","Funname":"fprintd.getUserUuid","Returntype":"(string, error)","Args":"username string"},{"Uniquefunname":"func (d *HuaweiDevice) getCorePath() dbus.ObjectPath","Funname":"getCorePath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (d *HuaweiDevice) getPath() dbus.ObjectPath","Funname":"getPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func getUserUuid(username string) (string, error)","Funname":"getUserUuid","Returntype":"(string, error)","Args":"username string"},{"Uniquefunname":"func (dev *HuaweiDevice) handleNameLost(name string)","Funname":"handleNameLost","Returntype":"","Args":"name string"},{"Uniquefunname":"func (dev *HuaweiDevice) handleSignalEnrollStatus(progress int32, result int32)","Funname":"handleSignalEnrollStatus","Returntype":"","Args":"progress int32, result int32"},{"Uniquefunname":"func (dev *HuaweiDevice) handleSignalIdentifyStatus(result int32)","Funname":"handleSignalIdentifyStatus","Returntype":"","Args":"result int32"},{"Uniquefunname":"func (dev *HuaweiDevice) isFree() (bool, error)","Funname":"isFree","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) listEnrolledFingers(username string) ([]string, error)","Funname":"listEnrolledFingers","Returntype":"([]string, error)","Args":"username string"},{"Uniquefunname":"func (dev *HuaweiDevice) release(sender string) error","Funname":"release","Returntype":"error","Args":"sender string"},{"Uniquefunname":"func (dev *HuaweiDevice) releaseAux()","Funname":"releaseAux","Returntype":"","Args":""},{"Uniquefunname":"func (dev *HuaweiDevice) stop(sender dbus.Sender) error","Funname":"stop","Returntype":"error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (dev *HuaweiDevice) verifyStart(sender dbus.Sender) error","Funname":"verifyStart","Returntype":"error","Args":"sender dbus.Sender"}],"Records":[{"Name":"struct:fprintd.HuaweiDevice","Fields":["fprintd.HuaweiDevice.ScanType string","fprintd.HuaweiDevice.claimed bool","fprintd.HuaweiDevice.core *huawei_fprint.Fingerprint","fprintd.HuaweiDevice.methods *deviceMethods","fprintd.HuaweiDevice.mu sync.Mutex","fprintd.HuaweiDevice.sender string","fprintd.HuaweiDevice.service *dbusutil.Service","fprintd.HuaweiDevice.userUuid string","fprintd.HuaweiDevice.username string"]},{"Name":"const:fprintd","Fields":["fprintd.fprintdEnrollStatusCompleted","fprintd.fprintdEnrollStatusFailed","fprintd.fprintdEnrollStatusRetryScan","fprintd.fprintdEnrollStatusStagePassed","fprintd.fprintdVerifyStatusMatch","fprintd.fprintdVerifyStatusNoMatch","fprintd.fprintdVerifyStatusUnknownError","fprintd.huaweiDevicePath","fprintd.huaweiDeviceStatusBusy"]},{"Name":"var:fprintd","Fields":["fprintd.fprintdFingerprintNames"]}]}
{"Filepath":"fprintd/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) GetDefaultDevice() (dbus.ObjectPath, *dbus.Error)","Funname":"GetDefaultDevice","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetDevices() ([]dbus.ObjectPath, *dbus.Error)","Funname":"GetDevices","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) PreAuthEnroll(sender dbus.Sender) *dbus.Error","Funname":"PreAuthEnroll","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) TriggerUDevEvent(sender dbus.Sender) *dbus.Error","Funname":"TriggerUDevEvent","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) addDevice(objPath dbus.ObjectPath)","Funname":"addDevice","Returntype":"","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addHuaweiDevice()","Funname":"addHuaweiDevice","Returntype":"","Args":""},{"Uniquefunname":"func checkAuth(actionId string, busName string) error","Funname":"checkAuth","Returntype":"error","Args":"actionId string, busName string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) GetDefaultDevice() (dbus.ObjectPath, *dbus.Error)","Funname":"fprintd.Manager.GetDefaultDevice","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetDevices() ([]dbus.ObjectPath, *dbus.Error)","Funname":"fprintd.Manager.GetDevices","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"fprintd.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) PreAuthEnroll(sender dbus.Sender) *dbus.Error","Funname":"fprintd.Manager.PreAuthEnroll","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) TriggerUDevEvent(sender dbus.Sender) *dbus.Error","Funname":"fprintd.Manager.TriggerUDevEvent","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) addDevice(objPath dbus.ObjectPath)","Funname":"fprintd.Manager.addDevice","Returntype":"","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addHuaweiDevice()","Funname":"fprintd.Manager.addHuaweiDevice","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"fprintd.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getDefaultDeviceInter() (IDevice, error)","Funname":"fprintd.Manager.getDefaultDeviceInter","Returntype":"(IDevice, error)","Args":""},{"Uniquefunname":"func (m *Manager) hasHuaweiDevice() (has bool, err error)","Funname":"fprintd.Manager.hasHuaweiDevice","Returntype":"(has bool, err error)","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"fprintd.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenDBusSignals()","Funname":"fprintd.Manager.listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) refreshDeviceHuawei() error","Funname":"fprintd.Manager.refreshDeviceHuawei","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) refreshDevices()","Funname":"fprintd.Manager.refreshDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) refreshDevicesFprintd() error","Funname":"fprintd.Manager.refreshDevicesFprintd","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) updatePropDevices()","Funname":"fprintd.Manager.updatePropDevices","Returntype":"","Args":""},{"Uniquefunname":"func checkAuth(actionId string, busName string) error","Funname":"fprintd.checkAuth","Returntype":"error","Args":"actionId string, busName string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"fprintd.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func restartSystemdService(name, mode string) error","Funname":"fprintd.restartSystemdService","Returntype":"error","Args":"name, mode string"},{"Uniquefunname":"func (m *Manager) getDefaultDeviceInter() (IDevice, error)","Funname":"getDefaultDeviceInter","Returntype":"(IDevice, error)","Args":""},{"Uniquefunname":"func (m *Manager) hasHuaweiDevice() (has bool, err error)","Funname":"hasHuaweiDevice","Returntype":"(has bool, err error)","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenDBusSignals()","Funname":"listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) refreshDeviceHuawei() error","Funname":"refreshDeviceHuawei","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) refreshDevices()","Funname":"refreshDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) refreshDevicesFprintd() error","Funname":"refreshDevicesFprintd","Returntype":"error","Args":""},{"Uniquefunname":"func restartSystemdService(name, mode string) error","Funname":"restartSystemdService","Returntype":"error","Args":"name, mode string"},{"Uniquefunname":"func (m *Manager) updatePropDevices()","Funname":"updatePropDevices","Returntype":"","Args":""}],"Records":[{"Name":"struct:fprintd.Manager","Fields":["fprintd.Manager.Devices []dbus.ObjectPath","fprintd.Manager.PropsMu sync.RWMutex","fprintd.Manager.dbusDaemon *ofdbus.DBus","fprintd.Manager.devices Devices","fprintd.Manager.devicesMu sync.Mutex","fprintd.Manager.fprintCh chan struct{}","fprintd.Manager.fprintManager *fprint.Manager","fprintd.Manager.huaweiDevice *HuaweiDevice","fprintd.Manager.huaweiFprint *huawei_fprint.Fingerprint","fprintd.Manager.methods *struct { GetDefaultDevice func() `out:\"device\"`; GetDevices func() `out:\"devices\"`; }","fprintd.Manager.service *dbusutil.Service","fprintd.Manager.sysSigLoop *dbusutil.SignalLoop"]},{"Name":"const:fprintd","Fields":["fprintd.dbusDeviceInterface","fprintd.dbusInterface","fprintd.dbusPath","fprintd.dbusServiceName","fprintd.systemdDBusInterface","fprintd.systemdDBusPath","fprintd.systemdDBusServiceName"]},{"Name":"var:fprintd","Fields":["fprintd.errAuthFailed"]}]}
{"Filepath":"fprintd/common/common.go","Functions":[{"Uniquefunname":"func DeleteEnrolledFingers(username, userUuid string) error","Funname":"DeleteEnrolledFingers","Returntype":"error","Args":"username, userUuid string"},{"Uniquefunname":"func DeleteEnrolledFingers(username, userUuid string) error","Funname":"common.DeleteEnrolledFingers","Returntype":"error","Args":"username, userUuid string"}],"Records":[{"Name":"const:common","Fields":["common.HuaweiDeleteTypeAll","common.HuaweiDeleteTypeOne","common.HuaweiFprintDir","common.fprintdDir"]}]}
{"Filepath":"gesture/built-in.go","Functions":[{"Uniquefunname":"func (m *Manager) doHandle4Or5FingersSwipeDown() error","Funname":"doHandle4Or5FingersSwipeDown","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doHandle4Or5FingersSwipeUp() error","Funname":"doHandle4Or5FingersSwipeUp","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doMinimize() error","Funname":"doMinimize","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doMoveActiveWindow() error","Funname":"doMoveActiveWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doReverseSwitchApplication() error","Funname":"doReverseSwitchApplication","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doReverseSwitchWorkspace() error","Funname":"doReverseSwitchWorkspace","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doShowAllWindow() error","Funname":"doShowAllWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doShowWindow() error","Funname":"doShowWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doSwitchApplication() error","Funname":"doSwitchApplication","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doSwitchWorkspace() error","Funname":"doSwitchWorkspace","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doTileActiveWindowLeft() error","Funname":"doTileActiveWindowLeft","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doTileActiveWindowRight() error","Funname":"doTileActiveWindowRight","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doToggleMaximize() error","Funname":"doToggleMaximize","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doHandle4Or5FingersSwipeDown() error","Funname":"gesture.Manager.doHandle4Or5FingersSwipeDown","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doHandle4Or5FingersSwipeUp() error","Funname":"gesture.Manager.doHandle4Or5FingersSwipeUp","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doMinimize() error","Funname":"gesture.Manager.doMinimize","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doMoveActiveWindow() error","Funname":"gesture.Manager.doMoveActiveWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doReverseSwitchApplication() error","Funname":"gesture.Manager.doReverseSwitchApplication","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doReverseSwitchWorkspace() error","Funname":"gesture.Manager.doReverseSwitchWorkspace","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doShowAllWindow() error","Funname":"gesture.Manager.doShowAllWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doShowWindow() error","Funname":"gesture.Manager.doShowWindow","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doSwitchApplication() error","Funname":"gesture.Manager.doSwitchApplication","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doSwitchWorkspace() error","Funname":"gesture.Manager.doSwitchWorkspace","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doTileActiveWindowLeft() error","Funname":"gesture.Manager.doTileActiveWindowLeft","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doTileActiveWindowRight() error","Funname":"gesture.Manager.doTileActiveWindowRight","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) doToggleMaximize() error","Funname":"gesture.Manager.doToggleMaximize","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initBuiltinSets()","Funname":"gesture.Manager.initBuiltinSets","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) toggleShowDesktop() error","Funname":"gesture.Manager.toggleShowDesktop","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) toggleShowMultiTasking() error","Funname":"gesture.Manager.toggleShowMultiTasking","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initBuiltinSets()","Funname":"initBuiltinSets","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) toggleShowDesktop() error","Funname":"toggleShowDesktop","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) toggleShowMultiTasking() error","Funname":"toggleShowMultiTasking","Returntype":"error","Args":""}],"Records":[{"Name":"const:gesture","Fields":["gesture.wmActionMinimize","gesture.wmActionShowAllWindow","gesture.wmActionShowWindow","gesture.wmActionShowWorkspace","gesture.wmActionToggleMaximize","gesture.wmTileDirectionLeft","gesture.wmTileDirectionRight"]}]}
{"Filepath":"gesture/config.go","Functions":[{"Uniquefunname":"func (infos gestureInfos) Get(name, direction string, fingers int32) *gestureInfo","Funname":"Get","Returntype":"*gestureInfo","Args":"name, direction string, fingers int32"},{"Uniquefunname":"func (infos gestureInfos) Set(name, direction string, fingers int32, action ActionInfo) error","Funname":"Set","Returntype":"error","Args":"name, direction string, fingers int32, action ActionInfo"},{"Uniquefunname":"func (infos gestureInfos) Get(name, direction string, fingers int32) *gestureInfo","Funname":"gesture.gestureInfos.Get","Returntype":"*gestureInfo","Args":"name, direction string, fingers int32"},{"Uniquefunname":"func (infos gestureInfos) Set(name, direction string, fingers int32, action ActionInfo) error","Funname":"gesture.gestureInfos.Set","Returntype":"error","Args":"name, direction string, fingers int32, action ActionInfo"},{"Uniquefunname":"func newGestureInfosFromFile(filename string) (gestureInfos, error)","Funname":"gesture.newGestureInfosFromFile","Returntype":"(gestureInfos, error)","Args":"filename string"},{"Uniquefunname":"func newGestureInfosFromFile(filename string) (gestureInfos, error)","Funname":"newGestureInfosFromFile","Returntype":"(gestureInfos, error)","Args":"filename string"}],"Records":[{"Name":"struct:gesture.ActionInfo","Fields":["gesture.ActionInfo.Action string","gesture.ActionInfo.Type string"]},{"Name":"const:gesture","Fields":["gesture.ActionTypeBuiltin","gesture.ActionTypeCommandline","gesture.ActionTypeShortcut"]},{"Name":"var:gesture","Fields":["gesture.configSystemPath","gesture.configUserPath","gesture.gestureSchemaId","gesture.gsKeyEnabled"]},{"Name":"struct:gesture.gestureInfo","Fields":["gesture.gestureInfo.Action ActionInfo","gesture.gestureInfo.Direction string","gesture.gestureInfo.Fingers int32","gesture.gestureInfo.Name string"]}]}
{"Filepath":"gesture/config_test.go","Functions":[{"Uniquefunname":"func Test_Get(t *testing.T)","Funname":"Test_Get","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_Set(t *testing.T)","Funname":"Test_Set","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_newGestureInfosFromFile(t *testing.T)","Funname":"Test_newGestureInfosFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func findGestureInfo(name, direction string, fingers int32, infos gestureInfos) bool","Funname":"findGestureInfo","Returntype":"bool","Args":"name, direction string, fingers int32, infos gestureInfos"},{"Uniquefunname":"func Test_Get(t *testing.T)","Funname":"gesture.Test_Get","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_Set(t *testing.T)","Funname":"gesture.Test_Set","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_newGestureInfosFromFile(t *testing.T)","Funname":"gesture.Test_newGestureInfosFromFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func findGestureInfo(name, direction string, fingers int32, infos gestureInfos) bool","Funname":"gesture.findGestureInfo","Returntype":"bool","Args":"name, direction string, fingers int32, infos gestureInfos"}],"Records":[{"Name":"var:gesture","Fields":["gesture.configPath"]}]}
{"Filepath":"gesture/daemon.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"gesture.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"gesture.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"gesture.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"gesture.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func init()","Funname":"gesture.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:gesture.Daemon","Fields":["gesture.Daemon.manager *Manager"]},{"Name":"const:gesture","Fields":["gesture.dbusServiceIFC","gesture.dbusServiceName","gesture.dbusServicePath"]},{"Name":"var:gesture","Fields":["gesture.logger"]}]}
{"Filepath":"gesture/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) Exec(name, direction string, fingers int32) error","Funname":"Exec","Returntype":"error","Args":"name, direction string, fingers int32"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Write() error","Funname":"Write","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) Exec(name, direction string, fingers int32) error","Funname":"gesture.Manager.Exec","Returntype":"error","Args":"name, direction string, fingers int32"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"gesture.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Write() error","Funname":"gesture.Manager.Write","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"gesture.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleBuiltinAction(cmd string) error","Funname":"gesture.Manager.handleBuiltinAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func (m *Manager) handleDbclickDown(fingers int32) error","Funname":"gesture.Manager.handleDbclickDown","Returntype":"error","Args":"fingers int32"},{"Uniquefunname":"func (m *Manager) handleSwipeMoving(fingers int32, accelX float64, accelY float64) error","Funname":"gesture.Manager.handleSwipeMoving","Returntype":"error","Args":"fingers int32, accelX float64, accelY float64"},{"Uniquefunname":"func (m *Manager) handleSwipeStop(fingers int32) error","Funname":"gesture.Manager.handleSwipeStop","Returntype":"error","Args":"fingers int32"},{"Uniquefunname":"func (m *Manager) handleTouchEdgeEvent(edge string, scaleX float64, scaleY float64) error","Funname":"gesture.Manager.handleTouchEdgeEvent","Returntype":"error","Args":"edge string, scaleX float64, scaleY float64"},{"Uniquefunname":"func gesture.Manager.handleTouchEdgeMoveStopLeave(edge string, scaleX float64, scaleY float64, duration int32)error","Funname":"gesture.Manager.handleTouchEdgeMoveStopLeave","Returntype":"error","Args":"edge string, scaleX float64, scaleY float64, duration int32"},{"Uniquefunname":"func (*Manager) handleTouchScreenEvent(info *gestureInfo) error","Funname":"gesture.Manager.handleTouchScreenEvent","Returntype":"error","Args":"info *gestureInfo"},{"Uniquefunname":"func (m *Manager) init()","Funname":"gesture.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenGSettingsChanged()","Funname":"gesture.Manager.listenGSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func newManager() (*Manager, error)","Funname":"gesture.newManager","Returntype":"(*Manager, error)","Args":""},{"Uniquefunname":"func (m *Manager) handleBuiltinAction(cmd string) error","Funname":"handleBuiltinAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func (m *Manager) handleDbclickDown(fingers int32) error","Funname":"handleDbclickDown","Returntype":"error","Args":"fingers int32"},{"Uniquefunname":"func (m *Manager) handleSwipeMoving(fingers int32, accelX float64, accelY float64) error","Funname":"handleSwipeMoving","Returntype":"error","Args":"fingers int32, accelX float64, accelY float64"},{"Uniquefunname":"func (m *Manager) handleSwipeStop(fingers int32) error","Funname":"handleSwipeStop","Returntype":"error","Args":"fingers int32"},{"Uniquefunname":"func (m *Manager) handleTouchEdgeEvent(edge string, scaleX float64, scaleY float64) error","Funname":"handleTouchEdgeEvent","Returntype":"error","Args":"edge string, scaleX float64, scaleY float64"},{"Uniquefunname":"func handleTouchEdgeMoveStopLeave(edge string, scaleX float64, scaleY float64, duration int32)error","Funname":"handleTouchEdgeMoveStopLeave","Returntype":"error","Args":"edge string, scaleX float64, scaleY float64, duration int32"},{"Uniquefunname":"func (*Manager) handleTouchScreenEvent(info *gestureInfo) error","Funname":"handleTouchScreenEvent","Returntype":"error","Args":"info *gestureInfo"},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenGSettingsChanged()","Funname":"listenGSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func newManager() (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":""}],"Records":[{"Name":"struct:gesture.Manager","Fields":["gesture.Manager.Infos gestureInfos","gesture.Manager.builtinSets map[string]func() error","gesture.Manager.display *display.Display","gesture.Manager.dock *dock.Dock","gesture.Manager.enabled bool","gesture.Manager.gesture *gesture.Gesture","gesture.Manager.methods *struct { SetLongPressDuration func() `in:\"duration\"`; GetLongPressDuration func() `out:\"duration\"`; SetShortPressDuration func() `in:\"duration\"`; GetShortPressDuration func() `out:\"duration\"`; SetEdgeMoveStopDuration func() `in:\"duration\"`; GetEdgeMoveStopDuration func() `out:\"duration\"`; }","gesture.Manager.mu sync.RWMutex","gesture.Manager.sessionmanager *sessionmanager.SessionManager","gesture.Manager.setting *gio.Settings","gesture.Manager.sysDaemon *daemon.Daemon","gesture.Manager.systemSigLoop *dbusutil.SignalLoop","gesture.Manager.tsSetting *gio.Settings","gesture.Manager.userFile string","gesture.Manager.wm *wm.Wm"]},{"Name":"const:gesture","Fields":["gesture.tsSchemaID","gesture.tsSchemaKeyBlacklist","gesture.tsSchemaKeyEdgeMoveStop","gesture.tsSchemaKeyLongPress","gesture.tsSchemaKeyShortPress"]}]}
{"Filepath":"gesture/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) GetEdgeMoveStopDuration() (uint32, *dbus.Error)","Funname":"GetEdgeMoveStopDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetLongPressDuration() (uint32, *dbus.Error)","Funname":"GetLongPressDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetShortPressDuration() (uint32, *dbus.Error)","Funname":"GetShortPressDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) SetEdgeMoveStopDuration(duration uint32) *dbus.Error","Funname":"SetEdgeMoveStopDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (m *Manager) SetLongPressDuration(duration uint32) *dbus.Error","Funname":"SetLongPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (m *Manager) SetShortPressDuration(duration uint32) *dbus.Error","Funname":"SetShortPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (m *Manager) GetEdgeMoveStopDuration() (uint32, *dbus.Error)","Funname":"gesture.Manager.GetEdgeMoveStopDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetLongPressDuration() (uint32, *dbus.Error)","Funname":"gesture.Manager.GetLongPressDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetShortPressDuration() (uint32, *dbus.Error)","Funname":"gesture.Manager.GetShortPressDuration","Returntype":"(uint32, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) SetEdgeMoveStopDuration(duration uint32) *dbus.Error","Funname":"gesture.Manager.SetEdgeMoveStopDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (m *Manager) SetLongPressDuration(duration uint32) *dbus.Error","Funname":"gesture.Manager.SetLongPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"},{"Uniquefunname":"func (m *Manager) SetShortPressDuration(duration uint32) *dbus.Error","Funname":"gesture.Manager.SetShortPressDuration","Returntype":"*dbus.Error","Args":"duration uint32"}],"Records":null}
{"Filepath":"gesture/utils.go","Functions":[{"Uniquefunname":"func getCurrentActionWindowCmd() string","Funname":"gesture.getCurrentActionWindowCmd","Returntype":"string","Args":""},{"Uniquefunname":"func getX11Conn() *x.Conn","Funname":"gesture.getX11Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func isInWindowBlacklist(cmd string, list []string) bool","Funname":"gesture.isInWindowBlacklist","Returntype":"bool","Args":"cmd string, list []string"},{"Uniquefunname":"func isKbdAlreadyGrabbed() bool","Funname":"gesture.isKbdAlreadyGrabbed","Returntype":"bool","Args":""},{"Uniquefunname":"func isSessionActive(sessionPath dbus.ObjectPath) bool","Funname":"gesture.isSessionActive","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"},{"Uniquefunname":"func getCurrentActionWindowCmd() string","Funname":"getCurrentActionWindowCmd","Returntype":"string","Args":""},{"Uniquefunname":"func getX11Conn() *x.Conn","Funname":"getX11Conn","Returntype":"*x.Conn","Args":""},{"Uniquefunname":"func isInWindowBlacklist(cmd string, list []string) bool","Funname":"isInWindowBlacklist","Returntype":"bool","Args":"cmd string, list []string"},{"Uniquefunname":"func isKbdAlreadyGrabbed() bool","Funname":"isKbdAlreadyGrabbed","Returntype":"bool","Args":""},{"Uniquefunname":"func isSessionActive(sessionPath dbus.ObjectPath) bool","Funname":"isSessionActive","Returntype":"bool","Args":"sessionPath dbus.ObjectPath"}],"Records":[{"Name":"struct:gesture.Rect","Fields":["gesture.Rect.Height uint32","gesture.Rect.Width uint32","gesture.Rect.X int32","gesture.Rect.Y int32"]},{"Name":"var:gesture","Fields":["gesture._dconn","gesture._self","gesture.xconn"]},{"Name":"const:gesture","Fields":["gesture.positionBottom","gesture.positionLeft","gesture.positionRight","gesture.positionTop"]}]}
{"Filepath":"gesture/utils_test.go","Functions":[{"Uniquefunname":"func Test_isInWindowBlacklist(t *testing.T)","Funname":"Test_isInWindowBlacklist","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_isInWindowBlacklist(t *testing.T)","Funname":"gesture.Test_isInWindowBlacklist","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"graph/clone.go","Functions":[{"Uniquefunname":"func (d *Data) Clone() *Data","Funname":"Clone","Returntype":"*Data","Args":""},{"Uniquefunname":"func (d *Data) cloneDfs(src *Node, clonedData *Data)","Funname":"cloneDfs","Returntype":"","Args":"src *Node, clonedData *Data"},{"Uniquefunname":"func (d *Data) Clone() *Data","Funname":"graph.Data.Clone","Returntype":"*Data","Args":""},{"Uniquefunname":"func (d *Data) cloneDfs(src *Node, clonedData *Data)","Funname":"graph.Data.cloneDfs","Returntype":"","Args":"src *Node, clonedData *Data"}],"Records":null}
{"Filepath":"graph/edge.go","Functions":[{"Uniquefunname":"func (d *Data) GetEdges() []Edge","Funname":"GetEdges","Returntype":"[]Edge","Args":""},{"Uniquefunname":"func (d *Data) GetEdges() []Edge","Funname":"graph.Data.GetEdges","Returntype":"[]Edge","Args":""}],"Records":[{"Name":"struct:graph.Edge","Fields":["graph.Edge.Dst *Node","graph.Edge.Src *Node","graph.Edge.Weight float32"]}]}
{"Filepath":"graph/graph.go","Functions":[{"Uniquefunname":"func (d *Data) AddNode(nd *Node) bool","Funname":"AddNode","Returntype":"bool","Args":"nd *Node"},{"Uniquefunname":"func (d *Data) Connect(src, dst *Node, weight float32)","Funname":"Connect","Returntype":"","Args":"src, dst *Node, weight float32"},{"Uniquefunname":"func (d *Data) DeleteEdge(src, dst *Node)","Funname":"DeleteEdge","Returntype":"","Args":"src, dst *Node"},{"Uniquefunname":"func (d *Data) DeleteNode(nd *Node)","Funname":"DeleteNode","Returntype":"","Args":"nd *Node"},{"Uniquefunname":"func (l Nodes) Get(id string) *Node","Funname":"Get","Returntype":"*Node","Args":"id string"},{"Uniquefunname":"func (d *Data) GetEdgeWeight(src, dst *Node) float32","Funname":"GetEdgeWeight","Returntype":"float32","Args":"src, dst *Node"},{"Uniquefunname":"func (d *Data) GetNodeByID(id string) *Node","Funname":"GetNodeByID","Returntype":"*Node","Args":"id string"},{"Uniquefunname":"func (d *Data) GetNodeSize() int","Funname":"GetNodeSize","Returntype":"int","Args":""},{"Uniquefunname":"func (d *Data) Init()","Funname":"Init","Returntype":"","Args":""},{"Uniquefunname":"func New() *Data","Funname":"New","Returntype":"*Data","Args":""},{"Uniquefunname":"func NewNode(id string) *Node","Funname":"NewNode","Returntype":"*Node","Args":"id string"},{"Uniquefunname":"func (d *Data) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (nd *Node) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Data) UpdateEdgeWeight(src, dst *Node, weight float32)","Funname":"UpdateEdgeWeight","Returntype":"","Args":"src, dst *Node, weight float32"},{"Uniquefunname":"func (d *Data) AddNode(nd *Node) bool","Funname":"graph.Data.AddNode","Returntype":"bool","Args":"nd *Node"},{"Uniquefunname":"func (d *Data) Connect(src, dst *Node, weight float32)","Funname":"graph.Data.Connect","Returntype":"","Args":"src, dst *Node, weight float32"},{"Uniquefunname":"func (d *Data) DeleteEdge(src, dst *Node)","Funname":"graph.Data.DeleteEdge","Returntype":"","Args":"src, dst *Node"},{"Uniquefunname":"func (d *Data) DeleteNode(nd *Node)","Funname":"graph.Data.DeleteNode","Returntype":"","Args":"nd *Node"},{"Uniquefunname":"func (d *Data) GetEdgeWeight(src, dst *Node) float32","Funname":"graph.Data.GetEdgeWeight","Returntype":"float32","Args":"src, dst *Node"},{"Uniquefunname":"func (d *Data) GetNodeByID(id string) *Node","Funname":"graph.Data.GetNodeByID","Returntype":"*Node","Args":"id string"},{"Uniquefunname":"func (d *Data) GetNodeSize() int","Funname":"graph.Data.GetNodeSize","Returntype":"int","Args":""},{"Uniquefunname":"func (d *Data) Init()","Funname":"graph.Data.Init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Data) String() string","Funname":"graph.Data.String","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Data) UpdateEdgeWeight(src, dst *Node, weight float32)","Funname":"graph.Data.UpdateEdgeWeight","Returntype":"","Args":"src, dst *Node, weight float32"},{"Uniquefunname":"func New() *Data","Funname":"graph.New","Returntype":"*Data","Args":""},{"Uniquefunname":"func NewNode(id string) *Node","Funname":"graph.NewNode","Returntype":"*Node","Args":"id string"},{"Uniquefunname":"func (nd *Node) String() string","Funname":"graph.Node.String","Returntype":"string","Args":""},{"Uniquefunname":"func (l Nodes) Get(id string) *Node","Funname":"graph.Nodes.Get","Returntype":"*Node","Args":"id string"}],"Records":[{"Name":"struct:graph.Data","Fields":["graph.Data.NodeMap map[*Node]bool","graph.Data.nodeID map[string]bool"]},{"Name":"struct:graph.Node","Fields":["graph.Node.Color string","graph.Node.ID string","graph.Node.WeightFrom map[*Node]float32","graph.Node.WeightTo map[*Node]float32"]}]}
{"Filepath":"graph/topological_dag.go","Functions":[{"Uniquefunname":"func (d *Data) TopologicalDag() (Nodes, bool)","Funname":"TopologicalDag","Returntype":"(Nodes, bool)","Args":""},{"Uniquefunname":"func (d *Data) TopologicalDag() (Nodes, bool)","Funname":"graph.Data.TopologicalDag","Returntype":"(Nodes, bool)","Args":""},{"Uniquefunname":"func (d *Data) topologicalDag(src *Node, result *Nodes, isDag *bool)","Funname":"graph.Data.topologicalDag","Returntype":"","Args":"src *Node, result *Nodes, isDag *bool"},{"Uniquefunname":"func (d *Data) topologicalDag(src *Node, result *Nodes, isDag *bool)","Funname":"topologicalDag","Returntype":"","Args":"src *Node, result *Nodes, isDag *bool"}],"Records":null}
{"Filepath":"grub2/entry.go","Functions":[{"Uniquefunname":"func (entry *Entry) getFullTitle() string","Funname":"getFullTitle","Returntype":"string","Args":""},{"Uniquefunname":"func (entry *Entry) getFullTitle() string","Funname":"grub2.Entry.getFullTitle","Returntype":"string","Args":""}],"Records":[{"Name":"struct:grub2.Entry","Fields":["grub2.Entry.entryType EntryType","grub2.Entry.num int","grub2.Entry.parentSubMenu *Entry","grub2.Entry.title string"]},{"Name":"const:grub2","Fields":["grub2.MENUENTRY","grub2.SUBMENU"]}]}
{"Filepath":"grub2/grub2.go","Functions":[{"Uniquefunname":"func NewGrub2(service *dbusutil.Service) *Grub2","Funname":"NewGrub2","Returntype":"*Grub2","Args":"service *dbusutil.Service"},{"Uniquefunname":"func SetLogger(v *log.Logger)","Funname":"SetLogger","Returntype":"","Args":"v *log.Logger"},{"Uniquefunname":"func (g *Grub2) addModifyTask(task modifyTask)","Funname":"addModifyTask","Returntype":"","Args":"task modifyTask"},{"Uniquefunname":"func (g *Grub2) applyParams(params map[string]string)","Funname":"applyParams","Returntype":"","Args":"params map[string]string"},{"Uniquefunname":"func (g *Grub2) canSafelyExit() bool","Funname":"canSafelyExit","Returntype":"bool","Args":""},{"Uniquefunname":"func (g *Grub2) checkAuth(sender dbus.Sender, actionId string) error","Funname":"checkAuth","Returntype":"error","Args":"sender dbus.Sender, actionId string"},{"Uniquefunname":"func (g *Grub2) defaultEntryIdx2Str(idx int) (string, error)","Funname":"defaultEntryIdx2Str","Returntype":"(string, error)","Args":"idx int"},{"Uniquefunname":"func (g *Grub2) defaultEntryStr2Idx(str string) int","Funname":"defaultEntryStr2Idx","Returntype":"int","Args":"str string"},{"Uniquefunname":"func (g *Grub2) finishGfxmodeDetect(params map[string]string)","Funname":"finishGfxmodeDetect","Returntype":"","Args":"params map[string]string"},{"Uniquefunname":"func (g *Grub2) getAvailableGfxmodes(sender dbus.Sender) (grub_common.Gfxmodes, error)","Funname":"getAvailableGfxmodes","Returntype":"(grub_common.Gfxmodes, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (grub *Grub2) getEntryTitlesLv1() (entryTitles []string)","Funname":"getEntryTitlesLv1","Returntype":"(entryTitles []string)","Args":""},{"Uniquefunname":"func getGfxmodesFromBootArg() (grub_common.Gfxmodes, error)","Funname":"getGfxmodesFromBootArg","Returntype":"(grub_common.Gfxmodes, error)","Args":""},{"Uniquefunname":"func (g *Grub2) getGfxmodesFromXRandr(sender dbus.Sender) (grub_common.Gfxmodes, error)","Funname":"getGfxmodesFromXRandr","Returntype":"(grub_common.Gfxmodes, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func getModifyFuncPrepareGfxmodeDetect(gfxmodesStr string) func(map[string]string)","Funname":"getModifyFuncPrepareGfxmodeDetect","Returntype":"func(map[string]string)","Args":"gfxmodesStr string"},{"Uniquefunname":"func getModifyTaskDefaultEntry(idx int) modifyTask","Funname":"getModifyTaskDefaultEntry","Returntype":"modifyTask","Args":"idx int"},{"Uniquefunname":"func getModifyTaskEnableTheme(enable bool, lang string, gfxmodeDetectState gfxmodeDetectState)modifyTask","Funname":"getModifyTaskEnableTheme","Returntype":"modifyTask","Args":"enable bool, lang string, gfxmodeDetectState gfxmodeDetectState"},{"Uniquefunname":"func getModifyTaskGfxmode(val string, lang string) modifyTask","Funname":"getModifyTaskGfxmode","Returntype":"modifyTask","Args":"val string, lang string"},{"Uniquefunname":"func getModifyTaskPrepareGfxmodeDetect(gfxmodesStr string) modifyTask","Funname":"getModifyTaskPrepareGfxmodeDetect","Returntype":"modifyTask","Args":"gfxmodesStr string"},{"Uniquefunname":"func getModifyTaskTimeout(timeout uint32) modifyTask","Funname":"getModifyTaskTimeout","Returntype":"modifyTask","Args":"timeout uint32"},{"Uniquefunname":"func getOSNum(entries []Entry) uint32","Funname":"getOSNum","Returntype":"uint32","Args":"entries []Entry"},{"Uniquefunname":"func (g *Grub2) getSenderLang(sender dbus.Sender) (string, error)","Funname":"getSenderLang","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func getXEnvWithSender(service *dbusutil.Service, sender dbus.Sender)(map[string]string, error)","Funname":"getXEnvWithSender","Returntype":"(map[string]string, error)","Args":"service *dbusutil.Service, sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) addModifyTask(task modifyTask)","Funname":"grub2.Grub2.addModifyTask","Returntype":"","Args":"task modifyTask"},{"Uniquefunname":"func (g *Grub2) applyParams(params map[string]string)","Funname":"grub2.Grub2.applyParams","Returntype":"","Args":"params map[string]string"},{"Uniquefunname":"func (g *Grub2) canSafelyExit() bool","Funname":"grub2.Grub2.canSafelyExit","Returntype":"bool","Args":""},{"Uniquefunname":"func (g *Grub2) checkAuth(sender dbus.Sender, actionId string) error","Funname":"grub2.Grub2.checkAuth","Returntype":"error","Args":"sender dbus.Sender, actionId string"},{"Uniquefunname":"func (g *Grub2) defaultEntryIdx2Str(idx int) (string, error)","Funname":"grub2.Grub2.defaultEntryIdx2Str","Returntype":"(string, error)","Args":"idx int"},{"Uniquefunname":"func (g *Grub2) defaultEntryStr2Idx(str string) int","Funname":"grub2.Grub2.defaultEntryStr2Idx","Returntype":"int","Args":"str string"},{"Uniquefunname":"func (g *Grub2) finishGfxmodeDetect(params map[string]string)","Funname":"grub2.Grub2.finishGfxmodeDetect","Returntype":"","Args":"params map[string]string"},{"Uniquefunname":"func (g *Grub2) getAvailableGfxmodes(sender dbus.Sender) (grub_common.Gfxmodes, error)","Funname":"grub2.Grub2.getAvailableGfxmodes","Returntype":"(grub_common.Gfxmodes, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (grub *Grub2) getEntryTitlesLv1() (entryTitles []string)","Funname":"grub2.Grub2.getEntryTitlesLv1","Returntype":"(entryTitles []string)","Args":""},{"Uniquefunname":"func (g *Grub2) getGfxmodesFromXRandr(sender dbus.Sender) (grub_common.Gfxmodes, error)","Funname":"grub2.Grub2.getGfxmodesFromXRandr","Returntype":"(grub_common.Gfxmodes, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) getSenderLang(sender dbus.Sender) (string, error)","Funname":"grub2.Grub2.getSenderLang","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (grub *Grub2) readEntries() (err error)","Funname":"grub2.Grub2.readEntries","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (grub *Grub2) resetEntries()","Funname":"grub2.Grub2.resetEntries","Returntype":"","Args":""},{"Uniquefunname":"func NewGrub2(service *dbusutil.Service) *Grub2","Funname":"grub2.NewGrub2","Returntype":"*Grub2","Args":"service *dbusutil.Service"},{"Uniquefunname":"func SetLogger(v *log.Logger)","Funname":"grub2.SetLogger","Returntype":"","Args":"v *log.Logger"},{"Uniquefunname":"func getGfxmodesFromBootArg() (grub_common.Gfxmodes, error)","Funname":"grub2.getGfxmodesFromBootArg","Returntype":"(grub_common.Gfxmodes, error)","Args":""},{"Uniquefunname":"func getModifyFuncPrepareGfxmodeDetect(gfxmodesStr string) func(map[string]string)","Funname":"grub2.getModifyFuncPrepareGfxmodeDetect","Returntype":"func(map[string]string)","Args":"gfxmodesStr string"},{"Uniquefunname":"func getModifyTaskDefaultEntry(idx int) modifyTask","Funname":"grub2.getModifyTaskDefaultEntry","Returntype":"modifyTask","Args":"idx int"},{"Uniquefunname":"func grub2.getModifyTaskEnableTheme(enable bool, lang string, gfxmodeDetectState gfxmodeDetectState)modifyTask","Funname":"grub2.getModifyTaskEnableTheme","Returntype":"modifyTask","Args":"enable bool, lang string, gfxmodeDetectState gfxmodeDetectState"},{"Uniquefunname":"func getModifyTaskGfxmode(val string, lang string) modifyTask","Funname":"grub2.getModifyTaskGfxmode","Returntype":"modifyTask","Args":"val string, lang string"},{"Uniquefunname":"func getModifyTaskPrepareGfxmodeDetect(gfxmodesStr string) modifyTask","Funname":"grub2.getModifyTaskPrepareGfxmodeDetect","Returntype":"modifyTask","Args":"gfxmodesStr string"},{"Uniquefunname":"func getModifyTaskTimeout(timeout uint32) modifyTask","Funname":"grub2.getModifyTaskTimeout","Returntype":"modifyTask","Args":"timeout uint32"},{"Uniquefunname":"func getOSNum(entries []Entry) uint32","Funname":"grub2.getOSNum","Returntype":"uint32","Args":"entries []Entry"},{"Uniquefunname":"func grub2.getXEnvWithSender(service *dbusutil.Service, sender dbus.Sender)(map[string]string, error)","Funname":"grub2.getXEnvWithSender","Returntype":"(map[string]string, error)","Args":"service *dbusutil.Service, sender dbus.Sender"},{"Uniquefunname":"func joinGfxmodesForDetect(gfxmodes grub_common.Gfxmodes) string","Funname":"grub2.joinGfxmodesForDetect","Returntype":"string","Args":"gfxmodes grub_common.Gfxmodes"},{"Uniquefunname":"func parseEntries(fileContent string) ([]Entry, error)","Funname":"grub2.parseEntries","Returntype":"([]Entry, error)","Args":"fileContent string"},{"Uniquefunname":"func parseTitle(line string) (string, bool)","Funname":"grub2.parseTitle","Returntype":"(string, bool)","Args":"line string"},{"Uniquefunname":"func joinGfxmodesForDetect(gfxmodes grub_common.Gfxmodes) string","Funname":"joinGfxmodesForDetect","Returntype":"string","Args":"gfxmodes grub_common.Gfxmodes"},{"Uniquefunname":"func parseEntries(fileContent string) ([]Entry, error)","Funname":"parseEntries","Returntype":"([]Entry, error)","Args":"fileContent string"},{"Uniquefunname":"func parseTitle(line string) (string, bool)","Funname":"parseTitle","Returntype":"(string, bool)","Args":"line string"},{"Uniquefunname":"func (grub *Grub2) readEntries() (err error)","Funname":"readEntries","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (grub *Grub2) resetEntries()","Funname":"resetEntries","Returntype":"","Args":""}],"Records":[{"Name":"struct:grub2.Grub2","Fields":["grub2.Grub2.DefaultEntry string","grub2.Grub2.EnableTheme bool","grub2.Grub2.Gfxmode string","grub2.Grub2.PropsMu sync.RWMutex","grub2.Grub2.ThemeFile string","grub2.Grub2.Timeout uint32","grub2.Grub2.Updating bool","grub2.Grub2.entries []Entry","grub2.Grub2.gfxmodeDetectState gfxmodeDetectState","grub2.Grub2.inhibitFd dbus.UnixFD","grub2.Grub2.methods *struct { GetSimpleEntryTitles func() `out:\"titles\"` ; GetAvailableGfxmodes func() `out:\"gfxmodes\"`; SetDefaultEntry func() `in:\"entry\"`; SetEnableTheme func() `in:\"enabled\"`; SetGfxmode func() `in:\"gfxmode\"`; SetTimeout func() `in:\"timeout\"`; }","grub2.Grub2.modifyManager *modifyManager","grub2.Grub2.service *dbusutil.Service","grub2.Grub2.theme *Theme"]},{"Name":"var:grub2","Fields":["grub2.entryRegexpDoubleQuote","grub2.entryRegexpSingleQuote","grub2.ignoreString","grub2.logger"]},{"Name":"const:grub2","Fields":["grub2.gfxmodeDetectStateDetecting","grub2.gfxmodeDetectStateFailed","grub2.gfxmodeDetectStateNone","grub2.grubScriptFile"]},{"Name":"struct:grub2.modifyTask","Fields":["grub2.modifyTask.adjustTheme bool","grub2.modifyTask.adjustThemeLang string","grub2.modifyTask.paramsModifyFunc func(map[string]string)"]}]}
{"Filepath":"grub2/grub2_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Grub2) emitPropChangedDefaultEntry(value string) error","Funname":"emitPropChangedDefaultEntry","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedEnableTheme(value bool) error","Funname":"emitPropChangedEnableTheme","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) emitPropChangedGfxmode(value string) error","Funname":"emitPropChangedGfxmode","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedThemeFile(value string) error","Funname":"emitPropChangedThemeFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedTimeout(value uint32) error","Funname":"emitPropChangedTimeout","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Grub2) emitPropChangedUpdating(value bool) error","Funname":"emitPropChangedUpdating","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) emitPropChangedDefaultEntry(value string) error","Funname":"grub2.Grub2.emitPropChangedDefaultEntry","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedEnableTheme(value bool) error","Funname":"grub2.Grub2.emitPropChangedEnableTheme","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) emitPropChangedGfxmode(value string) error","Funname":"grub2.Grub2.emitPropChangedGfxmode","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedThemeFile(value string) error","Funname":"grub2.Grub2.emitPropChangedThemeFile","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Grub2) emitPropChangedTimeout(value uint32) error","Funname":"grub2.Grub2.emitPropChangedTimeout","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Grub2) emitPropChangedUpdating(value bool) error","Funname":"grub2.Grub2.emitPropChangedUpdating","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) setPropDefaultEntry(value string) (changed bool)","Funname":"grub2.Grub2.setPropDefaultEntry","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropEnableTheme(value bool) (changed bool)","Funname":"grub2.Grub2.setPropEnableTheme","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) setPropGfxmode(value string) (changed bool)","Funname":"grub2.Grub2.setPropGfxmode","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropThemeFile(value string) (changed bool)","Funname":"grub2.Grub2.setPropThemeFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropTimeout(value uint32) (changed bool)","Funname":"grub2.Grub2.setPropTimeout","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Grub2) setPropUpdating(value bool) (changed bool)","Funname":"grub2.Grub2.setPropUpdating","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) setPropDefaultEntry(value string) (changed bool)","Funname":"setPropDefaultEntry","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropEnableTheme(value bool) (changed bool)","Funname":"setPropEnableTheme","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Grub2) setPropGfxmode(value string) (changed bool)","Funname":"setPropGfxmode","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropThemeFile(value string) (changed bool)","Funname":"setPropThemeFile","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Grub2) setPropTimeout(value uint32) (changed bool)","Funname":"setPropTimeout","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Grub2) setPropUpdating(value bool) (changed bool)","Funname":"setPropUpdating","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"grub2/grub2_ifc.go","Functions":[{"Uniquefunname":"func (g *Grub2) GetAvailableGfxmodes(sender dbus.Sender) ([]string, *dbus.Error)","Funname":"GetAvailableGfxmodes","Returntype":"([]string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (*Grub2) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (grub *Grub2) GetSimpleEntryTitles() ([]string, *dbus.Error)","Funname":"GetSimpleEntryTitles","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (g *Grub2) PrepareGfxmodeDetect(sender dbus.Sender) *dbus.Error","Funname":"PrepareGfxmodeDetect","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) Reset(sender dbus.Sender) *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) SetDefaultEntry(sender dbus.Sender, entry string) *dbus.Error","Funname":"SetDefaultEntry","Returntype":"*dbus.Error","Args":"sender dbus.Sender, entry string"},{"Uniquefunname":"func (g *Grub2) SetEnableTheme(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"SetEnableTheme","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (g *Grub2) SetGfxmode(sender dbus.Sender, gfxmode string) *dbus.Error","Funname":"SetGfxmode","Returntype":"*dbus.Error","Args":"sender dbus.Sender, gfxmode string"},{"Uniquefunname":"func (g *Grub2) SetTimeout(sender dbus.Sender, timeout uint32) *dbus.Error","Funname":"SetTimeout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, timeout uint32"},{"Uniquefunname":"func (g *Grub2) GetAvailableGfxmodes(sender dbus.Sender) ([]string, *dbus.Error)","Funname":"grub2.Grub2.GetAvailableGfxmodes","Returntype":"([]string, *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (*Grub2) GetInterfaceName() string","Funname":"grub2.Grub2.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (grub *Grub2) GetSimpleEntryTitles() ([]string, *dbus.Error)","Funname":"grub2.Grub2.GetSimpleEntryTitles","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (g *Grub2) PrepareGfxmodeDetect(sender dbus.Sender) *dbus.Error","Funname":"grub2.Grub2.PrepareGfxmodeDetect","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) Reset(sender dbus.Sender) *dbus.Error","Funname":"grub2.Grub2.Reset","Returntype":"*dbus.Error","Args":"sender dbus.Sender"},{"Uniquefunname":"func (g *Grub2) SetDefaultEntry(sender dbus.Sender, entry string) *dbus.Error","Funname":"grub2.Grub2.SetDefaultEntry","Returntype":"*dbus.Error","Args":"sender dbus.Sender, entry string"},{"Uniquefunname":"func (g *Grub2) SetEnableTheme(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"grub2.Grub2.SetEnableTheme","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (g *Grub2) SetGfxmode(sender dbus.Sender, gfxmode string) *dbus.Error","Funname":"grub2.Grub2.SetGfxmode","Returntype":"*dbus.Error","Args":"sender dbus.Sender, gfxmode string"},{"Uniquefunname":"func (g *Grub2) SetTimeout(sender dbus.Sender, timeout uint32) *dbus.Error","Funname":"grub2.Grub2.SetTimeout","Returntype":"*dbus.Error","Args":"sender dbus.Sender, timeout uint32"}],"Records":[{"Name":"const:grub2","Fields":["grub2.dbusInterface","grub2.dbusPath","grub2.dbusServiceName","grub2.polikitActionIdCommon","grub2.polikitActionIdPrepareGfxmodeDetect","grub2.timeoutMax"]},{"Name":"var:grub2","Fields":["grub2.errInGfxmodeDetect"]}]}
{"Filepath":"grub2/grub_params.go","Functions":[{"Uniquefunname":"func decodeShellValue(in string) string","Funname":"decodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func getDefaultEntry(params map[string]string) (val string)","Funname":"getDefaultEntry","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getGfxMode(params map[string]string) (val string)","Funname":"getGfxMode","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getGrubParamsContent(params map[string]string) []byte","Funname":"getGrubParamsContent","Returntype":"[]byte","Args":"params map[string]string"},{"Uniquefunname":"func getTheme(params map[string]string) string","Funname":"getTheme","Returntype":"string","Args":"params map[string]string"},{"Uniquefunname":"func getTimeout(params map[string]string) int","Funname":"getTimeout","Returntype":"int","Args":"params map[string]string"},{"Uniquefunname":"func decodeShellValue(in string) string","Funname":"grub2.decodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func getDefaultEntry(params map[string]string) (val string)","Funname":"grub2.getDefaultEntry","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getGfxMode(params map[string]string) (val string)","Funname":"grub2.getGfxMode","Returntype":"(val string)","Args":"params map[string]string"},{"Uniquefunname":"func getGrubParamsContent(params map[string]string) []byte","Funname":"grub2.getGrubParamsContent","Returntype":"[]byte","Args":"params map[string]string"},{"Uniquefunname":"func getTheme(params map[string]string) string","Funname":"grub2.getTheme","Returntype":"string","Args":"params map[string]string"},{"Uniquefunname":"func getTimeout(params map[string]string) int","Funname":"grub2.getTimeout","Returntype":"int","Args":"params map[string]string"},{"Uniquefunname":"func writeGrubParams(params map[string]string) error","Funname":"grub2.writeGrubParams","Returntype":"error","Args":"params map[string]string"},{"Uniquefunname":"func writeGrubParams(params map[string]string) error","Funname":"writeGrubParams","Returntype":"error","Args":"params map[string]string"}],"Records":[{"Name":"const:grub2","Fields":["grub2.defaultGrubBackground","grub2.defaultGrubDefault","grub2.defaultGrubDefaultInt","grub2.defaultGrubGfxMode","grub2.defaultGrubTheme","grub2.defaultGrubTimeoutInt","grub2.defaultThemeDir","grub2.fallbackGrubBackground","grub2.fallbackGrubTheme","grub2.fallbackThemeDir","grub2.grubBackground","grub2.grubDefault","grub2.grubGfxmode","grub2.grubParamsFile","grub2.grubTheme","grub2.grubTimeout","grub2.themesDir"]}]}
{"Filepath":"grub2/inhibitor.go","Functions":[{"Uniquefunname":"func (m *Grub2) enableShutdown()","Funname":"enableShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Grub2) enableShutdown()","Funname":"grub2.Grub2.enableShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Grub2) preventShutdown()","Funname":"grub2.Grub2.preventShutdown","Returntype":"","Args":""},{"Uniquefunname":"func inhibit(what, who, why string) (dbus.UnixFD, error)","Funname":"grub2.inhibit","Returntype":"(dbus.UnixFD, error)","Args":"what, who, why string"},{"Uniquefunname":"func inhibit(what, who, why string) (dbus.UnixFD, error)","Funname":"inhibit","Returntype":"(dbus.UnixFD, error)","Args":"what, who, why string"},{"Uniquefunname":"func (m *Grub2) preventShutdown()","Funname":"preventShutdown","Returntype":"","Args":""}],"Records":null}
{"Filepath":"grub2/log.go","Functions":[{"Uniquefunname":"func (l Log) hasJob(jobName string) bool","Funname":"grub2.Log.hasJob","Returntype":"bool","Args":"jobName string"},{"Uniquefunname":"func (l Log) isJobDone(jobName string) bool","Funname":"grub2.Log.isJobDone","Returntype":"bool","Args":"jobName string"},{"Uniquefunname":"func loadLog() (Log, error)","Funname":"grub2.loadLog","Returntype":"(Log, error)","Args":""},{"Uniquefunname":"func logAppendText(text string)","Funname":"grub2.logAppendText","Returntype":"","Args":"text string"},{"Uniquefunname":"func logEnd()","Funname":"grub2.logEnd","Returntype":"","Args":""},{"Uniquefunname":"func logJobEnd(jobName string, err error)","Funname":"grub2.logJobEnd","Returntype":"","Args":"jobName string, err error"},{"Uniquefunname":"func logJobStart(jobName string)","Funname":"grub2.logJobStart","Returntype":"","Args":"jobName string"},{"Uniquefunname":"func logStart()","Funname":"grub2.logStart","Returntype":"","Args":""},{"Uniquefunname":"func (l Log) hasJob(jobName string) bool","Funname":"hasJob","Returntype":"bool","Args":"jobName string"},{"Uniquefunname":"func (l Log) isJobDone(jobName string) bool","Funname":"isJobDone","Returntype":"bool","Args":"jobName string"},{"Uniquefunname":"func loadLog() (Log, error)","Funname":"loadLog","Returntype":"(Log, error)","Args":""},{"Uniquefunname":"func logAppendText(text string)","Funname":"logAppendText","Returntype":"","Args":"text string"},{"Uniquefunname":"func logEnd()","Funname":"logEnd","Returntype":"","Args":""},{"Uniquefunname":"func logJobEnd(jobName string, err error)","Funname":"logJobEnd","Returntype":"","Args":"jobName string, err error"},{"Uniquefunname":"func logJobStart(jobName string)","Funname":"logJobStart","Returntype":"","Args":"jobName string"},{"Uniquefunname":"func logStart()","Funname":"logStart","Returntype":"","Args":""}],"Records":[{"Name":"const:grub2","Fields":["grub2.dataDir","grub2.logFile","grub2.logFileMode","grub2.logJobAdjustTheme","grub2.logJobMkConfig"]}]}
{"Filepath":"grub2/main.go","Functions":[{"Uniquefunname":"func GetOSNum() (uint32, error)","Funname":"GetOSNum","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func PrepareGfxmodeDetect() error","Funname":"PrepareGfxmodeDetect","Returntype":"error","Args":""},{"Uniquefunname":"func RunAsDaemon()","Funname":"RunAsDaemon","Returntype":"","Args":""},{"Uniquefunname":"func GetOSNum() (uint32, error)","Funname":"grub2.GetOSNum","Returntype":"(uint32, error)","Args":""},{"Uniquefunname":"func PrepareGfxmodeDetect() error","Funname":"grub2.PrepareGfxmodeDetect","Returntype":"error","Args":""},{"Uniquefunname":"func RunAsDaemon()","Funname":"grub2.RunAsDaemon","Returntype":"","Args":""}],"Records":[{"Name":"var:grub2","Fields":["grub2._g"]}]}
{"Filepath":"grub2/modify_manger.go","Functions":[{"Uniquefunname":"func (m *modifyManager) IsRunning() bool","Funname":"IsRunning","Returntype":"bool","Args":""},{"Uniquefunname":"func init()","Funname":"grub2.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *modifyManager) IsRunning() bool","Funname":"grub2.modifyManager.IsRunning","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *modifyManager) loop()","Funname":"grub2.modifyManager.loop","Returntype":"","Args":""},{"Uniquefunname":"func (m *modifyManager) notifyStateChange()","Funname":"grub2.modifyManager.notifyStateChange","Returntype":"","Args":""},{"Uniquefunname":"func (m *modifyManager) start(tasks ...modifyTask)","Funname":"grub2.modifyManager.start","Returntype":"","Args":"tasks ...modifyTask"},{"Uniquefunname":"func (m *modifyManager) update(adjustTheme bool, adjustThemeLang string)","Funname":"grub2.modifyManager.update","Returntype":"","Args":"adjustTheme bool, adjustThemeLang string"},{"Uniquefunname":"func (m *modifyManager) updateEnd()","Funname":"grub2.modifyManager.updateEnd","Returntype":"","Args":""},{"Uniquefunname":"func newModifyManager() *modifyManager","Funname":"grub2.newModifyManager","Returntype":"*modifyManager","Args":""},{"Uniquefunname":"func runUpdateGrub() error","Funname":"grub2.runUpdateGrub","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *modifyManager) loop()","Funname":"loop","Returntype":"","Args":""},{"Uniquefunname":"func newModifyManager() *modifyManager","Funname":"newModifyManager","Returntype":"*modifyManager","Args":""},{"Uniquefunname":"func (m *modifyManager) notifyStateChange()","Funname":"notifyStateChange","Returntype":"","Args":""},{"Uniquefunname":"func runUpdateGrub() error","Funname":"runUpdateGrub","Returntype":"error","Args":""},{"Uniquefunname":"func (m *modifyManager) start(tasks ...modifyTask)","Funname":"start","Returntype":"","Args":"tasks ...modifyTask"},{"Uniquefunname":"func (m *modifyManager) update(adjustTheme bool, adjustThemeLang string)","Funname":"update","Returntype":"","Args":"adjustTheme bool, adjustThemeLang string"},{"Uniquefunname":"func (m *modifyManager) updateEnd()","Funname":"updateEnd","Returntype":"","Args":""}],"Records":[{"Name":"const:grub2","Fields":["grub2.adjustThemeCmd","grub2.grubMkconfigCmd","grub2.updateGrubCmd"]},{"Name":"struct:grub2.modifyManager","Fields":["grub2.modifyManager.ch chan modifyTask","grub2.modifyManager.g *Grub2","grub2.modifyManager.modifyTasks []modifyTask","grub2.modifyManager.mu sync.Mutex","grub2.modifyManager.running bool","grub2.modifyManager.stateChangeCb func(running bool)"]}]}
{"Filepath":"grub2/theme.go","Functions":[{"Uniquefunname":"func NewTheme(g *Grub2) *Theme","Funname":"NewTheme","Returntype":"*Theme","Args":"g *Grub2"},{"Uniquefunname":"func NewTheme(g *Grub2) *Theme","Funname":"grub2.NewTheme","Returntype":"*Theme","Args":"g *Grub2"}],"Records":[{"Name":"struct:grub2.Theme","Fields":["grub2.Theme.PropsMu sync.RWMutex","grub2.Theme.g *Grub2","grub2.Theme.methods *struct { SetBackgroundSourceFile func() `in:\"filename\"`; GetBackground func() `out:\"background\"`; }","grub2.Theme.service *dbusutil.Service","grub2.Theme.signals *struct { BackgroundChanged struct{}; }"]}]}
{"Filepath":"grub2/theme_ifc.go","Functions":[{"Uniquefunname":"func (theme *Theme) GetBackground() (string, *dbus.Error)","Funname":"GetBackground","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Theme) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (theme *Theme) SetBackgroundSourceFile(sender dbus.Sender, filename string) *dbus.Error","Funname":"SetBackgroundSourceFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, filename string"},{"Uniquefunname":"func (theme *Theme) emitSignalBackgroundChanged()","Funname":"emitSignalBackgroundChanged","Returntype":"","Args":""},{"Uniquefunname":"func (theme *Theme) GetBackground() (string, *dbus.Error)","Funname":"grub2.Theme.GetBackground","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Theme) GetInterfaceName() string","Funname":"grub2.Theme.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (theme *Theme) SetBackgroundSourceFile(sender dbus.Sender, filename string) *dbus.Error","Funname":"grub2.Theme.SetBackgroundSourceFile","Returntype":"*dbus.Error","Args":"sender dbus.Sender, filename string"},{"Uniquefunname":"func (theme *Theme) emitSignalBackgroundChanged()","Funname":"grub2.Theme.emitSignalBackgroundChanged","Returntype":"","Args":""}],"Records":[{"Name":"const:grub2","Fields":["grub2.themeDBusInterface","grub2.themeDBusPath"]}]}
{"Filepath":"grub2/utils.go","Functions":[{"Uniquefunname":"func allowNoCheckAuth()","Funname":"allowNoCheckAuth","Returntype":"","Args":""},{"Uniquefunname":"func checkAuth(sysBusName, actionId string) (bool, error)","Funname":"checkAuth","Returntype":"(bool, error)","Args":"sysBusName, actionId string"},{"Uniquefunname":"func checkGfxmode(v string) error","Funname":"checkGfxmode","Returntype":"error","Args":"v string"},{"Uniquefunname":"func getStringIndexInArray(a string, list []string) int","Funname":"getStringIndexInArray","Returntype":"int","Args":"a string, list []string"},{"Uniquefunname":"func allowNoCheckAuth()","Funname":"grub2.allowNoCheckAuth","Returntype":"","Args":""},{"Uniquefunname":"func checkAuth(sysBusName, actionId string) (bool, error)","Funname":"grub2.checkAuth","Returntype":"(bool, error)","Args":"sysBusName, actionId string"},{"Uniquefunname":"func checkGfxmode(v string) error","Funname":"grub2.checkGfxmode","Returntype":"error","Args":"v string"},{"Uniquefunname":"func getStringIndexInArray(a string, list []string) int","Funname":"grub2.getStringIndexInArray","Returntype":"int","Args":"a string, list []string"},{"Uniquefunname":"func quoteString(str string) string","Funname":"grub2.quoteString","Returntype":"string","Args":"str string"},{"Uniquefunname":"func quoteString(str string) string","Funname":"quoteString","Returntype":"string","Args":"str string"}],"Records":[{"Name":"var:grub2","Fields":["grub2.errAuthFailed","grub2.noCheckAuth"]}]}
{"Filepath":"grub_common/common.go","Functions":[{"Uniquefunname":"func (v Gfxmodes) Add(m Gfxmode) Gfxmodes","Funname":"Add","Returntype":"Gfxmodes","Args":"m Gfxmode"},{"Uniquefunname":"func DecodeShellValue(in string) string","Funname":"DecodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func GetBootArgDeepinGfxmode() (cur Gfxmode, all Gfxmodes, err error)","Funname":"GetBootArgDeepinGfxmode","Returntype":"(cur Gfxmode, all Gfxmodes, err error)","Args":""},{"Uniquefunname":"func HasDeepinGfxmodeMod() bool","Funname":"HasDeepinGfxmodeMod","Returntype":"bool","Args":""},{"Uniquefunname":"func InGfxmodeDetectionMode(params map[string]string) bool","Funname":"InGfxmodeDetectionMode","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func (v Gfxmodes) Intersection(v1 Gfxmodes) (result Gfxmodes)","Funname":"Intersection","Returntype":"(result Gfxmodes)","Args":"v1 Gfxmodes"},{"Uniquefunname":"func IsGfxmodeDetectFailed(params map[string]string) bool","Funname":"IsGfxmodeDetectFailed","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func (v Gfxmodes) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (v Gfxmodes) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func LoadGrubParams() (map[string]string, error)","Funname":"LoadGrubParams","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func (v Gfxmodes) Max() (max Gfxmode)","Funname":"Max","Returntype":"(max Gfxmode)","Args":""},{"Uniquefunname":"func ParseGfxmode(str string) (Gfxmode, error)","Funname":"ParseGfxmode","Returntype":"(Gfxmode, error)","Args":"str string"},{"Uniquefunname":"func ShouldFinishGfxmodeDetect(params map[string]string) bool","Funname":"ShouldFinishGfxmodeDetect","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func (v Gfxmodes) SortDesc()","Funname":"SortDesc","Returntype":"","Args":""},{"Uniquefunname":"func (v Gfxmode) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (v Gfxmodes) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func getBootArgDeepinGfxmode() (string, error)","Funname":"getBootArgDeepinGfxmode","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func DecodeShellValue(in string) string","Funname":"grub_common.DecodeShellValue","Returntype":"string","Args":"in string"},{"Uniquefunname":"func GetBootArgDeepinGfxmode() (cur Gfxmode, all Gfxmodes, err error)","Funname":"grub_common.GetBootArgDeepinGfxmode","Returntype":"(cur Gfxmode, all Gfxmodes, err error)","Args":""},{"Uniquefunname":"func (v Gfxmode) String() string","Funname":"grub_common.Gfxmode.String","Returntype":"string","Args":""},{"Uniquefunname":"func (v Gfxmodes) Add(m Gfxmode) Gfxmodes","Funname":"grub_common.Gfxmodes.Add","Returntype":"Gfxmodes","Args":"m Gfxmode"},{"Uniquefunname":"func (v Gfxmodes) Intersection(v1 Gfxmodes) (result Gfxmodes)","Funname":"grub_common.Gfxmodes.Intersection","Returntype":"(result Gfxmodes)","Args":"v1 Gfxmodes"},{"Uniquefunname":"func (v Gfxmodes) Len() int","Funname":"grub_common.Gfxmodes.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (v Gfxmodes) Less(i, j int) bool","Funname":"grub_common.Gfxmodes.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (v Gfxmodes) Max() (max Gfxmode)","Funname":"grub_common.Gfxmodes.Max","Returntype":"(max Gfxmode)","Args":""},{"Uniquefunname":"func (v Gfxmodes) SortDesc()","Funname":"grub_common.Gfxmodes.SortDesc","Returntype":"","Args":""},{"Uniquefunname":"func (v Gfxmodes) Swap(i, j int)","Funname":"grub_common.Gfxmodes.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func HasDeepinGfxmodeMod() bool","Funname":"grub_common.HasDeepinGfxmodeMod","Returntype":"bool","Args":""},{"Uniquefunname":"func InGfxmodeDetectionMode(params map[string]string) bool","Funname":"grub_common.InGfxmodeDetectionMode","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func IsGfxmodeDetectFailed(params map[string]string) bool","Funname":"grub_common.IsGfxmodeDetectFailed","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func LoadGrubParams() (map[string]string, error)","Funname":"grub_common.LoadGrubParams","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func ParseGfxmode(str string) (Gfxmode, error)","Funname":"grub_common.ParseGfxmode","Returntype":"(Gfxmode, error)","Args":"str string"},{"Uniquefunname":"func ShouldFinishGfxmodeDetect(params map[string]string) bool","Funname":"grub_common.ShouldFinishGfxmodeDetect","Returntype":"bool","Args":"params map[string]string"},{"Uniquefunname":"func getBootArgDeepinGfxmode() (string, error)","Funname":"grub_common.getBootArgDeepinGfxmode","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func parseBootArgDeepinGfxmode(str string) (cur Gfxmode, all Gfxmodes, err error)","Funname":"grub_common.parseBootArgDeepinGfxmode","Returntype":"(cur Gfxmode, all Gfxmodes, err error)","Args":"str string"},{"Uniquefunname":"func parseBootArgDeepinGfxmode(str string) (cur Gfxmode, all Gfxmodes, err error)","Funname":"parseBootArgDeepinGfxmode","Returntype":"(cur Gfxmode, all Gfxmodes, err error)","Args":"str string"}],"Records":[{"Name":"const:grub_common","Fields":["grub_common.DeepinGfxmodeAdjusted","grub_common.DeepinGfxmodeDetect","grub_common.DeepinGfxmodeNotSupported","grub_common.GfxmodeDetectReadyPath","grub_common.GrubParamsFile"]},{"Name":"struct:grub_common.Gfxmode","Fields":["grub_common.Gfxmode.Height int","grub_common.Gfxmode.Width int"]},{"Name":"var:grub_common","Fields":["grub_common.gfxmodeReg"]}]}
{"Filepath":"grub_common/common_test.go","Functions":[{"Uniquefunname":"func TestGfxmodesMax(t *testing.T)","Funname":"TestGfxmodesMax","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGfxmodesSortDesc(t *testing.T)","Funname":"TestGfxmodesSortDesc","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseGfxmode(t *testing.T)","Funname":"TestParseGfxmode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseBootArgDeepinGfxmode(t *testing.T)","Funname":"Test_parseBootArgDeepinGfxmode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGfxmodesMax(t *testing.T)","Funname":"grub_common.TestGfxmodesMax","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGfxmodesSortDesc(t *testing.T)","Funname":"grub_common.TestGfxmodesSortDesc","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseGfxmode(t *testing.T)","Funname":"grub_common.TestParseGfxmode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseBootArgDeepinGfxmode(t *testing.T)","Funname":"grub_common.Test_parseBootArgDeepinGfxmode","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"grub_common/xrandr.go","Functions":[{"Uniquefunname":"func GetGfxmodesFromXRandr() (Gfxmodes, error)","Funname":"GetGfxmodesFromXRandr","Returntype":"(Gfxmodes, error)","Args":""},{"Uniquefunname":"func getGfxmodesWithOutput(modes drandr.ModeInfos, output drandr.OutputInfo) (result Gfxmodes)","Funname":"getGfxmodesWithOutput","Returntype":"(result Gfxmodes)","Args":"modes drandr.ModeInfos, output drandr.OutputInfo"},{"Uniquefunname":"func GetGfxmodesFromXRandr() (Gfxmodes, error)","Funname":"grub_common.GetGfxmodesFromXRandr","Returntype":"(Gfxmodes, error)","Args":""},{"Uniquefunname":"func getGfxmodesWithOutput(modes drandr.ModeInfos, output drandr.OutputInfo) (result Gfxmodes)","Funname":"grub_common.getGfxmodesWithOutput","Returntype":"(result Gfxmodes)","Args":"modes drandr.ModeInfos, output drandr.OutputInfo"}],"Records":null}
{"Filepath":"grub_gfx/main.go","Functions":[{"Uniquefunname":"func detectChange()","Funname":"detectChange","Returntype":"","Args":""},{"Uniquefunname":"func getSysGrubObj() (dbus.BusObject, error)","Funname":"getSysGrubObj","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func detectChange()","Funname":"grub_gfx.detectChange","Returntype":"","Args":""},{"Uniquefunname":"func getSysGrubObj() (dbus.BusObject, error)","Funname":"grub_gfx.getSysGrubObj","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func grub_gfx.needDetect(cfgGfxmode grub_common.Gfxmode, cfgGfxmodeErr error, currentGfxmode, maxGfxmode grub_common.Gfxmode, maxNotSupported bool)bool","Funname":"grub_gfx.needDetect","Returntype":"bool","Args":"cfgGfxmode grub_common.Gfxmode, cfgGfxmodeErr error, currentGfxmode, maxGfxmode grub_common.Gfxmode, maxNotSupported bool"},{"Uniquefunname":"func prepareGfxmodeDetect() error","Funname":"grub_gfx.prepareGfxmodeDetect","Returntype":"error","Args":""},{"Uniquefunname":"func startSysGrubService() error","Funname":"grub_gfx.startSysGrubService","Returntype":"error","Args":""},{"Uniquefunname":"func needDetect(cfgGfxmode grub_common.Gfxmode, cfgGfxmodeErr error, currentGfxmode, maxGfxmode grub_common.Gfxmode, maxNotSupported bool)bool","Funname":"needDetect","Returntype":"bool","Args":"cfgGfxmode grub_common.Gfxmode, cfgGfxmodeErr error, currentGfxmode, maxGfxmode grub_common.Gfxmode, maxNotSupported bool"},{"Uniquefunname":"func prepareGfxmodeDetect() error","Funname":"prepareGfxmodeDetect","Returntype":"error","Args":""},{"Uniquefunname":"func startSysGrubService() error","Funname":"startSysGrubService","Returntype":"error","Args":""}],"Records":null}
{"Filepath":"grub_gfx/module.go","Functions":[{"Uniquefunname":"func (*module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"grub_gfx.init","Returntype":"","Args":""},{"Uniquefunname":"func (*module) GetDependencies() []string","Funname":"grub_gfx.module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *module) Start() error","Funname":"grub_gfx.module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *module) Stop() error","Funname":"grub_gfx.module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func newModule() *module","Funname":"grub_gfx.newModule","Returntype":"*module","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *module","Funname":"newModule","Returntype":"*module","Args":""}],"Records":[{"Name":"var:grub_gfx","Fields":["grub_gfx.logger"]},{"Name":"const:grub_gfx","Fields":["grub_gfx.moduleName"]}]}
{"Filepath":"housekeeping/init.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"housekeeping.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"housekeeping.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"housekeeping.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"housekeeping.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"housekeeping.init","Returntype":"","Args":""},{"Uniquefunname":"func sendNotify(icon, summary, body string) error","Funname":"housekeeping.sendNotify","Returntype":"error","Args":"icon, summary, body string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func sendNotify(icon, summary, body string) error","Funname":"sendNotify","Returntype":"error","Args":"icon, summary, body string"}],"Records":[{"Name":"struct:housekeeping.Daemon","Fields":["housekeeping.Daemon.stopChan chan struct{}","housekeeping.Daemon.ticker *time.Ticker"]},{"Name":"const:housekeeping","Fields":["housekeeping.fsMinLeftSpace"]},{"Name":"var:housekeeping","Fields":["housekeeping.logger"]}]}
{"Filepath":"image_effect/image_effect.go","Functions":[{"Uniquefunname":"func (ie *ImageEffect) Delete(effect, filename string) (busErr *dbus.Error)","Funname":"Delete","Returntype":"(busErr *dbus.Error)","Args":"effect, filename string"},{"Uniquefunname":"func Get(sender dbus.Sender, effect, filename string)(outputFile string, busErr *dbus.Error)","Funname":"Get","Returntype":"(outputFile string, busErr *dbus.Error)","Args":"sender dbus.Sender, effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (ie *ImageEffect) addTask(effect, filename string) (ch chan error)","Funname":"addTask","Returntype":"(ch chan error)","Args":"effect, filename string"},{"Uniquefunname":"func ddePixmix(uid int, inputFile, outputFile string, envVars []string) error","Funname":"ddePixmix","Returntype":"error","Args":"uid int, inputFile, outputFile string, envVars []string"},{"Uniquefunname":"func (ie *ImageEffect) delete(effect, filename string) (err error)","Funname":"delete","Returntype":"(err error)","Args":"effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) finishTask(effect, filename string, err error)","Funname":"finishTask","Returntype":"","Args":"effect, filename string, err error"},{"Uniquefunname":"func generate(uid int, inputFile, outputFile string, envVars []string)error","Funname":"generate","Returntype":"error","Args":"uid int, inputFile, outputFile string, envVars []string"},{"Uniquefunname":"func get(uid int, effect, filename string, envVars []string)(outputFile string, err error)","Funname":"get","Returntype":"(outputFile string, err error)","Args":"uid int, effect, filename string, envVars []string"},{"Uniquefunname":"func (ie *ImageEffect) hasTask(effect, filename string) bool","Funname":"hasTask","Returntype":"bool","Args":"effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) Delete(effect, filename string) (busErr *dbus.Error)","Funname":"image_effect.ImageEffect.Delete","Returntype":"(busErr *dbus.Error)","Args":"effect, filename string"},{"Uniquefunname":"func image_effect.ImageEffect.Get(sender dbus.Sender, effect, filename string)(outputFile string, busErr *dbus.Error)","Funname":"image_effect.ImageEffect.Get","Returntype":"(outputFile string, busErr *dbus.Error)","Args":"sender dbus.Sender, effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) GetInterfaceName() string","Funname":"image_effect.ImageEffect.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (ie *ImageEffect) addTask(effect, filename string) (ch chan error)","Funname":"image_effect.ImageEffect.addTask","Returntype":"(ch chan error)","Args":"effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) delete(effect, filename string) (err error)","Funname":"image_effect.ImageEffect.delete","Returntype":"(err error)","Args":"effect, filename string"},{"Uniquefunname":"func (ie *ImageEffect) finishTask(effect, filename string, err error)","Funname":"image_effect.ImageEffect.finishTask","Returntype":"","Args":"effect, filename string, err error"},{"Uniquefunname":"func image_effect.ImageEffect.get(uid int, effect, filename string, envVars []string)(outputFile string, err error)","Funname":"image_effect.ImageEffect.get","Returntype":"(outputFile string, err error)","Args":"uid int, effect, filename string, envVars []string"},{"Uniquefunname":"func (ie *ImageEffect) hasTask(effect, filename string) bool","Funname":"image_effect.ImageEffect.hasTask","Returntype":"bool","Args":"effect, filename string"},{"Uniquefunname":"func ddePixmix(uid int, inputFile, outputFile string, envVars []string) error","Funname":"image_effect.ddePixmix","Returntype":"error","Args":"uid int, inputFile, outputFile string, envVars []string"},{"Uniquefunname":"func image_effect.effectToolFunc.generate(uid int, inputFile, outputFile string, envVars []string)error","Funname":"image_effect.effectToolFunc.generate","Returntype":"error","Args":"uid int, inputFile, outputFile string, envVars []string"},{"Uniquefunname":"func newImageEffect() *ImageEffect","Funname":"image_effect.newImageEffect","Returntype":"*ImageEffect","Args":""},{"Uniquefunname":"func newImageEffect() *ImageEffect","Funname":"newImageEffect","Returntype":"*ImageEffect","Args":""}],"Records":[{"Name":"struct:image_effect.ImageEffect","Fields":["image_effect.ImageEffect.methods *struct { Get func() `in:\"effect,filename\" out:\"outputFile\"`; Delete func() `in:\"effect,filename\"`; }","image_effect.ImageEffect.service *dbusutil.Service","image_effect.ImageEffect.tasks map[taskKey]*Task","image_effect.ImageEffect.tasksMu sync.Mutex","image_effect.ImageEffect.tools map[string]effectTool"]},{"Name":"struct:image_effect.Task","Fields":["image_effect.Task.chs []chan error"]},{"Name":"var:image_effect","Fields":["image_effect.allEffects"]},{"Name":"const:image_effect","Fields":["image_effect.cacheDir","image_effect.dbusInterface","image_effect.dbusPath","image_effect.dbusServiceName","image_effect.defaultEffect","image_effect.effectPixmix"]},{"Name":"interface","Fields":["image_effect.effectTool"]},{"Name":"struct:image_effect.taskKey","Fields":["image_effect.taskKey.effect string","image_effect.taskKey.filename string"]}]}
{"Filepath":"image_effect/module.go","Functions":[{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"image_effect.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"image_effect.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"image_effect.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"image_effect.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"image_effect.newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func start() (*ImageEffect, error)","Funname":"image_effect.start","Returntype":"(*ImageEffect, error)","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func start() (*ImageEffect, error)","Funname":"start","Returntype":"(*ImageEffect, error)","Args":""}],"Records":[{"Name":"struct:image_effect.Module","Fields":["image_effect.Module.ie *ImageEffect"]},{"Name":"var:image_effect","Fields":["image_effect.logger"]},{"Name":"const:image_effect","Fields":["image_effect.moduleName"]}]}
{"Filepath":"image_effect/utils.go","Functions":[{"Uniquefunname":"func getOutputFile(effect, filename string) (outputFile string)","Funname":"getOutputFile","Returntype":"(outputFile string)","Args":"effect, filename string"},{"Uniquefunname":"func getOutputFile(effect, filename string) (outputFile string)","Funname":"image_effect.getOutputFile","Returntype":"(outputFile string)","Args":"effect, filename string"},{"Uniquefunname":"func modTimeEqual(t1, t2 time.Time) bool","Funname":"image_effect.modTimeEqual","Returntype":"bool","Args":"t1, t2 time.Time"},{"Uniquefunname":"func runCmdRedirectStdOut(uid int, outputFile string, cmdline, envVars []string) error","Funname":"image_effect.runCmdRedirectStdOut","Returntype":"error","Args":"uid int, outputFile string, cmdline, envVars []string"},{"Uniquefunname":"func setFileModTime(filename string, t time.Time) error","Funname":"image_effect.setFileModTime","Returntype":"error","Args":"filename string, t time.Time"},{"Uniquefunname":"func modTimeEqual(t1, t2 time.Time) bool","Funname":"modTimeEqual","Returntype":"bool","Args":"t1, t2 time.Time"},{"Uniquefunname":"func runCmdRedirectStdOut(uid int, outputFile string, cmdline, envVars []string) error","Funname":"runCmdRedirectStdOut","Returntype":"error","Args":"uid int, outputFile string, cmdline, envVars []string"},{"Uniquefunname":"func setFileModTime(filename string, t time.Time) error","Funname":"setFileModTime","Returntype":"error","Args":"filename string, t time.Time"}],"Records":null}
{"Filepath":"inputdevices/app_layout_config.go","Functions":[{"Uniquefunname":"func (c *appLayoutConfig) deleteLayout(layout string) (changed bool)","Funname":"deleteLayout","Returntype":"(changed bool)","Args":"layout string"},{"Uniquefunname":"func (c *appLayoutConfig) fromMap(m map[string]string)","Funname":"fromMap","Returntype":"","Args":"m map[string]string"},{"Uniquefunname":"func (c *appLayoutConfig) get(app string) (layout string, ok bool)","Funname":"get","Returntype":"(layout string, ok bool)","Args":"app string"},{"Uniquefunname":"func (c *appLayoutConfig) getLayoutIndex(layout string) int","Funname":"getLayoutIndex","Returntype":"int","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) loadAppLayoutConfig() error","Funname":"inputdevices.Keyboard.loadAppLayoutConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (c *appLayoutConfig) deleteLayout(layout string) (changed bool)","Funname":"inputdevices.appLayoutConfig.deleteLayout","Returntype":"(changed bool)","Args":"layout string"},{"Uniquefunname":"func (c *appLayoutConfig) fromMap(m map[string]string)","Funname":"inputdevices.appLayoutConfig.fromMap","Returntype":"","Args":"m map[string]string"},{"Uniquefunname":"func (c *appLayoutConfig) get(app string) (layout string, ok bool)","Funname":"inputdevices.appLayoutConfig.get","Returntype":"(layout string, ok bool)","Args":"app string"},{"Uniquefunname":"func (c *appLayoutConfig) getLayoutIndex(layout string) int","Funname":"inputdevices.appLayoutConfig.getLayoutIndex","Returntype":"int","Args":"layout string"},{"Uniquefunname":"func (c *appLayoutConfig) set(app, layout string) (changed bool)","Funname":"inputdevices.appLayoutConfig.set","Returntype":"(changed bool)","Args":"app, layout string"},{"Uniquefunname":"func (c *appLayoutConfig) setNoLock(app, layout string) (changed bool)","Funname":"inputdevices.appLayoutConfig.setNoLock","Returntype":"(changed bool)","Args":"app, layout string"},{"Uniquefunname":"func (c *appLayoutConfig) toJson() string","Funname":"inputdevices.appLayoutConfig.toJson","Returntype":"string","Args":""},{"Uniquefunname":"func (c *appLayoutConfig) toMap() map[string]string","Funname":"inputdevices.appLayoutConfig.toMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func (kbd *Keyboard) loadAppLayoutConfig() error","Funname":"loadAppLayoutConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (c *appLayoutConfig) set(app, layout string) (changed bool)","Funname":"set","Returntype":"(changed bool)","Args":"app, layout string"},{"Uniquefunname":"func (c *appLayoutConfig) setNoLock(app, layout string) (changed bool)","Funname":"setNoLock","Returntype":"(changed bool)","Args":"app, layout string"},{"Uniquefunname":"func (c *appLayoutConfig) toJson() string","Funname":"toJson","Returntype":"string","Args":""},{"Uniquefunname":"func (c *appLayoutConfig) toMap() map[string]string","Funname":"toMap","Returntype":"map[string]string","Args":""}],"Records":[{"Name":"struct:inputdevices.appLayoutConfig","Fields":["inputdevices.appLayoutConfig.Layouts []string","inputdevices.appLayoutConfig.Map map[string]int","inputdevices.appLayoutConfig.mu sync.Mutex"]}]}
{"Filepath":"inputdevices/handle_gsettings.go","Functions":[{"Uniquefunname":"func (kbd *Keyboard) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) handleGSettings()","Funname":"handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handleGSettings()","Funname":"inputdevices.Keyboard.handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleGSettings()","Funname":"inputdevices.Manager.handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) handleGSettings()","Funname":"inputdevices.Mouse.handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) handleGSettings()","Funname":"inputdevices.Touchpad.handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) handleGSettings()","Funname":"inputdevices.TrackPoint.handleGSettings","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) handleGSettings()","Funname":"inputdevices.Wacom.handleGSettings","Returntype":"","Args":""}],"Records":null}
{"Filepath":"inputdevices/ifc.go","Functions":[{"Uniquefunname":"func (kbd *Keyboard) AddLayoutOption(option string) *dbus.Error","Funname":"AddLayoutOption","Returntype":"*dbus.Error","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) AddUserLayout(layout string) *dbus.Error","Funname":"AddUserLayout","Returntype":"*dbus.Error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) ClearLayoutOption() *dbus.Error","Funname":"ClearLayoutOption","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (kbd *Keyboard) DeleteLayoutOption(option string) *dbus.Error","Funname":"DeleteLayoutOption","Returntype":"*dbus.Error","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) DeleteUserLayout(layout string) *dbus.Error","Funname":"DeleteUserLayout","Returntype":"*dbus.Error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) GetLayoutDesc(layout string) (string, *dbus.Error)","Funname":"GetLayoutDesc","Returntype":"(string, *dbus.Error)","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) LayoutList() (map[string]string, *dbus.Error)","Funname":"LayoutList","Returntype":"(map[string]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (kbd *Keyboard) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Mouse) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (tp *TrackPoint) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (w *Wacom) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (kbd *Keyboard) AddLayoutOption(option string) *dbus.Error","Funname":"inputdevices.Keyboard.AddLayoutOption","Returntype":"*dbus.Error","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) AddUserLayout(layout string) *dbus.Error","Funname":"inputdevices.Keyboard.AddUserLayout","Returntype":"*dbus.Error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) ClearLayoutOption() *dbus.Error","Funname":"inputdevices.Keyboard.ClearLayoutOption","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (kbd *Keyboard) DeleteLayoutOption(option string) *dbus.Error","Funname":"inputdevices.Keyboard.DeleteLayoutOption","Returntype":"*dbus.Error","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) DeleteUserLayout(layout string) *dbus.Error","Funname":"inputdevices.Keyboard.DeleteUserLayout","Returntype":"*dbus.Error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) GetLayoutDesc(layout string) (string, *dbus.Error)","Funname":"inputdevices.Keyboard.GetLayoutDesc","Returntype":"(string, *dbus.Error)","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) LayoutList() (map[string]string, *dbus.Error)","Funname":"inputdevices.Keyboard.LayoutList","Returntype":"(map[string]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (kbd *Keyboard) Reset() *dbus.Error","Funname":"inputdevices.Keyboard.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Mouse) Reset() *dbus.Error","Funname":"inputdevices.Mouse.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (tpad *Touchpad) Reset() *dbus.Error","Funname":"inputdevices.Touchpad.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (tp *TrackPoint) Reset() *dbus.Error","Funname":"inputdevices.TrackPoint.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (w *Wacom) Reset() *dbus.Error","Funname":"inputdevices.Wacom.Reset","Returntype":"*dbus.Error","Args":""}],"Records":null}
{"Filepath":"inputdevices/inputdevices.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewInputdevicesDaemon(logger *log.Logger) *Daemon","Funname":"NewInputdevicesDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"inputdevices.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"inputdevices.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"inputdevices.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewInputdevicesDaemon(logger *log.Logger) *Daemon","Funname":"inputdevices.NewInputdevicesDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"inputdevices.init","Returntype":"","Args":""}],"Records":[{"Name":"var:inputdevices","Fields":["inputdevices._manager","inputdevices.logger"]}]}
{"Filepath":"inputdevices/inputdevices_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Keyboard) emitPropChangedCurrentLayout(value string) error","Funname":"emitPropChangedCurrentLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Mouse) emitPropChangedDeviceList(value string) error","Funname":"emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Touchpad) emitPropChangedDeviceList(value string) error","Funname":"emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *TrackPoint) emitPropChangedDeviceList(value string) error","Funname":"emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Wacom) emitPropChangedDeviceList(value string) error","Funname":"emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Mouse) emitPropChangedExist(value bool) error","Funname":"emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Touchpad) emitPropChangedExist(value bool) error","Funname":"emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *TrackPoint) emitPropChangedExist(value bool) error","Funname":"emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) emitPropChangedExist(value bool) error","Funname":"emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) emitPropChangedMapOutput(value string) error","Funname":"emitPropChangedMapOutput","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Keyboard) emitPropChangedUserLayoutList(value []string) error","Funname":"emitPropChangedUserLayoutList","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *Keyboard) emitPropChangedCurrentLayout(value string) error","Funname":"inputdevices.Keyboard.emitPropChangedCurrentLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Keyboard) emitPropChangedUserLayoutList(value []string) error","Funname":"inputdevices.Keyboard.emitPropChangedUserLayoutList","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *Keyboard) setPropCurrentLayout(value string) (changed bool)","Funname":"inputdevices.Keyboard.setPropCurrentLayout","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Keyboard) setPropUserLayoutList(value []string)","Funname":"inputdevices.Keyboard.setPropUserLayoutList","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *Mouse) emitPropChangedDeviceList(value string) error","Funname":"inputdevices.Mouse.emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Mouse) emitPropChangedExist(value bool) error","Funname":"inputdevices.Mouse.emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Mouse) setPropDeviceList(value string) (changed bool)","Funname":"inputdevices.Mouse.setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Mouse) setPropExist(value bool) (changed bool)","Funname":"inputdevices.Mouse.setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Touchpad) emitPropChangedDeviceList(value string) error","Funname":"inputdevices.Touchpad.emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Touchpad) emitPropChangedExist(value bool) error","Funname":"inputdevices.Touchpad.emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Touchpad) setPropDeviceList(value string) (changed bool)","Funname":"inputdevices.Touchpad.setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Touchpad) setPropExist(value bool) (changed bool)","Funname":"inputdevices.Touchpad.setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *TrackPoint) emitPropChangedDeviceList(value string) error","Funname":"inputdevices.TrackPoint.emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *TrackPoint) emitPropChangedExist(value bool) error","Funname":"inputdevices.TrackPoint.emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *TrackPoint) setPropDeviceList(value string) (changed bool)","Funname":"inputdevices.TrackPoint.setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *TrackPoint) setPropExist(value bool) (changed bool)","Funname":"inputdevices.TrackPoint.setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) emitPropChangedDeviceList(value string) error","Funname":"inputdevices.Wacom.emitPropChangedDeviceList","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Wacom) emitPropChangedExist(value bool) error","Funname":"inputdevices.Wacom.emitPropChangedExist","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) emitPropChangedMapOutput(value string) error","Funname":"inputdevices.Wacom.emitPropChangedMapOutput","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Wacom) setPropDeviceList(value string) (changed bool)","Funname":"inputdevices.Wacom.setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Wacom) setPropExist(value bool) (changed bool)","Funname":"inputdevices.Wacom.setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) setPropMapOutput(value string) (changed bool)","Funname":"inputdevices.Wacom.setPropMapOutput","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Keyboard) setPropCurrentLayout(value string) (changed bool)","Funname":"setPropCurrentLayout","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Mouse) setPropDeviceList(value string) (changed bool)","Funname":"setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Touchpad) setPropDeviceList(value string) (changed bool)","Funname":"setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *TrackPoint) setPropDeviceList(value string) (changed bool)","Funname":"setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Wacom) setPropDeviceList(value string) (changed bool)","Funname":"setPropDeviceList","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Mouse) setPropExist(value bool) (changed bool)","Funname":"setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Touchpad) setPropExist(value bool) (changed bool)","Funname":"setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *TrackPoint) setPropExist(value bool) (changed bool)","Funname":"setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) setPropExist(value bool) (changed bool)","Funname":"setPropExist","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Wacom) setPropMapOutput(value string) (changed bool)","Funname":"setPropMapOutput","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Keyboard) setPropUserLayoutList(value []string)","Funname":"setPropUserLayoutList","Returntype":"","Args":"value []string"}],"Records":null}
{"Filepath":"inputdevices/inputdevices_test.go","Functions":[{"Uniquefunname":"func TestCurveControlPoints(t *testing.T)","Funname":"TestCurveControlPoints","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseXKBFile(t *testing.T)","Funname":"TestParseXKBFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestStrList(t *testing.T)","Funname":"TestStrList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSyndaemonExist(t *testing.T)","Funname":"TestSyndaemonExist","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemLayout(t *testing.T)","Funname":"TestSystemLayout","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCurveControlPoints(t *testing.T)","Funname":"inputdevices.TestCurveControlPoints","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseXKBFile(t *testing.T)","Funname":"inputdevices.TestParseXKBFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestStrList(t *testing.T)","Funname":"inputdevices.TestStrList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSyndaemonExist(t *testing.T)","Funname":"inputdevices.TestSyndaemonExist","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemLayout(t *testing.T)","Funname":"inputdevices.TestSystemLayout","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"inputdevices/keyboard.go","Functions":[{"Uniquefunname":"func (kbd *Keyboard) addUserLayout(layout string)","Funname":"addUserLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) addUserOption(option string)","Funname":"addUserOption","Returntype":"","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) applyCursorBlink()","Funname":"applyCursorBlink","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applyLayout()","Funname":"applyLayout","Returntype":"","Args":""},{"Uniquefunname":"func applyLayout(value string) error","Funname":"applyLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (kbd *Keyboard) applyOptions()","Funname":"applyOptions","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applyRepeat()","Funname":"applyRepeat","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applySettings()","Funname":"applySettings","Returntype":"","Args":""},{"Uniquefunname":"func applyXmodmapConfig() error","Funname":"applyXmodmapConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (kbd *Keyboard) checkLayout(layout string) error","Funname":"checkLayout","Returntype":"error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) correctLayout()","Funname":"correctLayout","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) delUserLayout(layout string)","Funname":"delUserLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) delUserOption(option string)","Funname":"delUserOption","Returntype":"","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func fixLayout(layout string) string","Funname":"fixLayout","Returntype":"string","Args":"layout string"},{"Uniquefunname":"func fixLayoutList(layouts []string) []string","Funname":"fixLayoutList","Returntype":"[]string","Args":"layouts []string"},{"Uniquefunname":"func getSystemLayout(file string) (string, error)","Funname":"getSystemLayout","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getValueFromLine(line, delim string) string","Funname":"getValueFromLine","Returntype":"string","Args":"line, delim string"},{"Uniquefunname":"func (kbd *Keyboard) handleActiveWindowChanged()","Funname":"handleActiveWindowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handleDeviceChanged()","Funname":"handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handlePropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"handlePropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (kbd *Keyboard) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) initUser()","Funname":"initUser","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) addUserLayout(layout string)","Funname":"inputdevices.Keyboard.addUserLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) addUserOption(option string)","Funname":"inputdevices.Keyboard.addUserOption","Returntype":"","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) applyCursorBlink()","Funname":"inputdevices.Keyboard.applyCursorBlink","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applyLayout()","Funname":"inputdevices.Keyboard.applyLayout","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applyOptions()","Funname":"inputdevices.Keyboard.applyOptions","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applyRepeat()","Funname":"inputdevices.Keyboard.applyRepeat","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) applySettings()","Funname":"inputdevices.Keyboard.applySettings","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) checkLayout(layout string) error","Funname":"inputdevices.Keyboard.checkLayout","Returntype":"error","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) correctLayout()","Funname":"inputdevices.Keyboard.correctLayout","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) delUserLayout(layout string)","Funname":"inputdevices.Keyboard.delUserLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) delUserOption(option string)","Funname":"inputdevices.Keyboard.delUserOption","Returntype":"","Args":"option string"},{"Uniquefunname":"func (kbd *Keyboard) destroy()","Funname":"inputdevices.Keyboard.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handleActiveWindowChanged()","Funname":"inputdevices.Keyboard.handleActiveWindowChanged","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handleDeviceChanged()","Funname":"inputdevices.Keyboard.handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) handlePropertyNotifyEvent(ev *x.PropertyNotifyEvent)","Funname":"inputdevices.Keyboard.handlePropertyNotifyEvent","Returntype":"","Args":"ev *x.PropertyNotifyEvent"},{"Uniquefunname":"func (kbd *Keyboard) init()","Funname":"inputdevices.Keyboard.init","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) initUser()","Funname":"inputdevices.Keyboard.initUser","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) listenRootWindowXEvent()","Funname":"inputdevices.Keyboard.listenRootWindowXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) listenSettingsChanged()","Funname":"inputdevices.Keyboard.listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) saveAppLayoutConfig()","Funname":"inputdevices.Keyboard.saveAppLayoutConfig","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) setCurrentLayout(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"inputdevices.Keyboard.setCurrentLayout","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (kbd *Keyboard) setLayout(layout string)","Funname":"inputdevices.Keyboard.setLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutForAccountsUser(layout string)","Funname":"inputdevices.Keyboard.setLayoutForAccountsUser","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutListForAccountsUser(layoutList []string)","Funname":"inputdevices.Keyboard.setLayoutListForAccountsUser","Returntype":"","Args":"layoutList []string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutScopeApp(layout string)","Funname":"inputdevices.Keyboard.setLayoutScopeApp","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) startXEventLoop()","Funname":"inputdevices.Keyboard.startXEventLoop","Returntype":"","Args":""},{"Uniquefunname":"func applyLayout(value string) error","Funname":"inputdevices.applyLayout","Returntype":"error","Args":"value string"},{"Uniquefunname":"func applyXmodmapConfig() error","Funname":"inputdevices.applyXmodmapConfig","Returntype":"error","Args":""},{"Uniquefunname":"func fixLayout(layout string) string","Funname":"inputdevices.fixLayout","Returntype":"string","Args":"layout string"},{"Uniquefunname":"func fixLayoutList(layouts []string) []string","Funname":"inputdevices.fixLayoutList","Returntype":"[]string","Args":"layouts []string"},{"Uniquefunname":"func getSystemLayout(file string) (string, error)","Funname":"inputdevices.getSystemLayout","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getValueFromLine(line, delim string) string","Funname":"inputdevices.getValueFromLine","Returntype":"string","Args":"line, delim string"},{"Uniquefunname":"func newKeyboard(service *dbusutil.Service) *Keyboard","Funname":"inputdevices.newKeyboard","Returntype":"*Keyboard","Args":"service *dbusutil.Service"},{"Uniquefunname":"func setQtCursorBlink(rate int32, file string) error","Funname":"inputdevices.setQtCursorBlink","Returntype":"error","Args":"rate int32, file string"},{"Uniquefunname":"func (kbd *Keyboard) listenRootWindowXEvent()","Funname":"listenRootWindowXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) listenSettingsChanged()","Funname":"listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func newKeyboard(service *dbusutil.Service) *Keyboard","Funname":"newKeyboard","Returntype":"*Keyboard","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (kbd *Keyboard) saveAppLayoutConfig()","Funname":"saveAppLayoutConfig","Returntype":"","Args":""},{"Uniquefunname":"func (kbd *Keyboard) setCurrentLayout(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"setCurrentLayout","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (kbd *Keyboard) setLayout(layout string)","Funname":"setLayout","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutForAccountsUser(layout string)","Funname":"setLayoutForAccountsUser","Returntype":"","Args":"layout string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutListForAccountsUser(layoutList []string)","Funname":"setLayoutListForAccountsUser","Returntype":"","Args":"layoutList []string"},{"Uniquefunname":"func (kbd *Keyboard) setLayoutScopeApp(layout string)","Funname":"setLayoutScopeApp","Returntype":"","Args":"layout string"},{"Uniquefunname":"func setQtCursorBlink(rate int32, file string) error","Funname":"setQtCursorBlink","Returntype":"error","Args":"rate int32, file string"},{"Uniquefunname":"func (kbd *Keyboard) startXEventLoop()","Funname":"startXEventLoop","Returntype":"","Args":""}],"Records":[{"Name":"struct:inputdevices.Keyboard","Fields":["inputdevices.Keyboard.CapslockToggle gsprop.Bool","inputdevices.Keyboard.CurrentLayout string","inputdevices.Keyboard.CursorBlink gsprop.Int","inputdevices.Keyboard.LayoutScope gsprop.Enum","inputdevices.Keyboard.PropsMu sync.RWMutex","inputdevices.Keyboard.RepeatDelay gsprop.Uint","inputdevices.Keyboard.RepeatEnabled gsprop.Bool","inputdevices.Keyboard.RepeatInterval gsprop.Uint","inputdevices.Keyboard.UserLayoutList []string","inputdevices.Keyboard.UserOptionList gsprop.Strv","inputdevices.Keyboard.activeWinClass string","inputdevices.Keyboard.activeWindow x.Window","inputdevices.Keyboard.appLayoutCfg appLayoutConfig","inputdevices.Keyboard.devNumber int","inputdevices.Keyboard.layoutMap layoutMap","inputdevices.Keyboard.methods *struct { AddLayoutOption func() `in:\"option\"`; DeleteLayoutOption func() `in:\"option\"`; AddUserLayout func() `in:\"layout\"`; DeleteUserLayout func() `in:\"layout\"`; GetLayoutDesc func() `in:\"layout\" out:\"description\"`; LayoutList func() `out:\"layout_list\"`; }","inputdevices.Keyboard.service *dbusutil.Service","inputdevices.Keyboard.setting *gio.Settings","inputdevices.Keyboard.sysSigLoop *dbusutil.SignalLoop","inputdevices.Keyboard.user *accounts.User","inputdevices.Keyboard.xConn *x.Conn"]},{"Name":"const:inputdevices","Fields":["inputdevices.cmdSetKbd","inputdevices.kbdDefaultLayout","inputdevices.kbdKeyAppLayoutMap","inputdevices.kbdKeyCapslockToggle","inputdevices.kbdKeyCursorBlink","inputdevices.kbdKeyLayoutOptions","inputdevices.kbdKeyLayoutScope","inputdevices.kbdKeyRepeatDelay","inputdevices.kbdKeyRepeatEnable","inputdevices.kbdKeyRepeatInterval","inputdevices.kbdSchema","inputdevices.kbdSystemConfig","inputdevices.layoutDelim","inputdevices.layoutScopeApp","inputdevices.layoutScopeGlobal","inputdevices.qtDefaultConfig"]},{"Name":"var:inputdevices","Fields":["inputdevices.errInvalidLayout"]}]}
{"Filepath":"inputdevices/kwayland.go","Functions":[{"Uniquefunname":"func doHandleKWinDeviceAdded(sysName string)","Funname":"doHandleKWinDeviceAdded","Returntype":"","Args":"sysName string"},{"Uniquefunname":"func doHandleKWinDeviceRemoved(sysName string)","Funname":"doHandleKWinDeviceRemoved","Returntype":"","Args":"sysName string"},{"Uniquefunname":"func handleInputDeviceChanged(srv *dbusutil.Service, stop bool)","Funname":"handleInputDeviceChanged","Returntype":"","Args":"srv *dbusutil.Service, stop bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func doHandleKWinDeviceAdded(sysName string)","Funname":"inputdevices.doHandleKWinDeviceAdded","Returntype":"","Args":"sysName string"},{"Uniquefunname":"func doHandleKWinDeviceRemoved(sysName string)","Funname":"inputdevices.doHandleKWinDeviceRemoved","Returntype":"","Args":"sysName string"},{"Uniquefunname":"func handleInputDeviceChanged(srv *dbusutil.Service, stop bool)","Funname":"inputdevices.handleInputDeviceChanged","Returntype":"","Args":"srv *dbusutil.Service, stop bool"},{"Uniquefunname":"func init()","Funname":"inputdevices.init","Returntype":"","Args":""}],"Records":[{"Name":"var:inputdevices","Fields":["inputdevices.globalWayland","inputdevices.kwinIdList","inputdevices.kwinManager"]}]}
{"Filepath":"inputdevices/layout_list.go","Functions":[{"Uniquefunname":"func (layoutMap layoutMap) filterByLocales(locales []string) map[string]string","Funname":"filterByLocales","Returntype":"map[string]string","Args":"locales []string"},{"Uniquefunname":"func getLayoutsFromFile(filename string) (layoutMap, error)","Funname":"getLayoutsFromFile","Returntype":"(layoutMap, error)","Args":"filename string"},{"Uniquefunname":"func getLayoutsFromFile(filename string) (layoutMap, error)","Funname":"inputdevices.getLayoutsFromFile","Returntype":"(layoutMap, error)","Args":"filename string"},{"Uniquefunname":"func (v *layoutDetail) matchAnyLang(languages []string) bool","Funname":"inputdevices.layoutDetail.matchAnyLang","Returntype":"bool","Args":"languages []string"},{"Uniquefunname":"func (layoutMap layoutMap) filterByLocales(locales []string) map[string]string","Funname":"inputdevices.layoutMap.filterByLocales","Returntype":"map[string]string","Args":"locales []string"},{"Uniquefunname":"func parseXML(filename string) (XKBConfigRegister, error)","Funname":"inputdevices.parseXML","Returntype":"(XKBConfigRegister, error)","Args":"filename string"},{"Uniquefunname":"func (v *layoutDetail) matchAnyLang(languages []string) bool","Funname":"matchAnyLang","Returntype":"bool","Args":"languages []string"},{"Uniquefunname":"func parseXML(filename string) (XKBConfigRegister, error)","Funname":"parseXML","Returntype":"(XKBConfigRegister, error)","Args":"filename string"}],"Records":[{"Name":"struct:inputdevices.XConfigItem","Fields":["inputdevices.XConfigItem.Description string","inputdevices.XConfigItem.Languages []string","inputdevices.XConfigItem.Name string"]},{"Name":"struct:inputdevices.XKBConfigRegister","Fields":["inputdevices.XKBConfigRegister.Layouts []XLayout"]},{"Name":"struct:inputdevices.XLayout","Fields":["inputdevices.XLayout.ConfigItem XConfigItem","inputdevices.XLayout.Variants []XConfigItem"]},{"Name":"const:inputdevices","Fields":["inputdevices.kbdLayoutsXml","inputdevices.kbdTextDomain"]},{"Name":"struct:inputdevices.layoutDetail","Fields":["inputdevices.layoutDetail.Description string","inputdevices.layoutDetail.Languages []string"]}]}
{"Filepath":"inputdevices/manager.go","Functions":[{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func controlImWheel(speed uint32) error","Funname":"controlImWheel","Returntype":"error","Args":"speed uint32"},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"inputdevices.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setWheelSpeed(inInit bool)","Funname":"inputdevices.Manager.setWheelSpeed","Returntype":"","Args":"inInit bool"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"inputdevices.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func controlImWheel(speed uint32) error","Funname":"inputdevices.controlImWheel","Returntype":"error","Args":"speed uint32"},{"Uniquefunname":"func writeImWheelConfig(file string, speed uint32) error","Funname":"inputdevices.writeImWheelConfig","Returntype":"error","Args":"file string, speed uint32"},{"Uniquefunname":"func (m *Manager) setWheelSpeed(inInit bool)","Funname":"setWheelSpeed","Returntype":"","Args":"inInit bool"},{"Uniquefunname":"func writeImWheelConfig(file string, speed uint32) error","Funname":"writeImWheelConfig","Returntype":"error","Args":"file string, speed uint32"}],"Records":[{"Name":"struct:inputdevices.Manager","Fields":["inputdevices.Manager.Infos devicePathInfos","inputdevices.Manager.WheelSpeed gsprop.Uint","inputdevices.Manager.imWheelConfigFile string","inputdevices.Manager.kbd *Keyboard","inputdevices.Manager.mouse *Mouse","inputdevices.Manager.sessionSigLoop *dbusutil.SignalLoop","inputdevices.Manager.settings *gio.Settings","inputdevices.Manager.syncConfig *dsync.Config","inputdevices.Manager.tpad *Touchpad","inputdevices.Manager.trackPoint *TrackPoint","inputdevices.Manager.wacom *Wacom"]},{"Name":"struct:inputdevices.devicePathInfo","Fields":["inputdevices.devicePathInfo.Path string","inputdevices.devicePathInfo.Type string"]},{"Name":"const:inputdevices","Fields":["inputdevices.gsKeyWheelSpeed","inputdevices.gsSchemaInputDevices","inputdevices.imWheelBin"]}]}
{"Filepath":"inputdevices/mouse.go","Functions":[{"Uniquefunname":"func (m *Mouse) disableTouchPad()","Funname":"disableTouchPad","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) doubleClick()","Funname":"doubleClick","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) dragThreshold()","Funname":"dragThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableAdaptiveAccelProfile()","Funname":"enableAdaptiveAccelProfile","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableLeftHanded()","Funname":"enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableMidBtnEmu()","Funname":"enableMidBtnEmu","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableNaturalScroll()","Funname":"enableNaturalScroll","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) handleDeviceChanged()","Funname":"handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) disableTouchPad()","Funname":"inputdevices.Mouse.disableTouchPad","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) doubleClick()","Funname":"inputdevices.Mouse.doubleClick","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) dragThreshold()","Funname":"inputdevices.Mouse.dragThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableAdaptiveAccelProfile()","Funname":"inputdevices.Mouse.enableAdaptiveAccelProfile","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableLeftHanded()","Funname":"inputdevices.Mouse.enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableMidBtnEmu()","Funname":"inputdevices.Mouse.enableMidBtnEmu","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) enableNaturalScroll()","Funname":"inputdevices.Mouse.enableNaturalScroll","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) handleDeviceChanged()","Funname":"inputdevices.Mouse.handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) init()","Funname":"inputdevices.Mouse.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) motionAcceleration()","Funname":"inputdevices.Mouse.motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) motionScaling()","Funname":"inputdevices.Mouse.motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) motionThreshold()","Funname":"inputdevices.Mouse.motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) syncConfigToXsettings()","Funname":"inputdevices.Mouse.syncConfigToXsettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) updateDXMouses()","Funname":"inputdevices.Mouse.updateDXMouses","Returntype":"","Args":""},{"Uniquefunname":"func newMouse(service *dbusutil.Service, touchPad *Touchpad) *Mouse","Funname":"inputdevices.newMouse","Returntype":"*Mouse","Args":"service *dbusutil.Service, touchPad *Touchpad"},{"Uniquefunname":"func (m *Mouse) motionAcceleration()","Funname":"motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) motionScaling()","Funname":"motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) motionThreshold()","Funname":"motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func newMouse(service *dbusutil.Service, touchPad *Touchpad) *Mouse","Funname":"newMouse","Returntype":"*Mouse","Args":"service *dbusutil.Service, touchPad *Touchpad"},{"Uniquefunname":"func (m *Mouse) syncConfigToXsettings()","Funname":"syncConfigToXsettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Mouse) updateDXMouses()","Funname":"updateDXMouses","Returntype":"","Args":""}],"Records":[{"Name":"struct:inputdevices.Mouse","Fields":["inputdevices.Mouse.AdaptiveAccelProfile gsprop.Bool","inputdevices.Mouse.DeviceList string","inputdevices.Mouse.DisableTpad gsprop.Bool","inputdevices.Mouse.DoubleClick gsprop.Int","inputdevices.Mouse.DragThreshold gsprop.Int","inputdevices.Mouse.Exist bool","inputdevices.Mouse.LeftHanded gsprop.Bool","inputdevices.Mouse.MiddleButtonEmulation gsprop.Bool","inputdevices.Mouse.MotionAcceleration gsprop.Double","inputdevices.Mouse.MotionScaling gsprop.Double","inputdevices.Mouse.MotionThreshold gsprop.Double","inputdevices.Mouse.NaturalScroll gsprop.Bool","inputdevices.Mouse.PropsMu sync.RWMutex","inputdevices.Mouse.devInfos dxMouses","inputdevices.Mouse.service *dbusutil.Service","inputdevices.Mouse.setting *gio.Settings","inputdevices.Mouse.touchPad *Touchpad"]},{"Name":"const:inputdevices","Fields":["inputdevices.mouseKeyAcceleration","inputdevices.mouseKeyAdaptiveAccel","inputdevices.mouseKeyDisableTouchpad","inputdevices.mouseKeyDoubleClick","inputdevices.mouseKeyDragThreshold","inputdevices.mouseKeyLeftHanded","inputdevices.mouseKeyMiddleButton","inputdevices.mouseKeyNaturalScroll","inputdevices.mouseKeyScaling","inputdevices.mouseKeyThreshold","inputdevices.mouseSchema"]}]}
{"Filepath":"inputdevices/stub.go","Functions":[{"Uniquefunname":"func (*Keyboard) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Mouse) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Touchpad) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*TrackPoint) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Wacom) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Keyboard) GetInterfaceName() string","Funname":"inputdevices.Keyboard.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"inputdevices.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Mouse) GetInterfaceName() string","Funname":"inputdevices.Mouse.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Touchpad) GetInterfaceName() string","Funname":"inputdevices.Touchpad.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*TrackPoint) GetInterfaceName() string","Funname":"inputdevices.TrackPoint.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Wacom) GetInterfaceName() string","Funname":"inputdevices.Wacom.GetInterfaceName","Returntype":"string","Args":""}],"Records":[{"Name":"const:inputdevices","Fields":["inputdevices.dbusInterface","inputdevices.dbusPath","inputdevices.dbusServiceName","inputdevices.kbdDBusInterface","inputdevices.kbdDBusPath","inputdevices.mouseDBusInterface","inputdevices.mouseDBusPath","inputdevices.touchPadDBusInterface","inputdevices.touchPadDBusPath","inputdevices.trackPointDBusInterface","inputdevices.wacomDBusInterface","inputdevices.wacomDBusPath"]}]}
{"Filepath":"inputdevices/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"inputdevices.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"inputdevices.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"struct:inputdevices.syncConfig","Fields":["inputdevices.syncConfig.m *Manager"]},{"Name":"struct:inputdevices.syncData","Fields":["inputdevices.syncData.Mouse *syncMouseData","inputdevices.syncData.Touchpad *syncTPadData","inputdevices.syncData.Version string"]},{"Name":"struct:inputdevices.syncMouseData","Fields":["inputdevices.syncMouseData.NaturalScroll bool"]},{"Name":"struct:inputdevices.syncTPadData","Fields":["inputdevices.syncTPadData.NaturalScroll bool"]},{"Name":"const:inputdevices","Fields":["inputdevices.syncVersion"]}]}
{"Filepath":"inputdevices/touchpad.go","Functions":[{"Uniquefunname":"func (tpad *Touchpad) disableWhileTyping()","Funname":"disableWhileTyping","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enable(enabled bool)","Funname":"enable","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) enableEdgeScroll()","Funname":"enableEdgeScroll","Returntype":"","Args":""},{"Uniquefunname":"func enableGesture(enabled bool)","Funname":"enableGesture","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) enableLeftHanded()","Funname":"enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableNaturalScroll()","Funname":"enableNaturalScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enablePalmDetect()","Funname":"enablePalmDetect","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableTapToClick()","Funname":"enableTapToClick","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableTwoFingerScroll()","Funname":"enableTwoFingerScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) handleDeviceChanged()","Funname":"handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) disableWhileTyping()","Funname":"inputdevices.Touchpad.disableWhileTyping","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enable(enabled bool)","Funname":"inputdevices.Touchpad.enable","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (tpad *Touchpad) enableEdgeScroll()","Funname":"inputdevices.Touchpad.enableEdgeScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableLeftHanded()","Funname":"inputdevices.Touchpad.enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableNaturalScroll()","Funname":"inputdevices.Touchpad.enableNaturalScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enablePalmDetect()","Funname":"inputdevices.Touchpad.enablePalmDetect","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableTapToClick()","Funname":"inputdevices.Touchpad.enableTapToClick","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) enableTwoFingerScroll()","Funname":"inputdevices.Touchpad.enableTwoFingerScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) handleDeviceChanged()","Funname":"inputdevices.Touchpad.handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) init()","Funname":"inputdevices.Touchpad.init","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) motionAcceleration()","Funname":"inputdevices.Touchpad.motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) motionScaling()","Funname":"inputdevices.Touchpad.motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) motionThreshold()","Funname":"inputdevices.Touchpad.motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) setPalmDimensions()","Funname":"inputdevices.Touchpad.setPalmDimensions","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) setScrollDistance()","Funname":"inputdevices.Touchpad.setScrollDistance","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) startSyndaemon()","Funname":"inputdevices.Touchpad.startSyndaemon","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) stopSyndaemon()","Funname":"inputdevices.Touchpad.stopSyndaemon","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) updateDXTpads()","Funname":"inputdevices.Touchpad.updateDXTpads","Returntype":"","Args":""},{"Uniquefunname":"func enableGesture(enabled bool)","Funname":"inputdevices.enableGesture","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func isProcessExist(file, name string) bool","Funname":"inputdevices.isProcessExist","Returntype":"bool","Args":"file, name string"},{"Uniquefunname":"func isSyndaemonExist(pidFile string) bool","Funname":"inputdevices.isSyndaemonExist","Returntype":"bool","Args":"pidFile string"},{"Uniquefunname":"func newTouchpad(service *dbusutil.Service) *Touchpad","Funname":"inputdevices.newTouchpad","Returntype":"*Touchpad","Args":"service *dbusutil.Service"},{"Uniquefunname":"func isProcessExist(file, name string) bool","Funname":"isProcessExist","Returntype":"bool","Args":"file, name string"},{"Uniquefunname":"func isSyndaemonExist(pidFile string) bool","Funname":"isSyndaemonExist","Returntype":"bool","Args":"pidFile string"},{"Uniquefunname":"func (tpad *Touchpad) motionAcceleration()","Funname":"motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) motionScaling()","Funname":"motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) motionThreshold()","Funname":"motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func newTouchpad(service *dbusutil.Service) *Touchpad","Funname":"newTouchpad","Returntype":"*Touchpad","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (tpad *Touchpad) setPalmDimensions()","Funname":"setPalmDimensions","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) setScrollDistance()","Funname":"setScrollDistance","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) startSyndaemon()","Funname":"startSyndaemon","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) stopSyndaemon()","Funname":"stopSyndaemon","Returntype":"","Args":""},{"Uniquefunname":"func (tpad *Touchpad) updateDXTpads()","Funname":"updateDXTpads","Returntype":"","Args":""}],"Records":[{"Name":"struct:inputdevices.Touchpad","Fields":["inputdevices.Touchpad.DeltaScroll gsprop.Int","inputdevices.Touchpad.DeviceList string","inputdevices.Touchpad.DisableIfTyping gsprop.Bool","inputdevices.Touchpad.DoubleClick gsprop.Int","inputdevices.Touchpad.DragThreshold gsprop.Int","inputdevices.Touchpad.EdgeScroll gsprop.Bool","inputdevices.Touchpad.Exist bool","inputdevices.Touchpad.HorizScroll gsprop.Bool","inputdevices.Touchpad.LeftHanded gsprop.Bool","inputdevices.Touchpad.MotionAcceleration gsprop.Double","inputdevices.Touchpad.MotionScaling gsprop.Double","inputdevices.Touchpad.MotionThreshold gsprop.Double","inputdevices.Touchpad.NaturalScroll gsprop.Bool","inputdevices.Touchpad.PalmDetect gsprop.Bool","inputdevices.Touchpad.PalmMinWidth gsprop.Int","inputdevices.Touchpad.PalmMinZ gsprop.Int","inputdevices.Touchpad.PropsMu sync.RWMutex","inputdevices.Touchpad.TPadEnable gsprop.Bool","inputdevices.Touchpad.TapClick gsprop.Bool","inputdevices.Touchpad.VertScroll gsprop.Bool","inputdevices.Touchpad.devInfos dxTouchpads","inputdevices.Touchpad.mouseSetting *gio.Settings","inputdevices.Touchpad.service *dbusutil.Service","inputdevices.Touchpad.setting *gio.Settings"]},{"Name":"const:inputdevices","Fields":["inputdevices.syndaemonPidFile","inputdevices.tpadKeyAcceleration","inputdevices.tpadKeyDisableWhileTyping","inputdevices.tpadKeyEdgeScroll","inputdevices.tpadKeyEnabled","inputdevices.tpadKeyHorizScroll","inputdevices.tpadKeyLeftHanded","inputdevices.tpadKeyNaturalScroll","inputdevices.tpadKeyPalmDetect","inputdevices.tpadKeyPalmMinWidth","inputdevices.tpadKeyPalmMinZ","inputdevices.tpadKeyScaling","inputdevices.tpadKeyScrollDelta","inputdevices.tpadKeyTapClick","inputdevices.tpadKeyThreshold","inputdevices.tpadKeyVertScroll","inputdevices.tpadKeyWhileTypingCmd","inputdevices.tpadSchema"]}]}
{"Filepath":"inputdevices/trackpoint.go","Functions":[{"Uniquefunname":"func (tp *TrackPoint) enableLeftHanded()","Funname":"enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableMiddleButton()","Funname":"enableMiddleButton","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableWheelEmulation()","Funname":"enableWheelEmulation","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableWheelHorizScroll()","Funname":"enableWheelHorizScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableLeftHanded()","Funname":"inputdevices.TrackPoint.enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableMiddleButton()","Funname":"inputdevices.TrackPoint.enableMiddleButton","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableWheelEmulation()","Funname":"inputdevices.TrackPoint.enableWheelEmulation","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) enableWheelHorizScroll()","Funname":"inputdevices.TrackPoint.enableWheelHorizScroll","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) init()","Funname":"inputdevices.TrackPoint.init","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) middleButtonTimeout()","Funname":"inputdevices.TrackPoint.middleButtonTimeout","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionAcceleration()","Funname":"inputdevices.TrackPoint.motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionScaling()","Funname":"inputdevices.TrackPoint.motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionThreshold()","Funname":"inputdevices.TrackPoint.motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) updateDXMouses()","Funname":"inputdevices.TrackPoint.updateDXMouses","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) wheelEmulationButton()","Funname":"inputdevices.TrackPoint.wheelEmulationButton","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) wheelEmulationTimeout()","Funname":"inputdevices.TrackPoint.wheelEmulationTimeout","Returntype":"","Args":""},{"Uniquefunname":"func newTrackPoint(service *dbusutil.Service) *TrackPoint","Funname":"inputdevices.newTrackPoint","Returntype":"*TrackPoint","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (tp *TrackPoint) middleButtonTimeout()","Funname":"middleButtonTimeout","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionAcceleration()","Funname":"motionAcceleration","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionScaling()","Funname":"motionScaling","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) motionThreshold()","Funname":"motionThreshold","Returntype":"","Args":""},{"Uniquefunname":"func newTrackPoint(service *dbusutil.Service) *TrackPoint","Funname":"newTrackPoint","Returntype":"*TrackPoint","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (tp *TrackPoint) updateDXMouses()","Funname":"updateDXMouses","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) wheelEmulationButton()","Funname":"wheelEmulationButton","Returntype":"","Args":""},{"Uniquefunname":"func (tp *TrackPoint) wheelEmulationTimeout()","Funname":"wheelEmulationTimeout","Returntype":"","Args":""}],"Records":[{"Name":"struct:inputdevices.TrackPoint","Fields":["inputdevices.TrackPoint.DeviceList string","inputdevices.TrackPoint.Exist bool","inputdevices.TrackPoint.LeftHanded gsprop.Bool","inputdevices.TrackPoint.MiddleButtonEnabled gsprop.Bool","inputdevices.TrackPoint.MiddleButtonTimeout gsprop.Int","inputdevices.TrackPoint.MotionAcceleration gsprop.Double","inputdevices.TrackPoint.MotionScaling gsprop.Double","inputdevices.TrackPoint.MotionThreshold gsprop.Double","inputdevices.TrackPoint.PropsMu sync.RWMutex","inputdevices.TrackPoint.WheelEmulation gsprop.Bool","inputdevices.TrackPoint.WheelEmulationButton gsprop.Int","inputdevices.TrackPoint.WheelEmulationTimeout gsprop.Int","inputdevices.TrackPoint.WheelHorizScroll gsprop.Bool","inputdevices.TrackPoint.devInfos dxMouses","inputdevices.TrackPoint.service *dbusutil.Service","inputdevices.TrackPoint.setting *gio.Settings"]},{"Name":"const:inputdevices","Fields":["inputdevices.trackPointKeyAcceleration","inputdevices.trackPointKeyLeftHanded","inputdevices.trackPointKeyMidButton","inputdevices.trackPointKeyMidButtonTimeout","inputdevices.trackPointKeyScaling","inputdevices.trackPointKeyThreshold","inputdevices.trackPointKeyWheel","inputdevices.trackPointKeyWheelButton","inputdevices.trackPointKeyWheelHorizScroll","inputdevices.trackPointKeyWheelTimeout","inputdevices.trackPointSchema"]}]}
{"Filepath":"inputdevices/utils.go","Functions":[{"Uniquefunname":"func addItemToList(item string, list []string) ([]string, bool)","Funname":"addItemToList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func delItemFromList(item string, list []string) ([]string, bool)","Funname":"delItemFromList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func filterSpaceStr(list []string) []string","Funname":"filterSpaceStr","Returntype":"[]string","Args":"list []string"},{"Uniquefunname":"func addItemToList(item string, list []string) ([]string, bool)","Funname":"inputdevices.addItemToList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func delItemFromList(item string, list []string) ([]string, bool)","Funname":"inputdevices.delItemFromList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func doAction(cmd string) error","Funname":"inputdevices.doAction","Returntype":"error","Args":"cmd string"},{"Uniquefunname":"func filterSpaceStr(list []string) []string","Funname":"inputdevices.filterSpaceStr","Returntype":"[]string","Args":"list []string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"inputdevices.isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func xsSetInt32(prop string, value int32)","Funname":"inputdevices.xsSetInt32","Returntype":"","Args":"prop string, value int32"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func xsSetInt32(prop string, value int32)","Funname":"xsSetInt32","Returntype":"","Args":"prop string, value int32"}],"Records":[{"Name":"var:inputdevices","Fields":["inputdevices.xsLocker","inputdevices.xsSetting"]},{"Name":"const:inputdevices","Fields":["inputdevices.xsPropBlinkTimeut","inputdevices.xsPropDoubleClick","inputdevices.xsPropDragThres","inputdevices.xsettingsSchema"]}]}
{"Filepath":"inputdevices/utils_test.go","Functions":[{"Uniquefunname":"func Test_addItemToList(t *testing.T)","Funname":"Test_addItemToList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_addItemToList(t *testing.T)","Funname":"inputdevices.Test_addItemToList","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"inputdevices/wacom.go","Functions":[{"Uniquefunname":"func (i *OutputInfo) Contains(x, y int16) bool","Funname":"Contains","Returntype":"bool","Args":"x, y int16"},{"Uniquefunname":"func (i *OutputInfo) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (w *Wacom) _setArea(dw *dxinput.Wacom) error","Funname":"_setArea","Returntype":"error","Args":"dw *dxinput.Wacom"},{"Uniquefunname":"func (w *Wacom) checkLoop()","Funname":"checkLoop","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) enableCursorMode()","Funname":"enableCursorMode","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) enableLeftHanded()","Funname":"enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func getOutputInfo(conn *x.Conn, output randr.Output, ts x.Timestamp) (*OutputInfo, error)","Funname":"getOutputInfo","Returntype":"(*OutputInfo, error)","Args":"conn *x.Conn, output randr.Output, ts x.Timestamp"},{"Uniquefunname":"func (w *Wacom) getPressureCurveArray(devType int) ([]int, error)","Funname":"getPressureCurveArray","Returntype":"([]int, error)","Args":"devType int"},{"Uniquefunname":"func getPressureCurveControlPoints(level int) []int","Funname":"getPressureCurveControlPoints","Returntype":"[]int","Args":"level int"},{"Uniquefunname":"func (w *Wacom) getRawSample(devType int) (uint32, error)","Funname":"getRawSample","Returntype":"(uint32, error)","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) getThreshold(devType int) (int, error)","Funname":"getThreshold","Returntype":"(int, error)","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) handleDeviceChanged()","Funname":"handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) handleScreenChanged()","Funname":"handleScreenChanged","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) initX() error","Funname":"initX","Returntype":"error","Args":""},{"Uniquefunname":"func (i *OutputInfo) Contains(x, y int16) bool","Funname":"inputdevices.OutputInfo.Contains","Returntype":"bool","Args":"x, y int16"},{"Uniquefunname":"func (i *OutputInfo) String() string","Funname":"inputdevices.OutputInfo.String","Returntype":"string","Args":""},{"Uniquefunname":"func (w *Wacom) _setArea(dw *dxinput.Wacom) error","Funname":"inputdevices.Wacom._setArea","Returntype":"error","Args":"dw *dxinput.Wacom"},{"Uniquefunname":"func (w *Wacom) checkLoop()","Funname":"inputdevices.Wacom.checkLoop","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) destroy()","Funname":"inputdevices.Wacom.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) enableCursorMode()","Funname":"inputdevices.Wacom.enableCursorMode","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) enableLeftHanded()","Funname":"inputdevices.Wacom.enableLeftHanded","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) getPressureCurveArray(devType int) ([]int, error)","Funname":"inputdevices.Wacom.getPressureCurveArray","Returntype":"([]int, error)","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) getRawSample(devType int) (uint32, error)","Funname":"inputdevices.Wacom.getRawSample","Returntype":"(uint32, error)","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) getThreshold(devType int) (int, error)","Funname":"inputdevices.Wacom.getThreshold","Returntype":"(int, error)","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) handleDeviceChanged()","Funname":"inputdevices.Wacom.handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) handleScreenChanged()","Funname":"inputdevices.Wacom.handleScreenChanged","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) init()","Funname":"inputdevices.Wacom.init","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) initX() error","Funname":"inputdevices.Wacom.initX","Returntype":"error","Args":""},{"Uniquefunname":"func (w *Wacom) listenXRandrEvents()","Funname":"inputdevices.Wacom.listenXRandrEvents","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) pointerInOutput() *OutputInfo","Funname":"inputdevices.Wacom.pointerInOutput","Returntype":"*OutputInfo","Args":""},{"Uniquefunname":"func (w *Wacom) setArea()","Funname":"inputdevices.Wacom.setArea","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setMapToOutput()","Funname":"inputdevices.Wacom.setMapToOutput","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setPressureSensitive()","Funname":"inputdevices.Wacom.setPressureSensitive","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setPressureSensitiveForType(devType int)","Funname":"inputdevices.Wacom.setPressureSensitiveForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) setRawSample()","Funname":"inputdevices.Wacom.setRawSample","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setRawSampleForType(devType int)","Funname":"inputdevices.Wacom.setRawSampleForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) setStylusButtonAction(btnNum int, action string)","Funname":"inputdevices.Wacom.setStylusButtonAction","Returntype":"","Args":"btnNum int, action string"},{"Uniquefunname":"func (w *Wacom) setSuppress()","Funname":"inputdevices.Wacom.setSuppress","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setThreshold()","Funname":"inputdevices.Wacom.setThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setThresholdForType(devType int)","Funname":"inputdevices.Wacom.setThresholdForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) updateAreaAndMapToOutput()","Funname":"inputdevices.Wacom.updateAreaAndMapToOutput","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) updateDXWacoms()","Funname":"inputdevices.Wacom.updateDXWacoms","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) updatePointerPos()","Funname":"inputdevices.Wacom.updatePointerPos","Returntype":"","Args":""},{"Uniquefunname":"func getOutputInfo(conn *x.Conn, output randr.Output, ts x.Timestamp) (*OutputInfo, error)","Funname":"inputdevices.getOutputInfo","Returntype":"(*OutputInfo, error)","Args":"conn *x.Conn, output randr.Output, ts x.Timestamp"},{"Uniquefunname":"func getPressureCurveControlPoints(level int) []int","Funname":"inputdevices.getPressureCurveControlPoints","Returntype":"[]int","Args":"level int"},{"Uniquefunname":"func newWacom(service *dbusutil.Service) *Wacom","Funname":"inputdevices.newWacom","Returntype":"*Wacom","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (w *Wacom) listenXRandrEvents()","Funname":"listenXRandrEvents","Returntype":"","Args":""},{"Uniquefunname":"func newWacom(service *dbusutil.Service) *Wacom","Funname":"newWacom","Returntype":"*Wacom","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (w *Wacom) pointerInOutput() *OutputInfo","Funname":"pointerInOutput","Returntype":"*OutputInfo","Args":""},{"Uniquefunname":"func (w *Wacom) setArea()","Funname":"setArea","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setMapToOutput()","Funname":"setMapToOutput","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setPressureSensitive()","Funname":"setPressureSensitive","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setPressureSensitiveForType(devType int)","Funname":"setPressureSensitiveForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) setRawSample()","Funname":"setRawSample","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setRawSampleForType(devType int)","Funname":"setRawSampleForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) setStylusButtonAction(btnNum int, action string)","Funname":"setStylusButtonAction","Returntype":"","Args":"btnNum int, action string"},{"Uniquefunname":"func (w *Wacom) setSuppress()","Funname":"setSuppress","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setThreshold()","Funname":"setThreshold","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) setThresholdForType(devType int)","Funname":"setThresholdForType","Returntype":"","Args":"devType int"},{"Uniquefunname":"func (w *Wacom) updateAreaAndMapToOutput()","Funname":"updateAreaAndMapToOutput","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) updateDXWacoms()","Funname":"updateDXWacoms","Returntype":"","Args":""},{"Uniquefunname":"func (w *Wacom) updatePointerPos()","Funname":"updatePointerPos","Returntype":"","Args":""}],"Records":[{"Name":"struct:inputdevices.ActionInfo","Fields":["inputdevices.ActionInfo.Action string","inputdevices.ActionInfo.Desc string"]},{"Name":"struct:inputdevices.OutputInfo","Fields":["inputdevices.OutputInfo.H uint16","inputdevices.OutputInfo.Name string","inputdevices.OutputInfo.W uint16","inputdevices.OutputInfo.X int16","inputdevices.OutputInfo.Y int16"]},{"Name":"struct:inputdevices.Wacom","Fields":["inputdevices.Wacom.ActionInfos ActionInfos","inputdevices.Wacom.CursorMode gsprop.Bool","inputdevices.Wacom.DeviceList string","inputdevices.Wacom.EraserPressureSensitive gsprop.Uint","inputdevices.Wacom.EraserRawSample gsprop.Uint","inputdevices.Wacom.EraserThreshold gsprop.Uint","inputdevices.Wacom.Exist bool","inputdevices.Wacom.ForceProportions gsprop.Bool","inputdevices.Wacom.KeyDownAction gsprop.String","inputdevices.Wacom.KeyUpAction gsprop.String","inputdevices.Wacom.LeftHanded gsprop.Bool","inputdevices.Wacom.MapOutput string","inputdevices.Wacom.MouseEnterRemap gsprop.Bool","inputdevices.Wacom.PropsMu sync.RWMutex","inputdevices.Wacom.StylusPressureSensitive gsprop.Uint","inputdevices.Wacom.StylusRawSample gsprop.Uint","inputdevices.Wacom.StylusThreshold gsprop.Uint","inputdevices.Wacom.Suppress gsprop.Uint","inputdevices.Wacom.devInfos dxWacoms","inputdevices.Wacom.eraserSetting *gio.Settings","inputdevices.Wacom.exit chan int","inputdevices.Wacom.mapToOutput *OutputInfo","inputdevices.Wacom.outputInfos []*OutputInfo","inputdevices.Wacom.outputInfosMu sync.Mutex","inputdevices.Wacom.pointerX int16","inputdevices.Wacom.pointerY int16","inputdevices.Wacom.service *dbusutil.Service","inputdevices.Wacom.setAreaMutex sync.Mutex","inputdevices.Wacom.setting *gio.Settings","inputdevices.Wacom.stylusSetting *gio.Settings","inputdevices.Wacom.xConn *x.Conn"]},{"Name":"var:inputdevices","Fields":["inputdevices.actionMap"]},{"Name":"const:inputdevices","Fields":["inputdevices.btnNumDownKey","inputdevices.btnNumUpKey","inputdevices.wacomEraserSchema","inputdevices.wacomKeyCursorMode","inputdevices.wacomKeyDownAction","inputdevices.wacomKeyForceProportions","inputdevices.wacomKeyLeftHanded","inputdevices.wacomKeyMouseEnterRemap","inputdevices.wacomKeyPressureSensitive","inputdevices.wacomKeyRawSample","inputdevices.wacomKeySuppress","inputdevices.wacomKeyThreshold","inputdevices.wacomKeyUpAction","inputdevices.wacomSchema","inputdevices.wacomStylusSchema"]}]}
{"Filepath":"inputdevices/wm_wrapper.go","Functions":[{"Uniquefunname":"func setWMKeyboardRepeat(repeat bool, delay, interval uint32)","Funname":"inputdevices.setWMKeyboardRepeat","Returntype":"","Args":"repeat bool, delay, interval uint32"},{"Uniquefunname":"func setWMTPadBoolKey(key string, value bool)","Funname":"inputdevices.setWMTPadBoolKey","Returntype":"","Args":"key string, value bool"},{"Uniquefunname":"func setWMKeyboardRepeat(repeat bool, delay, interval uint32)","Funname":"setWMKeyboardRepeat","Returntype":"","Args":"repeat bool, delay, interval uint32"},{"Uniquefunname":"func setWMTPadBoolKey(key string, value bool)","Funname":"setWMTPadBoolKey","Returntype":"","Args":"key string, value bool"}],"Records":[{"Name":"const:inputdevices","Fields":["inputdevices.wmKbdKeyDelay","inputdevices.wmKbdKeyInterval","inputdevices.wmKbdKeyRepeat","inputdevices.wmKbdSchemaID","inputdevices.wmTPadKeyEdgeScroll","inputdevices.wmTPadKeyLeftHanded","inputdevices.wmTPadKeyNaturalScroll","inputdevices.wmTPadKeyTapClick","inputdevices.wmTPadSchemaID"]}]}
{"Filepath":"inputdevices/wrapper.go","Functions":[{"Uniquefunname":"func endDeviceListener()","Funname":"endDeviceListener","Returntype":"","Args":""},{"Uniquefunname":"func (infos dxMouses) get(id int32) *dxinput.Mouse","Funname":"get","Returntype":"*dxinput.Mouse","Args":"id int32"},{"Uniquefunname":"func (infos dxTouchpads) get(id int32) *dxinput.Touchpad","Funname":"get","Returntype":"*dxinput.Touchpad","Args":"id int32"},{"Uniquefunname":"func (infos dxWacoms) get(id int32) *dxinput.Wacom","Funname":"get","Returntype":"*dxinput.Wacom","Args":"id int32"},{"Uniquefunname":"func getDeviceInfos(force bool) common.DeviceInfos","Funname":"getDeviceInfos","Returntype":"common.DeviceInfos","Args":"force bool"},{"Uniquefunname":"func getKeyboardNumber() int","Funname":"getKeyboardNumber","Returntype":"int","Args":""},{"Uniquefunname":"func getMouseInfos(force bool) dxMouses","Funname":"getMouseInfos","Returntype":"dxMouses","Args":"force bool"},{"Uniquefunname":"func getTPadInfos(force bool) dxTouchpads","Funname":"getTPadInfos","Returntype":"dxTouchpads","Args":"force bool"},{"Uniquefunname":"func getWacomInfos(force bool) dxWacoms","Funname":"getWacomInfos","Returntype":"dxWacoms","Args":"force bool"},{"Uniquefunname":"func handleDeviceChanged()","Funname":"handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func (infos dxMouses) get(id int32) *dxinput.Mouse","Funname":"inputdevices.dxMouses.get","Returntype":"*dxinput.Mouse","Args":"id int32"},{"Uniquefunname":"func (infos dxMouses) string() string","Funname":"inputdevices.dxMouses.string","Returntype":"string","Args":""},{"Uniquefunname":"func (infos dxTouchpads) get(id int32) *dxinput.Touchpad","Funname":"inputdevices.dxTouchpads.get","Returntype":"*dxinput.Touchpad","Args":"id int32"},{"Uniquefunname":"func (infos dxTouchpads) string() string","Funname":"inputdevices.dxTouchpads.string","Returntype":"string","Args":""},{"Uniquefunname":"func (infos dxWacoms) get(id int32) *dxinput.Wacom","Funname":"inputdevices.dxWacoms.get","Returntype":"*dxinput.Wacom","Args":"id int32"},{"Uniquefunname":"func (infos dxWacoms) string() string","Funname":"inputdevices.dxWacoms.string","Returntype":"string","Args":""},{"Uniquefunname":"func endDeviceListener()","Funname":"inputdevices.endDeviceListener","Returntype":"","Args":""},{"Uniquefunname":"func getDeviceInfos(force bool) common.DeviceInfos","Funname":"inputdevices.getDeviceInfos","Returntype":"common.DeviceInfos","Args":"force bool"},{"Uniquefunname":"func getKeyboardNumber() int","Funname":"inputdevices.getKeyboardNumber","Returntype":"int","Args":""},{"Uniquefunname":"func getMouseInfos(force bool) dxMouses","Funname":"inputdevices.getMouseInfos","Returntype":"dxMouses","Args":"force bool"},{"Uniquefunname":"func getTPadInfos(force bool) dxTouchpads","Funname":"inputdevices.getTPadInfos","Returntype":"dxTouchpads","Args":"force bool"},{"Uniquefunname":"func getWacomInfos(force bool) dxWacoms","Funname":"inputdevices.getWacomInfos","Returntype":"dxWacoms","Args":"force bool"},{"Uniquefunname":"func handleDeviceChanged()","Funname":"inputdevices.handleDeviceChanged","Returntype":"","Args":""},{"Uniquefunname":"func startDeviceListener()","Funname":"inputdevices.startDeviceListener","Returntype":"","Args":""},{"Uniquefunname":"func toJSON(v interface","Funname":"inputdevices.toJSON","Returntype":"string","Args":"v interface{}"},{"Uniquefunname":"func startDeviceListener()","Funname":"startDeviceListener","Returntype":"","Args":""},{"Uniquefunname":"func (infos dxMouses) string() string","Funname":"string","Returntype":"string","Args":""},{"Uniquefunname":"func (infos dxTouchpads) string() string","Funname":"string","Returntype":"string","Args":""},{"Uniquefunname":"func (infos dxWacoms) string() string","Funname":"string","Returntype":"string","Args":""},{"Uniquefunname":"func toJSON(v interface","Funname":"toJSON","Returntype":"string","Args":"v interface{}"}],"Records":[{"Name":"var:inputdevices","Fields":["inputdevices.devInfos","inputdevices.mouseInfos","inputdevices.tpadInfos","inputdevices.wacomInfos"]}]}
{"Filepath":"inputdevices/iso639/auto.go","Functions":null,"Records":[{"Name":"var:iso639","Fields":["iso639.allLanguages"]},{"Name":"struct:iso639.language","Fields":["iso639.language.A2 string","iso639.language.A3B string","iso639.language.A3T string"]}]}
{"Filepath":"inputdevices/iso639/iso639.go","Functions":[{"Uniquefunname":"func ConvertA2ToA3(in string) []string","Funname":"ConvertA2ToA3","Returntype":"[]string","Args":"in string"},{"Uniquefunname":"func ConvertA2ToA3(in string) []string","Funname":"iso639.ConvertA2ToA3","Returntype":"[]string","Args":"in string"}],"Records":null}
{"Filepath":"iw/iw.go","Functions":[{"Uniquefunname":"func (infos WirelessInfos) Get(address string) *WirelessInfo","Funname":"Get","Returntype":"*WirelessInfo","Args":"address string"},{"Uniquefunname":"func (infos WirelessInfos) ListHotspotDevice() WirelessInfos","Funname":"ListHotspotDevice","Returntype":"WirelessInfos","Args":""},{"Uniquefunname":"func (infos WirelessInfos) ListMiracastDevice() WirelessInfos","Funname":"ListMiracastDevice","Returntype":"WirelessInfos","Args":""},{"Uniquefunname":"func ListWirelessInfo() (WirelessInfos, error)","Funname":"ListWirelessInfo","Returntype":"(WirelessInfos, error)","Args":""},{"Uniquefunname":"func (info WirelessInfo) SupportedHotspot() bool","Funname":"SupportedHotspot","Returntype":"bool","Args":""},{"Uniquefunname":"func (info *WirelessInfo) SupportedMiracast() bool","Funname":"SupportedMiracast","Returntype":"bool","Args":""},{"Uniquefunname":"func addWirelessInfo(cname, cmode *C.char)","Funname":"addWirelessInfo","Returntype":"","Args":"cname, cmode *C.char"},{"Uniquefunname":"func getHwAddressByFile(file string) string","Funname":"getHwAddressByFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func hwAddressFile(name string) string","Funname":"hwAddressFile","Returntype":"string","Args":"name string"},{"Uniquefunname":"func ListWirelessInfo() (WirelessInfos, error)","Funname":"iw.ListWirelessInfo","Returntype":"(WirelessInfos, error)","Args":""},{"Uniquefunname":"func (info WirelessInfo) SupportedHotspot() bool","Funname":"iw.WirelessInfo.SupportedHotspot","Returntype":"bool","Args":""},{"Uniquefunname":"func (info *WirelessInfo) SupportedMiracast() bool","Funname":"iw.WirelessInfo.SupportedMiracast","Returntype":"bool","Args":""},{"Uniquefunname":"func (infos WirelessInfos) Get(address string) *WirelessInfo","Funname":"iw.WirelessInfos.Get","Returntype":"*WirelessInfo","Args":"address string"},{"Uniquefunname":"func (infos WirelessInfos) ListHotspotDevice() WirelessInfos","Funname":"iw.WirelessInfos.ListHotspotDevice","Returntype":"WirelessInfos","Args":""},{"Uniquefunname":"func (infos WirelessInfos) ListMiracastDevice() WirelessInfos","Funname":"iw.WirelessInfos.ListMiracastDevice","Returntype":"WirelessInfos","Args":""},{"Uniquefunname":"func addWirelessInfo(cname, cmode *C.char)","Funname":"iw.addWirelessInfo","Returntype":"","Args":"cname, cmode *C.char"},{"Uniquefunname":"func getHwAddressByFile(file string) string","Funname":"iw.getHwAddressByFile","Returntype":"string","Args":"file string"},{"Uniquefunname":"func hwAddressFile(name string) string","Funname":"iw.hwAddressFile","Returntype":"string","Args":"name string"}],"Records":[{"Name":"struct:iw.WirelessInfo","Fields":["iw.WirelessInfo.HwAddress string","iw.WirelessInfo.IFCModes []string","iw.WirelessInfo.Wiphy string"]},{"Name":"var:iw","Fields":["iw.wirelessSets"]}]}
{"Filepath":"keybinding/audio_controller.go","Functions":[{"Uniquefunname":"func (c *AudioController) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *AudioController) ExecCmd(cmd ActionCmd) error","Funname":"ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*AudioController) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewAudioController(sessionConn *dbus.Conn, backlightHelper *backlight.Backlight)*AudioController","Funname":"NewAudioController","Returntype":"*AudioController","Args":"sessionConn *dbus.Conn, backlightHelper *backlight.Backlight"},{"Uniquefunname":"func (c *AudioController) changeSinkVolume(raised bool) error","Funname":"changeSinkVolume","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func (c *AudioController) getDefaultSink() (*audio.Sink, error)","Funname":"getDefaultSink","Returntype":"(*audio.Sink, error)","Args":""},{"Uniquefunname":"func (c *AudioController) getDefaultSource() (*audio.Source, error)","Funname":"getDefaultSource","Returntype":"(*audio.Source, error)","Args":""},{"Uniquefunname":"func (c *AudioController) Destroy()","Funname":"keybinding.AudioController.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *AudioController) ExecCmd(cmd ActionCmd) error","Funname":"keybinding.AudioController.ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*AudioController) Name() string","Funname":"keybinding.AudioController.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *AudioController) changeSinkVolume(raised bool) error","Funname":"keybinding.AudioController.changeSinkVolume","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func (c *AudioController) getDefaultSink() (*audio.Sink, error)","Funname":"keybinding.AudioController.getDefaultSink","Returntype":"(*audio.Sink, error)","Args":""},{"Uniquefunname":"func (c *AudioController) getDefaultSource() (*audio.Source, error)","Funname":"keybinding.AudioController.getDefaultSource","Returntype":"(*audio.Source, error)","Args":""},{"Uniquefunname":"func (c *AudioController) toggleSinkMute() error","Funname":"keybinding.AudioController.toggleSinkMute","Returntype":"error","Args":""},{"Uniquefunname":"func (c *AudioController) toggleSourceMute() error","Funname":"keybinding.AudioController.toggleSourceMute","Returntype":"error","Args":""},{"Uniquefunname":"func keybinding.NewAudioController(sessionConn *dbus.Conn, backlightHelper *backlight.Backlight)*AudioController","Funname":"keybinding.NewAudioController","Returntype":"*AudioController","Args":"sessionConn *dbus.Conn, backlightHelper *backlight.Backlight"},{"Uniquefunname":"func (c *AudioController) toggleSinkMute() error","Funname":"toggleSinkMute","Returntype":"error","Args":""},{"Uniquefunname":"func (c *AudioController) toggleSourceMute() error","Funname":"toggleSourceMute","Returntype":"error","Args":""}],"Records":[{"Name":"struct:keybinding.AudioController","Fields":["keybinding.AudioController.audioDaemon *audio.Audio","keybinding.AudioController.conn *dbus.Conn","keybinding.AudioController.huaweiMicLedWorkaround *huaweiMicLedWorkaround"]},{"Name":"const:keybinding","Fields":["keybinding.volumeMax","keybinding.volumeMin"]}]}
{"Filepath":"keybinding/config.go","Functions":[{"Uniquefunname":"func loadConfig()","Funname":"keybinding.loadConfig","Returntype":"","Args":""},{"Uniquefunname":"func loadConfig()","Funname":"loadConfig","Returntype":"","Args":""}],"Records":[{"Name":"struct:keybinding.Config","Fields":["keybinding.Config.HandleTouchPadToggle bool"]},{"Name":"var:keybinding","Fields":["keybinding.globalConfig"]}]}
{"Filepath":"keybinding/daemon.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"keybinding.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"keybinding.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"keybinding.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"keybinding.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"keybinding.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:keybinding.Daemon","Fields":["keybinding.Daemon.manager *Manager"]},{"Name":"var:keybinding","Fields":["keybinding.logger"]}]}
{"Filepath":"keybinding/display_controller.go","Functions":[{"Uniquefunname":"func (c *DisplayController) ExecCmd(cmd ActionCmd) error","Funname":"ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*DisplayController) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewDisplayController(backlightHelper *backlight.Backlight, sessionConn *dbus.Conn)*DisplayController","Funname":"NewDisplayController","Returntype":"*DisplayController","Args":"backlightHelper *backlight.Backlight, sessionConn *dbus.Conn"},{"Uniquefunname":"func (c *DisplayController) changeBrightness(raised bool) error","Funname":"changeBrightness","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func (c *DisplayController) ExecCmd(cmd ActionCmd) error","Funname":"keybinding.DisplayController.ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*DisplayController) Name() string","Funname":"keybinding.DisplayController.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *DisplayController) changeBrightness(raised bool) error","Funname":"keybinding.DisplayController.changeBrightness","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func keybinding.NewDisplayController(backlightHelper *backlight.Backlight, sessionConn *dbus.Conn)*DisplayController","Funname":"keybinding.NewDisplayController","Returntype":"*DisplayController","Args":"backlightHelper *backlight.Backlight, sessionConn *dbus.Conn"}],"Records":[{"Name":"struct:keybinding.DisplayController","Fields":["keybinding.DisplayController.backlightHelper *backlight.Backlight","keybinding.DisplayController.display *display.Display"]},{"Name":"const:keybinding","Fields":["keybinding.gsKeyAmbientLightAdjustBrightness"]}]}
{"Filepath":"keybinding/huawei_mic.go","Functions":[{"Uniquefunname":"func (h *huaweiMicLedWorkaround) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) handlePulseServerEvent()","Funname":"handlePulseServerEvent","Returntype":"","Args":""},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) handlePulseSourceEvent(eType int, idx uint32)","Funname":"handlePulseSourceEvent","Returntype":"","Args":"eType int, idx uint32"},{"Uniquefunname":"func (c *AudioController) initHuaweiMicLedWorkaround(backlightHelper *backlight.Backlight)","Funname":"initHuaweiMicLedWorkaround","Returntype":"","Args":"backlightHelper *backlight.Backlight"},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) initPulseCtx()","Funname":"initPulseCtx","Returntype":"","Args":""},{"Uniquefunname":"func (c *AudioController) initHuaweiMicLedWorkaround(backlightHelper *backlight.Backlight)","Funname":"keybinding.AudioController.initHuaweiMicLedWorkaround","Returntype":"","Args":"backlightHelper *backlight.Backlight"},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) destroy()","Funname":"keybinding.huaweiMicLedWorkaround.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) handlePulseServerEvent()","Funname":"keybinding.huaweiMicLedWorkaround.handlePulseServerEvent","Returntype":"","Args":""},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) handlePulseSourceEvent(eType int, idx uint32)","Funname":"keybinding.huaweiMicLedWorkaround.handlePulseSourceEvent","Returntype":"","Args":"eType int, idx uint32"},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) initPulseCtx()","Funname":"keybinding.huaweiMicLedWorkaround.initPulseCtx","Returntype":"","Args":""},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) setHuaWeiMicLed(mute bool)","Funname":"keybinding.huaweiMicLedWorkaround.setHuaWeiMicLed","Returntype":"","Args":"mute bool"},{"Uniquefunname":"func (h *huaweiMicLedWorkaround) setHuaWeiMicLed(mute bool)","Funname":"setHuaWeiMicLed","Returntype":"","Args":"mute bool"}],"Records":[{"Name":"const:keybinding","Fields":["keybinding.huaweiMicLedName"]},{"Name":"struct:keybinding.huaweiMicLedWorkaround","Fields":["keybinding.huaweiMicLedWorkaround.backlightHelper *backlight.Backlight","keybinding.huaweiMicLedWorkaround.defaultSourceMute bool","keybinding.huaweiMicLedWorkaround.defaultSourceName string","keybinding.huaweiMicLedWorkaround.pulseCtx *pulse.Context","keybinding.huaweiMicLedWorkaround.quit chan struct{}"]}]}
{"Filepath":"keybinding/kbd_light_controller.go","Functions":[{"Uniquefunname":"func (c *KbdLightController) ExecCmd(cmd ActionCmd) error","Funname":"ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (c *KbdLightController) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewKbdLightController(backlightHelper *backlight.Backlight) *KbdLightController","Funname":"NewKbdLightController","Returntype":"*KbdLightController","Args":"backlightHelper *backlight.Backlight"},{"Uniquefunname":"func (c *KbdLightController) changeBrightness(raised bool) error","Funname":"changeBrightness","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func getKbdBlController() (*commonbl.Controller, error)","Funname":"getKbdBlController","Returntype":"(*commonbl.Controller, error)","Args":""},{"Uniquefunname":"func (c *KbdLightController) ExecCmd(cmd ActionCmd) error","Funname":"keybinding.KbdLightController.ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (c *KbdLightController) Name() string","Funname":"keybinding.KbdLightController.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *KbdLightController) changeBrightness(raised bool) error","Funname":"keybinding.KbdLightController.changeBrightness","Returntype":"error","Args":"raised bool"},{"Uniquefunname":"func (c *KbdLightController) toggle() error","Funname":"keybinding.KbdLightController.toggle","Returntype":"error","Args":""},{"Uniquefunname":"func NewKbdLightController(backlightHelper *backlight.Backlight) *KbdLightController","Funname":"keybinding.NewKbdLightController","Returntype":"*KbdLightController","Args":"backlightHelper *backlight.Backlight"},{"Uniquefunname":"func getKbdBlController() (*commonbl.Controller, error)","Funname":"keybinding.getKbdBlController","Returntype":"(*commonbl.Controller, error)","Args":""},{"Uniquefunname":"func (c *KbdLightController) toggle() error","Funname":"toggle","Returntype":"error","Args":""}],"Records":[{"Name":"struct:keybinding.KbdLightController","Fields":["keybinding.KbdLightController.backlightHelper *backlight.Backlight"]},{"Name":"const:keybinding","Fields":["keybinding.backlightTypeKeyboard"]},{"Name":"var:keybinding","Fields":["keybinding.kbdBacklightStep"]}]}
{"Filepath":"keybinding/lock_state.go","Functions":[{"Uniquefunname":"func changeCapsLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols) (err error)","Funname":"changeCapsLockState","Returntype":"(err error)","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func changeNumLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols) (err error)","Funname":"changeNumLockState","Returntype":"(err error)","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func changeCapsLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols) (err error)","Funname":"keybinding.changeCapsLockState","Returntype":"(err error)","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func changeNumLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols) (err error)","Funname":"keybinding.changeNumLockState","Returntype":"(err error)","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func queryCapsLockState(conn *x.Conn) (CapsLockState, error)","Funname":"keybinding.queryCapsLockState","Returntype":"(CapsLockState, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func queryNumLockState(conn *x.Conn) (NumLockState, error)","Funname":"keybinding.queryNumLockState","Returntype":"(NumLockState, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func setCapsLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols, state CapsLockState) error","Funname":"keybinding.setCapsLockState","Returntype":"error","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, state CapsLockState"},{"Uniquefunname":"func setNumLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols, state NumLockState) error","Funname":"keybinding.setNumLockState","Returntype":"error","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, state NumLockState"},{"Uniquefunname":"func simulatePressReleaseKey(conn *x.Conn, code x.Keycode) error","Funname":"keybinding.simulatePressReleaseKey","Returntype":"error","Args":"conn *x.Conn, code x.Keycode"},{"Uniquefunname":"func queryCapsLockState(conn *x.Conn) (CapsLockState, error)","Funname":"queryCapsLockState","Returntype":"(CapsLockState, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func queryNumLockState(conn *x.Conn) (NumLockState, error)","Funname":"queryNumLockState","Returntype":"(NumLockState, error)","Args":"conn *x.Conn"},{"Uniquefunname":"func setCapsLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols, state CapsLockState) error","Funname":"setCapsLockState","Returntype":"error","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, state CapsLockState"},{"Uniquefunname":"func setNumLockState(conn *x.Conn, keySymbols *keysyms.KeySymbols, state NumLockState) error","Funname":"setNumLockState","Returntype":"error","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, state NumLockState"},{"Uniquefunname":"func simulatePressReleaseKey(conn *x.Conn, code x.Keycode) error","Funname":"simulatePressReleaseKey","Returntype":"error","Args":"conn *x.Conn, code x.Keycode"}],"Records":[{"Name":"const:keybinding","Fields":["keybinding.CapsLockOff","keybinding.CapsLockOn","keybinding.CapsLockUnknown","keybinding.NumLockOff","keybinding.NumLockOn","keybinding.NumLockUnknown"]}]}
{"Filepath":"keybinding/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) eliminateKeystrokeConflict()","Funname":"eliminateKeystrokeConflict","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitShortcutSignal(signalName string, shortcut shortcuts.Shortcut)","Funname":"emitShortcutSignal","Returntype":"","Args":"signalName string, shortcut shortcuts.Shortcut"},{"Uniquefunname":"func (m *Manager) enableListenGSettingsChanged(val bool)","Funname":"enableListenGSettingsChanged","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (m *Manager) execCmd(cmd string, viaStartdde bool) error","Funname":"execCmd","Returntype":"error","Args":"cmd string, viaStartdde bool"},{"Uniquefunname":"func (m *Manager) handleKeyEvent(ev *shortcuts.KeyEvent)","Funname":"handleKeyEvent","Returntype":"","Args":"ev *shortcuts.KeyEvent"},{"Uniquefunname":"func (m *Manager) handleKeyEventFromLockFront(changKey string)","Funname":"handleKeyEventFromLockFront","Returntype":"","Args":"changKey string"},{"Uniquefunname":"func (m *Manager) handleKeyEventFromShutdownFront(changKey string)","Funname":"handleKeyEventFromShutdownFront","Returntype":"","Args":"changKey string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"keybinding.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) eliminateKeystrokeConflict()","Funname":"keybinding.Manager.eliminateKeystrokeConflict","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitShortcutSignal(signalName string, shortcut shortcuts.Shortcut)","Funname":"keybinding.Manager.emitShortcutSignal","Returntype":"","Args":"signalName string, shortcut shortcuts.Shortcut"},{"Uniquefunname":"func (m *Manager) enableListenGSettingsChanged(val bool)","Funname":"keybinding.Manager.enableListenGSettingsChanged","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (m *Manager) execCmd(cmd string, viaStartdde bool) error","Funname":"keybinding.Manager.execCmd","Returntype":"error","Args":"cmd string, viaStartdde bool"},{"Uniquefunname":"func (m *Manager) handleKeyEvent(ev *shortcuts.KeyEvent)","Funname":"keybinding.Manager.handleKeyEvent","Returntype":"","Args":"ev *shortcuts.KeyEvent"},{"Uniquefunname":"func (m *Manager) handleKeyEventFromLockFront(changKey string)","Funname":"keybinding.Manager.handleKeyEventFromLockFront","Returntype":"","Args":"changKey string"},{"Uniquefunname":"func (m *Manager) handleKeyEventFromShutdownFront(changKey string)","Funname":"keybinding.Manager.handleKeyEventFromShutdownFront","Returntype":"","Args":"changKey string"},{"Uniquefunname":"func (m *Manager) listenGSettingsChanged(schema string, settings *gio.Settings, type0 int32)","Funname":"keybinding.Manager.listenGSettingsChanged","Returntype":"","Args":"schema string, settings *gio.Settings, type0 int32"},{"Uniquefunname":"func (m *Manager) runDesktopFile(desktop string) error","Funname":"keybinding.Manager.runDesktopFile","Returntype":"error","Args":"desktop string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"keybinding.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) listenGSettingsChanged(schema string, settings *gio.Settings, type0 int32)","Funname":"listenGSettingsChanged","Returntype":"","Args":"schema string, settings *gio.Settings, type0 int32"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) runDesktopFile(desktop string) error","Funname":"runDesktopFile","Returntype":"error","Args":"desktop string"}],"Records":[{"Name":"struct:keybinding.Manager","Fields":["keybinding.Manager.NumLockState gsprop.Enum","keybinding.Manager.ShortcutSwitchLayout gsprop.Uint","keybinding.Manager.audioController *AudioController","keybinding.Manager.backlightHelper *backlight.Backlight","keybinding.Manager.conn *x.Conn","keybinding.Manager.customShortcutManager *shortcuts.CustomShortcutManager","keybinding.Manager.displayController *DisplayController","keybinding.Manager.enableListenGSettings bool","keybinding.Manager.grabScreenKeystroke *shortcuts.Keystroke","keybinding.Manager.gsGnomeWM *gio.Settings","keybinding.Manager.gsKeyboard *gio.Settings","keybinding.Manager.gsMediaKey *gio.Settings","keybinding.Manager.gsPower *gio.Settings","keybinding.Manager.gsSystem *gio.Settings","keybinding.Manager.handlers []shortcuts.KeyEventFunc","keybinding.Manager.kbdLightController *KbdLightController","keybinding.Manager.keySymbols *keysyms.KeySymbols","keybinding.Manager.keyboard *inputdevices.Keyboard","keybinding.Manager.keyboardLayout string","keybinding.Manager.lastExecCmdTime time.Time","keybinding.Manager.lastKeyEventTime time.Time","keybinding.Manager.lastMethodCalledTime time.Time","keybinding.Manager.lockFront *lockfront.LockFront","keybinding.Manager.mediaPlayerController *MediaPlayerController","keybinding.Manager.methods *struct { AddCustomShortcut func() `in:\"name,action,keystroke\" out:\"id,type\"`; AddShortcutKeystroke func() `in:\"id,type,keystroke\"`; ClearShortcutKeystrokes func() `in:\"id,type\"`; DeleteCustomShortcut func() `in:\"id\"`; DeleteShortcutKeystroke func() `in:\"id,type,keystroke\"`; GetShortcut func() `in:\"id,type\" out:\"shortcut\"`; ListAllShortcuts func() `out:\"shortcuts\"`; ListShortcutsByType func() `in:\"type\" out:\"shortcuts\"`; SearchShortcuts func() `in:\"query\" out:\"shortcuts\"`; LookupConflictingShortcut func()","keybinding.Manager.service *dbusutil.Service","keybinding.Manager.sessionMaganer *sessionmanager.SessionManager","keybinding.Manager.sessionManager *sessionmanager.SessionManager","keybinding.Manager.sessionSigLoop *dbusutil.SignalLoop","keybinding.Manager.shortcutManager *shortcuts.ShortcutManager","keybinding.Manager.shutdownFront *shutdownfront.ShutdownFront","keybinding.Manager.signals *struct { Added, Deleted, Changed struct { id string; typ int32; }; KeyEvent struct { pressed bool; keystroke string; }; }","keybinding.Manager.sklWaitQuit chan int","keybinding.Manager.startManager *sessionmanager.StartManager","keybinding.Manager.switchKbdLayoutState SKLState","keybinding.Manager.systemSigLoop *dbusutil.SignalLoop","keybinding.Manager.touchPadController *TouchPadController","keybinding.Manager.wm *wm.Wm"]},{"Name":"const:keybinding","Fields":["keybinding.SKLStateNone","keybinding.SKLStateOSDShown","keybinding.SKLStateWait","keybinding.customConfigFile","keybinding.gsKeyNumLockState","keybinding.gsKeySaveNumLockState","keybinding.gsKeyShortcutSwitchLayout","keybinding.gsKeyShowCapsLockOSD","keybinding.gsKeyUpperLayerWLAN","keybinding.gsSchemaGnomeWM","keybinding.gsSchemaKeyboard","keybinding.gsSchemaMediaKey","keybinding.gsSchemaSessionPower","keybinding.gsSchemaSystem","keybinding.powerActionHibernate","keybinding.powerActionShowUI","keybinding.powerActionShutdown","keybinding.powerActionSuspend","keybinding.powerActionTurnOffScreen","keybinding.shortcutSignalAdded","keybinding.shortcutSignalChanged","keybinding.shortcutSignalDeleted"]}]}
{"Filepath":"keybinding/manager_handlers.go","Functions":[{"Uniquefunname":"func (err ErrInvalidActionCmd) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrIsNil) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func buildHandlerFromController(c Controller) KeyEventFunc","Funname":"buildHandlerFromController","Returntype":"KeyEventFunc","Args":"c Controller"},{"Uniquefunname":"func (m *Manager) initHandlers()","Funname":"initHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (err ErrInvalidActionCmd) Error() string","Funname":"keybinding.ErrInvalidActionCmd.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrIsNil) Error() string","Funname":"keybinding.ErrIsNil.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) initHandlers()","Funname":"keybinding.Manager.initHandlers","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) shouldShowCapsLockOSD() bool","Funname":"keybinding.Manager.shouldShowCapsLockOSD","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) sklWait()","Funname":"keybinding.Manager.sklWait","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) terminateSKLWait()","Funname":"keybinding.Manager.terminateSKLWait","Returntype":"","Args":""},{"Uniquefunname":"func buildHandlerFromController(c Controller) KeyEventFunc","Funname":"keybinding.buildHandlerFromController","Returntype":"KeyEventFunc","Args":"c Controller"},{"Uniquefunname":"func (m *Manager) shouldShowCapsLockOSD() bool","Funname":"shouldShowCapsLockOSD","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) sklWait()","Funname":"sklWait","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) terminateSKLWait()","Funname":"terminateSKLWait","Returntype":"","Args":""}],"Records":[{"Name":"interface","Fields":["keybinding.Controller"]},{"Name":"struct:keybinding.ErrInvalidActionCmd","Fields":["keybinding.ErrInvalidActionCmd.Cmd ActionCmd"]},{"Name":"struct:keybinding.ErrIsNil","Fields":["keybinding.ErrIsNil.Name string"]}]}
{"Filepath":"keybinding/manager_ifc.go","Functions":[{"Uniquefunname":"func AddCustomShortcut(name, action, keystroke string)(id string, type0 int32, busErr *dbus.Error)","Funname":"AddCustomShortcut","Returntype":"(id string, type0 int32, busErr *dbus.Error)","Args":"name, action, keystroke string"},{"Uniquefunname":"func (m *Manager) AddShortcutKeystroke(id string, type0 int32, keystroke string) *dbus.Error","Funname":"AddShortcutKeystroke","Returntype":"*dbus.Error","Args":"id string, type0 int32, keystroke string"},{"Uniquefunname":"func (m *Manager) ClearShortcutKeystrokes(id string, type0 int32) *dbus.Error","Funname":"ClearShortcutKeystrokes","Returntype":"*dbus.Error","Args":"id string, type0 int32"},{"Uniquefunname":"func (m *Manager) DeleteCustomShortcut(id string) *dbus.Error","Funname":"DeleteCustomShortcut","Returntype":"*dbus.Error","Args":"id string"},{"Uniquefunname":"func DeleteShortcutKeystroke(id string, type0 int32, keystroke string)*dbus.Error","Funname":"DeleteShortcutKeystroke","Returntype":"*dbus.Error","Args":"id string, type0 int32, keystroke string"},{"Uniquefunname":"func (err ErrInvalidShortcutType) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrShortcutNotFound) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetCapsLockState() (int32, *dbus.Error)","Funname":"GetCapsLockState","Returntype":"(int32, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetShortcut(id string, type0 int32) (string, *dbus.Error)","Funname":"GetShortcut","Returntype":"(string, *dbus.Error)","Args":"id string, type0 int32"},{"Uniquefunname":"func (m *Manager) ListAllShortcuts() (string, *dbus.Error)","Funname":"ListAllShortcuts","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) ListShortcutsByType(type0 int32) (string, *dbus.Error)","Funname":"ListShortcutsByType","Returntype":"(string, *dbus.Error)","Args":"type0 int32"},{"Uniquefunname":"func (m *Manager) LookupConflictingShortcut(keystroke string) (string, *dbus.Error)","Funname":"LookupConflictingShortcut","Returntype":"(string, *dbus.Error)","Args":"keystroke string"},{"Uniquefunname":"func (m *Manager) ModifyCustomShortcut(id, name, cmd, keystroke string) *dbus.Error","Funname":"ModifyCustomShortcut","Returntype":"*dbus.Error","Args":"id, name, cmd, keystroke string"},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SearchShortcuts(query string) (string, *dbus.Error)","Funname":"SearchShortcuts","Returntype":"(string, *dbus.Error)","Args":"query string"},{"Uniquefunname":"func (m *Manager) SelectKeystroke() *dbus.Error","Funname":"SelectKeystroke","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetCapsLockState(state int32) *dbus.Error","Funname":"SetCapsLockState","Returntype":"*dbus.Error","Args":"state int32"},{"Uniquefunname":"func (m *Manager) SetNumLockState(state int32) *dbus.Error","Funname":"SetNumLockState","Returntype":"*dbus.Error","Args":"state int32"},{"Uniquefunname":"func (m *Manager)isIgnoreRepeat(name string) bool","Funname":"isIgnoreRepeat","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func (err ErrInvalidShortcutType) Error() string","Funname":"keybinding.ErrInvalidShortcutType.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (err ErrShortcutNotFound) Error() string","Funname":"keybinding.ErrShortcutNotFound.Error","Returntype":"string","Args":""},{"Uniquefunname":"func keybinding.Manager.AddCustomShortcut(name, action, keystroke string)(id string, type0 int32, busErr *dbus.Error)","Funname":"keybinding.Manager.AddCustomShortcut","Returntype":"(id string, type0 int32, busErr *dbus.Error)","Args":"name, action, keystroke string"},{"Uniquefunname":"func (m *Manager) AddShortcutKeystroke(id string, type0 int32, keystroke string) *dbus.Error","Funname":"keybinding.Manager.AddShortcutKeystroke","Returntype":"*dbus.Error","Args":"id string, type0 int32, keystroke string"},{"Uniquefunname":"func (m *Manager) ClearShortcutKeystrokes(id string, type0 int32) *dbus.Error","Funname":"keybinding.Manager.ClearShortcutKeystrokes","Returntype":"*dbus.Error","Args":"id string, type0 int32"},{"Uniquefunname":"func (m *Manager) DeleteCustomShortcut(id string) *dbus.Error","Funname":"keybinding.Manager.DeleteCustomShortcut","Returntype":"*dbus.Error","Args":"id string"},{"Uniquefunname":"func keybinding.Manager.DeleteShortcutKeystroke(id string, type0 int32, keystroke string)*dbus.Error","Funname":"keybinding.Manager.DeleteShortcutKeystroke","Returntype":"*dbus.Error","Args":"id string, type0 int32, keystroke string"},{"Uniquefunname":"func (m *Manager) GetCapsLockState() (int32, *dbus.Error)","Funname":"keybinding.Manager.GetCapsLockState","Returntype":"(int32, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"keybinding.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetShortcut(id string, type0 int32) (string, *dbus.Error)","Funname":"keybinding.Manager.GetShortcut","Returntype":"(string, *dbus.Error)","Args":"id string, type0 int32"},{"Uniquefunname":"func (m *Manager) ListAllShortcuts() (string, *dbus.Error)","Funname":"keybinding.Manager.ListAllShortcuts","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) ListShortcutsByType(type0 int32) (string, *dbus.Error)","Funname":"keybinding.Manager.ListShortcutsByType","Returntype":"(string, *dbus.Error)","Args":"type0 int32"},{"Uniquefunname":"func (m *Manager) LookupConflictingShortcut(keystroke string) (string, *dbus.Error)","Funname":"keybinding.Manager.LookupConflictingShortcut","Returntype":"(string, *dbus.Error)","Args":"keystroke string"},{"Uniquefunname":"func (m *Manager) ModifyCustomShortcut(id, name, cmd, keystroke string) *dbus.Error","Funname":"keybinding.Manager.ModifyCustomShortcut","Returntype":"*dbus.Error","Args":"id, name, cmd, keystroke string"},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"keybinding.Manager.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SearchShortcuts(query string) (string, *dbus.Error)","Funname":"keybinding.Manager.SearchShortcuts","Returntype":"(string, *dbus.Error)","Args":"query string"},{"Uniquefunname":"func (m *Manager) SelectKeystroke() *dbus.Error","Funname":"keybinding.Manager.SelectKeystroke","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetCapsLockState(state int32) *dbus.Error","Funname":"keybinding.Manager.SetCapsLockState","Returntype":"*dbus.Error","Args":"state int32"},{"Uniquefunname":"func (m *Manager) SetNumLockState(state int32) *dbus.Error","Funname":"keybinding.Manager.SetNumLockState","Returntype":"*dbus.Error","Args":"state int32"},{"Uniquefunname":"func (m *Manager)isIgnoreRepeat(name string) bool","Funname":"keybinding.Manager.isIgnoreRepeat","Returntype":"bool","Args":"name string"}],"Records":[{"Name":"struct:keybinding.ErrInvalidShortcutType","Fields":["keybinding.ErrInvalidShortcutType.Type int32"]},{"Name":"struct:keybinding.ErrShortcutNotFound","Fields":["keybinding.ErrShortcutNotFound.Id string","keybinding.ErrShortcutNotFound.Type int32"]},{"Name":"const:keybinding","Fields":["keybinding.dbusInterface","keybinding.dbusPath","keybinding.dbusServiceName"]},{"Name":"var:keybinding","Fields":["keybinding.errKeystrokeUsed","keybinding.errShortcutKeystrokesUnmodifiable","keybinding.errTypeAssertionFail"]}]}
{"Filepath":"keybinding/manager_ifc_deprecated.go","Functions":[{"Uniquefunname":"func (m *Manager) Add(name, action, keystroke string) (string, bool, *dbus.Error)","Funname":"Add","Returntype":"(string, bool, *dbus.Error)","Args":"name, action, keystroke string"},{"Uniquefunname":"func (m *Manager) CheckAvaliable(keystroke string) (bool, string, *dbus.Error)","Funname":"CheckAvaliable","Returntype":"(bool, string, *dbus.Error)","Args":"keystroke string"},{"Uniquefunname":"func (m *Manager) Delete(id string, ty int32) *dbus.Error","Funname":"Delete","Returntype":"*dbus.Error","Args":"id string, ty int32"},{"Uniquefunname":"func (m *Manager) Disable(id string, ty int32) *dbus.Error","Funname":"Disable","Returntype":"*dbus.Error","Args":"id string, ty int32"},{"Uniquefunname":"func (m *Manager) GrabScreen() *dbus.Error","Funname":"GrabScreen","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) List() (string, *dbus.Error)","Funname":"List","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func ModifiedAccel(id string, ty int32, keystroke string, add bool)(bool, string, *dbus.Error)","Funname":"ModifiedAccel","Returntype":"(bool, string, *dbus.Error)","Args":"id string, ty int32, keystroke string, add bool"},{"Uniquefunname":"func (m *Manager) Query(id string, ty int32) (string, *dbus.Error)","Funname":"Query","Returntype":"(string, *dbus.Error)","Args":"id string, ty int32"},{"Uniquefunname":"func (m *Manager) Add(name, action, keystroke string) (string, bool, *dbus.Error)","Funname":"keybinding.Manager.Add","Returntype":"(string, bool, *dbus.Error)","Args":"name, action, keystroke string"},{"Uniquefunname":"func (m *Manager) CheckAvaliable(keystroke string) (bool, string, *dbus.Error)","Funname":"keybinding.Manager.CheckAvaliable","Returntype":"(bool, string, *dbus.Error)","Args":"keystroke string"},{"Uniquefunname":"func (m *Manager) Delete(id string, ty int32) *dbus.Error","Funname":"keybinding.Manager.Delete","Returntype":"*dbus.Error","Args":"id string, ty int32"},{"Uniquefunname":"func (m *Manager) Disable(id string, ty int32) *dbus.Error","Funname":"keybinding.Manager.Disable","Returntype":"*dbus.Error","Args":"id string, ty int32"},{"Uniquefunname":"func (m *Manager) GrabScreen() *dbus.Error","Funname":"keybinding.Manager.GrabScreen","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) List() (string, *dbus.Error)","Funname":"keybinding.Manager.List","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func keybinding.Manager.ModifiedAccel(id string, ty int32, keystroke string, add bool)(bool, string, *dbus.Error)","Funname":"keybinding.Manager.ModifiedAccel","Returntype":"(bool, string, *dbus.Error)","Args":"id string, ty int32, keystroke string, add bool"},{"Uniquefunname":"func (m *Manager) Query(id string, ty int32) (string, *dbus.Error)","Funname":"keybinding.Manager.Query","Returntype":"(string, *dbus.Error)","Args":"id string, ty int32"}],"Records":null}
{"Filepath":"keybinding/media_player_controller.go","Functions":[{"Uniquefunname":"func (c *MediaPlayerController) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) ExecCmd(cmd ActionCmd) error","Funname":"ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (c *MediaPlayerController) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewMediaPlayerController(systemSigLoop *dbusutil.SignalLoop, sessionConn *dbus.Conn)*MediaPlayerController","Funname":"NewMediaPlayerController","Returntype":"*MediaPlayerController","Args":"systemSigLoop *dbusutil.SignalLoop, sessionConn *dbus.Conn"},{"Uniquefunname":"func (c *MediaPlayerController) getActiveMpris() *mpris2.MediaPlayer","Funname":"getActiveMpris","Returntype":"*mpris2.MediaPlayer","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) getMprisSender() []string","Funname":"getMprisSender","Returntype":"[]string","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) Destroy()","Funname":"keybinding.MediaPlayerController.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) ExecCmd(cmd ActionCmd) error","Funname":"keybinding.MediaPlayerController.ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (c *MediaPlayerController) Name() string","Funname":"keybinding.MediaPlayerController.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) getActiveMpris() *mpris2.MediaPlayer","Funname":"keybinding.MediaPlayerController.getActiveMpris","Returntype":"*mpris2.MediaPlayer","Args":""},{"Uniquefunname":"func (c *MediaPlayerController) getMprisSender() []string","Funname":"keybinding.MediaPlayerController.getMprisSender","Returntype":"[]string","Args":""},{"Uniquefunname":"func keybinding.NewMediaPlayerController(systemSigLoop *dbusutil.SignalLoop, sessionConn *dbus.Conn)*MediaPlayerController","Funname":"keybinding.NewMediaPlayerController","Returntype":"*MediaPlayerController","Args":"systemSigLoop *dbusutil.SignalLoop, sessionConn *dbus.Conn"}],"Records":[{"Name":"struct:keybinding.MediaPlayerController","Fields":["keybinding.MediaPlayerController.conn *dbus.Conn","keybinding.MediaPlayerController.dbusDaemon *ofdbus.DBus","keybinding.MediaPlayerController.loginManager *login1.Manager","keybinding.MediaPlayerController.prevPlayer string"]},{"Name":"const:keybinding","Fields":["keybinding.playerDelta","keybinding.senderTypeMpris"]}]}
{"Filepath":"keybinding/select_keystroke.go","Functions":[{"Uniquefunname":"func (m *Manager) emitSignalKeyEvent(pressed bool, keystroke string)","Funname":"emitSignalKeyEvent","Returntype":"","Args":"pressed bool, keystroke string"},{"Uniquefunname":"func grabKbdAndMouse(conn *x.Conn) error","Funname":"grabKbdAndMouse","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func (m *Manager) emitSignalKeyEvent(pressed bool, keystroke string)","Funname":"keybinding.Manager.emitSignalKeyEvent","Returntype":"","Args":"pressed bool, keystroke string"},{"Uniquefunname":"func (m *Manager) selectKeystroke() error","Funname":"keybinding.Manager.selectKeystroke","Returntype":"error","Args":""},{"Uniquefunname":"func grabKbdAndMouse(conn *x.Conn) error","Funname":"keybinding.grabKbdAndMouse","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func ungrabKbdAndMouse(conn *x.Conn)","Funname":"keybinding.ungrabKbdAndMouse","Returntype":"","Args":"conn *x.Conn"},{"Uniquefunname":"func (m *Manager) selectKeystroke() error","Funname":"selectKeystroke","Returntype":"error","Args":""},{"Uniquefunname":"func ungrabKbdAndMouse(conn *x.Conn)","Funname":"ungrabKbdAndMouse","Returntype":"","Args":"conn *x.Conn"}],"Records":null}
{"Filepath":"keybinding/touchpad_controller.go","Functions":[{"Uniquefunname":"func (c *TouchPadController) ExecCmd(cmd ActionCmd) error","Funname":"ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*TouchPadController) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewTouchPadController(sessionConn *dbus.Conn) *TouchPadController","Funname":"NewTouchPadController","Returntype":"*TouchPadController","Args":"sessionConn *dbus.Conn"},{"Uniquefunname":"func (c *TouchPadController) enable(val bool) error","Funname":"enable","Returntype":"error","Args":"val bool"},{"Uniquefunname":"func NewTouchPadController(sessionConn *dbus.Conn) *TouchPadController","Funname":"keybinding.NewTouchPadController","Returntype":"*TouchPadController","Args":"sessionConn *dbus.Conn"},{"Uniquefunname":"func (c *TouchPadController) ExecCmd(cmd ActionCmd) error","Funname":"keybinding.TouchPadController.ExecCmd","Returntype":"error","Args":"cmd ActionCmd"},{"Uniquefunname":"func (*TouchPadController) Name() string","Funname":"keybinding.TouchPadController.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (c *TouchPadController) enable(val bool) error","Funname":"keybinding.TouchPadController.enable","Returntype":"error","Args":"val bool"},{"Uniquefunname":"func (c *TouchPadController) toggle() error","Funname":"keybinding.TouchPadController.toggle","Returntype":"error","Args":""},{"Uniquefunname":"func (c *TouchPadController) toggle() error","Funname":"toggle","Returntype":"error","Args":""}],"Records":[{"Name":"struct:keybinding.TouchPadController","Fields":["keybinding.TouchPadController.touchPad *inputdevices.TouchPad"]}]}
{"Filepath":"keybinding/utils.go","Functions":[{"Uniquefunname":"func (m *Manager) doLock(autoStartAuth bool)","Funname":"doLock","Returntype":"","Args":"autoStartAuth bool"},{"Uniquefunname":"func doPrepareSuspend()","Funname":"doPrepareSuspend","Returntype":"","Args":""},{"Uniquefunname":"func getRfkillWlanState() (int, error)","Funname":"getRfkillWlanState","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func (m *Manager) doLock(autoStartAuth bool)","Funname":"keybinding.Manager.doLock","Returntype":"","Args":"autoStartAuth bool"},{"Uniquefunname":"func (m *Manager) systemAway()","Funname":"keybinding.Manager.systemAway","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemHibernate()","Funname":"keybinding.Manager.systemHibernate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemLogout()","Funname":"keybinding.Manager.systemLogout","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemShutdown()","Funname":"keybinding.Manager.systemShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemSuspend()","Funname":"keybinding.Manager.systemSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemTurnOffScreen()","Funname":"keybinding.Manager.systemTurnOffScreen","Returntype":"","Args":""},{"Uniquefunname":"func doPrepareSuspend()","Funname":"keybinding.doPrepareSuspend","Returntype":"","Args":""},{"Uniquefunname":"func getRfkillWlanState() (int, error)","Funname":"keybinding.getRfkillWlanState","Returntype":"(int, error)","Args":""},{"Uniquefunname":"func queryCommandByMime(mime string) string","Funname":"keybinding.queryCommandByMime","Returntype":"string","Args":"mime string"},{"Uniquefunname":"func readTinyFile(file string) ([]byte, error)","Funname":"keybinding.readTinyFile","Returntype":"([]byte, error)","Args":"file string"},{"Uniquefunname":"func resetGSettings(gs *gio.Settings)","Funname":"keybinding.resetGSettings","Returntype":"","Args":"gs *gio.Settings"},{"Uniquefunname":"func resetKWin(wmObj *wm.Wm) error","Funname":"keybinding.resetKWin","Returntype":"error","Args":"wmObj *wm.Wm"},{"Uniquefunname":"func shouldUseDDEKwin() bool","Funname":"keybinding.shouldUseDDEKwin","Returntype":"bool","Args":""},{"Uniquefunname":"func showOSD(signal string)","Funname":"keybinding.showOSD","Returntype":"","Args":"signal string"},{"Uniquefunname":"func systemLock()","Funname":"keybinding.systemLock","Returntype":"","Args":""},{"Uniquefunname":"func undoPrepareSuspend()","Funname":"keybinding.undoPrepareSuspend","Returntype":"","Args":""},{"Uniquefunname":"func queryCommandByMime(mime string) string","Funname":"queryCommandByMime","Returntype":"string","Args":"mime string"},{"Uniquefunname":"func readTinyFile(file string) ([]byte, error)","Funname":"readTinyFile","Returntype":"([]byte, error)","Args":"file string"},{"Uniquefunname":"func resetGSettings(gs *gio.Settings)","Funname":"resetGSettings","Returntype":"","Args":"gs *gio.Settings"},{"Uniquefunname":"func resetKWin(wmObj *wm.Wm) error","Funname":"resetKWin","Returntype":"error","Args":"wmObj *wm.Wm"},{"Uniquefunname":"func shouldUseDDEKwin() bool","Funname":"shouldUseDDEKwin","Returntype":"bool","Args":""},{"Uniquefunname":"func showOSD(signal string)","Funname":"showOSD","Returntype":"","Args":"signal string"},{"Uniquefunname":"func (m *Manager) systemAway()","Funname":"systemAway","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemHibernate()","Funname":"systemHibernate","Returntype":"","Args":""},{"Uniquefunname":"func systemLock()","Funname":"systemLock","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemLogout()","Funname":"systemLogout","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemShutdown()","Funname":"systemShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemSuspend()","Funname":"systemSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) systemTurnOffScreen()","Funname":"systemTurnOffScreen","Returntype":"","Args":""},{"Uniquefunname":"func undoPrepareSuspend()","Funname":"undoPrepareSuspend","Returntype":"","Args":""}],"Records":[{"Name":"const:keybinding","Fields":["keybinding.sessionManagerDest","keybinding.sessionManagerObjPath","keybinding.suspendStateButtonClick","keybinding.suspendStateFinish","keybinding.suspendStateLidClose","keybinding.suspendStateLidOpen","keybinding.suspendStatePrepare","keybinding.suspendStateUnknown","keybinding.suspendStateWakeup"]}]}
{"Filepath":"keybinding/utils_test.go","Functions":[{"Uniquefunname":"func Test_shouldUseDDEKwin(t *testing.T)","Funname":"Test_shouldUseDDEKwin","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_shouldUseDDEKwin(t *testing.T)","Funname":"keybinding.Test_shouldUseDDEKwin","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"keybinding/shortcuts/action.go","Functions":[{"Uniquefunname":"func NewAudioCtrlAction(cmd ActionCmd) *Action","Funname":"NewAudioCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewDisplayCtrlAction(cmd ActionCmd) *Action","Funname":"NewDisplayCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewExecCmdAction(cmd string, execOnRelease bool) *Action","Funname":"NewExecCmdAction","Returntype":"*Action","Args":"cmd string, execOnRelease bool"},{"Uniquefunname":"func NewKbdBrightnessCtrlAction(cmd ActionCmd) *Action","Funname":"NewKbdBrightnessCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewMediaPlayerCtrlAction(cmd ActionCmd) *Action","Funname":"NewMediaPlayerCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewOpenMimeTypeAction(mimeType string) *Action","Funname":"NewOpenMimeTypeAction","Returntype":"*Action","Args":"mimeType string"},{"Uniquefunname":"func NewTouchpadCtrlAction(cmd ActionCmd) *Action","Funname":"NewTouchpadCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewAudioCtrlAction(cmd ActionCmd) *Action","Funname":"shortcuts.NewAudioCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewDisplayCtrlAction(cmd ActionCmd) *Action","Funname":"shortcuts.NewDisplayCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewExecCmdAction(cmd string, execOnRelease bool) *Action","Funname":"shortcuts.NewExecCmdAction","Returntype":"*Action","Args":"cmd string, execOnRelease bool"},{"Uniquefunname":"func NewKbdBrightnessCtrlAction(cmd ActionCmd) *Action","Funname":"shortcuts.NewKbdBrightnessCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewMediaPlayerCtrlAction(cmd ActionCmd) *Action","Funname":"shortcuts.NewMediaPlayerCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"},{"Uniquefunname":"func NewOpenMimeTypeAction(mimeType string) *Action","Funname":"shortcuts.NewOpenMimeTypeAction","Returntype":"*Action","Args":"mimeType string"},{"Uniquefunname":"func NewTouchpadCtrlAction(cmd ActionCmd) *Action","Funname":"shortcuts.NewTouchpadCtrlAction","Returntype":"*Action","Args":"cmd ActionCmd"}],"Records":[{"Name":"struct:shortcuts.Action","Fields":["shortcuts.Action.Arg interface{}","shortcuts.Action.Type ActionType"]},{"Name":"struct:shortcuts.ActionExecCmdArg","Fields":["shortcuts.ActionExecCmdArg.Cmd string","shortcuts.ActionExecCmdArg.ExecOnRelease bool"]},{"Name":"var:shortcuts","Fields":["shortcuts.ActionNoOp"]},{"Name":"const:shortcuts","Fields":["shortcuts.ActionTypeAudioCtrl","shortcuts.ActionTypeCount","shortcuts.ActionTypeDesktopFile","shortcuts.ActionTypeDisplayCtrl","shortcuts.ActionTypeExecCmd","shortcuts.ActionTypeKbdLightCtrl","shortcuts.ActionTypeMediaPlayerCtrl","shortcuts.ActionTypeNonOp","shortcuts.ActionTypeOpenMimeType","shortcuts.ActionTypeShowCapsLockOSD","shortcuts.ActionTypeShowControlCenter","shortcuts.ActionTypeShowNumLockOSD","shortcuts.ActionTypeSwitchKbdLayout","shortcuts.ActionTypeSystemAway","shortcuts.ActionTypeSystemLogOff","shortcuts.ActionTypeSystemShutdown","shortcuts.ActionTypeSystemSuspend","shortcuts.ActionTypeToggleWireless","shortcuts.ActionTypeTouchpadCtrl","shortcuts.AdjustBrightnessSwitch","shortcuts.AudioSinkMuteToggle","shortcuts.AudioSinkVolumeDown","shortcuts.AudioSinkVolumeUp","shortcuts.AudioSourceMuteToggle","shortcuts.DisplayModeSwitch","shortcuts.KbdLightBrightnessDown","shortcuts.KbdLightBrightnessUp","shortcuts.KbdLightToggle","shortcuts.MediaPlayerForword","shortcuts.MediaPlayerNext","shortcuts.MediaPlayerPause","shortcuts.MediaPlayerPlay","shortcuts.MediaPlayerPrevious","shortcuts.MediaPlayerRepeat","shortcuts.MediaPlayerRewind","shortcuts.MediaPlayerStop","shortcuts.MonitorBrightnessDown","shortcuts.MonitorBrightnessUp","shortcuts.TouchpadOff","shortcuts.TouchpadOn","shortcuts.TouchpadToggle","shortcuts.actionTypeMax"]}]}
{"Filepath":"keybinding/shortcuts/custom_shortcut.go","Functions":[{"Uniquefunname":"func Add(name, action string, keystrokes []*Keystroke)(Shortcut, error)","Funname":"Add","Returntype":"(Shortcut, error)","Args":"name, action string, keystrokes []*Keystroke"},{"Uniquefunname":"func (csm *CustomShortcutManager) Delete(id string) error","Funname":"Delete","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (cs *CustomShortcut) GetAction() *Action","Funname":"GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (csm *CustomShortcutManager) List() []Shortcut","Funname":"List","Returntype":"[]Shortcut","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) Marshal() (string, error)","Funname":"Marshal","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func NewCustomShortcutManager(file string) *CustomShortcutManager","Funname":"NewCustomShortcutManager","Returntype":"*CustomShortcutManager","Args":"file string"},{"Uniquefunname":"func (cs *CustomShortcut) ReloadKeystrokes() bool","Funname":"ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) Save() error","Funname":"Save","Returntype":"error","Args":""},{"Uniquefunname":"func (csm *CustomShortcutManager) Save() error","Funname":"Save","Returntype":"error","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) SaveKeystrokes() error","Funname":"SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) SetName(name string)","Funname":"SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (cs *CustomShortcut) ShouldEmitSignalChanged() bool","Funname":"ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) GetAction() *Action","Funname":"shortcuts.CustomShortcut.GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) Marshal() (string, error)","Funname":"shortcuts.CustomShortcut.Marshal","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) ReloadKeystrokes() bool","Funname":"shortcuts.CustomShortcut.ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) Save() error","Funname":"shortcuts.CustomShortcut.Save","Returntype":"error","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) SaveKeystrokes() error","Funname":"shortcuts.CustomShortcut.SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func (cs *CustomShortcut) SetName(name string)","Funname":"shortcuts.CustomShortcut.SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (cs *CustomShortcut) ShouldEmitSignalChanged() bool","Funname":"shortcuts.CustomShortcut.ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func shortcuts.CustomShortcutManager.Add(name, action string, keystrokes []*Keystroke)(Shortcut, error)","Funname":"shortcuts.CustomShortcutManager.Add","Returntype":"(Shortcut, error)","Args":"name, action string, keystrokes []*Keystroke"},{"Uniquefunname":"func (csm *CustomShortcutManager) Delete(id string) error","Funname":"shortcuts.CustomShortcutManager.Delete","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (csm *CustomShortcutManager) List() []Shortcut","Funname":"shortcuts.CustomShortcutManager.List","Returntype":"[]Shortcut","Args":""},{"Uniquefunname":"func (csm *CustomShortcutManager) Save() error","Funname":"shortcuts.CustomShortcutManager.Save","Returntype":"error","Args":""},{"Uniquefunname":"func NewCustomShortcutManager(file string) *CustomShortcutManager","Funname":"shortcuts.NewCustomShortcutManager","Returntype":"*CustomShortcutManager","Args":"file string"}],"Records":[{"Name":"struct:shortcuts.CustomShortcut","Fields":["shortcuts.CustomShortcut.Cmd string","shortcuts.CustomShortcut.manager *CustomShortcutManager"]},{"Name":"struct:shortcuts.CustomShortcutManager","Fields":["shortcuts.CustomShortcutManager.file string","shortcuts.CustomShortcutManager.kfile *keyfile.KeyFile","shortcuts.CustomShortcutManager.pinyinEnabled bool"]},{"Name":"const:shortcuts","Fields":["shortcuts.kfKeyAction","shortcuts.kfKeyKeystrokes","shortcuts.kfKeyName"]}]}
{"Filepath":"keybinding/shortcuts/gsettings_shortcut.go","Functions":[{"Uniquefunname":"func NewGSettingsShortcut(gsettings *gio.Settings, id string, type0 int32, keystrokes []string, name string)*GSettingsShortcut","Funname":"NewGSettingsShortcut","Returntype":"*GSettingsShortcut","Args":"gsettings *gio.Settings, id string, type0 int32, keystrokes []string, name string"},{"Uniquefunname":"func (gs *GSettingsShortcut) ReloadKeystrokes() bool","Funname":"ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (gs *GSettingsShortcut) SaveKeystrokes() error","Funname":"SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func keystrokesEqual(s1 []*Keystroke, s2 []*Keystroke) bool","Funname":"keystrokesEqual","Returntype":"bool","Args":"s1 []*Keystroke, s2 []*Keystroke"},{"Uniquefunname":"func (gs *GSettingsShortcut) ReloadKeystrokes() bool","Funname":"shortcuts.GSettingsShortcut.ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (gs *GSettingsShortcut) SaveKeystrokes() error","Funname":"shortcuts.GSettingsShortcut.SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func shortcuts.NewGSettingsShortcut(gsettings *gio.Settings, id string, type0 int32, keystrokes []string, name string)*GSettingsShortcut","Funname":"shortcuts.NewGSettingsShortcut","Returntype":"*GSettingsShortcut","Args":"gsettings *gio.Settings, id string, type0 int32, keystrokes []string, name string"},{"Uniquefunname":"func keystrokesEqual(s1 []*Keystroke, s2 []*Keystroke) bool","Funname":"shortcuts.keystrokesEqual","Returntype":"bool","Args":"s1 []*Keystroke, s2 []*Keystroke"}],"Records":[{"Name":"struct:shortcuts.GSettingsShortcut","Fields":["shortcuts.GSettingsShortcut.gsettings *gio.Settings"]}]}
{"Filepath":"keybinding/shortcuts/id_name_map.go","Functions":[{"Uniquefunname":"func getMediaIdNameMap() map[string]string","Funname":"getMediaIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getSpecialIdNameMap() map[string]string","Funname":"getSpecialIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getSystemIdNameMap() map[string]string","Funname":"getSystemIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getWMIdNameMap() map[string]string","Funname":"getWMIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getMediaIdNameMap() map[string]string","Funname":"shortcuts.getMediaIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getSpecialIdNameMap() map[string]string","Funname":"shortcuts.getSpecialIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getSystemIdNameMap() map[string]string","Funname":"shortcuts.getSystemIdNameMap","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func getWMIdNameMap() map[string]string","Funname":"shortcuts.getWMIdNameMap","Returntype":"map[string]string","Args":""}],"Records":null}
{"Filepath":"keybinding/shortcuts/key.go","Functions":[{"Uniquefunname":"func (k Key) Grab(conn *x.Conn) error","Funname":"Grab","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func (k Key) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (mods Modifiers) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (k Key) ToKeystroke(keySymbols *keysyms.KeySymbols) *Keystroke","Funname":"ToKeystroke","Returntype":"*Keystroke","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (k Key) Ungrab(conn *x.Conn)","Funname":"Ungrab","Returntype":"","Args":"conn *x.Conn"},{"Uniquefunname":"func (k Key) Grab(conn *x.Conn) error","Funname":"shortcuts.Key.Grab","Returntype":"error","Args":"conn *x.Conn"},{"Uniquefunname":"func (k Key) String() string","Funname":"shortcuts.Key.String","Returntype":"string","Args":""},{"Uniquefunname":"func (k Key) ToKeystroke(keySymbols *keysyms.KeySymbols) *Keystroke","Funname":"shortcuts.Key.ToKeystroke","Returntype":"*Keystroke","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (k Key) Ungrab(conn *x.Conn)","Funname":"shortcuts.Key.Ungrab","Returntype":"","Args":"conn *x.Conn"},{"Uniquefunname":"func (mods Modifiers) String() string","Funname":"shortcuts.Modifiers.String","Returntype":"string","Args":""}],"Records":[{"Name":"struct:shortcuts.Key","Fields":["shortcuts.Key.Code Keycode","shortcuts.Key.Mods Modifiers"]}]}
{"Filepath":"keybinding/shortcuts/keystroke.go","Functions":[{"Uniquefunname":"func (ks *Keystroke) DebugString() string","Funname":"DebugString","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Keystroke) Equal(keySymbols *keysyms.KeySymbols, b *Keystroke) bool","Funname":"Equal","Returntype":"bool","Args":"keySymbols *keysyms.KeySymbols, b *Keystroke"},{"Uniquefunname":"func GetKeyFirstCode(keySymbols *keysyms.KeySymbols, str string) (x.Keycode, error)","Funname":"GetKeyFirstCode","Returntype":"(x.Keycode, error)","Args":"keySymbols *keysyms.KeySymbols, str string"},{"Uniquefunname":"func (ks *Keystroke) IsGood() bool","Funname":"IsGood","Returntype":"bool","Args":""},{"Uniquefunname":"func (ks *Keystroke) MarshalJSON() ([]byte, error)","Funname":"MarshalJSON","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func ParseKeystroke(keystroke string) (*Keystroke, error)","Funname":"ParseKeystroke","Returntype":"(*Keystroke, error)","Args":"keystroke string"},{"Uniquefunname":"func ParseKeystrokes(keystrokes []string) []*Keystroke","Funname":"ParseKeystrokes","Returntype":"[]*Keystroke","Args":"keystrokes []string"},{"Uniquefunname":"func (ks *Keystroke) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (ks *Keystroke) ToKey(keySymbols *keysyms.KeySymbols) (Key, error)","Funname":"ToKey","Returntype":"(Key, error)","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (ks *Keystroke) ToKeyList(keySymbols *keysyms.KeySymbols) ([]Key, error)","Funname":"ToKeyList","Returntype":"([]Key, error)","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (ks *Keystroke) fix() *Keystroke","Funname":"fix","Returntype":"*Keystroke","Args":""},{"Uniquefunname":"func isGoodModShift(str string, sym x.Keysym) bool","Funname":"isGoodModShift","Returntype":"bool","Args":"str string, sym x.Keysym"},{"Uniquefunname":"func isGoodNoMods(str string, sym x.Keysym) bool","Funname":"isGoodNoMods","Returntype":"bool","Args":"str string, sym x.Keysym"},{"Uniquefunname":"func isKeycodesEqual(list1, list2 []x.Keycode) bool","Funname":"isKeycodesEqual","Returntype":"bool","Args":"list1, list2 []x.Keycode"},{"Uniquefunname":"func (ks *Keystroke) searchString() string","Funname":"searchString","Returntype":"string","Args":""},{"Uniquefunname":"func GetKeyFirstCode(keySymbols *keysyms.KeySymbols, str string) (x.Keycode, error)","Funname":"shortcuts.GetKeyFirstCode","Returntype":"(x.Keycode, error)","Args":"keySymbols *keysyms.KeySymbols, str string"},{"Uniquefunname":"func (ks *Keystroke) DebugString() string","Funname":"shortcuts.Keystroke.DebugString","Returntype":"string","Args":""},{"Uniquefunname":"func (a *Keystroke) Equal(keySymbols *keysyms.KeySymbols, b *Keystroke) bool","Funname":"shortcuts.Keystroke.Equal","Returntype":"bool","Args":"keySymbols *keysyms.KeySymbols, b *Keystroke"},{"Uniquefunname":"func (ks *Keystroke) IsGood() bool","Funname":"shortcuts.Keystroke.IsGood","Returntype":"bool","Args":""},{"Uniquefunname":"func (ks *Keystroke) MarshalJSON() ([]byte, error)","Funname":"shortcuts.Keystroke.MarshalJSON","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func (ks *Keystroke) String() string","Funname":"shortcuts.Keystroke.String","Returntype":"string","Args":""},{"Uniquefunname":"func (ks *Keystroke) ToKey(keySymbols *keysyms.KeySymbols) (Key, error)","Funname":"shortcuts.Keystroke.ToKey","Returntype":"(Key, error)","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (ks *Keystroke) ToKeyList(keySymbols *keysyms.KeySymbols) ([]Key, error)","Funname":"shortcuts.Keystroke.ToKeyList","Returntype":"([]Key, error)","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (ks *Keystroke) fix() *Keystroke","Funname":"shortcuts.Keystroke.fix","Returntype":"*Keystroke","Args":""},{"Uniquefunname":"func (ks *Keystroke) searchString() string","Funname":"shortcuts.Keystroke.searchString","Returntype":"string","Args":""},{"Uniquefunname":"func ParseKeystroke(keystroke string) (*Keystroke, error)","Funname":"shortcuts.ParseKeystroke","Returntype":"(*Keystroke, error)","Args":"keystroke string"},{"Uniquefunname":"func ParseKeystrokes(keystrokes []string) []*Keystroke","Funname":"shortcuts.ParseKeystrokes","Returntype":"[]*Keystroke","Args":"keystrokes []string"},{"Uniquefunname":"func isGoodModShift(str string, sym x.Keysym) bool","Funname":"shortcuts.isGoodModShift","Returntype":"bool","Args":"str string, sym x.Keysym"},{"Uniquefunname":"func isGoodNoMods(str string, sym x.Keysym) bool","Funname":"shortcuts.isGoodNoMods","Returntype":"bool","Args":"str string, sym x.Keysym"},{"Uniquefunname":"func isKeycodesEqual(list1, list2 []x.Keycode) bool","Funname":"shortcuts.isKeycodesEqual","Returntype":"bool","Args":"list1, list2 []x.Keycode"},{"Uniquefunname":"func splitKeystroke(str string) ([]string, error)","Funname":"shortcuts.splitKeystroke","Returntype":"([]string, error)","Args":"str string"},{"Uniquefunname":"func splitKeystroke(str string) ([]string, error)","Funname":"splitKeystroke","Returntype":"([]string, error)","Args":"str string"}],"Records":[{"Name":"struct:shortcuts.Keystroke","Fields":["shortcuts.Keystroke.Keystr string","shortcuts.Keystroke.Keysym x.Keysym","shortcuts.Keystroke.Mods Modifiers","shortcuts.Keystroke.Shortcut Shortcut","shortcuts.Keystroke.isKeystrAboveTab bool"]}]}
{"Filepath":"keybinding/shortcuts/keystroke_test.go","Functions":[{"Uniquefunname":"func TestKeystrokeMethodString(t *testing.T)","Funname":"TestKeystrokeMethodString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseKeystroke(t *testing.T)","Funname":"TestParseKeystroke","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseKeystrokes(t *testing.T)","Funname":"TestParseKeystrokes","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseLoopback(t *testing.T)","Funname":"TestParseLoopback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseMediaKey(t *testing.T)","Funname":"TestParseMediaKey","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSplitKeystroke(t *testing.T)","Funname":"TestSplitKeystroke","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestKeystrokeMethodString(t *testing.T)","Funname":"shortcuts.TestKeystrokeMethodString","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseKeystroke(t *testing.T)","Funname":"shortcuts.TestParseKeystroke","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseKeystrokes(t *testing.T)","Funname":"shortcuts.TestParseKeystrokes","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseLoopback(t *testing.T)","Funname":"shortcuts.TestParseLoopback","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseMediaKey(t *testing.T)","Funname":"shortcuts.TestParseMediaKey","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSplitKeystroke(t *testing.T)","Funname":"shortcuts.TestSplitKeystroke","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"keybinding/shortcuts/kwin_shortcut.go","Functions":[{"Uniquefunname":"func (ks *kWinShortcut) ReloadKeystrokes() bool","Funname":"ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (ks *kWinShortcut) SaveKeystrokes() error","Funname":"SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func (ks *kWinShortcut) ShouldEmitSignalChanged() bool","Funname":"ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func newKWinShortcut(id, name string, keystrokes []string, wm *wm.Wm) *kWinShortcut","Funname":"newKWinShortcut","Returntype":"*kWinShortcut","Args":"id, name string, keystrokes []string, wm *wm.Wm"},{"Uniquefunname":"func (ks *kWinShortcut) ReloadKeystrokes() bool","Funname":"shortcuts.kWinShortcut.ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (ks *kWinShortcut) SaveKeystrokes() error","Funname":"shortcuts.kWinShortcut.SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func (ks *kWinShortcut) ShouldEmitSignalChanged() bool","Funname":"shortcuts.kWinShortcut.ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func newKWinShortcut(id, name string, keystrokes []string, wm *wm.Wm) *kWinShortcut","Funname":"shortcuts.newKWinShortcut","Returntype":"*kWinShortcut","Args":"id, name string, keystrokes []string, wm *wm.Wm"}],"Records":[{"Name":"struct:shortcuts.kWinShortcut","Fields":["shortcuts.kWinShortcut.wm *wm.Wm"]}]}
{"Filepath":"keybinding/shortcuts/media_shortcut.go","Functions":[{"Uniquefunname":"func (ms *MediaShortcut) GetAction() *Action","Funname":"GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func GetAction(id string) *Action","Funname":"GetAction","Returntype":"*Action","Args":"id string"},{"Uniquefunname":"func GetAction(id string) *Action","Funname":"shortcuts.GetAction","Returntype":"*Action","Args":"id string"},{"Uniquefunname":"func (ms *MediaShortcut) GetAction() *Action","Funname":"shortcuts.MediaShortcut.GetAction","Returntype":"*Action","Args":""}],"Records":[{"Name":"const:shortcuts","Fields":["shortcuts.cmdCalculator","shortcuts.cmdCalendar","shortcuts.cmdDocuments","shortcuts.cmdEject","shortcuts.cmdLauncher","shortcuts.cmdMeeting","shortcuts.cmdMessenger","shortcuts.cmdMyComputer","shortcuts.cmdTerminal","shortcuts.mimeTypeAudioMedia","shortcuts.mimeTypeBrowser","shortcuts.mimeTypeDir","shortcuts.mimeTypeImagePng","shortcuts.mimeTypeMail","shortcuts.mimeTypeVideoMp4"]},{"Name":"var:shortcuts","Fields":["shortcuts.mediaIdActionMap"]}]}
{"Filepath":"keybinding/shortcuts/shortcut.go","Functions":[{"Uniquefunname":"func (s *FakeShortcut) GetAction() *Action","Funname":"GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetAction() *Action","Funname":"GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetId() string","Funname":"GetId","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetKeystrokes() []*Keystroke","Funname":"GetKeystrokes","Returntype":"[]*Keystroke","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetKeystrokesModifiable() bool","Funname":"GetKeystrokesModifiable","Returntype":"bool","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetName() string","Funname":"GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetNameBlocks() pinyin_search.Blocks","Funname":"GetNameBlocks","Returntype":"pinyin_search.Blocks","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetType() int32","Funname":"GetType","Returntype":"int32","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetUid() string","Funname":"GetUid","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) Marshal() (string, error)","Funname":"Marshal","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func NewFakeShortcut(action *Action) *FakeShortcut","Funname":"NewFakeShortcut","Returntype":"*FakeShortcut","Args":"action *Action"},{"Uniquefunname":"func (s *FakeShortcut) ReloadKeystrokes() bool","Funname":"ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (s *FakeShortcut) SaveKeystrokes() error","Funname":"SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) ShouldEmitSignalChanged() bool","Funname":"ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) getKeystrokesStrv() []string","Funname":"getKeystrokesStrv","Returntype":"[]string","Args":""},{"Uniquefunname":"func idType2Uid(id string, type0 int32) string","Funname":"idType2Uid","Returntype":"string","Args":"id string, type0 int32"},{"Uniquefunname":"func (sb *BaseShortcut) initNameBlocks()","Funname":"initNameBlocks","Returntype":"","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) setKeystrokes(val []*Keystroke)","Funname":"setKeystrokes","Returntype":"","Args":"val []*Keystroke"},{"Uniquefunname":"func (sb *BaseShortcut) GetAction() *Action","Funname":"shortcuts.BaseShortcut.GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetId() string","Funname":"shortcuts.BaseShortcut.GetId","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetKeystrokes() []*Keystroke","Funname":"shortcuts.BaseShortcut.GetKeystrokes","Returntype":"[]*Keystroke","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetKeystrokesModifiable() bool","Funname":"shortcuts.BaseShortcut.GetKeystrokesModifiable","Returntype":"bool","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetName() string","Funname":"shortcuts.BaseShortcut.GetName","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetNameBlocks() pinyin_search.Blocks","Funname":"shortcuts.BaseShortcut.GetNameBlocks","Returntype":"pinyin_search.Blocks","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetType() int32","Funname":"shortcuts.BaseShortcut.GetType","Returntype":"int32","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) GetUid() string","Funname":"shortcuts.BaseShortcut.GetUid","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) Marshal() (string, error)","Funname":"shortcuts.BaseShortcut.Marshal","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) ShouldEmitSignalChanged() bool","Funname":"shortcuts.BaseShortcut.ShouldEmitSignalChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) String() string","Funname":"shortcuts.BaseShortcut.String","Returntype":"string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) getKeystrokesStrv() []string","Funname":"shortcuts.BaseShortcut.getKeystrokesStrv","Returntype":"[]string","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) initNameBlocks()","Funname":"shortcuts.BaseShortcut.initNameBlocks","Returntype":"","Args":""},{"Uniquefunname":"func (sb *BaseShortcut) setKeystrokes(val []*Keystroke)","Funname":"shortcuts.BaseShortcut.setKeystrokes","Returntype":"","Args":"val []*Keystroke"},{"Uniquefunname":"func (s *FakeShortcut) GetAction() *Action","Funname":"shortcuts.FakeShortcut.GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (s *FakeShortcut) ReloadKeystrokes() bool","Funname":"shortcuts.FakeShortcut.ReloadKeystrokes","Returntype":"bool","Args":""},{"Uniquefunname":"func (s *FakeShortcut) SaveKeystrokes() error","Funname":"shortcuts.FakeShortcut.SaveKeystrokes","Returntype":"error","Args":""},{"Uniquefunname":"func NewFakeShortcut(action *Action) *FakeShortcut","Funname":"shortcuts.NewFakeShortcut","Returntype":"*FakeShortcut","Args":"action *Action"},{"Uniquefunname":"func idType2Uid(id string, type0 int32) string","Funname":"shortcuts.idType2Uid","Returntype":"string","Args":"id string, type0 int32"}],"Records":[{"Name":"struct:shortcuts.BaseShortcut","Fields":["shortcuts.BaseShortcut.Id string","shortcuts.BaseShortcut.Keystrokes []*Keystroke","shortcuts.BaseShortcut.Name string","shortcuts.BaseShortcut.Type int32","shortcuts.BaseShortcut.mu sync.Mutex","shortcuts.BaseShortcut.nameBlocks pinyin_search.Blocks","shortcuts.BaseShortcut.nameBlocksInit bool"]},{"Name":"var:shortcuts","Fields":["shortcuts.ErrInvalidActionType","shortcuts.ErrNilAction","shortcuts.ErrOpNotSupported","shortcuts.ErrTypeAssertionFail"]},{"Name":"struct:shortcuts.FakeShortcut","Fields":["shortcuts.FakeShortcut.action *Action"]},{"Name":"interface","Fields":["shortcuts.Shortcut"]},{"Name":"const:shortcuts","Fields":["shortcuts.ShortcutTypeCustom","shortcuts.ShortcutTypeFake","shortcuts.ShortcutTypeMedia","shortcuts.ShortcutTypeSystem","shortcuts.ShortcutTypeWM"]}]}
{"Filepath":"keybinding/shortcuts/shortcut_manager.go","Functions":[{"Uniquefunname":"func (sm *ShortcutManager) Add(shortcut Shortcut)","Funname":"Add","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) AddCustom(csm *CustomShortcutManager)","Funname":"AddCustom","Returntype":"","Args":"csm *CustomShortcutManager"},{"Uniquefunname":"func (sm *ShortcutManager) AddKWin(wmObj *wm.Wm)","Funname":"AddKWin","Returntype":"","Args":"wmObj *wm.Wm"},{"Uniquefunname":"func (sm *ShortcutManager) AddMedia(gsettings *gio.Settings)","Funname":"AddMedia","Returntype":"","Args":"gsettings *gio.Settings"},{"Uniquefunname":"func (sm *ShortcutManager) AddShortcutKeystroke(shortcut Shortcut, ks *Keystroke)","Funname":"AddShortcutKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) AddSpecial()","Funname":"AddSpecial","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) AddSystem(gsettings *gio.Settings, wmObj *wm.Wm)","Funname":"AddSystem","Returntype":"","Args":"gsettings *gio.Settings, wmObj *wm.Wm"},{"Uniquefunname":"func (sm *ShortcutManager) AddWM(gsettings *gio.Settings)","Funname":"AddWM","Returntype":"","Args":"gsettings *gio.Settings"},{"Uniquefunname":"func (sm *ShortcutManager) Delete(shortcut Shortcut)","Funname":"Delete","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) DeleteShortcutKeystroke(shortcut Shortcut, ks *Keystroke)","Funname":"DeleteShortcutKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) EnableRecord(val bool)","Funname":"EnableRecord","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (sm *ShortcutManager) EventLoop()","Funname":"EventLoop","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) FindConflictingKeystroke(ks *Keystroke) (*Keystroke, error)","Funname":"FindConflictingKeystroke","Returntype":"(*Keystroke, error)","Args":"ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) GetByIdType(id string, type0 int32) Shortcut","Funname":"GetByIdType","Returntype":"Shortcut","Args":"id string, type0 int32"},{"Uniquefunname":"func (sm *ShortcutManager) GetByUid(uid string) Shortcut","Funname":"GetByUid","Returntype":"Shortcut","Args":"uid string"},{"Uniquefunname":"func GetConcernedModifiers(state uint16) Modifiers","Funname":"GetConcernedModifiers","Returntype":"Modifiers","Args":"state uint16"},{"Uniquefunname":"func (sm *ShortcutManager) GrabAll()","Funname":"GrabAll","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) List() (list []Shortcut)","Funname":"List","Returntype":"(list []Shortcut)","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) ListByType(type0 int32) (list []Shortcut)","Funname":"ListByType","Returntype":"(list []Shortcut)","Args":"type0 int32"},{"Uniquefunname":"func (sm *ShortcutManager) ModifyShortcutKeystrokes(shortcut Shortcut, newVal []*Keystroke)","Funname":"ModifyShortcutKeystrokes","Returntype":"","Args":"shortcut Shortcut, newVal []*Keystroke"},{"Uniquefunname":"func NewShortcutManager(conn *x.Conn, keySymbols *keysyms.KeySymbols, eventCb KeyEventFunc)*ShortcutManager","Funname":"NewShortcutManager","Returntype":"*ShortcutManager","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, eventCb KeyEventFunc"},{"Uniquefunname":"func (sm *ShortcutManager) NotifyLayoutChanged()","Funname":"NotifyLayoutChanged","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) ReloadAllShortcutsKeystrokes() []Shortcut","Funname":"ReloadAllShortcutsKeystrokes","Returntype":"[]Shortcut","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) Search(query string) (list []Shortcut)","Funname":"Search","Returntype":"(list []Shortcut)","Args":"query string"},{"Uniquefunname":"func (sm *ShortcutManager) SetAllModKeysReleasedCallback(cb func())","Funname":"SetAllModKeysReleasedCallback","Returntype":"","Args":"cb func()"},{"Uniquefunname":"func SetLogger(l *log.Logger)","Funname":"SetLogger","Returntype":"","Args":"l *log.Logger"},{"Uniquefunname":"func (sm *ShortcutManager) UngrabAll()","Funname":"UngrabAll","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) addWithoutLock(shortcut Shortcut)","Funname":"addWithoutLock","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) callEventCallback(ev *KeyEvent)","Funname":"callEventCallback","Returntype":"","Args":"ev *KeyEvent"},{"Uniquefunname":"func combineStateCode2Key(state uint16, code uint8) Key","Funname":"combineStateCode2Key","Returntype":"Key","Args":"state uint16, code uint8"},{"Uniquefunname":"func dummyGrab(shortcut Shortcut, ks *Keystroke) bool","Funname":"dummyGrab","Returntype":"bool","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) emitFakeKeyEvent(action *Action)","Funname":"emitFakeKeyEvent","Returntype":"","Args":"action *Action"},{"Uniquefunname":"func (sm *ShortcutManager) emitKeyEvent(mods Modifiers, key Key)","Funname":"emitKeyEvent","Returntype":"","Args":"mods Modifiers, key Key"},{"Uniquefunname":"func getConcernedMods(state uint16) uint16","Funname":"getConcernedMods","Returntype":"uint16","Args":"state uint16"},{"Uniquefunname":"func getDeepinReleaseType() string","Funname":"getDeepinReleaseType","Returntype":"string","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) grabKeystroke(shortcut Shortcut, ks *Keystroke, dummy bool)","Funname":"grabKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke, dummy bool"},{"Uniquefunname":"func (sm *ShortcutManager) grabShortcut(shortcut Shortcut)","Funname":"grabShortcut","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) handleKeyEvent(pressed bool, detail x.Keycode, state uint16)","Funname":"handleKeyEvent","Returntype":"","Args":"pressed bool, detail x.Keycode, state uint16"},{"Uniquefunname":"func (sm *ShortcutManager) handleXRecordButtonEvent(pressed bool)","Funname":"handleXRecordButtonEvent","Returntype":"","Args":"pressed bool"},{"Uniquefunname":"func (sm *ShortcutManager) handleXRecordKeyEvent(pressed bool, code uint8, state uint16)","Funname":"handleXRecordKeyEvent","Returntype":"","Args":"pressed bool, code uint8, state uint16"},{"Uniquefunname":"func (sm *ShortcutManager) initRecord() error","Funname":"initRecord","Returntype":"error","Args":""},{"Uniquefunname":"func isKbdAlreadyGrabbed(conn *x.Conn) bool","Funname":"isKbdAlreadyGrabbed","Returntype":"bool","Args":"conn *x.Conn"},{"Uniquefunname":"func (sm *ShortcutManager) isRecordEnabled() bool","Funname":"isRecordEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func isZH() bool","Funname":"isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) matchShortcut(shortcut Shortcut, query string) bool","Funname":"matchShortcut","Returntype":"bool","Args":"shortcut Shortcut, query string"},{"Uniquefunname":"func (sm *ShortcutManager) recordEventLoop()","Funname":"recordEventLoop","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) regrabAll()","Funname":"regrabAll","Returntype":"","Args":""},{"Uniquefunname":"func GetConcernedModifiers(state uint16) Modifiers","Funname":"shortcuts.GetConcernedModifiers","Returntype":"Modifiers","Args":"state uint16"},{"Uniquefunname":"func shortcuts.NewShortcutManager(conn *x.Conn, keySymbols *keysyms.KeySymbols, eventCb KeyEventFunc)*ShortcutManager","Funname":"shortcuts.NewShortcutManager","Returntype":"*ShortcutManager","Args":"conn *x.Conn, keySymbols *keysyms.KeySymbols, eventCb KeyEventFunc"},{"Uniquefunname":"func SetLogger(l *log.Logger)","Funname":"shortcuts.SetLogger","Returntype":"","Args":"l *log.Logger"},{"Uniquefunname":"func (sm *ShortcutManager) Add(shortcut Shortcut)","Funname":"shortcuts.ShortcutManager.Add","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) AddCustom(csm *CustomShortcutManager)","Funname":"shortcuts.ShortcutManager.AddCustom","Returntype":"","Args":"csm *CustomShortcutManager"},{"Uniquefunname":"func (sm *ShortcutManager) AddKWin(wmObj *wm.Wm)","Funname":"shortcuts.ShortcutManager.AddKWin","Returntype":"","Args":"wmObj *wm.Wm"},{"Uniquefunname":"func (sm *ShortcutManager) AddMedia(gsettings *gio.Settings)","Funname":"shortcuts.ShortcutManager.AddMedia","Returntype":"","Args":"gsettings *gio.Settings"},{"Uniquefunname":"func (sm *ShortcutManager) AddShortcutKeystroke(shortcut Shortcut, ks *Keystroke)","Funname":"shortcuts.ShortcutManager.AddShortcutKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) AddSpecial()","Funname":"shortcuts.ShortcutManager.AddSpecial","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) AddSystem(gsettings *gio.Settings, wmObj *wm.Wm)","Funname":"shortcuts.ShortcutManager.AddSystem","Returntype":"","Args":"gsettings *gio.Settings, wmObj *wm.Wm"},{"Uniquefunname":"func (sm *ShortcutManager) AddWM(gsettings *gio.Settings)","Funname":"shortcuts.ShortcutManager.AddWM","Returntype":"","Args":"gsettings *gio.Settings"},{"Uniquefunname":"func (sm *ShortcutManager) Delete(shortcut Shortcut)","Funname":"shortcuts.ShortcutManager.Delete","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) DeleteShortcutKeystroke(shortcut Shortcut, ks *Keystroke)","Funname":"shortcuts.ShortcutManager.DeleteShortcutKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) Destroy()","Funname":"shortcuts.ShortcutManager.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) EnableRecord(val bool)","Funname":"shortcuts.ShortcutManager.EnableRecord","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (sm *ShortcutManager) EventLoop()","Funname":"shortcuts.ShortcutManager.EventLoop","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) FindConflictingKeystroke(ks *Keystroke) (*Keystroke, error)","Funname":"shortcuts.ShortcutManager.FindConflictingKeystroke","Returntype":"(*Keystroke, error)","Args":"ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) GetByIdType(id string, type0 int32) Shortcut","Funname":"shortcuts.ShortcutManager.GetByIdType","Returntype":"Shortcut","Args":"id string, type0 int32"},{"Uniquefunname":"func (sm *ShortcutManager) GetByUid(uid string) Shortcut","Funname":"shortcuts.ShortcutManager.GetByUid","Returntype":"Shortcut","Args":"uid string"},{"Uniquefunname":"func (sm *ShortcutManager) GrabAll()","Funname":"shortcuts.ShortcutManager.GrabAll","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) List() (list []Shortcut)","Funname":"shortcuts.ShortcutManager.List","Returntype":"(list []Shortcut)","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) ListByType(type0 int32) (list []Shortcut)","Funname":"shortcuts.ShortcutManager.ListByType","Returntype":"(list []Shortcut)","Args":"type0 int32"},{"Uniquefunname":"func (sm *ShortcutManager) ModifyShortcutKeystrokes(shortcut Shortcut, newVal []*Keystroke)","Funname":"shortcuts.ShortcutManager.ModifyShortcutKeystrokes","Returntype":"","Args":"shortcut Shortcut, newVal []*Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) NotifyLayoutChanged()","Funname":"shortcuts.ShortcutManager.NotifyLayoutChanged","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) ReloadAllShortcutsKeystrokes() []Shortcut","Funname":"shortcuts.ShortcutManager.ReloadAllShortcutsKeystrokes","Returntype":"[]Shortcut","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) Search(query string) (list []Shortcut)","Funname":"shortcuts.ShortcutManager.Search","Returntype":"(list []Shortcut)","Args":"query string"},{"Uniquefunname":"func (sm *ShortcutManager) SetAllModKeysReleasedCallback(cb func())","Funname":"shortcuts.ShortcutManager.SetAllModKeysReleasedCallback","Returntype":"","Args":"cb func()"},{"Uniquefunname":"func (sm *ShortcutManager) UngrabAll()","Funname":"shortcuts.ShortcutManager.UngrabAll","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) addWithoutLock(shortcut Shortcut)","Funname":"shortcuts.ShortcutManager.addWithoutLock","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) callEventCallback(ev *KeyEvent)","Funname":"shortcuts.ShortcutManager.callEventCallback","Returntype":"","Args":"ev *KeyEvent"},{"Uniquefunname":"func (sm *ShortcutManager) emitFakeKeyEvent(action *Action)","Funname":"shortcuts.ShortcutManager.emitFakeKeyEvent","Returntype":"","Args":"action *Action"},{"Uniquefunname":"func (sm *ShortcutManager) emitKeyEvent(mods Modifiers, key Key)","Funname":"shortcuts.ShortcutManager.emitKeyEvent","Returntype":"","Args":"mods Modifiers, key Key"},{"Uniquefunname":"func (sm *ShortcutManager) grabKeystroke(shortcut Shortcut, ks *Keystroke, dummy bool)","Funname":"shortcuts.ShortcutManager.grabKeystroke","Returntype":"","Args":"shortcut Shortcut, ks *Keystroke, dummy bool"},{"Uniquefunname":"func (sm *ShortcutManager) grabShortcut(shortcut Shortcut)","Funname":"shortcuts.ShortcutManager.grabShortcut","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func (sm *ShortcutManager) handleKeyEvent(pressed bool, detail x.Keycode, state uint16)","Funname":"shortcuts.ShortcutManager.handleKeyEvent","Returntype":"","Args":"pressed bool, detail x.Keycode, state uint16"},{"Uniquefunname":"func (sm *ShortcutManager) handleXRecordButtonEvent(pressed bool)","Funname":"shortcuts.ShortcutManager.handleXRecordButtonEvent","Returntype":"","Args":"pressed bool"},{"Uniquefunname":"func (sm *ShortcutManager) handleXRecordKeyEvent(pressed bool, code uint8, state uint16)","Funname":"shortcuts.ShortcutManager.handleXRecordKeyEvent","Returntype":"","Args":"pressed bool, code uint8, state uint16"},{"Uniquefunname":"func (sm *ShortcutManager) initRecord() error","Funname":"shortcuts.ShortcutManager.initRecord","Returntype":"error","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) isRecordEnabled() bool","Funname":"shortcuts.ShortcutManager.isRecordEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) matchShortcut(shortcut Shortcut, query string) bool","Funname":"shortcuts.ShortcutManager.matchShortcut","Returntype":"bool","Args":"shortcut Shortcut, query string"},{"Uniquefunname":"func (sm *ShortcutManager) recordEventLoop()","Funname":"shortcuts.ShortcutManager.recordEventLoop","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) regrabAll()","Funname":"shortcuts.ShortcutManager.regrabAll","Returntype":"","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) storeConflictingKeystroke(ks *Keystroke)","Funname":"shortcuts.ShortcutManager.storeConflictingKeystroke","Returntype":"","Args":"ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) ungrabKeystroke(ks *Keystroke, dummy bool)","Funname":"shortcuts.ShortcutManager.ungrabKeystroke","Returntype":"","Args":"ks *Keystroke, dummy bool"},{"Uniquefunname":"func (sm *ShortcutManager) ungrabShortcut(shortcut Shortcut)","Funname":"shortcuts.ShortcutManager.ungrabShortcut","Returntype":"","Args":"shortcut Shortcut"},{"Uniquefunname":"func combineStateCode2Key(state uint16, code uint8) Key","Funname":"shortcuts.combineStateCode2Key","Returntype":"Key","Args":"state uint16, code uint8"},{"Uniquefunname":"func dummyGrab(shortcut Shortcut, ks *Keystroke) bool","Funname":"shortcuts.dummyGrab","Returntype":"bool","Args":"shortcut Shortcut, ks *Keystroke"},{"Uniquefunname":"func getConcernedMods(state uint16) uint16","Funname":"shortcuts.getConcernedMods","Returntype":"uint16","Args":"state uint16"},{"Uniquefunname":"func getDeepinReleaseType() string","Funname":"shortcuts.getDeepinReleaseType","Returntype":"string","Args":""},{"Uniquefunname":"func isKbdAlreadyGrabbed(conn *x.Conn) bool","Funname":"shortcuts.isKbdAlreadyGrabbed","Returntype":"bool","Args":"conn *x.Conn"},{"Uniquefunname":"func isZH() bool","Funname":"shortcuts.isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func (sm *ShortcutManager) storeConflictingKeystroke(ks *Keystroke)","Funname":"storeConflictingKeystroke","Returntype":"","Args":"ks *Keystroke"},{"Uniquefunname":"func (sm *ShortcutManager) ungrabKeystroke(ks *Keystroke, dummy bool)","Funname":"ungrabKeystroke","Returntype":"","Args":"ks *Keystroke, dummy bool"},{"Uniquefunname":"func (sm *ShortcutManager) ungrabShortcut(shortcut Shortcut)","Funname":"ungrabShortcut","Returntype":"","Args":"shortcut Shortcut"}],"Records":[{"Name":"struct:shortcuts.KeyEvent","Fields":["shortcuts.KeyEvent.Code Keycode","shortcuts.KeyEvent.Mods Modifiers","shortcuts.KeyEvent.Shortcut Shortcut"]},{"Name":"const:shortcuts","Fields":["shortcuts.SKLAltShift","shortcuts.SKLCtrlShift","shortcuts.SKLSuperSpace","shortcuts.versionFile"]},{"Name":"struct:shortcuts.ShortcutManager","Fields":["shortcuts.ShortcutManager.ConflictingKeystrokes []*Keystroke","shortcuts.ShortcutManager.EliminateConflictDone bool","shortcuts.ShortcutManager.conn *x.Conn","shortcuts.ShortcutManager.dataConn *x.Conn","shortcuts.ShortcutManager.eventCb KeyEventFunc","shortcuts.ShortcutManager.eventCbMu sync.Mutex","shortcuts.ShortcutManager.idShortcutMap map[string]Shortcut","shortcuts.ShortcutManager.idShortcutMapMu sync.Mutex","shortcuts.ShortcutManager.keyKeystrokeMap map[Key]*Keystroke","shortcuts.ShortcutManager.keyKeystrokeMapMu sync.Mutex","shortcuts.ShortcutManager.keySymbols *keysyms.KeySymbols","shortcuts.ShortcutManager.layoutChanged chan struct{}","shortcuts.ShortcutManager.pinyinEnabled bool","shortcuts.ShortcutManager.recordContext record.Context","shortcuts.ShortcutManager.recordEnable bool","shortcuts.ShortcutManager.recordEnableMu sync.Mutex","shortcuts.ShortcutManager.xRecordEventHandler *XRecordEventHandler"]},{"Name":"var:shortcuts","Fields":["shortcuts.logger"]}]}
{"Filepath":"keybinding/shortcuts/system_shortcut.go","Functions":[{"Uniquefunname":"func (ss *SystemShortcut) GetAction() *Action","Funname":"GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (ss *SystemShortcut) SetAction(newAction *Action) error","Funname":"SetAction","Returntype":"error","Args":"newAction *Action"},{"Uniquefunname":"func (ss *SystemShortcut) SetName(name string) error","Funname":"SetName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (a *actionHandler) getCmd(id string) (cmd string, ok bool)","Funname":"getCmd","Returntype":"(cmd string, ok bool)","Args":"id string"},{"Uniquefunname":"func getSystemActionCmd(id string) string","Funname":"getSystemActionCmd","Returntype":"string","Args":"id string"},{"Uniquefunname":"func getSystemActionsFile() string","Funname":"getSystemActionsFile","Returntype":"string","Args":""},{"Uniquefunname":"func loadSystemActionsFile(file string) (*actionHandler, error)","Funname":"loadSystemActionsFile","Returntype":"(*actionHandler, error)","Args":"file string"},{"Uniquefunname":"func (ss *SystemShortcut) GetAction() *Action","Funname":"shortcuts.SystemShortcut.GetAction","Returntype":"*Action","Args":""},{"Uniquefunname":"func (ss *SystemShortcut) SetAction(newAction *Action) error","Funname":"shortcuts.SystemShortcut.SetAction","Returntype":"error","Args":"newAction *Action"},{"Uniquefunname":"func (ss *SystemShortcut) SetName(name string) error","Funname":"shortcuts.SystemShortcut.SetName","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (a *actionHandler) getCmd(id string) (cmd string, ok bool)","Funname":"shortcuts.actionHandler.getCmd","Returntype":"(cmd string, ok bool)","Args":"id string"},{"Uniquefunname":"func getSystemActionCmd(id string) string","Funname":"shortcuts.getSystemActionCmd","Returntype":"string","Args":"id string"},{"Uniquefunname":"func getSystemActionsFile() string","Funname":"shortcuts.getSystemActionsFile","Returntype":"string","Args":""},{"Uniquefunname":"func loadSystemActionsFile(file string) (*actionHandler, error)","Funname":"shortcuts.loadSystemActionsFile","Returntype":"(*actionHandler, error)","Args":"file string"}],"Records":[{"Name":"struct:shortcuts.SystemShortcut","Fields":["shortcuts.SystemShortcut.arg *ActionExecCmdArg"]},{"Name":"struct:shortcuts.actionHandler","Fields":["shortcuts.actionHandler.Actions []struct { Key string `json:\"Key\"`; Action string `json:\"Action\"`; }"]},{"Name":"var:shortcuts","Fields":["shortcuts.actionsCache","shortcuts.defaultSysActionCmdMap","shortcuts.loadSysActionsFileOnce"]},{"Name":"const:shortcuts","Fields":["shortcuts.screenshotCmdPrefix","shortcuts.systemActionsFile"]}]}
{"Filepath":"keybinding/shortcuts/xrecord_event_handler.go","Functions":[{"Uniquefunname":"func NewXRecordEventHandler(keySymbols *keysyms.KeySymbols) *XRecordEventHandler","Funname":"NewXRecordEventHandler","Returntype":"*XRecordEventHandler","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (h *XRecordEventHandler) handleButtonEvent(pressed bool)","Funname":"handleButtonEvent","Returntype":"","Args":"pressed bool"},{"Uniquefunname":"func (h *XRecordEventHandler) handleKeyEvent(pressed bool, keycode uint8, state uint16)","Funname":"handleKeyEvent","Returntype":"","Args":"pressed bool, keycode uint8, state uint16"},{"Uniquefunname":"func key2Mod(key string) (uint16, bool)","Funname":"key2Mod","Returntype":"(uint16, bool)","Args":"key string"},{"Uniquefunname":"func NewXRecordEventHandler(keySymbols *keysyms.KeySymbols) *XRecordEventHandler","Funname":"shortcuts.NewXRecordEventHandler","Returntype":"*XRecordEventHandler","Args":"keySymbols *keysyms.KeySymbols"},{"Uniquefunname":"func (h *XRecordEventHandler) handleButtonEvent(pressed bool)","Funname":"shortcuts.XRecordEventHandler.handleButtonEvent","Returntype":"","Args":"pressed bool"},{"Uniquefunname":"func (h *XRecordEventHandler) handleKeyEvent(pressed bool, keycode uint8, state uint16)","Funname":"shortcuts.XRecordEventHandler.handleKeyEvent","Returntype":"","Args":"pressed bool, keycode uint8, state uint16"},{"Uniquefunname":"func key2Mod(key string) (uint16, bool)","Funname":"shortcuts.key2Mod","Returntype":"(uint16, bool)","Args":"key string"}],"Records":[{"Name":"struct:shortcuts.XRecordEventHandler","Fields":["shortcuts.XRecordEventHandler.allModKeysReleasedCb func()","shortcuts.XRecordEventHandler.historyPressedMods uint16","shortcuts.XRecordEventHandler.keySymbols *keysyms.KeySymbols","shortcuts.XRecordEventHandler.modKeyReleasedCb func(uint8, uint16)","shortcuts.XRecordEventHandler.nonModKeyPressed bool","shortcuts.XRecordEventHandler.pressedMods uint16"]}]}
{"Filepath":"keybinding/shortcuts/xrecord_event_handler_test.go","Functions":[{"Uniquefunname":"func BenchmarkKey2Mode(b *testing.B)","Funname":"BenchmarkKey2Mode","Returntype":"","Args":"b *testing.B"},{"Uniquefunname":"func TestKey2Mode(t *testing.T)","Funname":"TestKey2Mode","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func BenchmarkKey2Mode(b *testing.B)","Funname":"shortcuts.BenchmarkKey2Mode","Returntype":"","Args":"b *testing.B"},{"Uniquefunname":"func TestKey2Mode(t *testing.T)","Funname":"shortcuts.TestKey2Mode","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"keybinding/util/util.go","Functions":[{"Uniquefunname":"func GetAllKWinAccels(wm *wm.Wm) ([]KWinAccel, error)","Funname":"GetAllKWinAccels","Returntype":"([]KWinAccel, error)","Args":"wm *wm.Wm"},{"Uniquefunname":"func MarshalJSON(v interface","Funname":"MarshalJSON","Returntype":"(string, error)","Args":"v interface{}"},{"Uniquefunname":"func (kwa *KWinAccel) fix()","Funname":"fix","Returntype":"","Args":""},{"Uniquefunname":"func GetAllKWinAccels(wm *wm.Wm) ([]KWinAccel, error)","Funname":"util.GetAllKWinAccels","Returntype":"([]KWinAccel, error)","Args":"wm *wm.Wm"},{"Uniquefunname":"func (kwa *KWinAccel) fix()","Funname":"util.KWinAccel.fix","Returntype":"","Args":""},{"Uniquefunname":"func MarshalJSON(v interface","Funname":"util.MarshalJSON","Returntype":"(string, error)","Args":"v interface{}"}],"Records":[{"Name":"struct:util.KWinAccel","Fields":["util.KWinAccel.DefaultKeystrokes []string","util.KWinAccel.Id string","util.KWinAccel.Keystrokes []string"]}]}
{"Filepath":"langselector/langselector_dbusutil.go","Functions":[{"Uniquefunname":"func (v *LangSelector) emitPropChangedCurrentLocale(value string) error","Funname":"emitPropChangedCurrentLocale","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *LangSelector) emitPropChangedLocaleState(value int32) error","Funname":"emitPropChangedLocaleState","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *LangSelector) emitPropChangedLocales(value []string) error","Funname":"emitPropChangedLocales","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *LangSelector) emitPropChangedCurrentLocale(value string) error","Funname":"langselector.LangSelector.emitPropChangedCurrentLocale","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *LangSelector) emitPropChangedLocaleState(value int32) error","Funname":"langselector.LangSelector.emitPropChangedLocaleState","Returntype":"error","Args":"value int32"},{"Uniquefunname":"func (v *LangSelector) emitPropChangedLocales(value []string) error","Funname":"langselector.LangSelector.emitPropChangedLocales","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *LangSelector) setPropCurrentLocale(value string) (changed bool)","Funname":"langselector.LangSelector.setPropCurrentLocale","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *LangSelector) setPropLocaleState(value int32) (changed bool)","Funname":"langselector.LangSelector.setPropLocaleState","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *LangSelector) setPropLocales(value []string)","Funname":"langselector.LangSelector.setPropLocales","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *LangSelector) setPropCurrentLocale(value string) (changed bool)","Funname":"setPropCurrentLocale","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *LangSelector) setPropLocaleState(value int32) (changed bool)","Funname":"setPropLocaleState","Returntype":"(changed bool)","Args":"value int32"},{"Uniquefunname":"func (v *LangSelector) setPropLocales(value []string)","Funname":"setPropLocales","Returntype":"","Args":"value []string"}],"Records":null}
{"Filepath":"langselector/locale.go","Functions":[{"Uniquefunname":"func (infos LocaleInfos) Get(locale string) (LocaleInfo, error)","Funname":"Get","Returntype":"(LocaleInfo, error)","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) addLocale(locale string) error","Funname":"addLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (l *LangSelector) connectSettingsChanged()","Funname":"connectSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (lang *LangSelector) deleteLocale(locale string) error","Funname":"deleteLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) generateLocale(locale string) error","Funname":"generateLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func generateLocaleEnvFile(locale, filename string) []byte","Funname":"generateLocaleEnvFile","Returntype":"[]byte","Args":"locale, filename string"},{"Uniquefunname":"func (ls *LangSelector) getCachedLocales() LocaleInfos","Funname":"getCachedLocales","Returntype":"LocaleInfos","Args":""},{"Uniquefunname":"func getCurrentUserLocale() (locale string)","Funname":"getCurrentUserLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getLocaleFromFile(filename string) (string, error)","Funname":"getLocaleFromFile","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func getLocaleInfos() (LocaleInfos, error)","Funname":"getLocaleInfos","Returntype":"(LocaleInfos, error)","Args":""},{"Uniquefunname":"func initNotifyTxt()","Funname":"initNotifyTxt","Returntype":"","Args":""},{"Uniquefunname":"func (lang *LangSelector) installLangSupportPackages(locale string) error","Funname":"installLangSupportPackages","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) installPackages(pkgs []string) error","Funname":"installPackages","Returntype":"error","Args":"pkgs []string"},{"Uniquefunname":"func isNetworkEnable() (bool, error)","Funname":"isNetworkEnable","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (ls *LangSelector) isSupportedLocale(locale string) bool","Funname":"isSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) addLocale(locale string) error","Funname":"langselector.LangSelector.addLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (l *LangSelector) connectSettingsChanged()","Funname":"langselector.LangSelector.connectSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (lang *LangSelector) deleteLocale(locale string) error","Funname":"langselector.LangSelector.deleteLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) generateLocale(locale string) error","Funname":"langselector.LangSelector.generateLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (ls *LangSelector) getCachedLocales() LocaleInfos","Funname":"langselector.LangSelector.getCachedLocales","Returntype":"LocaleInfos","Args":""},{"Uniquefunname":"func (lang *LangSelector) installLangSupportPackages(locale string) error","Funname":"langselector.LangSelector.installLangSupportPackages","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) installPackages(pkgs []string) error","Funname":"langselector.LangSelector.installPackages","Returntype":"error","Args":"pkgs []string"},{"Uniquefunname":"func (ls *LangSelector) isSupportedLocale(locale string) bool","Funname":"langselector.LangSelector.isSupportedLocale","Returntype":"bool","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) setLocale(locale string)","Funname":"langselector.LangSelector.setLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) setLocaleFailed(oldLocale string)","Funname":"langselector.LangSelector.setLocaleFailed","Returntype":"","Args":"oldLocale string"},{"Uniquefunname":"func (l *LangSelector) updateLocales(locales []string)","Funname":"langselector.LangSelector.updateLocales","Returntype":"","Args":"locales []string"},{"Uniquefunname":"func (infos LocaleInfos) Get(locale string) (LocaleInfo, error)","Funname":"langselector.LocaleInfos.Get","Returntype":"(LocaleInfo, error)","Args":"locale string"},{"Uniquefunname":"func generateLocaleEnvFile(locale, filename string) []byte","Funname":"langselector.generateLocaleEnvFile","Returntype":"[]byte","Args":"locale, filename string"},{"Uniquefunname":"func getCurrentUserLocale() (locale string)","Funname":"langselector.getCurrentUserLocale","Returntype":"(locale string)","Args":""},{"Uniquefunname":"func getLocaleFromFile(filename string) (string, error)","Funname":"langselector.getLocaleFromFile","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func getLocaleInfos() (LocaleInfos, error)","Funname":"langselector.getLocaleInfos","Returntype":"(LocaleInfos, error)","Args":""},{"Uniquefunname":"func initNotifyTxt()","Funname":"langselector.initNotifyTxt","Returntype":"","Args":""},{"Uniquefunname":"func isNetworkEnable() (bool, error)","Funname":"langselector.isNetworkEnable","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func newLangSelector(service *dbusutil.Service) (*LangSelector, error)","Funname":"langselector.newLangSelector","Returntype":"(*LangSelector, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func readEnvFile(file string) (envInfos, error)","Funname":"langselector.readEnvFile","Returntype":"(envInfos, error)","Args":"file string"},{"Uniquefunname":"func sendNotify(icon, summary, body string)","Funname":"langselector.sendNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func syncUserLocale(locale string) error","Funname":"langselector.syncUserLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func writeLocaleEnvFile(locale, filename string) error","Funname":"langselector.writeLocaleEnvFile","Returntype":"error","Args":"locale, filename string"},{"Uniquefunname":"func writeUserLocale(locale string) error","Funname":"langselector.writeUserLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func newLangSelector(service *dbusutil.Service) (*LangSelector, error)","Funname":"newLangSelector","Returntype":"(*LangSelector, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func readEnvFile(file string) (envInfos, error)","Funname":"readEnvFile","Returntype":"(envInfos, error)","Args":"file string"},{"Uniquefunname":"func sendNotify(icon, summary, body string)","Funname":"sendNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (lang *LangSelector) setLocale(locale string)","Funname":"setLocale","Returntype":"","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) setLocaleFailed(oldLocale string)","Funname":"setLocaleFailed","Returntype":"","Args":"oldLocale string"},{"Uniquefunname":"func syncUserLocale(locale string) error","Funname":"syncUserLocale","Returntype":"error","Args":"locale string"},{"Uniquefunname":"func (l *LangSelector) updateLocales(locales []string)","Funname":"updateLocales","Returntype":"","Args":"locales []string"},{"Uniquefunname":"func writeLocaleEnvFile(locale, filename string) error","Funname":"writeLocaleEnvFile","Returntype":"error","Args":"locale, filename string"},{"Uniquefunname":"func writeUserLocale(locale string) error","Funname":"writeUserLocale","Returntype":"error","Args":"locale string"}],"Records":[{"Name":"var:langselector","Fields":["langselector.ErrFileNotExist","langselector.ErrLocaleChangeFailed","langselector.ErrLocaleNotFound","langselector._","langselector.errSignalBodyInvalid","langselector.notifyTxtDone","langselector.notifyTxtStart","langselector.notifyTxtStartWithInstall"]},{"Name":"struct:langselector.LangSelector","Fields":["langselector.LangSelector.CurrentLocale string","langselector.LangSelector.LocaleState int32","langselector.LangSelector.Locales []string","langselector.LangSelector.PropsMu sync.RWMutex","langselector.LangSelector.helper *localehelper.LocaleHelper","langselector.LangSelector.localesCache LocaleInfos","langselector.LangSelector.methods *struct { SetLocale func() `in:\"locale\"`; GetLocaleList func() `out:\"locales\"`; GetLocaleDescription func() `in:\"locale\" out:\"description\"`; GetLanguageSupportPackages func() `in:\"locale\" out:\"packages\"`; AddLocale func() `in:\"locale\"`; DeleteLocale func() `in:\"locale\"`; }","langselector.LangSelector.service *dbusutil.Service","langselector.LangSelector.settings *gio.Settings","langselector.LangSelector.signals *struct { Changed struct { locale string; }; }","langselector.LangSelector.systemBus *dbus.Conn"]},{"Name":"struct:langselector.LocaleInfo","Fields":["langselector.LocaleInfo.Desc string","langselector.LocaleInfo.Locale string"]},{"Name":"const:langselector","Fields":["langselector.LocaleStateChanged","langselector.LocaleStateChanging","langselector.defaultLocale","langselector.gsKeyLocales","langselector.gsSchemaLocale","langselector.systemLocaleFile","langselector.systemdLocaleFile","langselector.userLocaleConfigFile"]},{"Name":"struct:langselector.envInfo","Fields":["langselector.envInfo.key string","langselector.envInfo.value string"]}]}
{"Filepath":"langselector/locale_ifc.go","Functions":[{"Uniquefunname":"func (lang *LangSelector) AddLocale(locale string) *dbus.Error","Funname":"AddLocale","Returntype":"*dbus.Error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) DeleteLocale(locale string) *dbus.Error","Funname":"DeleteLocale","Returntype":"*dbus.Error","Args":"locale string"},{"Uniquefunname":"func (*LangSelector) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (lang *LangSelector) GetLanguageSupportPackages(locale string) ([]string, *dbus.Error)","Funname":"GetLanguageSupportPackages","Returntype":"([]string, *dbus.Error)","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) GetLocaleDescription(locale string) (string, *dbus.Error)","Funname":"GetLocaleDescription","Returntype":"(string, *dbus.Error)","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) GetLocaleList() ([]LocaleInfo, *dbus.Error)","Funname":"GetLocaleList","Returntype":"([]LocaleInfo, *dbus.Error)","Args":""},{"Uniquefunname":"func (lang *LangSelector) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (lang *LangSelector) SetLocale(locale string) *dbus.Error","Funname":"SetLocale","Returntype":"*dbus.Error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) AddLocale(locale string) *dbus.Error","Funname":"langselector.LangSelector.AddLocale","Returntype":"*dbus.Error","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) DeleteLocale(locale string) *dbus.Error","Funname":"langselector.LangSelector.DeleteLocale","Returntype":"*dbus.Error","Args":"locale string"},{"Uniquefunname":"func (*LangSelector) GetInterfaceName() string","Funname":"langselector.LangSelector.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (lang *LangSelector) GetLanguageSupportPackages(locale string) ([]string, *dbus.Error)","Funname":"langselector.LangSelector.GetLanguageSupportPackages","Returntype":"([]string, *dbus.Error)","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) GetLocaleDescription(locale string) (string, *dbus.Error)","Funname":"langselector.LangSelector.GetLocaleDescription","Returntype":"(string, *dbus.Error)","Args":"locale string"},{"Uniquefunname":"func (lang *LangSelector) GetLocaleList() ([]LocaleInfo, *dbus.Error)","Funname":"langselector.LangSelector.GetLocaleList","Returntype":"([]LocaleInfo, *dbus.Error)","Args":""},{"Uniquefunname":"func (lang *LangSelector) Reset() *dbus.Error","Funname":"langselector.LangSelector.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (lang *LangSelector) SetLocale(locale string) *dbus.Error","Funname":"langselector.LangSelector.SetLocale","Returntype":"*dbus.Error","Args":"locale string"}],"Records":[{"Name":"const:langselector","Fields":["langselector.dbusInterface","langselector.dbusPath","langselector.localeIconFailed","langselector.localeIconFinished","langselector.localeIconStart"]}]}
{"Filepath":"langselector/locale_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (t *TestWrapper) TestGenerateLocaleEnvFile(c *C.C)","Funname":"TestGenerateLocaleEnvFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (t *TestWrapper) TestGetLocale(c *C.C)","Funname":"TestGetLocale","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (t *TestWrapper) TestWriteUserLocale(c *C.C)","Funname":"TestWriteUserLocale","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"langselector.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (t *TestWrapper) TestGenerateLocaleEnvFile(c *C.C)","Funname":"langselector.TestWrapper.TestGenerateLocaleEnvFile","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (t *TestWrapper) TestGetLocale(c *C.C)","Funname":"langselector.TestWrapper.TestGetLocale","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (t *TestWrapper) TestWriteUserLocale(c *C.C)","Funname":"langselector.TestWrapper.TestWriteUserLocale","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"langselector.init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"langselector/main.go","Functions":[{"Uniquefunname":"func GetLocales() []string","Funname":"GetLocales","Returntype":"[]string","Args":""},{"Uniquefunname":"func Run()","Funname":"Run","Returntype":"","Args":""},{"Uniquefunname":"func GetLocales() []string","Funname":"langselector.GetLocales","Returntype":"[]string","Args":""},{"Uniquefunname":"func Run()","Funname":"langselector.Run","Returntype":"","Args":""}],"Records":[{"Name":"const:langselector","Fields":["langselector.dbusServiceName"]},{"Name":"var:langselector","Fields":["langselector.logger"]}]}
{"Filepath":"lastore/daemon.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"lastore.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"lastore.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"lastore.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"lastore.init","Returntype":"","Args":""},{"Uniquefunname":"func newDaemon() *Daemon","Funname":"lastore.newDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func newDaemon() *Daemon","Funname":"newDaemon","Returntype":"*Daemon","Args":""}],"Records":[{"Name":"struct:lastore.Daemon","Fields":["lastore.Daemon.lastore *Lastore"]},{"Name":"const:lastore","Fields":["lastore.dbusPath","lastore.dbusServiceName"]},{"Name":"var:lastore","Fields":["lastore.logger"]}]}
{"Filepath":"lastore/lastore.go","Functions":[{"Uniquefunname":"func (l *Lastore) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Lastore) IsDiskSpaceSufficient() (bool, *dbus.Error)","Funname":"IsDiskSpaceSufficient","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (l *Lastore) checkBattery()","Funname":"checkBattery","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) createJobFailedActions(jobId string) []NotifyAction","Funname":"createJobFailedActions","Returntype":"[]NotifyAction","Args":"jobId string"},{"Uniquefunname":"func (l *Lastore) createUpdateActions() []NotifyAction","Funname":"createUpdateActions","Returntype":"[]NotifyAction","Args":""},{"Uniquefunname":"func (l *Lastore) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func guestJobTypeFromPath(path dbus.ObjectPath) string","Funname":"guestJobTypeFromPath","Returntype":"string","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (l *Lastore) initCore(systemBus *dbus.Conn)","Funname":"initCore","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initNotify(sessionBus *dbus.Conn)","Funname":"initNotify","Returntype":"","Args":"sessionBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initPower(systemBus *dbus.Conn)","Funname":"initPower","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initSysDBusDaemon(systemBus *dbus.Conn)","Funname":"initSysDBusDaemon","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) GetInterfaceName() string","Funname":"lastore.Lastore.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Lastore) IsDiskSpaceSufficient() (bool, *dbus.Error)","Funname":"lastore.Lastore.IsDiskSpaceSufficient","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (l *Lastore) checkBattery()","Funname":"lastore.Lastore.checkBattery","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) createJobFailedActions(jobId string) []NotifyAction","Funname":"lastore.Lastore.createJobFailedActions","Returntype":"[]NotifyAction","Args":"jobId string"},{"Uniquefunname":"func (l *Lastore) createUpdateActions() []NotifyAction","Funname":"lastore.Lastore.createUpdateActions","Returntype":"[]NotifyAction","Args":""},{"Uniquefunname":"func (l *Lastore) destroy()","Funname":"lastore.Lastore.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) initCore(systemBus *dbus.Conn)","Funname":"lastore.Lastore.initCore","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initNotify(sessionBus *dbus.Conn)","Funname":"lastore.Lastore.initNotify","Returntype":"","Args":"sessionBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initPower(systemBus *dbus.Conn)","Funname":"lastore.Lastore.initPower","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) initSysDBusDaemon(systemBus *dbus.Conn)","Funname":"lastore.Lastore.initSysDBusDaemon","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (l *Lastore) notifyJob(path dbus.ObjectPath)","Funname":"lastore.Lastore.notifyJob","Returntype":"","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (l *Lastore) offline()","Funname":"lastore.Lastore.offline","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) online()","Funname":"lastore.Lastore.online","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) updateCacheJobInfo(path dbus.ObjectPath, props map[string]dbus.Variant)","Funname":"lastore.Lastore.updateCacheJobInfo","Returntype":"","Args":"path dbus.ObjectPath, props map[string]dbus.Variant"},{"Uniquefunname":"func (l *Lastore) updateJobList(list []dbus.ObjectPath)","Funname":"lastore.Lastore.updateJobList","Returntype":"","Args":"list []dbus.ObjectPath"},{"Uniquefunname":"func guestJobTypeFromPath(path dbus.ObjectPath) string","Funname":"lastore.guestJobTypeFromPath","Returntype":"string","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func newLastore(service *dbusutil.Service) (*Lastore, error)","Funname":"lastore.newLastore","Returntype":"(*Lastore, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func newLastore(service *dbusutil.Service) (*Lastore, error)","Funname":"newLastore","Returntype":"(*Lastore, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (l *Lastore) notifyJob(path dbus.ObjectPath)","Funname":"notifyJob","Returntype":"","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (l *Lastore) offline()","Funname":"offline","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) online()","Funname":"online","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) updateCacheJobInfo(path dbus.ObjectPath, props map[string]dbus.Variant)","Funname":"updateCacheJobInfo","Returntype":"","Args":"path dbus.ObjectPath, props map[string]dbus.Variant"},{"Uniquefunname":"func (l *Lastore) updateJobList(list []dbus.ObjectPath)","Funname":"updateJobList","Returntype":"","Args":"list []dbus.ObjectPath"}],"Records":[{"Name":"struct:lastore.CacheJobInfo","Fields":["lastore.CacheJobInfo.Id string","lastore.CacheJobInfo.Name string","lastore.CacheJobInfo.Progress float64","lastore.CacheJobInfo.Status Status","lastore.CacheJobInfo.Type string"]},{"Name":"struct:lastore.Lastore","Fields":["lastore.Lastore.PropsMu sync.RWMutex","lastore.Lastore.SourceCheckEnabled bool","lastore.Lastore.core *lastore.Lastore","lastore.Lastore.inhibitFd dbus.UnixFD","lastore.Lastore.jobStatus map[dbus.ObjectPath]CacheJobInfo","lastore.Lastore.jobsPropsChangedHId dbusutil.SignalHandlerId","lastore.Lastore.lang string","lastore.Lastore.lastoreRule dbusutil.MatchRule","lastore.Lastore.methods *struct { SetSourceCheckEnabled func() `in:\"val\"`; IsDiskSpaceSufficient func() `out:\"result\"`; }","lastore.Lastore.notifications *notifications.Notifications","lastore.Lastore.notifiedBattery bool","lastore.Lastore.notifyIdHidMap map[uint32]dbusutil.SignalHandlerId","lastore.Lastore.power *power.Power","lastore.Lastore.service *dbusutil.Service","lastore.Lastore.sessionSigLoop *dbusutil.SignalLoop","lastore.Lastore.syncConfig *dsync.Config","lastore.Lastore.sysDBusDaemon *ofdbus.DBus","lastore.Lastore.sysSigLoop *dbusutil.SignalLoop"]},{"Name":"var:lastore","Fields":["lastore.MinBatteryPercent"]}]}
{"Filepath":"lastore/notify.go","Functions":[{"Uniquefunname":"func getAppStoreAppName() string","Funname":"getAppStoreAppName","Returntype":"string","Args":""},{"Uniquefunname":"func (l *Lastore) notifyAutoClean()","Funname":"lastore.Lastore.notifyAutoClean","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) notifyInstall(pkgId string, succeed bool, ac []NotifyAction)","Funname":"lastore.Lastore.notifyInstall","Returntype":"","Args":"pkgId string, succeed bool, ac []NotifyAction"},{"Uniquefunname":"func (l *Lastore) notifyLowPower()","Funname":"lastore.Lastore.notifyLowPower","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) notifyRemove(pkgId string, succeed bool, ac []NotifyAction)","Funname":"lastore.Lastore.notifyRemove","Returntype":"","Args":"pkgId string, succeed bool, ac []NotifyAction"},{"Uniquefunname":"func (l *Lastore) notifyUpdateSource(actions []NotifyAction)","Funname":"lastore.Lastore.notifyUpdateSource","Returntype":"","Args":"actions []NotifyAction"},{"Uniquefunname":"func lastore.Lastore.sendNotify(icon string, msg string, actions []NotifyAction, expireTimeout int32, appName string)","Funname":"lastore.Lastore.sendNotify","Returntype":"","Args":"icon string, msg string, actions []NotifyAction, expireTimeout int32, appName string"},{"Uniquefunname":"func getAppStoreAppName() string","Funname":"lastore.getAppStoreAppName","Returntype":"string","Args":""},{"Uniquefunname":"func (l *Lastore) notifyAutoClean()","Funname":"notifyAutoClean","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) notifyInstall(pkgId string, succeed bool, ac []NotifyAction)","Funname":"notifyInstall","Returntype":"","Args":"pkgId string, succeed bool, ac []NotifyAction"},{"Uniquefunname":"func (l *Lastore) notifyLowPower()","Funname":"notifyLowPower","Returntype":"","Args":""},{"Uniquefunname":"func (l *Lastore) notifyRemove(pkgId string, succeed bool, ac []NotifyAction)","Funname":"notifyRemove","Returntype":"","Args":"pkgId string, succeed bool, ac []NotifyAction"},{"Uniquefunname":"func (l *Lastore) notifyUpdateSource(actions []NotifyAction)","Funname":"notifyUpdateSource","Returntype":"","Args":"actions []NotifyAction"},{"Uniquefunname":"func sendNotify(icon string, msg string, actions []NotifyAction, expireTimeout int32, appName string)","Funname":"sendNotify","Returntype":"","Args":"icon string, msg string, actions []NotifyAction, expireTimeout int32, appName string"}],"Records":[{"Name":"struct:lastore.NotifyAction","Fields":["lastore.NotifyAction.Callback func()","lastore.NotifyAction.Id string","lastore.NotifyAction.Name string"]},{"Name":"const:lastore","Fields":["lastore.notifyExpireTimeoutDefault"]}]}
{"Filepath":"lastore/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func smartMirrorEnabledGet() (bool, error)","Funname":"lastore.smartMirrorEnabledGet","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func smartMirrorEnabledSet(enabled bool) error","Funname":"lastore.smartMirrorEnabledSet","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"lastore.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"lastore.syncConfig.Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func smartMirrorEnabledGet() (bool, error)","Funname":"smartMirrorEnabledGet","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func smartMirrorEnabledSet(enabled bool) error","Funname":"smartMirrorEnabledSet","Returntype":"error","Args":"enabled bool"}],"Records":[{"Name":"const:lastore","Fields":["lastore.smartMirrorIFC","lastore.smartMirrorPath","lastore.smartMirrorService","lastore.syncVersion"]},{"Name":"struct:lastore.syncConfig","Fields":["lastore.syncConfig.l *Lastore"]},{"Name":"struct:lastore.syncData","Fields":["lastore.syncData.AutoCheckUpdates bool","lastore.syncData.AutoClean bool","lastore.syncData.AutoDownloadUpdates bool","lastore.syncData.SmartMirrorEnabled bool","lastore.syncData.Version string"]}]}
{"Filepath":"lastore/system.go","Functions":[{"Uniquefunname":"func decodeJson(fpath string, d interface","Funname":"decodeJson","Returntype":"error","Args":"fpath string, d interface{}"},{"Uniquefunname":"func decodeJson(fpath string, d interface","Funname":"lastore.decodeJson","Returntype":"error","Args":"fpath string, d interface{}"}],"Records":[{"Name":"const:lastore","Fields":["lastore.CleanJobType","lastore.DistUpgradeJobType","lastore.DownloadJobType","lastore.EndStatus","lastore.FailedStatus","lastore.InstallJobType","lastore.PausedStatus","lastore.PrepareDistUpgradeJobType","lastore.ReadyStatus","lastore.RemoveJobType","lastore.RunningStatus","lastore.SucceedStatus","lastore.UpdateJobType","lastore.UpdateSourceJobType","lastore.varLibDir"]}]}
{"Filepath":"lastore/tools.go","Functions":[{"Uniquefunname":"func PackageName(pkg string, lang string) string","Funname":"PackageName","Returntype":"string","Args":"pkg string, lang string"},{"Uniquefunname":"func QueryLang() string","Funname":"QueryLang","Returntype":"string","Args":""},{"Uniquefunname":"func QueryLangs() []string","Funname":"QueryLangs","Returntype":"[]string","Args":""},{"Uniquefunname":"func PackageName(pkg string, lang string) string","Funname":"lastore.PackageName","Returntype":"string","Args":"pkg string, lang string"},{"Uniquefunname":"func QueryLang() string","Funname":"lastore.QueryLang","Returntype":"string","Args":""},{"Uniquefunname":"func QueryLangs() []string","Funname":"lastore.QueryLangs","Returntype":"[]string","Args":""},{"Uniquefunname":"func queryVFSAvailable(path string) (uint64, error)","Funname":"lastore.queryVFSAvailable","Returntype":"(uint64, error)","Args":"path string"},{"Uniquefunname":"func strSliceSetEqual(a, b []string) bool","Funname":"lastore.strSliceSetEqual","Returntype":"bool","Args":"a, b []string"},{"Uniquefunname":"func queryVFSAvailable(path string) (uint64, error)","Funname":"queryVFSAvailable","Returntype":"(uint64, error)","Args":"path string"},{"Uniquefunname":"func strSliceSetEqual(a, b []string) bool","Funname":"strSliceSetEqual","Returntype":"bool","Args":"a, b []string"}],"Records":null}
{"Filepath":"lastore/tools_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*MySuite) TestStrSliceSetEqual(c *C)","Funname":"TestStrSliceSetEqual","Returntype":"","Args":"c *C"},{"Uniquefunname":"func (*MySuite) TestStrSliceSetEqual(c *C)","Funname":"lastore.MySuite.TestStrSliceSetEqual","Returntype":"","Args":"c *C"},{"Uniquefunname":"func lastore.Test(t *testing.T)","Funname":"lastore.Test","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"var:lastore","Fields":["lastore._"]}]}
{"Filepath":"launcher/category.go","Functions":[{"Uniquefunname":"func (cid CategoryID) Pinyin() string","Funname":"Pinyin","Returntype":"string","Args":""},{"Uniquefunname":"func (cid CategoryID) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func getXCategory(categories []string) CategoryID","Funname":"getXCategory","Returntype":"CategoryID","Args":"categories []string"},{"Uniquefunname":"func (cid CategoryID) Pinyin() string","Funname":"launcher.CategoryID.Pinyin","Returntype":"string","Args":""},{"Uniquefunname":"func (cid CategoryID) String() string","Funname":"launcher.CategoryID.String","Returntype":"string","Args":""},{"Uniquefunname":"func getXCategory(categories []string) CategoryID","Funname":"launcher.getXCategory","Returntype":"CategoryID","Args":"categories []string"},{"Uniquefunname":"func parseCategoryString(str string) (CategoryID, bool)","Funname":"launcher.parseCategoryString","Returntype":"(CategoryID, bool)","Args":"str string"},{"Uniquefunname":"func parseXCategoryString(name string) []CategoryID","Funname":"launcher.parseXCategoryString","Returntype":"[]CategoryID","Args":"name string"},{"Uniquefunname":"func parseCategoryString(str string) (CategoryID, bool)","Funname":"parseCategoryString","Returntype":"(CategoryID, bool)","Args":"str string"},{"Uniquefunname":"func parseXCategoryString(name string) []CategoryID","Funname":"parseXCategoryString","Returntype":"[]CategoryID","Args":"name string"}],"Records":[{"Name":"const:launcher","Fields":["launcher.CategoryChat","launcher.CategoryDevelopment","launcher.CategoryGame","launcher.CategoryGraphics","launcher.CategoryInternet","launcher.CategoryMusic","launcher.CategoryOffice","launcher.CategoryOthers","launcher.CategoryReading","launcher.CategorySystem","launcher.CategoryVideo"]},{"Name":"var:launcher","Fields":["launcher.categoryNameTable","launcher.xCategories"]}]}
{"Filepath":"launcher/category_test.go","Functions":[{"Uniquefunname":"func Test_getXCategory(t *testing.T)","Funname":"Test_getXCategory","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getXCategory(t *testing.T)","Funname":"launcher.Test_getXCategory","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"launcher/copyfile.go","Functions":[{"Uniquefunname":"func CopyFile(src, dst string, copyFlag CopyFlag) error","Funname":"CopyFile","Returntype":"error","Args":"src, dst string, copyFlag CopyFlag"},{"Uniquefunname":"func copyFileAux(src, dst string, copyFlag CopyFlag) error","Funname":"copyFileAux","Returntype":"error","Args":"src, dst string, copyFlag CopyFlag"},{"Uniquefunname":"func CopyFile(src, dst string, copyFlag CopyFlag) error","Funname":"launcher.CopyFile","Returntype":"error","Args":"src, dst string, copyFlag CopyFlag"},{"Uniquefunname":"func copyFileAux(src, dst string, copyFlag CopyFlag) error","Funname":"launcher.copyFileAux","Returntype":"error","Args":"src, dst string, copyFlag CopyFlag"}],"Records":[{"Name":"const:launcher","Fields":["launcher.CopyFileNone","launcher.CopyFileNotKeepSymlink","launcher.CopyFileOverWrite"]}]}
{"Filepath":"launcher/item.go","Functions":[{"Uniquefunname":"func NewItemWithDesktopAppInfo(appInfo *desktopappinfo.DesktopAppInfo) *Item","Funname":"NewItemWithDesktopAppInfo","Returntype":"*Item","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func (item *Item) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (item *Item) addSearchTarget(score SearchScore, str string)","Funname":"addSearchTarget","Returntype":"","Args":"score SearchScore, str string"},{"Uniquefunname":"func (item *Item) getXCategory() CategoryID","Funname":"getXCategory","Returntype":"CategoryID","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (item *Item) String() string","Funname":"launcher.Item.String","Returntype":"string","Args":""},{"Uniquefunname":"func (item *Item) addSearchTarget(score SearchScore, str string)","Funname":"launcher.Item.addSearchTarget","Returntype":"","Args":"score SearchScore, str string"},{"Uniquefunname":"func (item *Item) getXCategory() CategoryID","Funname":"launcher.Item.getXCategory","Returntype":"CategoryID","Args":""},{"Uniquefunname":"func (item *Item) setSearchTargets(pinyinEnabled bool)","Funname":"launcher.Item.setSearchTargets","Returntype":"","Args":"pinyinEnabled bool"},{"Uniquefunname":"func NewItemWithDesktopAppInfo(appInfo *desktopappinfo.DesktopAppInfo) *Item","Funname":"launcher.NewItemWithDesktopAppInfo","Returntype":"*Item","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func init()","Funname":"launcher.init","Returntype":"","Args":""},{"Uniquefunname":"func toPinyin(str string) string","Funname":"launcher.toPinyin","Returntype":"string","Args":"str string"},{"Uniquefunname":"func (item *Item) setSearchTargets(pinyinEnabled bool)","Funname":"setSearchTargets","Returntype":"","Args":"pinyinEnabled bool"},{"Uniquefunname":"func toPinyin(str string) string","Funname":"toPinyin","Returntype":"string","Args":"str string"}],"Records":[{"Name":"struct:launcher.Item","Fields":["launcher.Item.CategoryID CategoryID","launcher.Item.ID string","launcher.Item.Icon string","launcher.Item.Name string","launcher.Item.Path string","launcher.Item.TimeInstalled int64","launcher.Item.categories []string","launcher.Item.comment string","launcher.Item.enName string","launcher.Item.exec string","launcher.Item.genericName string","launcher.Item.keywords []string","launcher.Item.searchTargets map[string]SearchScore","launcher.Item.xDeepinCategory string"]},{"Name":"const:launcher","Fields":["launcher.categoryScore","launcher.desktopExt","launcher.genericNameScore","launcher.idScore","launcher.keywordScore","launcher.nameScore"]},{"Name":"var:launcher","Fields":["launcher.pinyinArgs"]}]}
{"Filepath":"launcher/item_info.go","Functions":[{"Uniquefunname":"func (item *Item) newItemInfo() ItemInfo","Funname":"launcher.Item.newItemInfo","Returntype":"ItemInfo","Args":""},{"Uniquefunname":"func (item *Item) newItemInfo() ItemInfo","Funname":"newItemInfo","Returntype":"ItemInfo","Args":""}],"Records":[{"Name":"struct:launcher.ItemInfo","Fields":["launcher.ItemInfo.CategoryID CategoryID","launcher.ItemInfo.ID string","launcher.ItemInfo.Icon string","launcher.ItemInfo.Name string","launcher.ItemInfo.Path string","launcher.ItemInfo.TimeInstalled int64"]}]}
{"Filepath":"launcher/manager.go","Functions":[{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) _queryCategoryID(item *Item, pkg string) CategoryID","Funname":"_queryCategoryID","Returntype":"CategoryID","Args":"item *Item, pkg string"},{"Uniquefunname":"func (m *Manager) addItem(item *Item)","Funname":"addItem","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) addItemWithLock(item *Item)","Funname":"addItemWithLock","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) convertDesktopPkgMap(in map[string]string) map[string]string","Funname":"convertDesktopPkgMap","Returntype":"map[string]string","Args":"in map[string]string"},{"Uniquefunname":"func (m *Manager) emitSearchDone(result MatchResults)","Funname":"emitSearchDone","Returntype":"","Args":"result MatchResults"},{"Uniquefunname":"func (m *Manager) getAppIdByFilePath(file string) string","Funname":"getAppIdByFilePath","Returntype":"string","Args":"file string"},{"Uniquefunname":"func (m *Manager) getItemById(id string) *Item","Funname":"getItemById","Returntype":"*Item","Args":"id string"},{"Uniquefunname":"func (m *Manager) getItemByPath(path string) *Item","Funname":"getItemByPath","Returntype":"*Item","Args":"path string"},{"Uniquefunname":"func getNotifyAppName() string","Funname":"getNotifyAppName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) getUseFeature(key, id string) (bool, *dbus.Error)","Funname":"getUseFeature","Returntype":"(bool, *dbus.Error)","Args":"key, id string"},{"Uniquefunname":"func (m *Manager) hiddenByGSettings(id string) bool","Funname":"hiddenByGSettings","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func (m *Manager) hiddenByGSettingsWithLock(id string) bool","Funname":"hiddenByGSettingsWithLock","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func (m *Manager) _queryCategoryID(item *Item, pkg string) CategoryID","Funname":"launcher.Manager._queryCategoryID","Returntype":"CategoryID","Args":"item *Item, pkg string"},{"Uniquefunname":"func (m *Manager) addItem(item *Item)","Funname":"launcher.Manager.addItem","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) addItemWithLock(item *Item)","Funname":"launcher.Manager.addItemWithLock","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) convertDesktopPkgMap(in map[string]string) map[string]string","Funname":"launcher.Manager.convertDesktopPkgMap","Returntype":"map[string]string","Args":"in map[string]string"},{"Uniquefunname":"func (m *Manager) emitSearchDone(result MatchResults)","Funname":"launcher.Manager.emitSearchDone","Returntype":"","Args":"result MatchResults"},{"Uniquefunname":"func (m *Manager) getAppIdByFilePath(file string) string","Funname":"launcher.Manager.getAppIdByFilePath","Returntype":"string","Args":"file string"},{"Uniquefunname":"func (m *Manager) getItemById(id string) *Item","Funname":"launcher.Manager.getItemById","Returntype":"*Item","Args":"id string"},{"Uniquefunname":"func (m *Manager) getItemByPath(path string) *Item","Funname":"launcher.Manager.getItemByPath","Returntype":"*Item","Args":"path string"},{"Uniquefunname":"func (m *Manager) getUseFeature(key, id string) (bool, *dbus.Error)","Funname":"launcher.Manager.getUseFeature","Returntype":"(bool, *dbus.Error)","Args":"key, id string"},{"Uniquefunname":"func (m *Manager) hiddenByGSettings(id string) bool","Funname":"launcher.Manager.hiddenByGSettings","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func (m *Manager) hiddenByGSettingsWithLock(id string) bool","Funname":"launcher.Manager.hiddenByGSettingsWithLock","Returntype":"bool","Args":"id string"},{"Uniquefunname":"func (m *Manager) loadDesktopPkgMap() error","Funname":"launcher.Manager.loadDesktopPkgMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) loadNameMap() error","Funname":"launcher.Manager.loadNameMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) loadPkgCategoryMap() error","Funname":"launcher.Manager.loadPkgCategoryMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) queryCategoryID(item *Item) CategoryID","Funname":"launcher.Manager.queryCategoryID","Returntype":"CategoryID","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) queryPkgName(itemID string, itemPath string) (string, error)","Funname":"launcher.Manager.queryPkgName","Returntype":"(string, error)","Args":"itemID string, itemPath string"},{"Uniquefunname":"func (m *Manager) removeItem(id string)","Funname":"launcher.Manager.removeItem","Returntype":"","Args":"id string"},{"Uniquefunname":"func (m *Manager) sendNotify(summary string)","Funname":"launcher.Manager.sendNotify","Returntype":"","Args":"summary string"},{"Uniquefunname":"func (m *Manager) setItemID(item *Item)","Funname":"launcher.Manager.setItemID","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) setUseFeature(key, id string, val bool) *dbus.Error","Funname":"launcher.Manager.setUseFeature","Returntype":"*dbus.Error","Args":"key, id string, val bool"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"launcher.NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func getNotifyAppName() string","Funname":"launcher.getNotifyAppName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) loadDesktopPkgMap() error","Funname":"loadDesktopPkgMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) loadNameMap() error","Funname":"loadNameMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) loadPkgCategoryMap() error","Funname":"loadPkgCategoryMap","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) queryCategoryID(item *Item) CategoryID","Funname":"queryCategoryID","Returntype":"CategoryID","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) queryPkgName(itemID string, itemPath string) (string, error)","Funname":"queryPkgName","Returntype":"(string, error)","Args":"itemID string, itemPath string"},{"Uniquefunname":"func (m *Manager) removeItem(id string)","Funname":"removeItem","Returntype":"","Args":"id string"},{"Uniquefunname":"func (m *Manager) sendNotify(summary string)","Funname":"sendNotify","Returntype":"","Args":"summary string"},{"Uniquefunname":"func (m *Manager) setItemID(item *Item)","Funname":"setItemID","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) setUseFeature(key, id string, val bool) *dbus.Error","Funname":"setUseFeature","Returntype":"*dbus.Error","Args":"key, id string, val bool"}],"Records":[{"Name":"const:launcher","Fields":["launcher.AppStatusCreated","launcher.AppStatusDeleted","launcher.AppStatusModified","launcher.appNameTranslationsFile","launcher.applicationsFile","launcher.ddeDataDir","launcher.desktopPkgMapFile","launcher.gsKeyAppsDisableScaling","launcher.gsKeyAppsHidden","launcher.gsKeyAppsUseProxy","launcher.gsKeyDisplayMode","launcher.gsKeyFullscreen","launcher.gsSchemaLauncher","launcher.lastoreDBusDest","launcher.lastoreDataDir"]},{"Name":"struct:launcher.Manager","Fields":["launcher.Manager.DisplayMode gsprop.Enum","launcher.Manager.Fullscreen gsprop.Bool","launcher.Manager.appDirs []string","launcher.Manager.appsHidden []string","launcher.Manager.appsHiddenMu sync.Mutex","launcher.Manager.appsObj *libApps.Apps","launcher.Manager.currentRunes []rune","launcher.Manager.desktopPkgMap map[string]string","launcher.Manager.fsEventTimers map[string]*time.Timer","launcher.Manager.fsEventTimersMutex sync.Mutex","launcher.Manager.fsWatcher *fsnotify.Watcher","launcher.Manager.items map[string]*Item","launcher.Manager.itemsChangedHit uint32","launcher.Manager.itemsMutex sync.Mutex","launcher.Manager.lastore *libLastore.Lastore","launcher.Manager.methods *struct { GetAllItemInfos func() `out:\"itemInfoList\"`; GetItemInfo func() `in:\"id\" out:\"itemInfo\"`; GetAllNewInstalledApps func() `out:\"apps\"`; IsItemOnDesktop func() `in:\"id\" out:\"result\"`; RequestRemoveFromDesktop func() `in:\"id\" out:\"ok\"`; RequestSendToDesktop func() `in:\"id\" out:\"ok\"`; MarkLaunched func() `in:\"id\"`; RequestUninstall func() `in:\"id,purge\"`; Search func() `in:\"key\"`; GetUseProxy func() `in:\"id\" out:\"value\"`; SetUseProxy func() `in:\"id,value\"`; GetDisableScaling func()","launcher.Manager.nameMap map[string]string","launcher.Manager.noPkgItemIDs map[string]int","launcher.Manager.notifications *notifications.Notifications","launcher.Manager.pinyinEnabled bool","launcher.Manager.pkgCategoryMap map[string]CategoryID","launcher.Manager.popPushOpChan chan *popPushOp","launcher.Manager.searchMu sync.Mutex","launcher.Manager.searchTaskStack *searchTaskStack","launcher.Manager.service *dbusutil.Service","launcher.Manager.sessionSigLoop *dbusutil.SignalLoop","launcher.Manager.settings *gio.Settings","launcher.Manager.signals *struct { SearchDone struct { apps []string; }; ItemChanged struct { status string; itemInfo ItemInfo; categoryID CategoryID; }; NewAppLaunched struct { appID string; }; UninstallSuccess struct { appID string; }; UninstallFailed struct { appId string; errMsg string; }; }","launcher.Manager.syncConfig *dsync.Config","launcher.Manager.sysSigLoop *dbusutil.SignalLoop"]},{"Name":"var:launcher","Fields":["launcher.regOptApps"]}]}
{"Filepath":"launcher/manager_events.go","Functions":[{"Uniquefunname":"func (m *Manager) checkDesktopFile(file string)","Funname":"checkDesktopFile","Returntype":"","Args":"file string"},{"Uniquefunname":"func (m *Manager) delayHandleFileEvent(name string)","Funname":"delayHandleFileEvent","Returntype":"","Args":"name string"},{"Uniquefunname":"func diffAppsHidden(old, new []string) (added, removed []string)","Funname":"diffAppsHidden","Returntype":"(added, removed []string)","Args":"old, new []string"},{"Uniquefunname":"func diffMapKeys(oldMap, newMap map[string]struct","Funname":"diffMapKeys","Returntype":"(added, removed []string)","Args":"oldMap, newMap map[string]struct{}"},{"Uniquefunname":"func (m *Manager) emitItemChanged(item *Item, status string)","Funname":"emitItemChanged","Returntype":"","Args":"item *Item, status string"},{"Uniquefunname":"func (m *Manager) handleFsWatcherEvents()","Funname":"handleFsWatcherEvents","Returntype":"","Args":""},{"Uniquefunname":"func isDesktopFile(path string) bool","Funname":"isDesktopFile","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func (m *Manager) checkDesktopFile(file string)","Funname":"launcher.Manager.checkDesktopFile","Returntype":"","Args":"file string"},{"Uniquefunname":"func (m *Manager) delayHandleFileEvent(name string)","Funname":"launcher.Manager.delayHandleFileEvent","Returntype":"","Args":"name string"},{"Uniquefunname":"func (m *Manager) emitItemChanged(item *Item, status string)","Funname":"launcher.Manager.emitItemChanged","Returntype":"","Args":"item *Item, status string"},{"Uniquefunname":"func (m *Manager) handleFsWatcherEvents()","Funname":"launcher.Manager.handleFsWatcherEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenSettingsChanged()","Funname":"launcher.Manager.listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) retryAddItem(appInfo *desktopappinfo.DesktopAppInfo, item *Item)","Funname":"launcher.Manager.retryAddItem","Returntype":"","Args":"appInfo *desktopappinfo.DesktopAppInfo, item *Item"},{"Uniquefunname":"func diffAppsHidden(old, new []string) (added, removed []string)","Funname":"launcher.diffAppsHidden","Returntype":"(added, removed []string)","Args":"old, new []string"},{"Uniquefunname":"func diffMapKeys(oldMap, newMap map[string]struct","Funname":"launcher.diffMapKeys","Returntype":"(added, removed []string)","Args":"oldMap, newMap map[string]struct{}"},{"Uniquefunname":"func isDesktopFile(path string) bool","Funname":"launcher.isDesktopFile","Returntype":"bool","Args":"path string"},{"Uniquefunname":"func strSliceToMap(slice []string) map[string]struct","Funname":"launcher.strSliceToMap","Returntype":"map[string]struct{}","Args":"slice []string"},{"Uniquefunname":"func (m *Manager) listenSettingsChanged()","Funname":"listenSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) retryAddItem(appInfo *desktopappinfo.DesktopAppInfo, item *Item)","Funname":"retryAddItem","Returntype":"","Args":"appInfo *desktopappinfo.DesktopAppInfo, item *Item"},{"Uniquefunname":"func strSliceToMap(slice []string) map[string]struct","Funname":"strSliceToMap","Returntype":"map[string]struct{}","Args":"slice []string"}],"Records":[{"Name":"const:launcher","Fields":["launcher.desktopFilePattern"]}]}
{"Filepath":"launcher/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) GetAllItemInfos() ([]ItemInfo, *dbus.Error)","Funname":"GetAllItemInfos","Returntype":"([]ItemInfo, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetAllNewInstalledApps() ([]string, *dbus.Error)","Funname":"GetAllNewInstalledApps","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetDisableScaling(id string) (bool, *dbus.Error)","Funname":"GetDisableScaling","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetItemInfo(id string) (ItemInfo, *dbus.Error)","Funname":"GetItemInfo","Returntype":"(ItemInfo, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) GetUseProxy(id string) (bool, *dbus.Error)","Funname":"GetUseProxy","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) IsItemOnDesktop(id string) (bool, *dbus.Error)","Funname":"IsItemOnDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) MarkLaunched(id string) *dbus.Error","Funname":"MarkLaunched","Returntype":"*dbus.Error","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestRemoveFromDesktop(id string) (bool, *dbus.Error)","Funname":"RequestRemoveFromDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestSendToDesktop(id string) (bool, *dbus.Error)","Funname":"RequestSendToDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestUninstall(sender dbus.Sender, id string, purge bool) *dbus.Error","Funname":"RequestUninstall","Returntype":"*dbus.Error","Args":"sender dbus.Sender, id string, purge bool"},{"Uniquefunname":"func (m *Manager) Search(key string) *dbus.Error","Funname":"Search","Returntype":"*dbus.Error","Args":"key string"},{"Uniquefunname":"func (m *Manager) SetDisableScaling(id string, val bool) *dbus.Error","Funname":"SetDisableScaling","Returntype":"*dbus.Error","Args":"id string, val bool"},{"Uniquefunname":"func (m *Manager) SetUseProxy(id string, val bool) *dbus.Error","Funname":"SetUseProxy","Returntype":"*dbus.Error","Args":"id string, val bool"},{"Uniquefunname":"func (m *Manager) getExecutablePath(sender dbus.Sender) (string, error)","Funname":"getExecutablePath","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) isItemsChanged() bool","Funname":"isItemsChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) GetAllItemInfos() ([]ItemInfo, *dbus.Error)","Funname":"launcher.Manager.GetAllItemInfos","Returntype":"([]ItemInfo, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetAllNewInstalledApps() ([]string, *dbus.Error)","Funname":"launcher.Manager.GetAllNewInstalledApps","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetDisableScaling(id string) (bool, *dbus.Error)","Funname":"launcher.Manager.GetDisableScaling","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"launcher.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetItemInfo(id string) (ItemInfo, *dbus.Error)","Funname":"launcher.Manager.GetItemInfo","Returntype":"(ItemInfo, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) GetUseProxy(id string) (bool, *dbus.Error)","Funname":"launcher.Manager.GetUseProxy","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) IsItemOnDesktop(id string) (bool, *dbus.Error)","Funname":"launcher.Manager.IsItemOnDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) MarkLaunched(id string) *dbus.Error","Funname":"launcher.Manager.MarkLaunched","Returntype":"*dbus.Error","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestRemoveFromDesktop(id string) (bool, *dbus.Error)","Funname":"launcher.Manager.RequestRemoveFromDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestSendToDesktop(id string) (bool, *dbus.Error)","Funname":"launcher.Manager.RequestSendToDesktop","Returntype":"(bool, *dbus.Error)","Args":"id string"},{"Uniquefunname":"func (m *Manager) RequestUninstall(sender dbus.Sender, id string, purge bool) *dbus.Error","Funname":"launcher.Manager.RequestUninstall","Returntype":"*dbus.Error","Args":"sender dbus.Sender, id string, purge bool"},{"Uniquefunname":"func (m *Manager) Search(key string) *dbus.Error","Funname":"launcher.Manager.Search","Returntype":"*dbus.Error","Args":"key string"},{"Uniquefunname":"func (m *Manager) SetDisableScaling(id string, val bool) *dbus.Error","Funname":"launcher.Manager.SetDisableScaling","Returntype":"*dbus.Error","Args":"id string, val bool"},{"Uniquefunname":"func (m *Manager) SetUseProxy(id string, val bool) *dbus.Error","Funname":"launcher.Manager.SetUseProxy","Returntype":"*dbus.Error","Args":"id string, val bool"},{"Uniquefunname":"func (m *Manager) getExecutablePath(sender dbus.Sender) (string, error)","Funname":"launcher.Manager.getExecutablePath","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) isItemsChanged() bool","Funname":"launcher.Manager.isItemsChanged","Returntype":"bool","Args":""}],"Records":[{"Name":"const:launcher","Fields":["launcher.dbusInterface","launcher.dbusObjPath","launcher.dbusServiceName","launcher.desktopMainSection","launcher.launcherExecPath"]},{"Name":"var:launcher","Fields":["launcher.errorInvalidID"]}]}
{"Filepath":"launcher/manager_init.go","Functions":[{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handlePopPushOps()","Funname":"handlePopPushOps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initItems()","Funname":"initItems","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"launcher.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handlePopPushOps()","Funname":"launcher.Manager.handlePopPushOps","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initItems()","Funname":"launcher.Manager.initItems","Returntype":"","Args":""},{"Uniquefunname":"func shouldCheckDesktopFile(filename string) bool","Funname":"launcher.shouldCheckDesktopFile","Returntype":"bool","Args":"filename string"},{"Uniquefunname":"func shouldCheckDesktopFile(filename string) bool","Funname":"shouldCheckDesktopFile","Returntype":"bool","Args":"filename string"}],"Records":[{"Name":"struct:launcher.popPushOp","Fields":["launcher.popPushOp.popCount int","launcher.popPushOp.runesPush []rune"]}]}
{"Filepath":"launcher/manager_uninstall.go","Functions":[{"Uniquefunname":"func isChromeShortcut(item *Item) bool","Funname":"isChromeShortcut","Returntype":"bool","Args":"item *Item"},{"Uniquefunname":"func isCrossOver(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"isCrossOver","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func isFlatpakApp(appInfo *desktopappinfo.DesktopAppInfo) (bool, *flatpakAppInfo, error)","Funname":"isFlatpakApp","Returntype":"(bool, *flatpakAppInfo, error)","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func isWineApp(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"isWineApp","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func (m *Manager) monitorJobStatusChange(jobPath string) error","Funname":"launcher.Manager.monitorJobStatusChange","Returntype":"error","Args":"jobPath string"},{"Uniquefunname":"func (m *Manager) notifyUninstallDone(item *Item, succeed bool)","Funname":"launcher.Manager.notifyUninstallDone","Returntype":"","Args":"item *Item, succeed bool"},{"Uniquefunname":"func (m *Manager) removeAutostart(id string)","Funname":"launcher.Manager.removeAutostart","Returntype":"","Args":"id string"},{"Uniquefunname":"func (m *Manager) uninstall(id string) error","Funname":"launcher.Manager.uninstall","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (m *Manager) uninstallDeepinWineApp(item *Item) error","Funname":"launcher.Manager.uninstallDeepinWineApp","Returntype":"error","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) uninstallDesktopFile(item *Item) error","Funname":"launcher.Manager.uninstallDesktopFile","Returntype":"error","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) uninstallFlatpakApp(item *Item, fpAppInfo *flatpakAppInfo) error","Funname":"launcher.Manager.uninstallFlatpakApp","Returntype":"error","Args":"item *Item, fpAppInfo *flatpakAppInfo"},{"Uniquefunname":"func (m *Manager) uninstallSystemPackage(jobName, pkg string) error","Funname":"launcher.Manager.uninstallSystemPackage","Returntype":"error","Args":"jobName, pkg string"},{"Uniquefunname":"func (m *Manager) waitJobDone(jobPath string) error","Funname":"launcher.Manager.waitJobDone","Returntype":"error","Args":"jobPath string"},{"Uniquefunname":"func isChromeShortcut(item *Item) bool","Funname":"launcher.isChromeShortcut","Returntype":"bool","Args":"item *Item"},{"Uniquefunname":"func isCrossOver(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"launcher.isCrossOver","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func isFlatpakApp(appInfo *desktopappinfo.DesktopAppInfo) (bool, *flatpakAppInfo, error)","Funname":"launcher.isFlatpakApp","Returntype":"(bool, *flatpakAppInfo, error)","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func isWineApp(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"launcher.isWineApp","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func parseFlatpakAppCmdline(cmdline string) (*flatpakAppInfo, error)","Funname":"launcher.parseFlatpakAppCmdline","Returntype":"(*flatpakAppInfo, error)","Args":"cmdline string"},{"Uniquefunname":"func queryPkgNameWithDpkg(itemPath string) (string, error)","Funname":"launcher.queryPkgNameWithDpkg","Returntype":"(string, error)","Args":"itemPath string"},{"Uniquefunname":"func (m *Manager) monitorJobStatusChange(jobPath string) error","Funname":"monitorJobStatusChange","Returntype":"error","Args":"jobPath string"},{"Uniquefunname":"func (m *Manager) notifyUninstallDone(item *Item, succeed bool)","Funname":"notifyUninstallDone","Returntype":"","Args":"item *Item, succeed bool"},{"Uniquefunname":"func parseFlatpakAppCmdline(cmdline string) (*flatpakAppInfo, error)","Funname":"parseFlatpakAppCmdline","Returntype":"(*flatpakAppInfo, error)","Args":"cmdline string"},{"Uniquefunname":"func queryPkgNameWithDpkg(itemPath string) (string, error)","Funname":"queryPkgNameWithDpkg","Returntype":"(string, error)","Args":"itemPath string"},{"Uniquefunname":"func (m *Manager) removeAutostart(id string)","Funname":"removeAutostart","Returntype":"","Args":"id string"},{"Uniquefunname":"func (m *Manager) uninstall(id string) error","Funname":"uninstall","Returntype":"error","Args":"id string"},{"Uniquefunname":"func (m *Manager) uninstallDeepinWineApp(item *Item) error","Funname":"uninstallDeepinWineApp","Returntype":"error","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) uninstallDesktopFile(item *Item) error","Funname":"uninstallDesktopFile","Returntype":"error","Args":"item *Item"},{"Uniquefunname":"func (m *Manager) uninstallFlatpakApp(item *Item, fpAppInfo *flatpakAppInfo) error","Funname":"uninstallFlatpakApp","Returntype":"error","Args":"item *Item, fpAppInfo *flatpakAppInfo"},{"Uniquefunname":"func (m *Manager) uninstallSystemPackage(jobName, pkg string) error","Funname":"uninstallSystemPackage","Returntype":"error","Args":"jobName, pkg string"},{"Uniquefunname":"func (m *Manager) waitJobDone(jobPath string) error","Funname":"waitJobDone","Returntype":"error","Args":"jobPath string"}],"Records":[{"Name":"const:launcher","Fields":["launcher.JobStatusEnd","launcher.JobStatusFailed","launcher.JobStatusSucceed","launcher.flatpakBin"]},{"Name":"var:launcher","Fields":["launcher.chromeShortcurtExecRegexp"]},{"Name":"struct:launcher.flatpakAppInfo","Fields":["launcher.flatpakAppInfo.arch string","launcher.flatpakAppInfo.branch string","launcher.flatpakAppInfo.name string"]}]}
{"Filepath":"launcher/match_result.go","Functions":[{"Uniquefunname":"func (results MatchResults) Copy() MatchResults","Funname":"Copy","Returntype":"MatchResults","Args":""},{"Uniquefunname":"func (results MatchResults) GetTruncatedOrderedIDs() []string","Funname":"GetTruncatedOrderedIDs","Returntype":"[]string","Args":""},{"Uniquefunname":"func Len()int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func Less(i, j int)bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (r *MatchResult) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func (r *MatchResult) String() string","Funname":"launcher.MatchResult.String","Returntype":"string","Args":""},{"Uniquefunname":"func (results MatchResults) Copy() MatchResults","Funname":"launcher.MatchResults.Copy","Returntype":"MatchResults","Args":""},{"Uniquefunname":"func (results MatchResults) GetTruncatedOrderedIDs() []string","Funname":"launcher.MatchResults.GetTruncatedOrderedIDs","Returntype":"[]string","Args":""},{"Uniquefunname":"func launcher.MatchResults.Len()int","Funname":"launcher.MatchResults.Len","Returntype":"int","Args":""},{"Uniquefunname":"func launcher.MatchResults.Less(i, j int)bool","Funname":"launcher.MatchResults.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func launcher.MatchResults.Swap(i, j int)","Funname":"launcher.MatchResults.Swap","Returntype":"","Args":"i, j int"}],"Records":[{"Name":"struct:launcher.MatchResult","Fields":["launcher.MatchResult.item *Item","launcher.MatchResult.score SearchScore"]}]}
{"Filepath":"launcher/module.go","Functions":[{"Uniquefunname":"func (d *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Module) GetDependencies() []string","Funname":"launcher.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Module) Start() error","Funname":"launcher.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) Stop() error","Funname":"launcher.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) start() error","Funname":"launcher.Module.start","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"launcher.NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"launcher.init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Module) start() error","Funname":"start","Returntype":"error","Args":""}],"Records":[{"Name":"struct:launcher.Module","Fields":["launcher.Module.manager *Manager"]},{"Name":"var:launcher","Fields":["launcher.logger"]}]}
{"Filepath":"launcher/search_task.go","Functions":[{"Uniquefunname":"func (t *searchTask) Cancel()","Funname":"Cancel","Returntype":"","Args":""},{"Uniquefunname":"func (t *searchTask) Finish()","Funname":"Finish","Returntype":"","Args":""},{"Uniquefunname":"func (t *searchTask) IsCanceled() bool","Funname":"IsCanceled","Returntype":"bool","Args":""},{"Uniquefunname":"func (t *searchTask) IsFinished() bool","Funname":"IsFinished","Returntype":"bool","Args":""},{"Uniquefunname":"func (t *searchTask) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (st *searchTask) done()","Funname":"done","Returntype":"","Args":""},{"Uniquefunname":"func (st *searchTask) emitResult()","Funname":"emitResult","Returntype":"","Args":""},{"Uniquefunname":"func newSearchTask(c rune, stack *searchTaskStack, prev *searchTask) *searchTask","Funname":"launcher.newSearchTask","Returntype":"*searchTask","Args":"c rune, stack *searchTaskStack, prev *searchTask"},{"Uniquefunname":"func (t *searchTask) Cancel()","Funname":"launcher.searchTask.Cancel","Returntype":"","Args":""},{"Uniquefunname":"func (t *searchTask) Finish()","Funname":"launcher.searchTask.Finish","Returntype":"","Args":""},{"Uniquefunname":"func (t *searchTask) IsCanceled() bool","Funname":"launcher.searchTask.IsCanceled","Returntype":"bool","Args":""},{"Uniquefunname":"func (t *searchTask) IsFinished() bool","Funname":"launcher.searchTask.IsFinished","Returntype":"bool","Args":""},{"Uniquefunname":"func (t *searchTask) String() string","Funname":"launcher.searchTask.String","Returntype":"string","Args":""},{"Uniquefunname":"func (st *searchTask) done()","Funname":"launcher.searchTask.done","Returntype":"","Args":""},{"Uniquefunname":"func (st *searchTask) emitResult()","Funname":"launcher.searchTask.emitResult","Returntype":"","Args":""},{"Uniquefunname":"func (st *searchTask) match(item *Item) *MatchResult","Funname":"launcher.searchTask.match","Returntype":"*MatchResult","Args":"item *Item"},{"Uniquefunname":"func (st *searchTask) matchItem(item *Item)","Funname":"launcher.searchTask.matchItem","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func (t *searchTask) search(prev *searchTask)","Funname":"launcher.searchTask.search","Returntype":"","Args":"prev *searchTask"},{"Uniquefunname":"func (st *searchTask) searchWithBase(result MatchResults)","Funname":"launcher.searchTask.searchWithBase","Returntype":"","Args":"result MatchResults"},{"Uniquefunname":"func (t *searchTask) searchWithoutBase()","Funname":"launcher.searchTask.searchWithoutBase","Returntype":"","Args":""},{"Uniquefunname":"func (st *searchTask) match(item *Item) *MatchResult","Funname":"match","Returntype":"*MatchResult","Args":"item *Item"},{"Uniquefunname":"func (st *searchTask) matchItem(item *Item)","Funname":"matchItem","Returntype":"","Args":"item *Item"},{"Uniquefunname":"func newSearchTask(c rune, stack *searchTaskStack, prev *searchTask) *searchTask","Funname":"newSearchTask","Returntype":"*searchTask","Args":"c rune, stack *searchTaskStack, prev *searchTask"},{"Uniquefunname":"func (t *searchTask) search(prev *searchTask)","Funname":"search","Returntype":"","Args":"prev *searchTask"},{"Uniquefunname":"func (st *searchTask) searchWithBase(result MatchResults)","Funname":"searchWithBase","Returntype":"","Args":"result MatchResults"},{"Uniquefunname":"func (t *searchTask) searchWithoutBase()","Funname":"searchWithoutBase","Returntype":"","Args":""}],"Records":[{"Name":"const:launcher","Fields":["launcher.AboveAverage","launcher.Average","launcher.BelowAverage","launcher.Excellent","launcher.Good","launcher.Highest","launcher.Poor","launcher.VeryGood"]},{"Name":"struct:launcher.searchTask","Fields":["launcher.searchTask.chars []rune","launcher.searchTask.fuzzyMatcher *regexp.Regexp","launcher.searchTask.isCanceled bool","launcher.searchTask.isFinished bool","launcher.searchTask.mu sync.RWMutex","launcher.searchTask.result MatchResults","launcher.searchTask.stack *searchTaskStack"]}]}
{"Filepath":"launcher/search_task_stack.go","Functions":[{"Uniquefunname":"func (sts *searchTaskStack) Clear()","Funname":"Clear","Returntype":"","Args":""},{"Uniquefunname":"func (sts *searchTaskStack) GetNext(task *searchTask) *searchTask","Funname":"GetNext","Returntype":"*searchTask","Args":"task *searchTask"},{"Uniquefunname":"func (sts *searchTaskStack) Pop()","Funname":"Pop","Returntype":"","Args":""},{"Uniquefunname":"func (sts *searchTaskStack) Push(c rune)","Funname":"Push","Returntype":"","Args":"c rune"},{"Uniquefunname":"func (sts *searchTaskStack) indexOf(task *searchTask) int","Funname":"indexOf","Returntype":"int","Args":"task *searchTask"},{"Uniquefunname":"func newSearchTaskStack(manager *Manager) *searchTaskStack","Funname":"launcher.newSearchTaskStack","Returntype":"*searchTaskStack","Args":"manager *Manager"},{"Uniquefunname":"func (sts *searchTaskStack) Clear()","Funname":"launcher.searchTaskStack.Clear","Returntype":"","Args":""},{"Uniquefunname":"func (sts *searchTaskStack) GetNext(task *searchTask) *searchTask","Funname":"launcher.searchTaskStack.GetNext","Returntype":"*searchTask","Args":"task *searchTask"},{"Uniquefunname":"func (sts *searchTaskStack) Pop()","Funname":"launcher.searchTaskStack.Pop","Returntype":"","Args":""},{"Uniquefunname":"func (sts *searchTaskStack) Push(c rune)","Funname":"launcher.searchTaskStack.Push","Returntype":"","Args":"c rune"},{"Uniquefunname":"func (sts *searchTaskStack) indexOf(task *searchTask) int","Funname":"launcher.searchTaskStack.indexOf","Returntype":"int","Args":"task *searchTask"},{"Uniquefunname":"func (sts *searchTaskStack) topTask() *searchTask","Funname":"launcher.searchTaskStack.topTask","Returntype":"*searchTask","Args":""},{"Uniquefunname":"func newSearchTaskStack(manager *Manager) *searchTaskStack","Funname":"newSearchTaskStack","Returntype":"*searchTaskStack","Args":"manager *Manager"},{"Uniquefunname":"func (sts *searchTaskStack) topTask() *searchTask","Funname":"topTask","Returntype":"*searchTask","Args":""}],"Records":[{"Name":"struct:launcher.searchTaskStack","Fields":["launcher.searchTaskStack.items map[string]*Item","launcher.searchTaskStack.manager *Manager","launcher.searchTaskStack.mu sync.Mutex","launcher.searchTaskStack.tasks []*searchTask"]}]}
{"Filepath":"launcher/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"launcher.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"launcher.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"struct:launcher.syncConfig","Fields":["launcher.syncConfig.m *Manager"]},{"Name":"struct:launcher.syncData","Fields":["launcher.syncData.DisplayMode string","launcher.syncData.Fullscreen bool","launcher.syncData.Version string"]}]}
{"Filepath":"launcher/utils.go","Functions":[{"Uniquefunname":"func appInDesktop(appId string) string","Funname":"appInDesktop","Returntype":"string","Args":"appId string"},{"Uniquefunname":"func getAppDirs() []string","Funname":"getAppDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func getAppIdByFilePath(file string, appDirs []string) string","Funname":"getAppIdByFilePath","Returntype":"string","Args":"file string, appDirs []string"},{"Uniquefunname":"func getDataDirsForWatch() []string","Funname":"getDataDirsForWatch","Returntype":"[]string","Args":""},{"Uniquefunname":"func getFileCTime(filename string) (int64, error)","Funname":"getFileCTime","Returntype":"(int64, error)","Args":"filename string"},{"Uniquefunname":"func getUserAppDir() string","Funname":"getUserAppDir","Returntype":"string","Args":""},{"Uniquefunname":"func getUserDesktopDir() string","Funname":"getUserDesktopDir","Returntype":"string","Args":""},{"Uniquefunname":"func isDeepinCustomDesktopFile(file string) bool","Funname":"isDeepinCustomDesktopFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func isZH() bool","Funname":"isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func appInDesktop(appId string) string","Funname":"launcher.appInDesktop","Returntype":"string","Args":"appId string"},{"Uniquefunname":"func getAppDirs() []string","Funname":"launcher.getAppDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func getAppIdByFilePath(file string, appDirs []string) string","Funname":"launcher.getAppIdByFilePath","Returntype":"string","Args":"file string, appDirs []string"},{"Uniquefunname":"func getDataDirsForWatch() []string","Funname":"launcher.getDataDirsForWatch","Returntype":"[]string","Args":""},{"Uniquefunname":"func getFileCTime(filename string) (int64, error)","Funname":"launcher.getFileCTime","Returntype":"(int64, error)","Args":"filename string"},{"Uniquefunname":"func getUserAppDir() string","Funname":"launcher.getUserAppDir","Returntype":"string","Args":""},{"Uniquefunname":"func getUserDesktopDir() string","Funname":"launcher.getUserDesktopDir","Returntype":"string","Args":""},{"Uniquefunname":"func isDeepinCustomDesktopFile(file string) bool","Funname":"launcher.isDeepinCustomDesktopFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func isZH() bool","Funname":"launcher.isZH","Returntype":"bool","Args":""},{"Uniquefunname":"func runeSliceDiff(key, current []rune) (popCount int, runesPush []rune)","Funname":"launcher.runeSliceDiff","Returntype":"(popCount int, runesPush []rune)","Args":"key, current []rune"},{"Uniquefunname":"func runeSliceDiff(key, current []rune) (popCount int, runesPush []rune)","Funname":"runeSliceDiff","Returntype":"(popCount int, runesPush []rune)","Args":"key, current []rune"}],"Records":[{"Name":"const:launcher","Fields":["launcher.AppDirName","launcher.DirDefaultPerm"]}]}
{"Filepath":"launcher/utils_test.go","Functions":[{"Uniquefunname":"func Test_getAppIdByFilePath(t *testing.T)","Funname":"Test_getAppIdByFilePath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getUserAppDir(t *testing.T)","Funname":"Test_getUserAppDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseFlatpakAppCmdline(t *testing.T)","Funname":"Test_parseFlatpakAppCmdline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_runeSliceDiff(t *testing.T)","Funname":"Test_runeSliceDiff","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getAppIdByFilePath(t *testing.T)","Funname":"launcher.Test_getAppIdByFilePath","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getUserAppDir(t *testing.T)","Funname":"launcher.Test_getUserAppDir","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseFlatpakAppCmdline(t *testing.T)","Funname":"launcher.Test_parseFlatpakAppCmdline","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_runeSliceDiff(t *testing.T)","Funname":"launcher.Test_runeSliceDiff","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"loader/dag_builder.go","Functions":[{"Uniquefunname":"func (builder *DAGBuilder) Execute() (*graph.Data, error)","Funname":"Execute","Returntype":"(*graph.Data, error)","Args":""},{"Uniquefunname":"func NewDAGBuilder(loader *Loader, enablingModules []string, disableModules []string, flag EnableFlag)*DAGBuilder","Funname":"NewDAGBuilder","Returntype":"*DAGBuilder","Args":"loader *Loader, enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func (builder *DAGBuilder) buildDAG(enablingModules []string) error","Funname":"buildDAG","Returntype":"error","Args":"enablingModules []string"},{"Uniquefunname":"func createNodeIfNeeded(dag *graph.Data, nodes map[string]*graph.Node, name string)*graph.Node","Funname":"createNodeIfNeeded","Returntype":"*graph.Node","Args":"dag *graph.Data, nodes map[string]*graph.Node, name string"},{"Uniquefunname":"func (builder *DAGBuilder) Execute() (*graph.Data, error)","Funname":"loader.DAGBuilder.Execute","Returntype":"(*graph.Data, error)","Args":""},{"Uniquefunname":"func (builder *DAGBuilder) buildDAG(enablingModules []string) error","Funname":"loader.DAGBuilder.buildDAG","Returntype":"error","Args":"enablingModules []string"},{"Uniquefunname":"func loader.NewDAGBuilder(loader *Loader, enablingModules []string, disableModules []string, flag EnableFlag)*DAGBuilder","Funname":"loader.NewDAGBuilder","Returntype":"*DAGBuilder","Args":"loader *Loader, enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func loader.createNodeIfNeeded(dag *graph.Data, nodes map[string]*graph.Node, name string)*graph.Node","Funname":"loader.createNodeIfNeeded","Returntype":"*graph.Node","Args":"dag *graph.Data, nodes map[string]*graph.Node, name string"}],"Records":[{"Name":"struct:loader.DAGBuilder","Fields":["loader.DAGBuilder.dag *graph.Data","loader.DAGBuilder.disableModules map[string]struct{}","loader.DAGBuilder.enablingModules []string","loader.DAGBuilder.flag EnableFlag","loader.DAGBuilder.handledModules map[string]struct{}","loader.DAGBuilder.log *log.Logger","loader.DAGBuilder.modules Modules","loader.DAGBuilder.nodes map[string]*graph.Node"]}]}
{"Filepath":"loader/global.go","Functions":[{"Uniquefunname":"func EnableModules(enablingModules []string, disableModules []string, flag EnableFlag) error","Funname":"EnableModules","Returntype":"error","Args":"enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func GetModule(name string) Module","Funname":"GetModule","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func GetService() *dbusutil.Service","Funname":"GetService","Returntype":"*dbusutil.Service","Args":""},{"Uniquefunname":"func List() []Module","Funname":"List","Returntype":"[]Module","Args":""},{"Uniquefunname":"func Register(m Module)","Funname":"Register","Returntype":"","Args":"m Module"},{"Uniquefunname":"func SetLogLevel(pri log.Priority)","Funname":"SetLogLevel","Returntype":"","Args":"pri log.Priority"},{"Uniquefunname":"func SetService(s *dbusutil.Service)","Funname":"SetService","Returntype":"","Args":"s *dbusutil.Service"},{"Uniquefunname":"func StartAll()","Funname":"StartAll","Returntype":"","Args":""},{"Uniquefunname":"func StopAll()","Funname":"StopAll","Returntype":"","Args":""},{"Uniquefunname":"func ToggleLogDebug(enabled bool)","Funname":"ToggleLogDebug","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func EnableModules(enablingModules []string, disableModules []string, flag EnableFlag) error","Funname":"loader.EnableModules","Returntype":"error","Args":"enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func GetModule(name string) Module","Funname":"loader.GetModule","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func GetService() *dbusutil.Service","Funname":"loader.GetService","Returntype":"*dbusutil.Service","Args":""},{"Uniquefunname":"func List() []Module","Funname":"loader.List","Returntype":"[]Module","Args":""},{"Uniquefunname":"func Register(m Module)","Funname":"loader.Register","Returntype":"","Args":"m Module"},{"Uniquefunname":"func SetLogLevel(pri log.Priority)","Funname":"loader.SetLogLevel","Returntype":"","Args":"pri log.Priority"},{"Uniquefunname":"func SetService(s *dbusutil.Service)","Funname":"loader.SetService","Returntype":"","Args":"s *dbusutil.Service"},{"Uniquefunname":"func StartAll()","Funname":"loader.StartAll","Returntype":"","Args":""},{"Uniquefunname":"func StopAll()","Funname":"loader.StopAll","Returntype":"","Args":""},{"Uniquefunname":"func ToggleLogDebug(enabled bool)","Funname":"loader.ToggleLogDebug","Returntype":"","Args":"enabled bool"}],"Records":[{"Name":"var:loader","Fields":["loader.getLoader","loader.loaderInitializer"]}]}
{"Filepath":"loader/loader.go","Functions":[{"Uniquefunname":"func (l *Loader) AddModule(m Module)","Funname":"AddModule","Returntype":"","Args":"m Module"},{"Uniquefunname":"func (l *Loader) DeleteModule(name string)","Funname":"DeleteModule","Returntype":"","Args":"name string"},{"Uniquefunname":"func EnableModules(enablingModules []string, disableModules []string, flag EnableFlag)error","Funname":"EnableModules","Returntype":"error","Args":"enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func (e *EnableError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (l *Loader) GetModule(name string) Module","Funname":"GetModule","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func (flags EnableFlag) HasFlag(flag EnableFlag) bool","Funname":"HasFlag","Returntype":"bool","Args":"flag EnableFlag"},{"Uniquefunname":"func (l *Loader) List() []Module","Funname":"List","Returntype":"[]Module","Args":""},{"Uniquefunname":"func (l *Loader) SetLogLevel(pri log.Priority)","Funname":"SetLogLevel","Returntype":"","Args":"pri log.Priority"},{"Uniquefunname":"func (e *EnableError) Error() string","Funname":"loader.EnableError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (flags EnableFlag) HasFlag(flag EnableFlag) bool","Funname":"loader.EnableFlag.HasFlag","Returntype":"bool","Args":"flag EnableFlag"},{"Uniquefunname":"func (l *Loader) AddModule(m Module)","Funname":"loader.Loader.AddModule","Returntype":"","Args":"m Module"},{"Uniquefunname":"func (l *Loader) DeleteModule(name string)","Funname":"loader.Loader.DeleteModule","Returntype":"","Args":"name string"},{"Uniquefunname":"func loader.Loader.EnableModules(enablingModules []string, disableModules []string, flag EnableFlag)error","Funname":"loader.Loader.EnableModules","Returntype":"error","Args":"enablingModules []string, disableModules []string, flag EnableFlag"},{"Uniquefunname":"func (l *Loader) GetModule(name string) Module","Funname":"loader.Loader.GetModule","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func (l *Loader) List() []Module","Funname":"loader.Loader.List","Returntype":"[]Module","Args":""},{"Uniquefunname":"func (l *Loader) SetLogLevel(pri log.Priority)","Funname":"loader.Loader.SetLogLevel","Returntype":"","Args":"pri log.Priority"}],"Records":[{"Name":"struct:loader.EnableError","Fields":["loader.EnableError.Code int","loader.EnableError.ModuleName string","loader.EnableError.detail string"]},{"Name":"const:loader","Fields":["loader.EnableFlagForceStart","loader.EnableFlagIgnoreMissingModule","loader.EnableFlagNone","loader.ErrorCircleDependencies","loader.ErrorConflict","loader.ErrorInternalError","loader.ErrorMissingModule","loader.ErrorNoDependencies"]},{"Name":"struct:loader.Loader","Fields":["loader.Loader.lock sync.Mutex","loader.Loader.log *log.Logger","loader.Loader.modules Modules","loader.Loader.service *dbusutil.Service"]}]}
{"Filepath":"loader/module.go","Functions":[{"Uniquefunname":"func (l Modules) Delete(name string) (Modules, bool)","Funname":"Delete","Returntype":"(Modules, bool)","Args":"name string"},{"Uniquefunname":"func (d *ModuleBase) Enable(enable bool) error","Funname":"Enable","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (l Modules) Get(name string) Module","Funname":"Get","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func (d *ModuleBase) IsEnable() bool","Funname":"IsEnable","Returntype":"bool","Args":""},{"Uniquefunname":"func (l Modules) Len() int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func (l Modules) Less(i, j int) bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (l Modules) List() []string","Funname":"List","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *ModuleBase) LogLevel() log.Priority","Funname":"LogLevel","Returntype":"log.Priority","Args":""},{"Uniquefunname":"func (d *ModuleBase) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewModuleBase(name string, impl ModuleImpl, logger *log.Logger) *ModuleBase","Funname":"NewModuleBase","Returntype":"*ModuleBase","Args":"name string, impl ModuleImpl, logger *log.Logger"},{"Uniquefunname":"func (d *ModuleBase) SetLogLevel(pri log.Priority)","Funname":"SetLogLevel","Returntype":"","Args":"pri log.Priority"},{"Uniquefunname":"func (l Modules) Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func (d *ModuleBase) doEnable(enable bool) error","Funname":"doEnable","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (d *ModuleBase) Enable(enable bool) error","Funname":"loader.ModuleBase.Enable","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (d *ModuleBase) IsEnable() bool","Funname":"loader.ModuleBase.IsEnable","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *ModuleBase) LogLevel() log.Priority","Funname":"loader.ModuleBase.LogLevel","Returntype":"log.Priority","Args":""},{"Uniquefunname":"func (d *ModuleBase) Name() string","Funname":"loader.ModuleBase.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (d *ModuleBase) SetLogLevel(pri log.Priority)","Funname":"loader.ModuleBase.SetLogLevel","Returntype":"","Args":"pri log.Priority"},{"Uniquefunname":"func (d *ModuleBase) doEnable(enable bool) error","Funname":"loader.ModuleBase.doEnable","Returntype":"error","Args":"enable bool"},{"Uniquefunname":"func (l Modules) Delete(name string) (Modules, bool)","Funname":"loader.Modules.Delete","Returntype":"(Modules, bool)","Args":"name string"},{"Uniquefunname":"func (l Modules) Get(name string) Module","Funname":"loader.Modules.Get","Returntype":"Module","Args":"name string"},{"Uniquefunname":"func (l Modules) Len() int","Funname":"loader.Modules.Len","Returntype":"int","Args":""},{"Uniquefunname":"func (l Modules) Less(i, j int) bool","Funname":"loader.Modules.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func (l Modules) List() []string","Funname":"loader.Modules.List","Returntype":"[]string","Args":""},{"Uniquefunname":"func (l Modules) Swap(i, j int)","Funname":"loader.Modules.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func NewModuleBase(name string, impl ModuleImpl, logger *log.Logger) *ModuleBase","Funname":"loader.NewModuleBase","Returntype":"*ModuleBase","Args":"name string, impl ModuleImpl, logger *log.Logger"}],"Records":[{"Name":"interface","Fields":["loader.Module","loader.ModuleImpl"]},{"Name":"struct:loader.ModuleBase","Fields":["loader.ModuleBase.enabled bool","loader.ModuleBase.impl ModuleImpl","loader.ModuleBase.log *log.Logger","loader.ModuleBase.name string"]}]}
{"Filepath":"mime/app_info.go","Functions":[{"Uniquefunname":"func (infos AppInfos) Add(id string) (AppInfos, error)","Funname":"Add","Returntype":"(AppInfos, error)","Args":"id string"},{"Uniquefunname":"func (infos AppInfos) Delete(id string) AppInfos","Funname":"Delete","Returntype":"AppInfos","Args":"id string"},{"Uniquefunname":"func GetAppInfos(mimeType string) AppInfos","Funname":"GetAppInfos","Returntype":"AppInfos","Args":"mimeType string"},{"Uniquefunname":"func GetDefaultAppInfo(mimeType string) (*AppInfo, error)","Funname":"GetDefaultAppInfo","Returntype":"(*AppInfo, error)","Args":"mimeType string"},{"Uniquefunname":"func SetAppInfo(ty, id string) error","Funname":"SetAppInfo","Returntype":"error","Args":"ty, id string"},{"Uniquefunname":"func canDeleteAssociation(appInfo *desktopappinfo.DesktopAppInfo, mimeType string) bool","Funname":"canDeleteAssociation","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo, mimeType string"},{"Uniquefunname":"func findFilePath(file string) string","Funname":"findFilePath","Returntype":"string","Args":"file string"},{"Uniquefunname":"func getAppName(dai *desktopappinfo.DesktopAppInfo) (name string)","Funname":"getAppName","Returntype":"(name string)","Args":"dai *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func (infos AppInfos) Add(id string) (AppInfos, error)","Funname":"mime.AppInfos.Add","Returntype":"(AppInfos, error)","Args":"id string"},{"Uniquefunname":"func (infos AppInfos) Delete(id string) AppInfos","Funname":"mime.AppInfos.Delete","Returntype":"AppInfos","Args":"id string"},{"Uniquefunname":"func GetAppInfos(mimeType string) AppInfos","Funname":"mime.GetAppInfos","Returntype":"AppInfos","Args":"mimeType string"},{"Uniquefunname":"func GetDefaultAppInfo(mimeType string) (*AppInfo, error)","Funname":"mime.GetDefaultAppInfo","Returntype":"(*AppInfo, error)","Args":"mimeType string"},{"Uniquefunname":"func SetAppInfo(ty, id string) error","Funname":"mime.SetAppInfo","Returntype":"error","Args":"ty, id string"},{"Uniquefunname":"func canDeleteAssociation(appInfo *desktopappinfo.DesktopAppInfo, mimeType string) bool","Funname":"mime.canDeleteAssociation","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo, mimeType string"},{"Uniquefunname":"func findFilePath(file string) string","Funname":"mime.findFilePath","Returntype":"string","Args":"file string"},{"Uniquefunname":"func getAppName(dai *desktopappinfo.DesktopAppInfo) (name string)","Funname":"mime.getAppName","Returntype":"(name string)","Args":"dai *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func newAppInfoById(id string) (*AppInfo, error)","Funname":"mime.newAppInfoById","Returntype":"(*AppInfo, error)","Args":"id string"},{"Uniquefunname":"func newAppInfoById2(id string, mimeType string) (*AppInfo, error)","Funname":"mime.newAppInfoById2","Returntype":"(*AppInfo, error)","Args":"id string, mimeType string"},{"Uniquefunname":"func mime.newAppInfoByIdAux(id string, fn func(dai *desktopappinfo.DesktopAppInfo, appInfo *AppInfo))(*AppInfo, error)","Funname":"mime.newAppInfoByIdAux","Returntype":"(*AppInfo, error)","Args":"id string, fn func(dai *desktopappinfo.DesktopAppInfo, appInfo *AppInfo)"},{"Uniquefunname":"func newAppInfoById(id string) (*AppInfo, error)","Funname":"newAppInfoById","Returntype":"(*AppInfo, error)","Args":"id string"},{"Uniquefunname":"func newAppInfoById2(id string, mimeType string) (*AppInfo, error)","Funname":"newAppInfoById2","Returntype":"(*AppInfo, error)","Args":"id string, mimeType string"},{"Uniquefunname":"func newAppInfoByIdAux(id string, fn func(dai *desktopappinfo.DesktopAppInfo, appInfo *AppInfo))(*AppInfo, error)","Funname":"newAppInfoByIdAux","Returntype":"(*AppInfo, error)","Args":"id string, fn func(dai *desktopappinfo.DesktopAppInfo, appInfo *AppInfo)"}],"Records":[{"Name":"struct:mime.AppInfo","Fields":["mime.AppInfo.CanDelete bool","mime.AppInfo.Description string","mime.AppInfo.DisplayName string","mime.AppInfo.Exec string","mime.AppInfo.Icon string","mime.AppInfo.Id string","mime.AppInfo.Name string","mime.AppInfo.fileName string"]}]}
{"Filepath":"mime/config_data.go","Functions":[{"Uniquefunname":"func genMimeAppsFile(data string) error","Funname":"genMimeAppsFile","Returntype":"error","Args":"data string"},{"Uniquefunname":"func genMimeAppsFile(data string) error","Funname":"mime.genMimeAppsFile","Returntype":"error","Args":"data string"},{"Uniquefunname":"func toJSON(v interface","Funname":"mime.toJSON","Returntype":"(string, error)","Args":"v interface{}"},{"Uniquefunname":"func unmarshal(file string) (*defaultAppTable, error)","Funname":"mime.unmarshal","Returntype":"(*defaultAppTable, error)","Args":"file string"},{"Uniquefunname":"func toJSON(v interface","Funname":"toJSON","Returntype":"(string, error)","Args":"v interface{}"},{"Uniquefunname":"func unmarshal(file string) (*defaultAppTable, error)","Funname":"unmarshal","Returntype":"(*defaultAppTable, error)","Args":"file string"}],"Records":[{"Name":"struct:mime.defaultAppInfo","Fields":["mime.defaultAppInfo.AppId []string","mime.defaultAppInfo.AppType string","mime.defaultAppInfo.Types []string"]},{"Name":"struct:mime.defaultAppTable","Fields":["mime.defaultAppTable.Apps defaultAppInfos"]}]}
{"Filepath":"mime/custom.go","Functions":[{"Uniquefunname":"func (m *userAppManager) Add(mimes []string, desktopId string) bool","Funname":"Add","Returntype":"bool","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (info *userAppInfo) AddMimes(mimes []string) bool","Funname":"AddMimes","Returntype":"bool","Args":"mimes []string"},{"Uniquefunname":"func (m *userAppManager) Delete(desktopId string) error","Funname":"Delete","Returntype":"error","Args":"desktopId string"},{"Uniquefunname":"func (m *userAppManager) DeleteByMimes(mimes []string, desktopId string) bool","Funname":"DeleteByMimes","Returntype":"bool","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (info *userAppInfo) DeleteMimes(mimes []string) bool","Funname":"DeleteMimes","Returntype":"bool","Args":"mimes []string"},{"Uniquefunname":"func (m *userAppManager) Get(mime string) userAppInfos","Funname":"Get","Returntype":"userAppInfos","Args":"mime string"},{"Uniquefunname":"func (info *userAppInfo) HasMime(mime string) bool","Funname":"HasMime","Returntype":"bool","Args":"mime string"},{"Uniquefunname":"func (infos userAppInfos) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (m *userAppManager) Write() error","Funname":"Write","Returntype":"error","Args":""},{"Uniquefunname":"func newUserAppManager(filename string) (*userAppManager, error)","Funname":"mime.newUserAppManager","Returntype":"(*userAppManager, error)","Args":"filename string"},{"Uniquefunname":"func readUserAppFile(filename string) (userAppInfos, error)","Funname":"mime.readUserAppFile","Returntype":"(userAppInfos, error)","Args":"filename string"},{"Uniquefunname":"func (info *userAppInfo) AddMimes(mimes []string) bool","Funname":"mime.userAppInfo.AddMimes","Returntype":"bool","Args":"mimes []string"},{"Uniquefunname":"func (info *userAppInfo) DeleteMimes(mimes []string) bool","Funname":"mime.userAppInfo.DeleteMimes","Returntype":"bool","Args":"mimes []string"},{"Uniquefunname":"func (info *userAppInfo) HasMime(mime string) bool","Funname":"mime.userAppInfo.HasMime","Returntype":"bool","Args":"mime string"},{"Uniquefunname":"func (infos userAppInfos) String() string","Funname":"mime.userAppInfos.String","Returntype":"string","Args":""},{"Uniquefunname":"func (m *userAppManager) Add(mimes []string, desktopId string) bool","Funname":"mime.userAppManager.Add","Returntype":"bool","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (m *userAppManager) Delete(desktopId string) error","Funname":"mime.userAppManager.Delete","Returntype":"error","Args":"desktopId string"},{"Uniquefunname":"func (m *userAppManager) DeleteByMimes(mimes []string, desktopId string) bool","Funname":"mime.userAppManager.DeleteByMimes","Returntype":"bool","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (m *userAppManager) Get(mime string) userAppInfos","Funname":"mime.userAppManager.Get","Returntype":"userAppInfos","Args":"mime string"},{"Uniquefunname":"func (m *userAppManager) Write() error","Funname":"mime.userAppManager.Write","Returntype":"error","Args":""},{"Uniquefunname":"func newUserAppManager(filename string) (*userAppManager, error)","Funname":"newUserAppManager","Returntype":"(*userAppManager, error)","Args":"filename string"},{"Uniquefunname":"func readUserAppFile(filename string) (userAppInfos, error)","Funname":"readUserAppFile","Returntype":"(userAppInfos, error)","Args":"filename string"}],"Records":[{"Name":"var:mime","Fields":["mime.userAppFile"]},{"Name":"struct:mime.userAppInfo","Fields":["mime.userAppInfo.DesktopId string","mime.userAppInfo.SupportedMime []string"]},{"Name":"struct:mime.userAppManager","Fields":["mime.userAppManager.appInfos userAppInfos","mime.userAppManager.filename string","mime.userAppManager.locker sync.RWMutex"]}]}
{"Filepath":"mime/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"mime.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"mime.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"mime.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"mime.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"mime.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:mime.Daemon","Fields":["mime.Daemon.manager *Manager"]},{"Name":"var:mime","Fields":["mime.logger"]}]}
{"Filepath":"mime/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) AddUserApp(mimes []string, desktopId string) *dbus.Error","Funname":"AddUserApp","Returntype":"*dbus.Error","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (m *Manager) DeleteApp(mimeTypes []string, desktopId string) *dbus.Error","Funname":"DeleteApp","Returntype":"*dbus.Error","Args":"mimeTypes []string, desktopId string"},{"Uniquefunname":"func (m *Manager) DeleteUserApp(desktopId string) *dbus.Error","Funname":"DeleteUserApp","Returntype":"*dbus.Error","Args":"desktopId string"},{"Uniquefunname":"func (m *Manager) GetDefaultApp(mimeType string) (string, *dbus.Error)","Funname":"GetDefaultApp","Returntype":"(string, *dbus.Error)","Args":"mimeType string"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) ListApps(ty string) (string, *dbus.Error)","Funname":"ListApps","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) ListUserApps(ty string) (string, *dbus.Error)","Funname":"ListUserApps","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) Reset()","Funname":"Reset","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) SetDefaultApp(mimes []string, desktopDd string) *dbus.Error","Funname":"SetDefaultApp","Returntype":"*dbus.Error","Args":"mimes []string, desktopDd string"},{"Uniquefunname":"func (m *Manager) deferEmitChange()","Funname":"deferEmitChange","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deleteApp(mimeTypes []string, desktopId string) error","Funname":"deleteApp","Returntype":"error","Args":"mimeTypes []string, desktopId string"},{"Uniquefunname":"func deleteMimeAssociation(mimeAppsKf *keyfile.KeyFile, mimeType string, desktopId string)","Funname":"deleteMimeAssociation","Returntype":"","Args":"mimeAppsKf *keyfile.KeyFile, mimeType string, desktopId string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doInitConfigData() error","Funname":"doInitConfigData","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) emitSignalChange()","Funname":"emitSignalChange","Returntype":"","Args":""},{"Uniquefunname":"func getApplicatonsDirs() []string","Funname":"getApplicatonsDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func getDirsNeedWatched() []string","Funname":"getDirsNeedWatched","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Manager) handleFileEvents()","Funname":"handleFileEvents","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initConfigData()","Funname":"initConfigData","Returntype":"","Args":""},{"Uniquefunname":"func isDeepinCustomDesktopFile(file string) bool","Funname":"isDeepinCustomDesktopFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func (m *Manager) AddUserApp(mimes []string, desktopId string) *dbus.Error","Funname":"mime.Manager.AddUserApp","Returntype":"*dbus.Error","Args":"mimes []string, desktopId string"},{"Uniquefunname":"func (m *Manager) DeleteApp(mimeTypes []string, desktopId string) *dbus.Error","Funname":"mime.Manager.DeleteApp","Returntype":"*dbus.Error","Args":"mimeTypes []string, desktopId string"},{"Uniquefunname":"func (m *Manager) DeleteUserApp(desktopId string) *dbus.Error","Funname":"mime.Manager.DeleteUserApp","Returntype":"*dbus.Error","Args":"desktopId string"},{"Uniquefunname":"func (m *Manager) GetDefaultApp(mimeType string) (string, *dbus.Error)","Funname":"mime.Manager.GetDefaultApp","Returntype":"(string, *dbus.Error)","Args":"mimeType string"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"mime.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) ListApps(ty string) (string, *dbus.Error)","Funname":"mime.Manager.ListApps","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) ListUserApps(ty string) (string, *dbus.Error)","Funname":"mime.Manager.ListUserApps","Returntype":"(string, *dbus.Error)","Args":"ty string"},{"Uniquefunname":"func (m *Manager) Reset()","Funname":"mime.Manager.Reset","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) SetDefaultApp(mimes []string, desktopDd string) *dbus.Error","Funname":"mime.Manager.SetDefaultApp","Returntype":"*dbus.Error","Args":"mimes []string, desktopDd string"},{"Uniquefunname":"func (m *Manager) deferEmitChange()","Funname":"mime.Manager.deferEmitChange","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deleteApp(mimeTypes []string, desktopId string) error","Funname":"mime.Manager.deleteApp","Returntype":"error","Args":"mimeTypes []string, desktopId string"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"mime.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doInitConfigData() error","Funname":"mime.Manager.doInitConfigData","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) emitSignalChange()","Funname":"mime.Manager.emitSignalChange","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleFileEvents()","Funname":"mime.Manager.handleFileEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initConfigData()","Funname":"mime.Manager.initConfigData","Returntype":"","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"mime.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func deleteMimeAssociation(mimeAppsKf *keyfile.KeyFile, mimeType string, desktopId string)","Funname":"mime.deleteMimeAssociation","Returntype":"","Args":"mimeAppsKf *keyfile.KeyFile, mimeType string, desktopId string"},{"Uniquefunname":"func getApplicatonsDirs() []string","Funname":"mime.getApplicatonsDirs","Returntype":"[]string","Args":""},{"Uniquefunname":"func getDirsNeedWatched() []string","Funname":"mime.getDirsNeedWatched","Returntype":"[]string","Args":""},{"Uniquefunname":"func init()","Funname":"mime.init","Returntype":"","Args":""},{"Uniquefunname":"func isDeepinCustomDesktopFile(file string) bool","Funname":"mime.isDeepinCustomDesktopFile","Returntype":"bool","Args":"file string"},{"Uniquefunname":"func saveMimeAppsList(mimeAppsKeyFile *keyfile.KeyFile) error","Funname":"mime.saveMimeAppsList","Returntype":"error","Args":"mimeAppsKeyFile *keyfile.KeyFile"},{"Uniquefunname":"func toDesktopId(appId string) string","Funname":"mime.toDesktopId","Returntype":"string","Args":"appId string"},{"Uniquefunname":"func saveMimeAppsList(mimeAppsKeyFile *keyfile.KeyFile) error","Funname":"saveMimeAppsList","Returntype":"error","Args":"mimeAppsKeyFile *keyfile.KeyFile"},{"Uniquefunname":"func toDesktopId(appId string) string","Funname":"toDesktopId","Returntype":"string","Args":"appId string"}],"Records":[{"Name":"const:mime","Fields":["mime.AppMimeTerminal","mime.dbusInterface","mime.dbusPath","mime.dbusServiceName","mime.sectionAddedAssociations","mime.sectionDefaultApps"]},{"Name":"struct:mime.Manager","Fields":["mime.Manager.changeTimer *time.Timer","mime.Manager.done chan struct{}","mime.Manager.doneResp chan struct{}","mime.Manager.fsWatcher *fsnotify.Watcher","mime.Manager.methods *struct { GetDefaultApp func() `in:\"mimeType\" out:\"defaultApp\"`; SetDefaultApp func() `in:\"mimeTypes,desktopId\"`; ListApps func() `in:\"mimeType\" out:\"apps\"`; DeleteApp func() `in:\"mimeTypes,desktopId\"`; ListUserApps func() `in:\"mimeType\" out:\"userApps\"`; AddUserApp func() `in:\"mimeTypes,desktopId\"`; DeleteUserApp func() `in:\"desktopId\"`; }","mime.Manager.service *dbusutil.Service","mime.Manager.signals *struct { Change struct{}; }","mime.Manager.userManager *userAppManager"]},{"Name":"var:mime","Fields":["mime.userAppDir","mime.userMimeAppsListFile"]}]}
{"Filepath":"mime/mime_test.go","Functions":[{"Uniquefunname":"func TestAppInfos(t *testing.T)","Funname":"TestAppInfos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrInList(t *testing.T)","Funname":"TestIsStrInList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUnmarshal(t *testing.T)","Funname":"TestUnmarshal","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUserAppInfo(t *testing.T)","Funname":"TestUserAppInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestAppInfos(t *testing.T)","Funname":"mime.TestAppInfos","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsStrInList(t *testing.T)","Funname":"mime.TestIsStrInList","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUnmarshal(t *testing.T)","Funname":"mime.TestUnmarshal","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestUserAppInfo(t *testing.T)","Funname":"mime.TestUserAppInfo","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"mime/terminal.go","Functions":[{"Uniquefunname":"func getDefaultTerminal() (*AppInfo, error)","Funname":"getDefaultTerminal","Returntype":"(*AppInfo, error)","Args":""},{"Uniquefunname":"func getExecArg(exec string) string","Funname":"getExecArg","Returntype":"string","Args":"exec string"},{"Uniquefunname":"func getTerminalInfos() AppInfos","Funname":"getTerminalInfos","Returntype":"AppInfos","Args":""},{"Uniquefunname":"func isStrInList(s string, list []string) bool","Funname":"isStrInList","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func isTerminalApp(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"isTerminalApp","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func getDefaultTerminal() (*AppInfo, error)","Funname":"mime.getDefaultTerminal","Returntype":"(*AppInfo, error)","Args":""},{"Uniquefunname":"func getExecArg(exec string) string","Funname":"mime.getExecArg","Returntype":"string","Args":"exec string"},{"Uniquefunname":"func getTerminalInfos() AppInfos","Funname":"mime.getTerminalInfos","Returntype":"AppInfos","Args":""},{"Uniquefunname":"func isStrInList(s string, list []string) bool","Funname":"mime.isStrInList","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func isTerminalApp(appInfo *desktopappinfo.DesktopAppInfo) bool","Funname":"mime.isTerminalApp","Returntype":"bool","Args":"appInfo *desktopappinfo.DesktopAppInfo"},{"Uniquefunname":"func resetTerminal()","Funname":"mime.resetTerminal","Returntype":"","Args":""},{"Uniquefunname":"func setDefaultTerminal(id string) error","Funname":"mime.setDefaultTerminal","Returntype":"error","Args":"id string"},{"Uniquefunname":"func resetTerminal()","Funname":"resetTerminal","Returntype":"","Args":""},{"Uniquefunname":"func setDefaultTerminal(id string) error","Funname":"setDefaultTerminal","Returntype":"error","Args":"id string"}],"Records":[{"Name":"const:mime","Fields":["mime.categoryTerminalEmulator","mime.desktopExt","mime.execXTerminalEmulator","mime.gsKeyAppId","mime.gsKeyExec","mime.gsKeyExecArg","mime.gsSchemaDefaultTerminal"]},{"Name":"var:mime","Fields":["mime.execArgMap","mime.termBlackList"]}]}
{"Filepath":"miracast/ifc.go","Functions":[{"Uniquefunname":"func (m *Miracast) Connect(sinkPath dbus.ObjectPath, x, y, w, h uint32) *dbus.Error","Funname":"Connect","Returntype":"*dbus.Error","Args":"sinkPath dbus.ObjectPath, x, y, w, h uint32"},{"Uniquefunname":"func (m *Miracast) Disconnect(sinkPath dbus.ObjectPath) *dbus.Error","Funname":"Disconnect","Returntype":"*dbus.Error","Args":"sinkPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) Enable(linkPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"Enable","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) ListLinks() (LinkInfos, *dbus.Error)","Funname":"ListLinks","Returntype":"(LinkInfos, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Miracast) ListSinks() (SinkInfos, *dbus.Error)","Funname":"ListSinks","Returntype":"(SinkInfos, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Miracast) Scanning(linkPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"Scanning","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) SetLinkName(linkPath dbus.ObjectPath, name string) *dbus.Error","Funname":"SetLinkName","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, name string"},{"Uniquefunname":"func (m *Miracast) connect(sinkPath dbus.ObjectPath, x, y, w, h uint32) error","Funname":"connect","Returntype":"error","Args":"sinkPath dbus.ObjectPath, x, y, w, h uint32"},{"Uniquefunname":"func (m *Miracast) enable(linkPath dbus.ObjectPath, enabled bool) error","Funname":"enable","Returntype":"error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) Connect(sinkPath dbus.ObjectPath, x, y, w, h uint32) *dbus.Error","Funname":"miracast.Miracast.Connect","Returntype":"*dbus.Error","Args":"sinkPath dbus.ObjectPath, x, y, w, h uint32"},{"Uniquefunname":"func (m *Miracast) Disconnect(sinkPath dbus.ObjectPath) *dbus.Error","Funname":"miracast.Miracast.Disconnect","Returntype":"*dbus.Error","Args":"sinkPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) Enable(linkPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"miracast.Miracast.Enable","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) ListLinks() (LinkInfos, *dbus.Error)","Funname":"miracast.Miracast.ListLinks","Returntype":"(LinkInfos, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Miracast) ListSinks() (SinkInfos, *dbus.Error)","Funname":"miracast.Miracast.ListSinks","Returntype":"(SinkInfos, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Miracast) Scanning(linkPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"miracast.Miracast.Scanning","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) SetLinkName(linkPath dbus.ObjectPath, name string) *dbus.Error","Funname":"miracast.Miracast.SetLinkName","Returntype":"*dbus.Error","Args":"linkPath dbus.ObjectPath, name string"},{"Uniquefunname":"func (m *Miracast) connect(sinkPath dbus.ObjectPath, x, y, w, h uint32) error","Funname":"miracast.Miracast.connect","Returntype":"error","Args":"sinkPath dbus.ObjectPath, x, y, w, h uint32"},{"Uniquefunname":"func (m *Miracast) enable(linkPath dbus.ObjectPath, enabled bool) error","Funname":"miracast.Miracast.enable","Returntype":"error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) scanning(linkPath dbus.ObjectPath, enabled bool) error","Funname":"miracast.Miracast.scanning","Returntype":"error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) setLinkName(linkPath dbus.ObjectPath, name string) error","Funname":"miracast.Miracast.setLinkName","Returntype":"error","Args":"linkPath dbus.ObjectPath, name string"},{"Uniquefunname":"func (m *Miracast) scanning(linkPath dbus.ObjectPath, enabled bool) error","Funname":"scanning","Returntype":"error","Args":"linkPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Miracast) setLinkName(linkPath dbus.ObjectPath, name string) error","Funname":"setLinkName","Returntype":"error","Args":"linkPath dbus.ObjectPath, name string"}],"Records":[{"Name":"const:miracast","Fields":["miracast.EventLinkManaged","miracast.EventLinkUnmanaged","miracast.EventSinkConnected","miracast.EventSinkConnectedFailed","miracast.EventSinkDisconnected"]}]}
{"Filepath":"miracast/init.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"miracast.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"miracast.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"miracast.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"miracast.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"miracast.init","Returntype":"","Args":""}],"Records":[{"Name":"var:miracast","Fields":["miracast._m","miracast.logger"]}]}
{"Filepath":"miracast/link.go","Functions":[{"Uniquefunname":"func (link *LinkInfo) ConfigureForManaged()","Funname":"ConfigureForManaged","Returntype":"","Args":""},{"Uniquefunname":"func (link *LinkInfo) EnableManaged(enabled bool) error","Funname":"EnableManaged","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (link *LinkInfo) EnableP2PScanning(enabled bool)","Funname":"EnableP2PScanning","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (links LinkInfos) Get(objPath dbus.ObjectPath) *LinkInfo","Funname":"Get","Returntype":"*LinkInfo","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (links LinkInfos) Remove(objPath dbus.ObjectPath) (LinkInfos, bool)","Funname":"Remove","Returntype":"(LinkInfos, bool)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (link *LinkInfo) SetName(name string)","Funname":"SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (link *LinkInfo) connectSignal(m *Miracast)","Funname":"connectSignal","Returntype":"","Args":"m *Miracast"},{"Uniquefunname":"func destroyLinkInfo(link *LinkInfo)","Funname":"destroyLinkInfo","Returntype":"","Args":"link *LinkInfo"},{"Uniquefunname":"func isLinkObjectPath(objPath dbus.ObjectPath) bool","Funname":"isLinkObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func isPeerObjectPath(objPath dbus.ObjectPath) bool","Funname":"isPeerObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (link *LinkInfo) ConfigureForManaged()","Funname":"miracast.LinkInfo.ConfigureForManaged","Returntype":"","Args":""},{"Uniquefunname":"func (link *LinkInfo) EnableManaged(enabled bool) error","Funname":"miracast.LinkInfo.EnableManaged","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (link *LinkInfo) EnableP2PScanning(enabled bool)","Funname":"miracast.LinkInfo.EnableP2PScanning","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (link *LinkInfo) SetName(name string)","Funname":"miracast.LinkInfo.SetName","Returntype":"","Args":"name string"},{"Uniquefunname":"func (link *LinkInfo) connectSignal(m *Miracast)","Funname":"miracast.LinkInfo.connectSignal","Returntype":"","Args":"m *Miracast"},{"Uniquefunname":"func (link *LinkInfo) update()","Funname":"miracast.LinkInfo.update","Returntype":"","Args":""},{"Uniquefunname":"func (link *LinkInfo) waitManaged(wantManaged bool) error","Funname":"miracast.LinkInfo.waitManaged","Returntype":"error","Args":"wantManaged bool"},{"Uniquefunname":"func (links LinkInfos) Get(objPath dbus.ObjectPath) *LinkInfo","Funname":"miracast.LinkInfos.Get","Returntype":"*LinkInfo","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (links LinkInfos) Remove(objPath dbus.ObjectPath) (LinkInfos, bool)","Funname":"miracast.LinkInfos.Remove","Returntype":"(LinkInfos, bool)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func destroyLinkInfo(link *LinkInfo)","Funname":"miracast.destroyLinkInfo","Returntype":"","Args":"link *LinkInfo"},{"Uniquefunname":"func isLinkObjectPath(objPath dbus.ObjectPath) bool","Funname":"miracast.isLinkObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func isPeerObjectPath(objPath dbus.ObjectPath) bool","Funname":"miracast.isPeerObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func newLinkInfo(objPath dbus.ObjectPath) (*LinkInfo, error)","Funname":"miracast.newLinkInfo","Returntype":"(*LinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func waitChange(name string, wantVal bool, getValFn func() (bool, error)) error","Funname":"miracast.waitChange","Returntype":"error","Args":"name string, wantVal bool, getValFn func() (bool, error)"},{"Uniquefunname":"func waitPeerConnected(peer *wifi.Peer, wantConnected bool) error","Funname":"miracast.waitPeerConnected","Returntype":"error","Args":"peer *wifi.Peer, wantConnected bool"},{"Uniquefunname":"func newLinkInfo(objPath dbus.ObjectPath) (*LinkInfo, error)","Funname":"newLinkInfo","Returntype":"(*LinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (link *LinkInfo) update()","Funname":"update","Returntype":"","Args":""},{"Uniquefunname":"func waitChange(name string, wantVal bool, getValFn func() (bool, error)) error","Funname":"waitChange","Returntype":"error","Args":"name string, wantVal bool, getValFn func() (bool, error)"},{"Uniquefunname":"func (link *LinkInfo) waitManaged(wantManaged bool) error","Funname":"waitManaged","Returntype":"error","Args":"wantManaged bool"},{"Uniquefunname":"func waitPeerConnected(peer *wifi.Peer, wantConnected bool) error","Funname":"waitPeerConnected","Returntype":"error","Args":"peer *wifi.Peer, wantConnected bool"}],"Records":[{"Name":"struct:miracast.LinkInfo","Fields":["miracast.LinkInfo.FriendlyName string","miracast.LinkInfo.MacAddress string","miracast.LinkInfo.Managed bool","miracast.LinkInfo.Name string","miracast.LinkInfo.P2PScanning bool","miracast.LinkInfo.Path dbus.ObjectPath","miracast.LinkInfo.core *wifi.Link","miracast.LinkInfo.index uint32","miracast.LinkInfo.interfaceName string","miracast.LinkInfo.locker sync.Mutex","miracast.LinkInfo.myManaged bool"]}]}
{"Filepath":"miracast/miracast.go","Functions":[{"Uniquefunname":"func (*Miracast) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Miracast) addLinkInfo(objPath dbus.ObjectPath) (*LinkInfo, error)","Funname":"addLinkInfo","Returntype":"(*LinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) addObject(objPath dbus.ObjectPath) (interface","Funname":"addObject","Returntype":"(interface{}, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) addSinkInfo(objPath dbus.ObjectPath) (*SinkInfo, error)","Funname":"addSinkInfo","Returntype":"(*SinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Miracast) disconnectSink(objPath dbus.ObjectPath) error","Funname":"disconnectSink","Returntype":"error","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) emitSignalAdded(path dbus.ObjectPath, detailJSON string)","Funname":"emitSignalAdded","Returntype":"","Args":"path dbus.ObjectPath, detailJSON string"},{"Uniquefunname":"func (m *Miracast) emitSignalEvent(eventType uint8, path dbus.ObjectPath)","Funname":"emitSignalEvent","Returntype":"","Args":"eventType uint8, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) emitSignalRemoved(path dbus.ObjectPath, detailJSON string)","Funname":"emitSignalRemoved","Returntype":"","Args":"path dbus.ObjectPath, detailJSON string"},{"Uniquefunname":"func (m *Miracast) enableWirelessManaged(interfaceName string, enabled bool) error","Funname":"enableWirelessManaged","Returntype":"error","Args":"interfaceName string, enabled bool"},{"Uniquefunname":"func eventTypeToStr(eventType uint8) string","Funname":"eventTypeToStr","Returntype":"string","Args":"eventType uint8"},{"Uniquefunname":"func (m *Miracast) handleEvent()","Funname":"handleEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Miracast) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Miracast) GetInterfaceName() string","Funname":"miracast.Miracast.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Miracast) addLinkInfo(objPath dbus.ObjectPath) (*LinkInfo, error)","Funname":"miracast.Miracast.addLinkInfo","Returntype":"(*LinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) addObject(objPath dbus.ObjectPath) (interface","Funname":"miracast.Miracast.addObject","Returntype":"(interface{}, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) addSinkInfo(objPath dbus.ObjectPath) (*SinkInfo, error)","Funname":"miracast.Miracast.addSinkInfo","Returntype":"(*SinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) destroy()","Funname":"miracast.Miracast.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Miracast) disconnectSink(objPath dbus.ObjectPath) error","Funname":"miracast.Miracast.disconnectSink","Returntype":"error","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) emitSignalAdded(path dbus.ObjectPath, detailJSON string)","Funname":"miracast.Miracast.emitSignalAdded","Returntype":"","Args":"path dbus.ObjectPath, detailJSON string"},{"Uniquefunname":"func (m *Miracast) emitSignalEvent(eventType uint8, path dbus.ObjectPath)","Funname":"miracast.Miracast.emitSignalEvent","Returntype":"","Args":"eventType uint8, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) emitSignalRemoved(path dbus.ObjectPath, detailJSON string)","Funname":"miracast.Miracast.emitSignalRemoved","Returntype":"","Args":"path dbus.ObjectPath, detailJSON string"},{"Uniquefunname":"func (m *Miracast) enableWirelessManaged(interfaceName string, enabled bool) error","Funname":"miracast.Miracast.enableWirelessManaged","Returntype":"error","Args":"interfaceName string, enabled bool"},{"Uniquefunname":"func (m *Miracast) handleEvent()","Funname":"miracast.Miracast.handleEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Miracast) init()","Funname":"miracast.Miracast.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Miracast) removeObject(objPath dbus.ObjectPath) (bool, interface","Funname":"miracast.Miracast.removeObject","Returntype":"(bool, interface{})","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) startSession(sink *SinkInfo, x, y, w, h uint32)","Funname":"miracast.Miracast.startSession","Returntype":"","Args":"sink *SinkInfo, x, y, w, h uint32"},{"Uniquefunname":"func eventTypeToStr(eventType uint8) string","Funname":"miracast.eventTypeToStr","Returntype":"string","Args":"eventType uint8"},{"Uniquefunname":"func newMiracast(service *dbusutil.Service) (*Miracast, error)","Funname":"miracast.newMiracast","Returntype":"(*Miracast, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func toJSON(v interface","Funname":"miracast.toJSON","Returntype":"string","Args":"v interface{}"},{"Uniquefunname":"func waitNmDeviceManaged(device *networkmanager.Device, wantManged bool) error","Funname":"miracast.waitNmDeviceManaged","Returntype":"error","Args":"device *networkmanager.Device, wantManged bool"},{"Uniquefunname":"func newMiracast(service *dbusutil.Service) (*Miracast, error)","Funname":"newMiracast","Returntype":"(*Miracast, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Miracast) removeObject(objPath dbus.ObjectPath) (bool, interface","Funname":"removeObject","Returntype":"(bool, interface{})","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Miracast) startSession(sink *SinkInfo, x, y, w, h uint32)","Funname":"startSession","Returntype":"","Args":"sink *SinkInfo, x, y, w, h uint32"},{"Uniquefunname":"func toJSON(v interface","Funname":"toJSON","Returntype":"string","Args":"v interface{}"},{"Uniquefunname":"func waitNmDeviceManaged(device *networkmanager.Device, wantManged bool) error","Funname":"waitNmDeviceManaged","Returntype":"error","Args":"device *networkmanager.Device, wantManged bool"}],"Records":[{"Name":"struct:miracast.Miracast","Fields":["miracast.Miracast.deviceLocker sync.Mutex","miracast.Miracast.devices iw.WirelessInfos","miracast.Miracast.inited bool","miracast.Miracast.linkLocker sync.Mutex","miracast.Miracast.links LinkInfos","miracast.Miracast.locker sync.Mutex","miracast.Miracast.methods *struct { ListLinks func() `out:\"links\"`; ListSinks func() `out:\"sinks\"`; Enable func() `in:\"link,enabled\"`; SetLinkName func() `in:\"link,name\"`; Scanning func() `in:\"link,enabled\"`; Connect func() `in:\"sink,x,y,w,h\"`; Disconnect func() `in:\"sink\"`; }","miracast.Miracast.network *networkmanager.Manager","miracast.Miracast.service *dbusutil.Service","miracast.Miracast.signals *struct { Added, Removed struct { path dbus.ObjectPath; detailJSON string; }; Event struct { eventType uint8; path dbus.ObjectPath; }; }","miracast.Miracast.sinkLocker sync.Mutex","miracast.Miracast.sinks SinkInfos","miracast.Miracast.sysBusObj *ofdbus.DBus","miracast.Miracast.sysSigLoop *dbusutil.SignalLoop","miracast.Miracast.wfdObj *wfd.Wfd","miracast.Miracast.wifiObj *wifi.Wifi"]},{"Name":"const:miracast","Fields":["miracast.dbusInterface","miracast.dbusPath","miracast.dbusServiceName","miracast.defaultInterval","miracast.defaultTimeout","miracast.linkDBusPathPrefix","miracast.peerDBusPathPrefix","miracast.sessionDBusPathPrefix","miracast.sinkDBusPathPrefix"]}]}
{"Filepath":"miracast/sink.go","Functions":[{"Uniquefunname":"func (sinks SinkInfos) Get(objPath dbus.ObjectPath) *SinkInfo","Funname":"Get","Returntype":"*SinkInfo","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (sinks SinkInfos) Remove(objPath dbus.ObjectPath) (SinkInfos, bool)","Funname":"Remove","Returntype":"(SinkInfos, bool)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (sink *SinkInfo) StartSession(x, y, w, h uint32) error","Funname":"StartSession","Returntype":"error","Args":"x, y, w, h uint32"},{"Uniquefunname":"func (sink *SinkInfo) TeardownSession() error","Funname":"TeardownSession","Returntype":"error","Args":""},{"Uniquefunname":"func (sink *SinkInfo) connectSignal(m *Miracast)","Funname":"connectSignal","Returntype":"","Args":"m *Miracast"},{"Uniquefunname":"func destroySinkInfo(info *SinkInfo)","Funname":"destroySinkInfo","Returntype":"","Args":"info *SinkInfo"},{"Uniquefunname":"func getAudioSink() string","Funname":"getAudioSink","Returntype":"string","Args":""},{"Uniquefunname":"func isSessionObjectPath(objPath dbus.ObjectPath) bool","Funname":"isSessionObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func isSinkObjectPath(objPath dbus.ObjectPath) bool","Funname":"isSinkObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (sink *SinkInfo) StartSession(x, y, w, h uint32) error","Funname":"miracast.SinkInfo.StartSession","Returntype":"error","Args":"x, y, w, h uint32"},{"Uniquefunname":"func (sink *SinkInfo) TeardownSession() error","Funname":"miracast.SinkInfo.TeardownSession","Returntype":"error","Args":""},{"Uniquefunname":"func (sink *SinkInfo) connectSignal(m *Miracast)","Funname":"miracast.SinkInfo.connectSignal","Returntype":"","Args":"m *Miracast"},{"Uniquefunname":"func (sink *SinkInfo) update()","Funname":"miracast.SinkInfo.update","Returntype":"","Args":""},{"Uniquefunname":"func (sinks SinkInfos) Get(objPath dbus.ObjectPath) *SinkInfo","Funname":"miracast.SinkInfos.Get","Returntype":"*SinkInfo","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (sinks SinkInfos) Remove(objPath dbus.ObjectPath) (SinkInfos, bool)","Funname":"miracast.SinkInfos.Remove","Returntype":"(SinkInfos, bool)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func destroySinkInfo(info *SinkInfo)","Funname":"miracast.destroySinkInfo","Returntype":"","Args":"info *SinkInfo"},{"Uniquefunname":"func getAudioSink() string","Funname":"miracast.getAudioSink","Returntype":"string","Args":""},{"Uniquefunname":"func isSessionObjectPath(objPath dbus.ObjectPath) bool","Funname":"miracast.isSessionObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func isSinkObjectPath(objPath dbus.ObjectPath) bool","Funname":"miracast.isSinkObjectPath","Returntype":"bool","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func newSinkInfo(objPath dbus.ObjectPath) (*SinkInfo, error)","Funname":"miracast.newSinkInfo","Returntype":"(*SinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func newSinkInfo(objPath dbus.ObjectPath) (*SinkInfo, error)","Funname":"newSinkInfo","Returntype":"(*SinkInfo, error)","Args":"objPath dbus.ObjectPath"},{"Uniquefunname":"func (sink *SinkInfo) update()","Funname":"update","Returntype":"","Args":""}],"Records":[{"Name":"struct:miracast.SinkInfo","Fields":["miracast.SinkInfo.Connected bool","miracast.SinkInfo.Interface string","miracast.SinkInfo.LinkPath dbus.ObjectPath","miracast.SinkInfo.Name string","miracast.SinkInfo.P2PMac string","miracast.SinkInfo.Path dbus.ObjectPath","miracast.SinkInfo.core *wfd.Sink","miracast.SinkInfo.locker sync.Mutex","miracast.SinkInfo.peer *wifi.Peer"]}]}
{"Filepath":"network/decode_ssid.go","Functions":[{"Uniquefunname":"func decodeSsid(ssid []byte) string","Funname":"decodeSsid","Returntype":"string","Args":"ssid []byte"},{"Uniquefunname":"func decodeSsid(ssid []byte) string","Funname":"network.decodeSsid","Returntype":"string","Args":"ssid []byte"}],"Records":[{"Name":"var:network","Fields":["network.localeCharsetMap"]}]}
{"Filepath":"network/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (m *Manager)","Funname":"NewManager","Returntype":"(m *Manager)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doPortalAuthentication()","Funname":"doPortalAuthentication","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initNMObjManager(systemBus *dbus.Conn)","Funname":"initNMObjManager","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func initSlices()","Funname":"initSlices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initSysNetwork(sysBus *dbus.Conn)","Funname":"initSysNetwork","Returntype":"","Args":"sysBus *dbus.Conn"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"network.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"network.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doPortalAuthentication()","Funname":"network.Manager.doPortalAuthentication","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"network.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initNMObjManager(systemBus *dbus.Conn)","Funname":"network.Manager.initNMObjManager","Returntype":"","Args":"systemBus *dbus.Conn"},{"Uniquefunname":"func (m *Manager) initSysNetwork(sysBus *dbus.Conn)","Funname":"network.Manager.initSysNetwork","Returntype":"","Args":"sysBus *dbus.Conn"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (m *Manager)","Funname":"network.NewManager","Returntype":"(m *Manager)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func initSlices()","Funname":"network.initSlices","Returntype":"","Args":""},{"Uniquefunname":"func watchNetworkManagerRestart(m *Manager)","Funname":"network.watchNetworkManagerRestart","Returntype":"","Args":"m *Manager"},{"Uniquefunname":"func watchNetworkManagerRestart(m *Manager)","Funname":"watchNetworkManagerRestart","Returntype":"","Args":"m *Manager"}],"Records":[{"Name":"struct:network.Manager","Fields":["network.Manager.ActiveConnections string","network.Manager.Connections string","network.Manager.Connectivity uint32","network.Manager.Devices string","network.Manager.NetworkingEnabled bool","network.Manager.PropsMu sync.RWMutex","network.Manager.State uint32","network.Manager.VpnEnabled bool","network.Manager.WirelessAccessPoints string","network.Manager.accessPoints map[dbus.ObjectPath][]*accessPoint","network.Manager.accessPointsLock sync.Mutex","network.Manager.activeConnections map[dbus.ObjectPath]*activeConnection","network.Manager.activeConnectionsLock sync.Mutex","network.Manager.checkAPStrengthTimer *time.Timer","network.Manager.connections map[string]connectionSlice","network.Manager.connectionsLock sync.Mutex","network.Manager.debugChangeAPBand string","network.Manager.devices map[string][]*device","network.Manager.devicesLock sync.Mutex","network.Manager.hasSaveSecret bool","network.Manager.items []settingItem","network.Manager.methods *struct { ActivateAccessPoint func() `in:\"uuid,apPath,devPath\" out:\"cPath\"`; ActivateConnection func() `in:\"uuid,devPath\" out:\"cPath\"`; DeactivateConnection func() `in:\"uuid\"`; DebugChangeAPChannel func() `in:\"band\"`; DeleteConnection func() `in:\"uuid\"`; DisableWirelessHotspotMode func() `in:\"devPath\"`; DisconnectDevice func() `in:\"devPath\"`; EnableDevice func() `in:\"devPath,enabled\"`; EnableWirelessHotspotMode func() `in:\"devPath\"`; GetAccessPoints func() `in:\"path\" out:\"apsJSON\"`; GetActiveConnectionInfo","network.Manager.nmObjManager *nmdbus.ObjectManager","network.Manager.portalLastDetectionTime time.Time","network.Manager.protalAuthBrowserOpened bool","network.Manager.proxyChainsManager *proxychains.Manager","network.Manager.saveToKeyring bool","network.Manager.secretAgent *SecretAgent","network.Manager.service *dbusutil.Service","network.Manager.sessionSigLoop *dbusutil.SignalLoop","network.Manager.signals *struct { AccessPointAdded, AccessPointRemoved, AccessPointPropertiesChanged struct { devPath, apJSON string; }; DeviceEnabled struct { devPath string; enabled bool; }; }","network.Manager.stateHandler *stateHandler","network.Manager.syncConfig *dsync.Config","network.Manager.sysNetwork *sysNetwork.Network","network.Manager.sysSigLoop *dbusutil.SignalLoop"]},{"Name":"const:network","Fields":["network.checkRepeatTime","network.dbusInterface","network.dbusPath","network.dbusServiceName"]}]}
{"Filepath":"network/manager_accesspoint.go","Functions":[{"Uniquefunname":"func ActivateAccessPoint(uuid string, apPath, devPath dbus.ObjectPath)(dbus.ObjectPath, *dbus.Error)","Funname":"ActivateAccessPoint","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"uuid string, apPath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DebugChangeAPChannel(band string) *dbus.Error","Funname":"DebugChangeAPChannel","Returntype":"*dbus.Error","Args":"band string"},{"Uniquefunname":"func (m *Manager) GetAccessPoints(path dbus.ObjectPath) (apsJSON string, busErr *dbus.Error)","Funname":"GetAccessPoints","Returntype":"(apsJSON string, busErr *dbus.Error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (v apSecType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func activateAccessPoint(uuid string, apPath, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, err error)","Funname":"activateAccessPoint","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string, apPath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addAccessPoint(devPath, apPath dbus.ObjectPath)","Funname":"addAccessPoint","Returntype":"","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) checkAPStrength()","Funname":"checkAPStrength","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) clearAccessPoints()","Funname":"clearAccessPoints","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroyAccessPoint(ap *accessPoint)","Funname":"destroyAccessPoint","Returntype":"","Args":"ap *accessPoint"},{"Uniquefunname":"func doParseApSecType(flags, wpaFlags, rsnFlags uint32) apSecType","Funname":"doParseApSecType","Returntype":"apSecType","Args":"flags, wpaFlags, rsnFlags uint32"},{"Uniquefunname":"func (m *Manager) doRemoveAccessPoint(aps []*accessPoint, i int) []*accessPoint","Funname":"doRemoveAccessPoint","Returntype":"[]*accessPoint","Args":"aps []*accessPoint, i int"},{"Uniquefunname":"func findAPByBand(ssid string, accessPoints []*accessPoint, band string)(apNow *accessPoint)","Funname":"findAPByBand","Returntype":"(apNow *accessPoint)","Args":"ssid string, accessPoints []*accessPoint, band string"},{"Uniquefunname":"func fixApSecTypeChange(uuid string, secType apSecType) (needUserEdit bool, err error)","Funname":"fixApSecTypeChange","Returntype":"(needUserEdit bool, err error)","Args":"uuid string, secType apSecType"},{"Uniquefunname":"func getAccessPointIndex(apPath dbus.ObjectPath)(devPath dbus.ObjectPath, index int)","Funname":"getAccessPointIndex","Returntype":"(devPath dbus.ObjectPath, index int)","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func getApSecType(ap *nmdbus.AccessPoint) apSecType","Funname":"getApSecType","Returntype":"apSecType","Args":"ap *nmdbus.AccessPoint"},{"Uniquefunname":"func (m *Manager) getBandByFrequency(freq uint32) (band string)","Funname":"getBandByFrequency","Returntype":"(band string)","Args":"freq uint32"},{"Uniquefunname":"func (m *Manager) initAccessPoints(devPath dbus.ObjectPath, apPaths []dbus.ObjectPath)","Funname":"initAccessPoints","Returntype":"","Args":"devPath dbus.ObjectPath, apPaths []dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) isAccessPointActivated(devPath dbus.ObjectPath, ssid string) bool","Funname":"isAccessPointActivated","Returntype":"bool","Args":"devPath dbus.ObjectPath, ssid string"},{"Uniquefunname":"func (m *Manager) isAccessPointExists(apPath dbus.ObjectPath) bool","Funname":"isAccessPointExists","Returntype":"bool","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func network.Manager.ActivateAccessPoint(uuid string, apPath, devPath dbus.ObjectPath)(dbus.ObjectPath, *dbus.Error)","Funname":"network.Manager.ActivateAccessPoint","Returntype":"(dbus.ObjectPath, *dbus.Error)","Args":"uuid string, apPath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DebugChangeAPChannel(band string) *dbus.Error","Funname":"network.Manager.DebugChangeAPChannel","Returntype":"*dbus.Error","Args":"band string"},{"Uniquefunname":"func (m *Manager) GetAccessPoints(path dbus.ObjectPath) (apsJSON string, busErr *dbus.Error)","Funname":"network.Manager.GetAccessPoints","Returntype":"(apsJSON string, busErr *dbus.Error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func network.Manager.activateAccessPoint(uuid string, apPath, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, err error)","Funname":"network.Manager.activateAccessPoint","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string, apPath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addAccessPoint(devPath, apPath dbus.ObjectPath)","Funname":"network.Manager.addAccessPoint","Returntype":"","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) checkAPStrength()","Funname":"network.Manager.checkAPStrength","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) clearAccessPoints()","Funname":"network.Manager.clearAccessPoints","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroyAccessPoint(ap *accessPoint)","Funname":"network.Manager.destroyAccessPoint","Returntype":"","Args":"ap *accessPoint"},{"Uniquefunname":"func (m *Manager) doRemoveAccessPoint(aps []*accessPoint, i int) []*accessPoint","Funname":"network.Manager.doRemoveAccessPoint","Returntype":"[]*accessPoint","Args":"aps []*accessPoint, i int"},{"Uniquefunname":"func network.Manager.findAPByBand(ssid string, accessPoints []*accessPoint, band string)(apNow *accessPoint)","Funname":"network.Manager.findAPByBand","Returntype":"(apNow *accessPoint)","Args":"ssid string, accessPoints []*accessPoint, band string"},{"Uniquefunname":"func network.Manager.getAccessPointIndex(apPath dbus.ObjectPath)(devPath dbus.ObjectPath, index int)","Funname":"network.Manager.getAccessPointIndex","Returntype":"(devPath dbus.ObjectPath, index int)","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getBandByFrequency(freq uint32) (band string)","Funname":"network.Manager.getBandByFrequency","Returntype":"(band string)","Args":"freq uint32"},{"Uniquefunname":"func (m *Manager) initAccessPoints(devPath dbus.ObjectPath, apPaths []dbus.ObjectPath)","Funname":"network.Manager.initAccessPoints","Returntype":"","Args":"devPath dbus.ObjectPath, apPaths []dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) isAccessPointActivated(devPath dbus.ObjectPath, ssid string) bool","Funname":"network.Manager.isAccessPointActivated","Returntype":"bool","Args":"devPath dbus.ObjectPath, ssid string"},{"Uniquefunname":"func (m *Manager) isAccessPointExists(apPath dbus.ObjectPath) bool","Funname":"network.Manager.isAccessPointExists","Returntype":"bool","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) newAccessPoint(devPath, apPath dbus.ObjectPath) (ap *accessPoint, err error)","Funname":"network.Manager.newAccessPoint","Returntype":"(ap *accessPoint, err error)","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeAccessPoint(devPath, apPath dbus.ObjectPath)","Funname":"network.Manager.removeAccessPoint","Returntype":"","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (a *accessPoint) shouldBeIgnore() bool","Funname":"network.accessPoint.shouldBeIgnore","Returntype":"bool","Args":""},{"Uniquefunname":"func (a *accessPoint) updateProps()","Funname":"network.accessPoint.updateProps","Returntype":"","Args":""},{"Uniquefunname":"func (v apSecType) String() string","Funname":"network.apSecType.String","Returntype":"string","Args":""},{"Uniquefunname":"func doParseApSecType(flags, wpaFlags, rsnFlags uint32) apSecType","Funname":"network.doParseApSecType","Returntype":"apSecType","Args":"flags, wpaFlags, rsnFlags uint32"},{"Uniquefunname":"func fixApSecTypeChange(uuid string, secType apSecType) (needUserEdit bool, err error)","Funname":"network.fixApSecTypeChange","Returntype":"(needUserEdit bool, err error)","Args":"uuid string, secType apSecType"},{"Uniquefunname":"func getApSecType(ap *nmdbus.AccessPoint) apSecType","Funname":"network.getApSecType","Returntype":"apSecType","Args":"ap *nmdbus.AccessPoint"},{"Uniquefunname":"func (m *Manager) newAccessPoint(devPath, apPath dbus.ObjectPath) (ap *accessPoint, err error)","Funname":"newAccessPoint","Returntype":"(ap *accessPoint, err error)","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeAccessPoint(devPath, apPath dbus.ObjectPath)","Funname":"removeAccessPoint","Returntype":"","Args":"devPath, apPath dbus.ObjectPath"},{"Uniquefunname":"func (a *accessPoint) shouldBeIgnore() bool","Funname":"shouldBeIgnore","Returntype":"bool","Args":""},{"Uniquefunname":"func (a *accessPoint) updateProps()","Funname":"updateProps","Returntype":"","Args":""}],"Records":[{"Name":"struct:network.accessPoint","Fields":["network.accessPoint.Frequency uint32","network.accessPoint.Path dbus.ObjectPath","network.accessPoint.Secured bool","network.accessPoint.SecuredInEap bool","network.accessPoint.Ssid string","network.accessPoint.Strength uint8","network.accessPoint.devPath dbus.ObjectPath","network.accessPoint.nmAp *nmdbus.AccessPoint"]},{"Name":"const:network","Fields":["network.apSecEap","network.apSecNone","network.apSecPsk","network.apSecWep","network.channelAutoChangeThreshold","network.frequency2GLowerlimit","network.frequency2GUpperlimit","network.frequency5GLowerlimit","network.frequency5GUpperlimit","network.scanWifiDelayTime"]}]}
{"Filepath":"network/manager_active_conn.go","Functions":[{"Uniquefunname":"func (m *Manager) GetActiveConnectionInfo() (acinfosJSON string, busErr *dbus.Error)","Funname":"GetActiveConnectionInfo","Returntype":"(acinfosJSON string, busErr *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) clearActiveConnections()","Funname":"clearActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func doGetActiveConnectionInfo(apath, devPath dbus.ObjectPath)(acinfo activeConnectionInfo, err error)","Funname":"doGetActiveConnectionInfo","Returntype":"(acinfo activeConnectionInfo, err error)","Args":"apath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) doHandleVpnNotification(apath dbus.ObjectPath, state, reason uint32)","Funname":"doHandleVpnNotification","Returntype":"","Args":"apath dbus.ObjectPath, state, reason uint32"},{"Uniquefunname":"func (m *Manager) initActiveConnectionManage()","Funname":"initActiveConnectionManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initActiveConnections()","Funname":"initActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) GetActiveConnectionInfo() (acinfosJSON string, busErr *dbus.Error)","Funname":"network.Manager.GetActiveConnectionInfo","Returntype":"(acinfosJSON string, busErr *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) clearActiveConnections()","Funname":"network.Manager.clearActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func network.Manager.doGetActiveConnectionInfo(apath, devPath dbus.ObjectPath)(acinfo activeConnectionInfo, err error)","Funname":"network.Manager.doGetActiveConnectionInfo","Returntype":"(acinfo activeConnectionInfo, err error)","Args":"apath, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) doHandleVpnNotification(apath dbus.ObjectPath, state, reason uint32)","Funname":"network.Manager.doHandleVpnNotification","Returntype":"","Args":"apath dbus.ObjectPath, state, reason uint32"},{"Uniquefunname":"func (m *Manager) initActiveConnectionManage()","Funname":"network.Manager.initActiveConnectionManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initActiveConnections()","Funname":"network.Manager.initActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) newActiveConnection(path dbus.ObjectPath) (aconn *activeConnection)","Funname":"network.Manager.newActiveConnection","Returntype":"(aconn *activeConnection)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateActiveConnState(apath dbus.ObjectPath, state uint32)","Funname":"network.Manager.updateActiveConnState","Returntype":"","Args":"apath dbus.ObjectPath, state uint32"},{"Uniquefunname":"func (m *Manager) newActiveConnection(path dbus.ObjectPath) (aconn *activeConnection)","Funname":"newActiveConnection","Returntype":"(aconn *activeConnection)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateActiveConnState(apath dbus.ObjectPath, state uint32)","Funname":"updateActiveConnState","Returntype":"","Args":"apath dbus.ObjectPath, state uint32"}],"Records":[{"Name":"struct:network.activeConnection","Fields":["network.activeConnection.Devices []dbus.ObjectPath","network.activeConnection.Id string","network.activeConnection.State uint32","network.activeConnection.Uuid string","network.activeConnection.Vpn bool","network.activeConnection.path dbus.ObjectPath","network.activeConnection.typ string","network.activeConnection.vpnFailed bool"]},{"Name":"struct:network.activeConnectionInfo","Fields":["network.activeConnectionInfo.ConnectionName string","network.activeConnectionInfo.ConnectionType string","network.activeConnectionInfo.ConnectionUuid string","network.activeConnectionInfo.Device dbus.ObjectPath","network.activeConnectionInfo.DeviceInterface string","network.activeConnectionInfo.DeviceType string","network.activeConnectionInfo.Hotspot hotspotConnectionInfo","network.activeConnectionInfo.HwAddress string","network.activeConnectionInfo.Ip4 ip4ConnectionInfo","network.activeConnectionInfo.Ip6 ip6ConnectionInfo","network.activeConnectionInfo.IsPrimaryConnection bool","network.activeConnectionInfo.MobileNetworkType string","network.activeConnectionInfo.Protocol string","network.activeConnectionInfo.Security string","network.activeConnectionInfo.SettingPath dbus.ObjectPath","network.activeConnectionInfo.Speed string"]},{"Name":"var:network","Fields":["network.frequencyChannelMap"]},{"Name":"struct:network.hotspotConnectionInfo","Fields":["network.hotspotConnectionInfo.Band string","network.hotspotConnectionInfo.Channel int32","network.hotspotConnectionInfo.Ssid string"]},{"Name":"struct:network.ip4ConnectionInfo","Fields":["network.ip4ConnectionInfo.Address string","network.ip4ConnectionInfo.Dnses []string","network.ip4ConnectionInfo.Gateways []string","network.ip4ConnectionInfo.Mask string"]},{"Name":"struct:network.ip6ConnectionInfo","Fields":["network.ip6ConnectionInfo.Address string","network.ip6ConnectionInfo.Dnses []string","network.ip6ConnectionInfo.Gateways []string","network.ip6ConnectionInfo.Prefix string"]}]}
{"Filepath":"network/manager_connection.go","Functions":[{"Uniquefunname":"func ActivateConnection(uuid string, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, busErr *dbus.Error)","Funname":"ActivateConnection","Returntype":"(cpath dbus.ObjectPath, busErr *dbus.Error)","Args":"uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DeactivateConnection(uuid string) *dbus.Error","Funname":"DeactivateConnection","Returntype":"*dbus.Error","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) DeleteConnection(uuid string) *dbus.Error","Funname":"DeleteConnection","Returntype":"*dbus.Error","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) DisableWirelessHotspotMode(devPath dbus.ObjectPath) *dbus.Error","Funname":"DisableWirelessHotspotMode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DisconnectDevice(devPath dbus.ObjectPath) *dbus.Error","Funname":"DisconnectDevice","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) EnableWirelessHotspotMode(devPath dbus.ObjectPath) *dbus.Error","Funname":"EnableWirelessHotspotMode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) GetSupportedConnectionTypes() (types []string, err *dbus.Error)","Funname":"GetSupportedConnectionTypes","Returntype":"(types []string, err *dbus.Error)","Args":""},{"Uniquefunname":"func IsWirelessHotspotModeEnabled(devPath dbus.ObjectPath)(enabled bool, err *dbus.Error)","Funname":"IsWirelessHotspotModeEnabled","Returntype":"(enabled bool, err *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func Len()int","Funname":"Len","Returntype":"int","Args":""},{"Uniquefunname":"func Less(i, j int)bool","Funname":"Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func Swap(i, j int)","Funname":"Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func activateConnection(uuid string, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, err error)","Funname":"activateConnection","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addConnection(cpath dbus.ObjectPath)","Funname":"addConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) clearConnections()","Funname":"clearConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deactivateConnection(uuid string) (err error)","Funname":"deactivateConnection","Returntype":"(err error)","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) deleteConnection(uuid string) (err error)","Funname":"deleteConnection","Returntype":"(err error)","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) deleteTempConnectionSettings(conn *connection, cdata connectionData)","Funname":"deleteTempConnectionSettings","Returntype":"","Args":"conn *connection, cdata connectionData"},{"Uniquefunname":"func (m *Manager) destroyConnection(conn *connection)","Funname":"destroyConnection","Returntype":"","Args":"conn *connection"},{"Uniquefunname":"func (m *Manager) doDisconnectDevice(devPath dbus.ObjectPath) (err error)","Funname":"doDisconnectDevice","Returntype":"(err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) doRemoveConnection(conns connectionSlice, i int) connectionSlice","Funname":"doRemoveConnection","Returntype":"connectionSlice","Args":"conns connectionSlice, i int"},{"Uniquefunname":"func (m *Manager) enableWirelessHotSpotMode(devPath dbus.ObjectPath) (err error)","Funname":"enableWirelessHotSpotMode","Returntype":"(err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func ensureUniqueConnectionExists(devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"ensureUniqueConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"devPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func ensureWiredConnectionExists(wiredDevPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"ensureWiredConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"wiredDevPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func ensureWirelessHotspotConnectionExists(wirelessDevPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"ensureWirelessHotspotConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"wirelessDevPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func (m *Manager) getConnection(cpath dbus.ObjectPath) (conn *connection)","Funname":"getConnection","Returntype":"(conn *connection)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getConnectionIndex(cpath dbus.ObjectPath) (connType string, index int)","Funname":"getConnectionIndex","Returntype":"(connType string, index int)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func getNonTempWiredDeviceConnectionUuid(wiredDevPath dbus.ObjectPath) string","Funname":"getNonTempWiredDeviceConnectionUuid","Returntype":"string","Args":"wiredDevPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) initConnectionManage()","Funname":"initConnectionManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isConnectionExists(cpath dbus.ObjectPath) bool","Funname":"isConnectionExists","Returntype":"bool","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func isObjPathValid(dpath dbus.ObjectPath) bool","Funname":"isObjPathValid","Returntype":"bool","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func isTempWiredConnectionPath(connPath dbus.ObjectPath) (isTemp bool, uuid string, err error)","Funname":"isTempWiredConnectionPath","Returntype":"(isTemp bool, uuid string, err error)","Args":"connPath dbus.ObjectPath"},{"Uniquefunname":"func isTempWiredConnectionSettings(conn *nmdbus.ConnectionSettings, cdata connectionData)(bool, error)","Funname":"isTempWiredConnectionSettings","Returntype":"(bool, error)","Args":"conn *nmdbus.ConnectionSettings, cdata connectionData"},{"Uniquefunname":"func network.Manager.ActivateConnection(uuid string, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, busErr *dbus.Error)","Funname":"network.Manager.ActivateConnection","Returntype":"(cpath dbus.ObjectPath, busErr *dbus.Error)","Args":"uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DeactivateConnection(uuid string) *dbus.Error","Funname":"network.Manager.DeactivateConnection","Returntype":"*dbus.Error","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) DeleteConnection(uuid string) *dbus.Error","Funname":"network.Manager.DeleteConnection","Returntype":"*dbus.Error","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) DisableWirelessHotspotMode(devPath dbus.ObjectPath) *dbus.Error","Funname":"network.Manager.DisableWirelessHotspotMode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) DisconnectDevice(devPath dbus.ObjectPath) *dbus.Error","Funname":"network.Manager.DisconnectDevice","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) EnableWirelessHotspotMode(devPath dbus.ObjectPath) *dbus.Error","Funname":"network.Manager.EnableWirelessHotspotMode","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) GetSupportedConnectionTypes() (types []string, err *dbus.Error)","Funname":"network.Manager.GetSupportedConnectionTypes","Returntype":"(types []string, err *dbus.Error)","Args":""},{"Uniquefunname":"func network.Manager.IsWirelessHotspotModeEnabled(devPath dbus.ObjectPath)(enabled bool, err *dbus.Error)","Funname":"network.Manager.IsWirelessHotspotModeEnabled","Returntype":"(enabled bool, err *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func network.Manager.activateConnection(uuid string, devPath dbus.ObjectPath)(cpath dbus.ObjectPath, err error)","Funname":"network.Manager.activateConnection","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) addConnection(cpath dbus.ObjectPath)","Funname":"network.Manager.addConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) clearConnections()","Funname":"network.Manager.clearConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deactivateConnection(uuid string) (err error)","Funname":"network.Manager.deactivateConnection","Returntype":"(err error)","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) deleteConnection(uuid string) (err error)","Funname":"network.Manager.deleteConnection","Returntype":"(err error)","Args":"uuid string"},{"Uniquefunname":"func (m *Manager) deleteTempConnectionSettings(conn *connection, cdata connectionData)","Funname":"network.Manager.deleteTempConnectionSettings","Returntype":"","Args":"conn *connection, cdata connectionData"},{"Uniquefunname":"func (m *Manager) destroyConnection(conn *connection)","Funname":"network.Manager.destroyConnection","Returntype":"","Args":"conn *connection"},{"Uniquefunname":"func (m *Manager) doDisconnectDevice(devPath dbus.ObjectPath) (err error)","Funname":"network.Manager.doDisconnectDevice","Returntype":"(err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) doRemoveConnection(conns connectionSlice, i int) connectionSlice","Funname":"network.Manager.doRemoveConnection","Returntype":"connectionSlice","Args":"conns connectionSlice, i int"},{"Uniquefunname":"func (m *Manager) enableWirelessHotSpotMode(devPath dbus.ObjectPath) (err error)","Funname":"network.Manager.enableWirelessHotSpotMode","Returntype":"(err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func network.Manager.ensureUniqueConnectionExists(devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"network.Manager.ensureUniqueConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"devPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func network.Manager.ensureWiredConnectionExists(wiredDevPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"network.Manager.ensureWiredConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"wiredDevPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func network.Manager.ensureWirelessHotspotConnectionExists(wirelessDevPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, exists bool, err error)","Funname":"network.Manager.ensureWirelessHotspotConnectionExists","Returntype":"(cpath dbus.ObjectPath, exists bool, err error)","Args":"wirelessDevPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func (m *Manager) getConnection(cpath dbus.ObjectPath) (conn *connection)","Funname":"network.Manager.getConnection","Returntype":"(conn *connection)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getConnectionIndex(cpath dbus.ObjectPath) (connType string, index int)","Funname":"network.Manager.getConnectionIndex","Returntype":"(connType string, index int)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) initConnectionManage()","Funname":"network.Manager.initConnectionManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isConnectionExists(cpath dbus.ObjectPath) bool","Funname":"network.Manager.isConnectionExists","Returntype":"bool","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) newConnection(cpath dbus.ObjectPath) (conn *connection, err error)","Funname":"network.Manager.newConnection","Returntype":"(conn *connection, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeConnection(cpath dbus.ObjectPath)","Funname":"network.Manager.removeConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateConnection(cpath dbus.ObjectPath)","Funname":"network.Manager.updateConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateConnectionBand(conn *connection, band string) (err error)","Funname":"network.Manager.updateConnectionBand","Returntype":"(err error)","Args":"conn *connection, band string"},{"Uniquefunname":"func (conn *connection) updateProps() connectionData","Funname":"network.connection.updateProps","Returntype":"connectionData","Args":""},{"Uniquefunname":"func network.connectionSlice.Len()int","Funname":"network.connectionSlice.Len","Returntype":"int","Args":""},{"Uniquefunname":"func network.connectionSlice.Less(i, j int)bool","Funname":"network.connectionSlice.Less","Returntype":"bool","Args":"i, j int"},{"Uniquefunname":"func network.connectionSlice.Swap(i, j int)","Funname":"network.connectionSlice.Swap","Returntype":"","Args":"i, j int"},{"Uniquefunname":"func getNonTempWiredDeviceConnectionUuid(wiredDevPath dbus.ObjectPath) string","Funname":"network.getNonTempWiredDeviceConnectionUuid","Returntype":"string","Args":"wiredDevPath dbus.ObjectPath"},{"Uniquefunname":"func isObjPathValid(dpath dbus.ObjectPath) bool","Funname":"network.isObjPathValid","Returntype":"bool","Args":"dpath dbus.ObjectPath"},{"Uniquefunname":"func isTempWiredConnectionPath(connPath dbus.ObjectPath) (isTemp bool, uuid string, err error)","Funname":"network.isTempWiredConnectionPath","Returntype":"(isTemp bool, uuid string, err error)","Args":"connPath dbus.ObjectPath"},{"Uniquefunname":"func network.isTempWiredConnectionSettings(conn *nmdbus.ConnectionSettings, cdata connectionData)(bool, error)","Funname":"network.isTempWiredConnectionSettings","Returntype":"(bool, error)","Args":"conn *nmdbus.ConnectionSettings, cdata connectionData"},{"Uniquefunname":"func (m *Manager) newConnection(cpath dbus.ObjectPath) (conn *connection, err error)","Funname":"newConnection","Returntype":"(conn *connection, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeConnection(cpath dbus.ObjectPath)","Funname":"removeConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateConnection(cpath dbus.ObjectPath)","Funname":"updateConnection","Returntype":"","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) updateConnectionBand(conn *connection, band string) (err error)","Funname":"updateConnectionBand","Returntype":"(err error)","Args":"conn *connection, band string"},{"Uniquefunname":"func (conn *connection) updateProps() connectionData","Funname":"updateProps","Returntype":"connectionData","Args":""}],"Records":[{"Name":"struct:network.connection","Fields":["network.connection.ClonedAddress string","network.connection.HwAddress string","network.connection.Id string","network.connection.Path dbus.ObjectPath","network.connection.Ssid string","network.connection.Uuid string","network.connection.connType string","network.connection.nmConn *nmdbus.ConnectionSettings"]}]}
{"Filepath":"network/manager_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedActiveConnections(value string) error","Funname":"emitPropChangedActiveConnections","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConnections(value string) error","Funname":"emitPropChangedConnections","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConnectivity(value uint32) error","Funname":"emitPropChangedConnectivity","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedDevices(value string) error","Funname":"emitPropChangedDevices","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedNetworkingEnabled(value bool) error","Funname":"emitPropChangedNetworkingEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedState(value uint32) error","Funname":"emitPropChangedState","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedVpnEnabled(value bool) error","Funname":"emitPropChangedVpnEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWirelessAccessPoints(value string) error","Funname":"emitPropChangedWirelessAccessPoints","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedActiveConnections(value string) error","Funname":"network.Manager.emitPropChangedActiveConnections","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConnections(value string) error","Funname":"network.Manager.emitPropChangedConnections","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedConnectivity(value uint32) error","Funname":"network.Manager.emitPropChangedConnectivity","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedDevices(value string) error","Funname":"network.Manager.emitPropChangedDevices","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedNetworkingEnabled(value bool) error","Funname":"network.Manager.emitPropChangedNetworkingEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedState(value uint32) error","Funname":"network.Manager.emitPropChangedState","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedVpnEnabled(value bool) error","Funname":"network.Manager.emitPropChangedVpnEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWirelessAccessPoints(value string) error","Funname":"network.Manager.emitPropChangedWirelessAccessPoints","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropActiveConnections(value string) (changed bool)","Funname":"network.Manager.setPropActiveConnections","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConnections(value string) (changed bool)","Funname":"network.Manager.setPropConnections","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConnectivity(value uint32) (changed bool)","Funname":"network.Manager.setPropConnectivity","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropDevices(value string) (changed bool)","Funname":"network.Manager.setPropDevices","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropNetworkingEnabled(value bool) (changed bool)","Funname":"network.Manager.setPropNetworkingEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropState(value uint32) (changed bool)","Funname":"network.Manager.setPropState","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropVpnEnabled(value bool) (changed bool)","Funname":"network.Manager.setPropVpnEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWirelessAccessPoints(value string) (changed bool)","Funname":"network.Manager.setPropWirelessAccessPoints","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropActiveConnections(value string) (changed bool)","Funname":"setPropActiveConnections","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConnections(value string) (changed bool)","Funname":"setPropConnections","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropConnectivity(value uint32) (changed bool)","Funname":"setPropConnectivity","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropDevices(value string) (changed bool)","Funname":"setPropDevices","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropNetworkingEnabled(value bool) (changed bool)","Funname":"setPropNetworkingEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropState(value uint32) (changed bool)","Funname":"setPropState","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropVpnEnabled(value bool) (changed bool)","Funname":"setPropVpnEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWirelessAccessPoints(value string) (changed bool)","Funname":"setPropWirelessAccessPoints","Returntype":"(changed bool)","Args":"value string"}],"Records":null}
{"Filepath":"network/manager_device.go","Functions":[{"Uniquefunname":"func (m *Manager) EnableDevice(devPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"EnableDevice","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Manager) IsDeviceEnabled(devPath dbus.ObjectPath) (bool, *dbus.Error)","Funname":"IsDeviceEnabled","Returntype":"(bool, *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func ListDeviceConnections(devPath dbus.ObjectPath)([]dbus.ObjectPath, *dbus.Error)","Funname":"ListDeviceConnections","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) RequestWirelessScan() *dbus.Error","Funname":"RequestWirelessScan","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetDeviceManaged(devPathOrIfc string, managed bool) *dbus.Error","Funname":"SetDeviceManaged","Returntype":"*dbus.Error","Args":"devPathOrIfc string, managed bool"},{"Uniquefunname":"func (m *Manager) addDevice(devPath dbus.ObjectPath)","Funname":"addDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) adjustDeviceStatus()","Funname":"adjustDeviceStatus","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) checkGatewayConnectivity(ipPath dbus.ObjectPath) bool","Funname":"checkGatewayConnectivity","Returntype":"bool","Args":"ipPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) clearDevices()","Funname":"clearDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroyDevice(dev *device)","Funname":"destroyDevice","Returntype":"","Args":"dev *device"},{"Uniquefunname":"func (m *Manager) doPing(addr string, retries int) bool","Funname":"doPing","Returntype":"bool","Args":"addr string, retries int"},{"Uniquefunname":"func (m *Manager) doRemoveDevice(devs []*device, i int) []*device","Funname":"doRemoveDevice","Returntype":"[]*device","Args":"devs []*device, i int"},{"Uniquefunname":"func enableDevice(devPath dbus.ObjectPath, enabled bool, activate bool)(err error)","Funname":"enableDevice","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, enabled bool, activate bool"},{"Uniquefunname":"func (m *Manager) getDevice(devPath dbus.ObjectPath) (dev *device)","Funname":"getDevice","Returntype":"(dev *device)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getDeviceEnabled(devPath dbus.ObjectPath) (bool, error)","Funname":"getDeviceEnabled","Returntype":"(bool, error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getDeviceIndex(devPath dbus.ObjectPath) (devType string, index int)","Funname":"getDeviceIndex","Returntype":"(devType string, index int)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getInterfaceFlags(dev *device) uint32","Funname":"getInterfaceFlags","Returntype":"uint32","Args":"dev *device"},{"Uniquefunname":"func (m *Manager) initDeviceManage()","Funname":"initDeviceManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isDeviceExists(devPath dbus.ObjectPath) bool","Funname":"isDeviceExists","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) listDeviceConnections(devPath dbus.ObjectPath) ([]dbus.ObjectPath, error)","Funname":"listDeviceConnections","Returntype":"([]dbus.ObjectPath, error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) EnableDevice(devPath dbus.ObjectPath, enabled bool) *dbus.Error","Funname":"network.Manager.EnableDevice","Returntype":"*dbus.Error","Args":"devPath dbus.ObjectPath, enabled bool"},{"Uniquefunname":"func (m *Manager) IsDeviceEnabled(devPath dbus.ObjectPath) (bool, *dbus.Error)","Funname":"network.Manager.IsDeviceEnabled","Returntype":"(bool, *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func network.Manager.ListDeviceConnections(devPath dbus.ObjectPath)([]dbus.ObjectPath, *dbus.Error)","Funname":"network.Manager.ListDeviceConnections","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) RequestWirelessScan() *dbus.Error","Funname":"network.Manager.RequestWirelessScan","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetDeviceManaged(devPathOrIfc string, managed bool) *dbus.Error","Funname":"network.Manager.SetDeviceManaged","Returntype":"*dbus.Error","Args":"devPathOrIfc string, managed bool"},{"Uniquefunname":"func (m *Manager) addDevice(devPath dbus.ObjectPath)","Funname":"network.Manager.addDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) adjustDeviceStatus()","Funname":"network.Manager.adjustDeviceStatus","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) checkGatewayConnectivity(ipPath dbus.ObjectPath) bool","Funname":"network.Manager.checkGatewayConnectivity","Returntype":"bool","Args":"ipPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) clearDevices()","Funname":"network.Manager.clearDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) destroyDevice(dev *device)","Funname":"network.Manager.destroyDevice","Returntype":"","Args":"dev *device"},{"Uniquefunname":"func (m *Manager) doPing(addr string, retries int) bool","Funname":"network.Manager.doPing","Returntype":"bool","Args":"addr string, retries int"},{"Uniquefunname":"func (m *Manager) doRemoveDevice(devs []*device, i int) []*device","Funname":"network.Manager.doRemoveDevice","Returntype":"[]*device","Args":"devs []*device, i int"},{"Uniquefunname":"func network.Manager.enableDevice(devPath dbus.ObjectPath, enabled bool, activate bool)(err error)","Funname":"network.Manager.enableDevice","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, enabled bool, activate bool"},{"Uniquefunname":"func (m *Manager) getDevice(devPath dbus.ObjectPath) (dev *device)","Funname":"network.Manager.getDevice","Returntype":"(dev *device)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getDeviceEnabled(devPath dbus.ObjectPath) (bool, error)","Funname":"network.Manager.getDeviceEnabled","Returntype":"(bool, error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getDeviceIndex(devPath dbus.ObjectPath) (devType string, index int)","Funname":"network.Manager.getDeviceIndex","Returntype":"(devType string, index int)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) getInterfaceFlags(dev *device) uint32","Funname":"network.Manager.getInterfaceFlags","Returntype":"uint32","Args":"dev *device"},{"Uniquefunname":"func (m *Manager) initDeviceManage()","Funname":"network.Manager.initDeviceManage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isDeviceExists(devPath dbus.ObjectPath) bool","Funname":"network.Manager.isDeviceExists","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) listDeviceConnections(devPath dbus.ObjectPath) ([]dbus.ObjectPath, error)","Funname":"network.Manager.listDeviceConnections","Returntype":"([]dbus.ObjectPath, error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) newDevice(devPath dbus.ObjectPath) (dev *device, err error)","Funname":"network.Manager.newDevice","Returntype":"(dev *device, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeDevice(devPath dbus.ObjectPath)","Funname":"network.Manager.removeDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) setDeviceEnabled(enabled bool, devPath dbus.ObjectPath)","Funname":"network.Manager.setDeviceEnabled","Returntype":"","Args":"enabled bool, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) setDeviceManaged(devPathOrIfc string, managed bool) (err error)","Funname":"network.Manager.setDeviceManaged","Returntype":"(err error)","Args":"devPathOrIfc string, managed bool"},{"Uniquefunname":"func (m *Manager) wirelessReActiveConnection(nmDev *nmdbus.Device) error","Funname":"network.Manager.wirelessReActiveConnection","Returntype":"error","Args":"nmDev *nmdbus.Device"},{"Uniquefunname":"func (m *Manager) newDevice(devPath dbus.ObjectPath) (dev *device, err error)","Funname":"newDevice","Returntype":"(dev *device, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) removeDevice(devPath dbus.ObjectPath)","Funname":"removeDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) setDeviceEnabled(enabled bool, devPath dbus.ObjectPath)","Funname":"setDeviceEnabled","Returntype":"","Args":"enabled bool, devPath dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) setDeviceManaged(devPathOrIfc string, managed bool) (err error)","Funname":"setDeviceManaged","Returntype":"(err error)","Args":"devPathOrIfc string, managed bool"},{"Uniquefunname":"func (m *Manager) wirelessReActiveConnection(nmDev *nmdbus.Device) error","Funname":"wirelessReActiveConnection","Returntype":"error","Args":"nmDev *nmdbus.Device"}],"Records":[{"Name":"struct:network.device","Fields":["network.device.ActiveAp dbus.ObjectPath","network.device.ClonedAddress string","network.device.Driver string","network.device.HwAddress string","network.device.Interface string","network.device.InterfaceFlags uint32","network.device.Managed bool","network.device.MobileNetworkType string","network.device.MobileSignalQuality uint32","network.device.Path dbus.ObjectPath","network.device.State uint32","network.device.SupportHotspot bool","network.device.UniqueUuid string","network.device.UsbDevice bool","network.device.Vendor string","network.device.id string","network.device.mmDevModem *mmdbus.Modem","network.device.nmDev *nmdbus.Device","network.device.nmDevType uint32","network.device.quitFlagsCheckChan chan struct{}","network.device.udi string"]},{"Name":"const:network","Fields":["network.nmInterfaceFlagUP"]}]}
{"Filepath":"network/manager_proxy.go","Functions":[{"Uniquefunname":"func (m *Manager) GetAutoProxy() (proxyAuto string, err *dbus.Error)","Funname":"GetAutoProxy","Returntype":"(proxyAuto string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetProxy(proxyType string) (host, port string, busErr *dbus.Error)","Funname":"GetProxy","Returntype":"(host, port string, busErr *dbus.Error)","Args":"proxyType string"},{"Uniquefunname":"func (m *Manager) GetProxyIgnoreHosts() (ignoreHosts string, err *dbus.Error)","Funname":"GetProxyIgnoreHosts","Returntype":"(ignoreHosts string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetProxyMethod() (proxyMode string, err *dbus.Error)","Funname":"GetProxyMethod","Returntype":"(proxyMode string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) SetAutoProxy(proxyAuto string) (busErr *dbus.Error)","Funname":"SetAutoProxy","Returntype":"(busErr *dbus.Error)","Args":"proxyAuto string"},{"Uniquefunname":"func (m *Manager) SetProxy(proxyType, host, port string) *dbus.Error","Funname":"SetProxy","Returntype":"*dbus.Error","Args":"proxyType, host, port string"},{"Uniquefunname":"func (m *Manager) SetProxyIgnoreHosts(ignoreHosts string) (busErr *dbus.Error)","Funname":"SetProxyIgnoreHosts","Returntype":"(busErr *dbus.Error)","Args":"ignoreHosts string"},{"Uniquefunname":"func (m *Manager) SetProxyMethod(proxyMode string) *dbus.Error","Funname":"SetProxyMethod","Returntype":"*dbus.Error","Args":"proxyMode string"},{"Uniquefunname":"func checkProxyMethod(proxyMode string) (err error)","Funname":"checkProxyMethod","Returntype":"(err error)","Args":"proxyMode string"},{"Uniquefunname":"func getProxyChildSettings(proxyType string) (childSettings *gio.Settings, err error)","Funname":"getProxyChildSettings","Returntype":"(childSettings *gio.Settings, err error)","Args":"proxyType string"},{"Uniquefunname":"func initProxyGsettings()","Funname":"initProxyGsettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) GetAutoProxy() (proxyAuto string, err *dbus.Error)","Funname":"network.Manager.GetAutoProxy","Returntype":"(proxyAuto string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetProxy(proxyType string) (host, port string, busErr *dbus.Error)","Funname":"network.Manager.GetProxy","Returntype":"(host, port string, busErr *dbus.Error)","Args":"proxyType string"},{"Uniquefunname":"func (m *Manager) GetProxyIgnoreHosts() (ignoreHosts string, err *dbus.Error)","Funname":"network.Manager.GetProxyIgnoreHosts","Returntype":"(ignoreHosts string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetProxyMethod() (proxyMode string, err *dbus.Error)","Funname":"network.Manager.GetProxyMethod","Returntype":"(proxyMode string, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) SetAutoProxy(proxyAuto string) (busErr *dbus.Error)","Funname":"network.Manager.SetAutoProxy","Returntype":"(busErr *dbus.Error)","Args":"proxyAuto string"},{"Uniquefunname":"func (m *Manager) SetProxy(proxyType, host, port string) *dbus.Error","Funname":"network.Manager.SetProxy","Returntype":"*dbus.Error","Args":"proxyType, host, port string"},{"Uniquefunname":"func (m *Manager) SetProxyIgnoreHosts(ignoreHosts string) (busErr *dbus.Error)","Funname":"network.Manager.SetProxyIgnoreHosts","Returntype":"(busErr *dbus.Error)","Args":"ignoreHosts string"},{"Uniquefunname":"func (m *Manager) SetProxyMethod(proxyMode string) *dbus.Error","Funname":"network.Manager.SetProxyMethod","Returntype":"*dbus.Error","Args":"proxyMode string"},{"Uniquefunname":"func (m *Manager) setProxy(proxyType, host, port string) (err error)","Funname":"network.Manager.setProxy","Returntype":"(err error)","Args":"proxyType, host, port string"},{"Uniquefunname":"func (m *Manager) setProxyMethod(proxyMode string) (err error)","Funname":"network.Manager.setProxyMethod","Returntype":"(err error)","Args":"proxyMode string"},{"Uniquefunname":"func checkProxyMethod(proxyMode string) (err error)","Funname":"network.checkProxyMethod","Returntype":"(err error)","Args":"proxyMode string"},{"Uniquefunname":"func getProxyChildSettings(proxyType string) (childSettings *gio.Settings, err error)","Funname":"network.getProxyChildSettings","Returntype":"(childSettings *gio.Settings, err error)","Args":"proxyType string"},{"Uniquefunname":"func initProxyGsettings()","Funname":"network.initProxyGsettings","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setProxy(proxyType, host, port string) (err error)","Funname":"setProxy","Returntype":"(err error)","Args":"proxyType, host, port string"},{"Uniquefunname":"func (m *Manager) setProxyMethod(proxyMode string) (err error)","Funname":"setProxyMethod","Returntype":"(err error)","Args":"proxyMode string"}],"Records":[{"Name":"const:network","Fields":["network.gchildProxyFtp","network.gchildProxyHttp","network.gchildProxyHttps","network.gchildProxySocks","network.gkeyProxyAuto","network.gkeyProxyHost","network.gkeyProxyIgnoreHosts","network.gkeyProxyMode","network.gkeyProxyPort","network.gsettingsIdProxy","network.proxyModeAuto","network.proxyModeManual","network.proxyModeNone","network.proxyTypeFtp","network.proxyTypeHttp","network.proxyTypeHttps","network.proxyTypeSocks"]},{"Name":"var:network","Fields":["network.proxyChildSettingsFtp","network.proxyChildSettingsHttp","network.proxyChildSettingsHttps","network.proxyChildSettingsSocks","network.proxySettings"]}]}
{"Filepath":"network/manager_stub.go","Functions":[{"Uniquefunname":"func (m *Manager) networkingEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"network.Manager.networkingEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (m *Manager) updatePropActiveConnections()","Funname":"network.Manager.updatePropActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropConnections()","Funname":"network.Manager.updatePropConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropConnectivity()","Funname":"network.Manager.updatePropConnectivity","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropDevices()","Funname":"network.Manager.updatePropDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropState()","Funname":"network.Manager.updatePropState","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropWirelessAccessPoints()","Funname":"network.Manager.updatePropWirelessAccessPoints","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) vpnEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"network.Manager.vpnEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (m *Manager) networkingEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"networkingEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (m *Manager) updatePropActiveConnections()","Funname":"updatePropActiveConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropConnections()","Funname":"updatePropConnections","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropConnectivity()","Funname":"updatePropConnectivity","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropDevices()","Funname":"updatePropDevices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropState()","Funname":"updatePropState","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) updatePropWirelessAccessPoints()","Funname":"updatePropWirelessAccessPoints","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) vpnEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"vpnEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"}],"Records":null}
{"Filepath":"network/module.go","Functions":[{"Uniquefunname":"func (d *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func (d *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func HandlePrepareForSleep(sleep bool)","Funname":"network.HandlePrepareForSleep","Returntype":"","Args":"sleep bool"},{"Uniquefunname":"func (d *Module) GetDependencies() []string","Funname":"network.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Module) Start() error","Funname":"network.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) Stop() error","Funname":"network.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Module) start() error","Funname":"network.Module.start","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"network.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"network.newModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"newModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Module) start() error","Funname":"start","Returntype":"error","Args":""}],"Records":[{"Name":"var:network","Fields":["network.logger","network.manager"]}]}
{"Filepath":"network/nm_custom_type.go","Functions":[{"Uniquefunname":"func getCustomConnectionType(data connectionData) (connType string)","Funname":"getCustomConnectionType","Returntype":"(connType string)","Args":"data connectionData"},{"Uniquefunname":"func getCustomDeviceType(devType uint32) (customDevType string)","Funname":"getCustomDeviceType","Returntype":"(customDevType string)","Args":"devType uint32"},{"Uniquefunname":"func getCustomConnectionType(data connectionData) (connType string)","Funname":"network.getCustomConnectionType","Returntype":"(connType string)","Args":"data connectionData"},{"Uniquefunname":"func getCustomDeviceType(devType uint32) (customDevType string)","Funname":"network.getCustomDeviceType","Returntype":"(customDevType string)","Args":"devType uint32"}],"Records":[{"Name":"const:network","Fields":["network.connectionMobile","network.connectionMobileCdma","network.connectionMobileGsm","network.connectionPppoe","network.connectionUnknown","network.connectionVpn","network.connectionVpnL2tp","network.connectionVpnOpenconnect","network.connectionVpnOpenvpn","network.connectionVpnPptp","network.connectionVpnStrongswan","network.connectionVpnVpnc","network.connectionWired","network.connectionWireless","network.connectionWirelessAdhoc","network.connectionWirelessHotspot","network.deviceAdsl","network.deviceBond","network.deviceBridge","network.deviceBt","network.deviceEthernet","network.deviceGeneric","network.deviceInfiniband","network.deviceModem","network.deviceOlpcMesh","network.deviceTeam","network.deviceTun","network.deviceUnknown","network.deviceUnused1","network.deviceUnused2","network.deviceVlan","network.deviceWifi","network.deviceWimax","network.nmKeyErrorInvalidValue"]},{"Name":"var:network","Fields":["network.supportedConnectionTypes"]}]}
{"Filepath":"network/nm_key_converter.go","Functions":[{"Uniquefunname":"func interfaceToArrayArrayByte(v interface","Funname":"interfaceToArrayArrayByte","Returntype":"(d [][]byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayArrayUint32(v interface","Funname":"interfaceToArrayArrayUint32","Returntype":"(d [][]uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayByte(v interface","Funname":"interfaceToArrayByte","Returntype":"(d []byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayString(v interface","Funname":"interfaceToArrayString","Returntype":"(d []string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayUint32(v interface","Funname":"interfaceToArrayUint32","Returntype":"(d []uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToBoolean(v interface","Funname":"interfaceToBoolean","Returntype":"(d bool)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToByte(v interface","Funname":"interfaceToByte","Returntype":"(d byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToDictStringString(v interface","Funname":"interfaceToDictStringString","Returntype":"(d map[string]string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToInt32(v interface","Funname":"interfaceToInt32","Returntype":"(d int32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToInt64(v interface","Funname":"interfaceToInt64","Returntype":"(d int64)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToIpv6Addresses(v interface","Funname":"interfaceToIpv6Addresses","Returntype":"(d ipv6Addresses)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToIpv6Routes(v interface","Funname":"interfaceToIpv6Routes","Returntype":"(d ipv6Routes)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToString(v interface","Funname":"interfaceToString","Returntype":"(d string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToUint32(v interface","Funname":"interfaceToUint32","Returntype":"(d uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToUint64(v interface","Funname":"interfaceToUint64","Returntype":"(d uint64)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayArrayByte(v interface","Funname":"network.interfaceToArrayArrayByte","Returntype":"(d [][]byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayArrayUint32(v interface","Funname":"network.interfaceToArrayArrayUint32","Returntype":"(d [][]uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayByte(v interface","Funname":"network.interfaceToArrayByte","Returntype":"(d []byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayString(v interface","Funname":"network.interfaceToArrayString","Returntype":"(d []string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToArrayUint32(v interface","Funname":"network.interfaceToArrayUint32","Returntype":"(d []uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToBoolean(v interface","Funname":"network.interfaceToBoolean","Returntype":"(d bool)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToByte(v interface","Funname":"network.interfaceToByte","Returntype":"(d byte)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToDictStringString(v interface","Funname":"network.interfaceToDictStringString","Returntype":"(d map[string]string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToInt32(v interface","Funname":"network.interfaceToInt32","Returntype":"(d int32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToInt64(v interface","Funname":"network.interfaceToInt64","Returntype":"(d int64)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToIpv6Addresses(v interface","Funname":"network.interfaceToIpv6Addresses","Returntype":"(d ipv6Addresses)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToIpv6Routes(v interface","Funname":"network.interfaceToIpv6Routes","Returntype":"(d ipv6Routes)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToString(v interface","Funname":"network.interfaceToString","Returntype":"(d string)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToUint32(v interface","Funname":"network.interfaceToUint32","Returntype":"(d uint32)","Args":"v interface{}"},{"Uniquefunname":"func interfaceToUint64(v interface","Funname":"network.interfaceToUint64","Returntype":"(d uint64)","Args":"v interface{}"},{"Uniquefunname":"func wrapIpv4Addresses(data [][]uint32) (wrapData ipv4AddressesWrapper)","Funname":"network.wrapIpv4Addresses","Returntype":"(wrapData ipv4AddressesWrapper)","Args":"data [][]uint32"},{"Uniquefunname":"func wrapIpv4Dns(data []uint32) (wrapData []string)","Funname":"network.wrapIpv4Dns","Returntype":"(wrapData []string)","Args":"data []uint32"},{"Uniquefunname":"func wrapIpv6Dns(data [][]byte) (wrapData []string)","Funname":"network.wrapIpv6Dns","Returntype":"(wrapData []string)","Args":"data [][]byte"},{"Uniquefunname":"func wrapIpv4Addresses(data [][]uint32) (wrapData ipv4AddressesWrapper)","Funname":"wrapIpv4Addresses","Returntype":"(wrapData ipv4AddressesWrapper)","Args":"data [][]uint32"},{"Uniquefunname":"func wrapIpv4Dns(data []uint32) (wrapData []string)","Funname":"wrapIpv4Dns","Returntype":"(wrapData []string)","Args":"data []uint32"},{"Uniquefunname":"func wrapIpv6Dns(data [][]byte) (wrapData []string)","Funname":"wrapIpv6Dns","Returntype":"(wrapData []string)","Args":"data [][]byte"}],"Records":null}
{"Filepath":"network/nm_key_converter_test.go","Functions":[{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayByte(c *C.C)","Funname":"TestInterfaceToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayString(c *C.C)","Funname":"TestInterfaceToArrayString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayUint32(c *C.C)","Funname":"TestInterfaceToArrayUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToBoolean(c *C.C)","Funname":"TestInterfaceToBoolean","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToByte(c *C.C)","Funname":"TestInterfaceToByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToInt32(c *C.C)","Funname":"TestInterfaceToInt32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToInt64(c *C.C)","Funname":"TestInterfaceToInt64","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToString(c *C.C)","Funname":"TestInterfaceToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToUint32(c *C.C)","Funname":"TestInterfaceToUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToUint64(c *C.C)","Funname":"TestInterfaceToUint64","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"network.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayByte(c *C.C)","Funname":"network.testWrapper.TestInterfaceToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayString(c *C.C)","Funname":"network.testWrapper.TestInterfaceToArrayString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToArrayUint32(c *C.C)","Funname":"network.testWrapper.TestInterfaceToArrayUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToBoolean(c *C.C)","Funname":"network.testWrapper.TestInterfaceToBoolean","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToByte(c *C.C)","Funname":"network.testWrapper.TestInterfaceToByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToInt32(c *C.C)","Funname":"network.testWrapper.TestInterfaceToInt32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToInt64(c *C.C)","Funname":"network.testWrapper.TestInterfaceToInt64","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToString(c *C.C)","Funname":"network.testWrapper.TestInterfaceToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToUint32(c *C.C)","Funname":"network.testWrapper.TestInterfaceToUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestInterfaceToUint64(c *C.C)","Funname":"network.testWrapper.TestInterfaceToUint64","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"network/nm_key_edit.go","Functions":[{"Uniquefunname":"func addSetting(data connectionData, setting string)","Funname":"addSetting","Returntype":"","Args":"data connectionData, setting string"},{"Uniquefunname":"func doGetSettingKey(data connectionData, section, key string) (value interface","Funname":"doGetSettingKey","Returntype":"(value interface{})","Args":"data connectionData, section, key string"},{"Uniquefunname":"func getSettingKey(data connectionData, section, key string) (value interface","Funname":"getSettingKey","Returntype":"(value interface{})","Args":"data connectionData, section, key string"},{"Uniquefunname":"func isSettingExists(data connectionData, setting string) bool","Funname":"isSettingExists","Returntype":"bool","Args":"data connectionData, setting string"},{"Uniquefunname":"func isSettingKeyExists(data connectionData, section, key string) bool","Funname":"isSettingKeyExists","Returntype":"bool","Args":"data connectionData, section, key string"},{"Uniquefunname":"func addSetting(data connectionData, setting string)","Funname":"network.addSetting","Returntype":"","Args":"data connectionData, setting string"},{"Uniquefunname":"func doGetSettingKey(data connectionData, section, key string) (value interface","Funname":"network.doGetSettingKey","Returntype":"(value interface{})","Args":"data connectionData, section, key string"},{"Uniquefunname":"func getSettingKey(data connectionData, section, key string) (value interface","Funname":"network.getSettingKey","Returntype":"(value interface{})","Args":"data connectionData, section, key string"},{"Uniquefunname":"func isSettingExists(data connectionData, setting string) bool","Funname":"network.isSettingExists","Returntype":"bool","Args":"data connectionData, setting string"},{"Uniquefunname":"func isSettingKeyExists(data connectionData, section, key string) bool","Funname":"network.isSettingKeyExists","Returntype":"bool","Args":"data connectionData, section, key string"},{"Uniquefunname":"func removeSetting(data connectionData, setting string)","Funname":"network.removeSetting","Returntype":"","Args":"data connectionData, setting string"},{"Uniquefunname":"func removeSettingKey(data connectionData, section string, keys ...string)","Funname":"network.removeSettingKey","Returntype":"","Args":"data connectionData, section string, keys ...string"},{"Uniquefunname":"func removeSettingKeyBut(data connectionData, section string, keys ...string)","Funname":"network.removeSettingKeyBut","Returntype":"","Args":"data connectionData, section string, keys ...string"},{"Uniquefunname":"func setSettingKey(data connectionData, section, key string, value interface","Funname":"network.setSettingKey","Returntype":"","Args":"data connectionData, section, key string, value interface{}"},{"Uniquefunname":"func removeSetting(data connectionData, setting string)","Funname":"removeSetting","Returntype":"","Args":"data connectionData, setting string"},{"Uniquefunname":"func removeSettingKey(data connectionData, section string, keys ...string)","Funname":"removeSettingKey","Returntype":"","Args":"data connectionData, section string, keys ...string"},{"Uniquefunname":"func removeSettingKeyBut(data connectionData, section string, keys ...string)","Funname":"removeSettingKeyBut","Returntype":"","Args":"data connectionData, section string, keys ...string"},{"Uniquefunname":"func setSettingKey(data connectionData, section, key string, value interface","Funname":"setSettingKey","Returntype":"","Args":"data connectionData, section, key string, value interface{}"}],"Records":null}
{"Filepath":"network/nm_key_type.go","Functions":null,"Records":[{"Name":"struct:network.ipv4AddressWrapper","Fields":["network.ipv4AddressWrapper.Address string","network.ipv4AddressWrapper.Gateway string","network.ipv4AddressWrapper.Mask string"]},{"Name":"struct:network.ipv6Address","Fields":["network.ipv6Address.Address []byte","network.ipv6Address.Gateway []byte","network.ipv6Address.Prefix uint32"]},{"Name":"struct:network.ipv6AddressWrapper","Fields":["network.ipv6AddressWrapper.Address string","network.ipv6AddressWrapper.Gateway string","network.ipv6AddressWrapper.Prefix uint32"]},{"Name":"struct:network.ipv6Route","Fields":["network.ipv6Route.Address []byte","network.ipv6Route.Metric uint32","network.ipv6Route.NextHop []byte","network.ipv6Route.Prefix uint32"]}]}
{"Filepath":"network/nm_setting_802_1x.go","Functions":[{"Uniquefunname":"func getSettingVk8021xEap(data connectionData) (eap string)","Funname":"getSettingVk8021xEap","Returntype":"(eap string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVk8021xEnable(data connectionData) (value bool)","Funname":"getSettingVk8021xEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func logicSetSetting8021xEap(data connectionData, value []string) (err error)","Funname":"logicSetSetting8021xEap","Returntype":"(err error)","Args":"data connectionData, value []string"},{"Uniquefunname":"func getSettingVk8021xEap(data connectionData) (eap string)","Funname":"network.getSettingVk8021xEap","Returntype":"(eap string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVk8021xEnable(data connectionData) (value bool)","Funname":"network.getSettingVk8021xEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func logicSetSetting8021xEap(data connectionData, value []string) (err error)","Funname":"network.logicSetSetting8021xEap","Returntype":"(err error)","Args":"data connectionData, value []string"}],"Records":null}
{"Filepath":"network/nm_setting_beans_gen.go","Functions":[{"Uniquefunname":"func generalGetSettingDefaultValue(setting, key string) (defvalue interface","Funname":"generalGetSettingDefaultValue","Returntype":"(defvalue interface{})","Args":"setting, key string"},{"Uniquefunname":"func getSetting8021xAltsubjectMatches(data connectionData) (value []string)","Funname":"getSetting8021xAltsubjectMatches","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xAnonymousIdentity(data connectionData) (value string)","Funname":"getSetting8021xAnonymousIdentity","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xAuthTimeout(data connectionData) (value int32)","Funname":"getSetting8021xAuthTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCert(data connectionData) (value []byte)","Funname":"getSetting8021xCaCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCertPassword(data connectionData) (value string)","Funname":"getSetting8021xCaCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCertPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xCaCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaPath(data connectionData) (value string)","Funname":"getSetting8021xCaPath","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCert(data connectionData) (value []byte)","Funname":"getSetting8021xClientCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCertPassword(data connectionData) (value string)","Funname":"getSetting8021xClientCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCertPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xClientCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xDomainSuffixMatch(data connectionData) (value string)","Funname":"getSetting8021xDomainSuffixMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xEap(data connectionData) (value []string)","Funname":"getSetting8021xEap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xIdentity(data connectionData) (value string)","Funname":"getSetting8021xIdentity","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPacFile(data connectionData) (value string)","Funname":"getSetting8021xPacFile","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPassword(data connectionData) (value string)","Funname":"getSetting8021xPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordRaw(data connectionData) (value []byte)","Funname":"getSetting8021xPasswordRaw","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordRawFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPasswordRawFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1AuthFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPhase1AuthFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1FastProvisioning(data connectionData) (value string)","Funname":"getSetting8021xPhase1FastProvisioning","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1Peaplabel(data connectionData) (value string)","Funname":"getSetting8021xPhase1Peaplabel","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1Peapver(data connectionData) (value string)","Funname":"getSetting8021xPhase1Peapver","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2AltsubjectMatches(data connectionData) (value []string)","Funname":"getSetting8021xPhase2AltsubjectMatches","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2Auth(data connectionData) (value string)","Funname":"getSetting8021xPhase2Auth","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2Autheap(data connectionData) (value string)","Funname":"getSetting8021xPhase2Autheap","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCert(data connectionData) (value []byte)","Funname":"getSetting8021xPhase2CaCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCertPassword(data connectionData) (value string)","Funname":"getSetting8021xPhase2CaCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCertPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPhase2CaCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaPath(data connectionData) (value string)","Funname":"getSetting8021xPhase2CaPath","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCert(data connectionData) (value []byte)","Funname":"getSetting8021xPhase2ClientCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCertPassword(data connectionData) (value string)","Funname":"getSetting8021xPhase2ClientCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCertPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPhase2ClientCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2DomainSuffixMatch(data connectionData) (value string)","Funname":"getSetting8021xPhase2DomainSuffixMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKey(data connectionData) (value []byte)","Funname":"getSetting8021xPhase2PrivateKey","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKeyPassword(data connectionData) (value string)","Funname":"getSetting8021xPhase2PrivateKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2SubjectMatch(data connectionData) (value string)","Funname":"getSetting8021xPhase2SubjectMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPin(data connectionData) (value string)","Funname":"getSetting8021xPin","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPinFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPinFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKey(data connectionData) (value []byte)","Funname":"getSetting8021xPrivateKey","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKeyPassword(data connectionData) (value string)","Funname":"getSetting8021xPrivateKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSetting8021xPrivateKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xSubjectMatch(data connectionData) (value string)","Funname":"getSetting8021xSubjectMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xSystemCaCerts(data connectionData) (value bool)","Funname":"getSetting8021xSystemCaCerts","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslEncapsulation(data connectionData) (value string)","Funname":"getSettingAdslEncapsulation","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslPassword(data connectionData) (value string)","Funname":"getSettingAdslPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingAdslPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslProtocol(data connectionData) (value string)","Funname":"getSettingAdslProtocol","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslUsername(data connectionData) (value string)","Funname":"getSettingAdslUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslVci(data connectionData) (value uint32)","Funname":"getSettingAdslVci","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslVpi(data connectionData) (value uint32)","Funname":"getSettingAdslVpi","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBluetoothBdaddr(data connectionData) (value []byte)","Funname":"getSettingBluetoothBdaddr","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBluetoothType(data connectionData) (value string)","Funname":"getSettingBluetoothType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBondOptions(data connectionData) (value map[string]string)","Funname":"getSettingBondOptions","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeAgeingTime(data connectionData) (value uint32)","Funname":"getSettingBridgeAgeingTime","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeForwardDelay(data connectionData) (value uint32)","Funname":"getSettingBridgeForwardDelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeGroupForwardMask(data connectionData) (value uint32)","Funname":"getSettingBridgeGroupForwardMask","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeHelloTime(data connectionData) (value uint32)","Funname":"getSettingBridgeHelloTime","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMacAddress(data connectionData) (value []byte)","Funname":"getSettingBridgeMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMaxAge(data connectionData) (value uint32)","Funname":"getSettingBridgeMaxAge","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMulticastSnooping(data connectionData) (value bool)","Funname":"getSettingBridgeMulticastSnooping","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortHairpinMode(data connectionData) (value bool)","Funname":"getSettingBridgePortHairpinMode","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortPathCost(data connectionData) (value uint32)","Funname":"getSettingBridgePortPathCost","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortPriority(data connectionData) (value uint32)","Funname":"getSettingBridgePortPriority","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePriority(data connectionData) (value uint32)","Funname":"getSettingBridgePriority","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeStp(data connectionData) (value bool)","Funname":"getSettingBridgeStp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaMtu(data connectionData) (value uint32)","Funname":"getSettingCdmaMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaNumber(data connectionData) (value string)","Funname":"getSettingCdmaNumber","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaPassword(data connectionData) (value string)","Funname":"getSettingCdmaPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingCdmaPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaUsername(data connectionData) (value string)","Funname":"getSettingCdmaUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAuthRetries(data connectionData) (value int32)","Funname":"getSettingConnectionAuthRetries","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnect(data connectionData) (value bool)","Funname":"getSettingConnectionAutoconnect","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectPriority(data connectionData) (value int32)","Funname":"getSettingConnectionAutoconnectPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectRetries(data connectionData) (value int32)","Funname":"getSettingConnectionAutoconnectRetries","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectSlaves(data connectionData) (value int32)","Funname":"getSettingConnectionAutoconnectSlaves","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionGatewayPingTimeout(data connectionData) (value uint32)","Funname":"getSettingConnectionGatewayPingTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionId(data connectionData) (value string)","Funname":"getSettingConnectionId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionInterfaceName(data connectionData) (value string)","Funname":"getSettingConnectionInterfaceName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionLldp(data connectionData) (value int32)","Funname":"getSettingConnectionLldp","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionMaster(data connectionData) (value string)","Funname":"getSettingConnectionMaster","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionMetered(data connectionData) (value int32)","Funname":"getSettingConnectionMetered","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionPermissions(data connectionData) (value []string)","Funname":"getSettingConnectionPermissions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionReadOnly(data connectionData) (value bool)","Funname":"getSettingConnectionReadOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionSecondaries(data connectionData) (value []string)","Funname":"getSettingConnectionSecondaries","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionSlaveType(data connectionData) (value string)","Funname":"getSettingConnectionSlaveType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionStableId(data connectionData) (value string)","Funname":"getSettingConnectionStableId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionTimestamp(data connectionData) (value uint64)","Funname":"getSettingConnectionTimestamp","Returntype":"(value uint64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionType(data connectionData) (value string)","Funname":"getSettingConnectionType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionUuid(data connectionData) (value string)","Funname":"getSettingConnectionUuid","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionZone(data connectionData) (value string)","Funname":"getSettingConnectionZone","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoeFlags(data connectionData) (value uint32)","Funname":"getSettingDcbAppFcoeFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoeMode(data connectionData) (value string)","Funname":"getSettingDcbAppFcoeMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoePriority(data connectionData) (value int32)","Funname":"getSettingDcbAppFcoePriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFipFlags(data connectionData) (value uint32)","Funname":"getSettingDcbAppFipFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFipPriority(data connectionData) (value int32)","Funname":"getSettingDcbAppFipPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppIscsiFlags(data connectionData) (value uint32)","Funname":"getSettingDcbAppIscsiFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppIscsiPriority(data connectionData) (value int32)","Funname":"getSettingDcbAppIscsiPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityBandwidth(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityFlowControl(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityFlowControl","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityFlowControlFlags(data connectionData) (value uint32)","Funname":"getSettingDcbPriorityFlowControlFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupBandwidth(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityGroupBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupFlags(data connectionData) (value uint32)","Funname":"getSettingDcbPriorityGroupFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupId(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityGroupId","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityStrictBandwidth(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityStrictBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityTrafficClass(data connectionData) (value []uint32)","Funname":"getSettingDcbPriorityTrafficClass","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmApn(data connectionData) (value string)","Funname":"getSettingGsmApn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmDeviceId(data connectionData) (value string)","Funname":"getSettingGsmDeviceId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmHomeOnly(data connectionData) (value bool)","Funname":"getSettingGsmHomeOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmMtu(data connectionData) (value uint32)","Funname":"getSettingGsmMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmNetworkId(data connectionData) (value string)","Funname":"getSettingGsmNetworkId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmNumber(data connectionData) (value string)","Funname":"getSettingGsmNumber","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPassword(data connectionData) (value string)","Funname":"getSettingGsmPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingGsmPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPin(data connectionData) (value string)","Funname":"getSettingGsmPin","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPinFlags(data connectionData) (value uint32)","Funname":"getSettingGsmPinFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmSimId(data connectionData) (value string)","Funname":"getSettingGsmSimId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmSimOperatorId(data connectionData) (value string)","Funname":"getSettingGsmSimOperatorId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmUsername(data connectionData) (value string)","Funname":"getSettingGsmUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigAddresses(data connectionData) (value [][]uint32)","Funname":"getSettingIP4ConfigAddresses","Returntype":"(value [][]uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDadTimeout(data connectionData) (value int32)","Funname":"getSettingIP4ConfigDadTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpClientId(data connectionData) (value string)","Funname":"getSettingIP4ConfigDhcpClientId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpFqdn(data connectionData) (value string)","Funname":"getSettingIP4ConfigDhcpFqdn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpHostname(data connectionData) (value string)","Funname":"getSettingIP4ConfigDhcpHostname","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpSendHostname(data connectionData) (value bool)","Funname":"getSettingIP4ConfigDhcpSendHostname","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpTimeout(data connectionData) (value int32)","Funname":"getSettingIP4ConfigDhcpTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDns(data connectionData) (value []uint32)","Funname":"getSettingIP4ConfigDns","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsOptions(data connectionData) (value []string)","Funname":"getSettingIP4ConfigDnsOptions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsPriority(data connectionData) (value int32)","Funname":"getSettingIP4ConfigDnsPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsSearch(data connectionData) (value []string)","Funname":"getSettingIP4ConfigDnsSearch","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigGateway(data connectionData) (value string)","Funname":"getSettingIP4ConfigGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigIgnoreAutoDns(data connectionData) (value bool)","Funname":"getSettingIP4ConfigIgnoreAutoDns","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigIgnoreAutoRoutes(data connectionData) (value bool)","Funname":"getSettingIP4ConfigIgnoreAutoRoutes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigMayFail(data connectionData) (value bool)","Funname":"getSettingIP4ConfigMayFail","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigMethod(data connectionData) (value string)","Funname":"getSettingIP4ConfigMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigNeverDefault(data connectionData) (value bool)","Funname":"getSettingIP4ConfigNeverDefault","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRouteMetric(data connectionData) (value int64)","Funname":"getSettingIP4ConfigRouteMetric","Returntype":"(value int64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRouteTable(data connectionData) (value uint32)","Funname":"getSettingIP4ConfigRouteTable","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRoutes(data connectionData) (value [][]uint32)","Funname":"getSettingIP4ConfigRoutes","Returntype":"(value [][]uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigAddrGenMode(data connectionData) (value int32)","Funname":"getSettingIP6ConfigAddrGenMode","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigAddresses(data connectionData) (value ipv6Addresses)","Funname":"getSettingIP6ConfigAddresses","Returntype":"(value ipv6Addresses)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDadTimeout(data connectionData) (value int32)","Funname":"getSettingIP6ConfigDadTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpHostname(data connectionData) (value string)","Funname":"getSettingIP6ConfigDhcpHostname","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpSendHostname(data connectionData) (value bool)","Funname":"getSettingIP6ConfigDhcpSendHostname","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpTimeout(data connectionData) (value int32)","Funname":"getSettingIP6ConfigDhcpTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDns(data connectionData) (value [][]byte)","Funname":"getSettingIP6ConfigDns","Returntype":"(value [][]byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsOptions(data connectionData) (value []string)","Funname":"getSettingIP6ConfigDnsOptions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsPriority(data connectionData) (value int32)","Funname":"getSettingIP6ConfigDnsPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsSearch(data connectionData) (value []string)","Funname":"getSettingIP6ConfigDnsSearch","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigGateway(data connectionData) (value string)","Funname":"getSettingIP6ConfigGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIgnoreAutoDns(data connectionData) (value bool)","Funname":"getSettingIP6ConfigIgnoreAutoDns","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIgnoreAutoRoutes(data connectionData) (value bool)","Funname":"getSettingIP6ConfigIgnoreAutoRoutes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIp6Privacy(data connectionData) (value int32)","Funname":"getSettingIP6ConfigIp6Privacy","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigMayFail(data connectionData) (value bool)","Funname":"getSettingIP6ConfigMayFail","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigMethod(data connectionData) (value string)","Funname":"getSettingIP6ConfigMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigNeverDefault(data connectionData) (value bool)","Funname":"getSettingIP6ConfigNeverDefault","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRouteMetric(data connectionData) (value int64)","Funname":"getSettingIP6ConfigRouteMetric","Returntype":"(value int64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRouteTable(data connectionData) (value uint32)","Funname":"getSettingIP6ConfigRouteTable","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRoutes(data connectionData) (value ipv6Routes)","Funname":"getSettingIP6ConfigRoutes","Returntype":"(value ipv6Routes)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigToken(data connectionData) (value string)","Funname":"getSettingIP6ConfigToken","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelEncapsulationLimit(data connectionData) (value uint32)","Funname":"getSettingIPTunnelEncapsulationLimit","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelFlowLabel(data connectionData) (value uint32)","Funname":"getSettingIPTunnelFlowLabel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelInputKey(data connectionData) (value string)","Funname":"getSettingIPTunnelInputKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelLocal(data connectionData) (value string)","Funname":"getSettingIPTunnelLocal","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelMode(data connectionData) (value uint32)","Funname":"getSettingIPTunnelMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelMtu(data connectionData) (value uint32)","Funname":"getSettingIPTunnelMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelOutputKey(data connectionData) (value string)","Funname":"getSettingIPTunnelOutputKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelParent(data connectionData) (value string)","Funname":"getSettingIPTunnelParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelPathMtuDiscovery(data connectionData) (value bool)","Funname":"getSettingIPTunnelPathMtuDiscovery","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelRemote(data connectionData) (value string)","Funname":"getSettingIPTunnelRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelTos(data connectionData) (value uint32)","Funname":"getSettingIPTunnelTos","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelTtl(data connectionData) (value uint32)","Funname":"getSettingIPTunnelTtl","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandMacAddress(data connectionData) (value []byte)","Funname":"getSettingInfinibandMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandMtu(data connectionData) (value uint32)","Funname":"getSettingInfinibandMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandPKey(data connectionData) (value int32)","Funname":"getSettingInfinibandPKey","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandParent(data connectionData) (value string)","Funname":"getSettingInfinibandParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandTransportMode(data connectionData) (value string)","Funname":"getSettingInfinibandTransportMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecEncrypt(data connectionData) (value bool)","Funname":"getSettingMacsecEncrypt","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCak(data connectionData) (value string)","Funname":"getSettingMacsecMkaCak","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCakFlags(data connectionData) (value uint32)","Funname":"getSettingMacsecMkaCakFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCkn(data connectionData) (value string)","Funname":"getSettingMacsecMkaCkn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMode(data connectionData) (value int32)","Funname":"getSettingMacsecMode","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecParent(data connectionData) (value string)","Funname":"getSettingMacsecParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecPort(data connectionData) (value int32)","Funname":"getSettingMacsecPort","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecValidation(data connectionData) (value int32)","Funname":"getSettingMacsecValidation","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanMode(data connectionData) (value uint32)","Funname":"getSettingMacvlanMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanParent(data connectionData) (value string)","Funname":"getSettingMacvlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanPromiscuous(data connectionData) (value bool)","Funname":"getSettingMacvlanPromiscuous","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanTap(data connectionData) (value bool)","Funname":"getSettingMacvlanTap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshChannel(data connectionData) (value uint32)","Funname":"getSettingOlpcMeshChannel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshDhcpAnycastAddress(data connectionData) (value []byte)","Funname":"getSettingOlpcMeshDhcpAnycastAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshSsid(data connectionData) (value []byte)","Funname":"getSettingOlpcMeshSsid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeFailMode(data connectionData) (value string)","Funname":"getSettingOvsBridgeFailMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeMcastSnoopingEnable(data connectionData) (value bool)","Funname":"getSettingOvsBridgeMcastSnoopingEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeRstpEnable(data connectionData) (value bool)","Funname":"getSettingOvsBridgeRstpEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeStpEnable(data connectionData) (value bool)","Funname":"getSettingOvsBridgeStpEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsInterfaceType(data connectionData) (value string)","Funname":"getSettingOvsInterfaceType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPatchPeer(data connectionData) (value string)","Funname":"getSettingOvsPatchPeer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondDowndelay(data connectionData) (value uint32)","Funname":"getSettingOvsPortBondDowndelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondMode(data connectionData) (value string)","Funname":"getSettingOvsPortBondMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondUpdelay(data connectionData) (value uint32)","Funname":"getSettingOvsPortBondUpdelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortLacp(data connectionData) (value string)","Funname":"getSettingOvsPortLacp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortTag(data connectionData) (value uint32)","Funname":"getSettingOvsPortTag","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortVlanMode(data connectionData) (value string)","Funname":"getSettingOvsPortVlanMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppBaud(data connectionData) (value uint32)","Funname":"getSettingPppBaud","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppCrtscts(data connectionData) (value bool)","Funname":"getSettingPppCrtscts","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppLcpEchoFailure(data connectionData) (value uint32)","Funname":"getSettingPppLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppLcpEchoInterval(data connectionData) (value uint32)","Funname":"getSettingPppLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMppeStateful(data connectionData) (value bool)","Funname":"getSettingPppMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMru(data connectionData) (value uint32)","Funname":"getSettingPppMru","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMtu(data connectionData) (value uint32)","Funname":"getSettingPppMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNoVjComp(data connectionData) (value bool)","Funname":"getSettingPppNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNoauth(data connectionData) (value bool)","Funname":"getSettingPppNoauth","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNobsdcomp(data connectionData) (value bool)","Funname":"getSettingPppNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNodeflate(data connectionData) (value bool)","Funname":"getSettingPppNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseChap(data connectionData) (value bool)","Funname":"getSettingPppRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseEap(data connectionData) (value bool)","Funname":"getSettingPppRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseMschap(data connectionData) (value bool)","Funname":"getSettingPppRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseMschapv2(data connectionData) (value bool)","Funname":"getSettingPppRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefusePap(data connectionData) (value bool)","Funname":"getSettingPppRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRequireMppe(data connectionData) (value bool)","Funname":"getSettingPppRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRequireMppe128(data connectionData) (value bool)","Funname":"getSettingPppRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeParent(data connectionData) (value string)","Funname":"getSettingPppoeParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoePassword(data connectionData) (value string)","Funname":"getSettingPppoePassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoePasswordFlags(data connectionData) (value uint32)","Funname":"getSettingPppoePasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeService(data connectionData) (value string)","Funname":"getSettingPppoeService","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeUsername(data connectionData) (value string)","Funname":"getSettingPppoeUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyBrowserOnly(data connectionData) (value bool)","Funname":"getSettingProxyBrowserOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyMethod(data connectionData) (value int32)","Funname":"getSettingProxyMethod","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyPacScript(data connectionData) (value string)","Funname":"getSettingProxyPacScript","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyPacUrl(data connectionData) (value string)","Funname":"getSettingProxyPacUrl","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialBaud(data connectionData) (value uint32)","Funname":"getSettingSerialBaud","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialBits(data connectionData) (value uint32)","Funname":"getSettingSerialBits","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialParity(data connectionData) (value byte)","Funname":"getSettingSerialParity","Returntype":"(value byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialSendDelay(data connectionData) (value uint64)","Funname":"getSettingSerialSendDelay","Returntype":"(value uint64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialStopbits(data connectionData) (value uint32)","Funname":"getSettingSerialStopbits","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamConfig(data connectionData) (value string)","Funname":"getSettingTeamConfig","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamMcastRejoinCount(data connectionData) (value int32)","Funname":"getSettingTeamMcastRejoinCount","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamMcastRejoinInterval(data connectionData) (value int32)","Funname":"getSettingTeamMcastRejoinInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamNotifyPeersCount(data connectionData) (value int32)","Funname":"getSettingTeamNotifyPeersCount","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamNotifyPeersInterval(data connectionData) (value int32)","Funname":"getSettingTeamNotifyPeersInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortConfig(data connectionData) (value string)","Funname":"getSettingTeamPortConfig","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortLacpKey(data connectionData) (value int32)","Funname":"getSettingTeamPortLacpKey","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortLacpPrio(data connectionData) (value int32)","Funname":"getSettingTeamPortLacpPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortPrio(data connectionData) (value int32)","Funname":"getSettingTeamPortPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortQueueId(data connectionData) (value int32)","Funname":"getSettingTeamPortQueueId","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortSticky(data connectionData) (value bool)","Funname":"getSettingTeamPortSticky","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunner(data connectionData) (value string)","Funname":"getSettingTeamRunner","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerActive(data connectionData) (value bool)","Funname":"getSettingTeamRunnerActive","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerAggSelectPolicy(data connectionData) (value string)","Funname":"getSettingTeamRunnerAggSelectPolicy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerFastRate(data connectionData) (value bool)","Funname":"getSettingTeamRunnerFastRate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerHwaddrPolicy(data connectionData) (value string)","Funname":"getSettingTeamRunnerHwaddrPolicy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerMinPorts(data connectionData) (value int32)","Funname":"getSettingTeamRunnerMinPorts","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerSysPrio(data connectionData) (value int32)","Funname":"getSettingTeamRunnerSysPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxBalancer(data connectionData) (value string)","Funname":"getSettingTeamRunnerTxBalancer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxBalancerInterval(data connectionData) (value int32)","Funname":"getSettingTeamRunnerTxBalancerInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxHash(data connectionData) (value []string)","Funname":"getSettingTeamRunnerTxHash","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunGroup(data connectionData) (value string)","Funname":"getSettingTunGroup","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunMode(data connectionData) (value uint32)","Funname":"getSettingTunMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunMultiQueue(data connectionData) (value bool)","Funname":"getSettingTunMultiQueue","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunOwner(data connectionData) (value string)","Funname":"getSettingTunOwner","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunPi(data connectionData) (value bool)","Funname":"getSettingTunPi","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunVnetHdr(data connectionData) (value bool)","Funname":"getSettingTunVnetHdr","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingUserData(data connectionData) (value map[string]string)","Funname":"getSettingUserData","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanEgressPriorityMap(data connectionData) (value []string)","Funname":"getSettingVlanEgressPriorityMap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanFlags(data connectionData) (value uint32)","Funname":"getSettingVlanFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanId(data connectionData) (value uint32)","Funname":"getSettingVlanId","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanIngressPriorityMap(data connectionData) (value []string)","Funname":"getSettingVlanIngressPriorityMap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanParent(data connectionData) (value string)","Funname":"getSettingVlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnData(data connectionData) (value map[string]string)","Funname":"getSettingVpnData","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyDomain(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyGateway(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecEnable(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyIpsecEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecEsp(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyIpsecEsp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecGatewayId(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyIpsecGatewayId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecGroupName(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyIpsecGroupName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecIke(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyIpsecIke","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecPsk(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyIpsecPsk","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyLcpEchoFailure(data connectionData) (value uint32)","Funname":"getSettingVpnL2tpKeyLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyLcpEchoInterval(data connectionData) (value uint32)","Funname":"getSettingVpnL2tpKeyLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyMppeStateful(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoAccomp(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyNoAccomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoPcomp(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyNoPcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoVjComp(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNobsdcomp(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNodeflate(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyPassword(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnL2tpKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseChap(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseEap(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseMschap(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseMschapv2(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefusePap(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe128(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe40(data connectionData) (value bool)","Funname":"getSettingVpnL2tpKeyRequireMppe40","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyUser(data connectionData) (value string)","Funname":"getSettingVpnL2tpKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyAuthtype(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyAuthtype","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCacert(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyCacert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCookie(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyCookie","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCsdEnable(data connectionData) (value bool)","Funname":"getSettingVpnOpenconnectKeyCsdEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCsdWrapper(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyCsdWrapper","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyGateway(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyGwcert(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyGwcert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyMtu(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyMtu","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData) (value bool)","Funname":"getSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyPrivkey(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyPrivkey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyProxy(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyProxy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyStokenSource(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyStokenSource","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyStokenString(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyStokenString","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyUsercert(data connectionData) (value string)","Funname":"getSettingVpnOpenconnectKeyUsercert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyAuth(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyAuth","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCa(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyCa","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCert(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyCert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCertpass(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyCertpass","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCertpassFlags(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyCertpassFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCipher(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyCipher","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCompLzo(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyCompLzo","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyConnectionType(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyConnectionType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyFragmentSize(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyFragmentSize","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyKey(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyLocalIp(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyLocalIp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyMssfix(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyMssfix","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPassword(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPort(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProtoTcp(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyProtoTcp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyPort(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyProxyPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyRetry(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyProxyRetry","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyServer(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyProxyServer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyType(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyProxyType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemote(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteCertTls(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteIp(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyRemoteIp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteRandom(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyRemoteRandom","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRenegSeconds(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyRenegSeconds","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyStaticKey(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyStaticKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTa(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyTa","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTaDir(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyTaDir","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTapDev(data connectionData) (value bool)","Funname":"getSettingVpnOpenvpnKeyTapDev","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTlsRemote(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyTlsRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTunnelMtu(data connectionData) (value uint32)","Funname":"getSettingVpnOpenvpnKeyTunnelMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyUsername(data connectionData) (value string)","Funname":"getSettingVpnOpenvpnKeyUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPersistent(data connectionData) (value bool)","Funname":"getSettingVpnPersistent","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyDomain(data connectionData) (value string)","Funname":"getSettingVpnPptpKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyGateway(data connectionData) (value string)","Funname":"getSettingVpnPptpKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyLcpEchoFailure(data connectionData) (value uint32)","Funname":"getSettingVpnPptpKeyLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyLcpEchoInterval(data connectionData) (value uint32)","Funname":"getSettingVpnPptpKeyLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyMppeStateful(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNoVjComp(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNobsdcomp(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNodeflate(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyPassword(data connectionData) (value string)","Funname":"getSettingVpnPptpKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnPptpKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseChap(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseEap(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseMschap(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseMschapv2(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefusePap(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe128(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe40(data connectionData) (value bool)","Funname":"getSettingVpnPptpKeyRequireMppe40","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyUser(data connectionData) (value string)","Funname":"getSettingVpnPptpKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnSecrets(data connectionData) (value map[string]string)","Funname":"getSettingVpnSecrets","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnServiceType(data connectionData) (value string)","Funname":"getSettingVpnServiceType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyAddress(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyAddress","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyCertificate(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyCertificate","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyEncap(data connectionData) (value bool)","Funname":"getSettingVpnStrongswanKeyEncap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyIpcomp(data connectionData) (value bool)","Funname":"getSettingVpnStrongswanKeyIpcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyMethod(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyPassword(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnStrongswanKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUser(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUsercert(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyUsercert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUserkey(data connectionData) (value string)","Funname":"getSettingVpnStrongswanKeyUserkey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyVirtual(data connectionData) (value bool)","Funname":"getSettingVpnStrongswanKeyVirtual","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnTimeout(data connectionData) (value uint32)","Funname":"getSettingVpnTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnUserName(data connectionData) (value string)","Funname":"getSettingVpnUserName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyAppVersion(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyAppVersion","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyAuthmode(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyAuthmode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyCaFile(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyCaFile","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData) (value uint32)","Funname":"getSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDhgroup(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyDhgroup","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDomain(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDpdIdleTimeout(data connectionData) (value uint32)","Funname":"getSettingVpnVpncKeyDpdIdleTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyGateway(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyId(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyLocalPort(data connectionData) (value uint32)","Funname":"getSettingVpnVpncKeyLocalPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyNatTraversalMode(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyNatTraversalMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyNoEncryption(data connectionData) (value bool)","Funname":"getSettingVpnVpncKeyNoEncryption","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyPerfectForward(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyPerfectForward","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecret(data connectionData) (value string)","Funname":"getSettingVpnVpncKeySecret","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecretFlags(data connectionData) (value uint32)","Funname":"getSettingVpnVpncKeySecretFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecretType(data connectionData) (value string)","Funname":"getSettingVpnVpncKeySecretType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySingleDes(data connectionData) (value bool)","Funname":"getSettingVpnVpncKeySingleDes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyVendor(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyVendor","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPassword(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyXauthPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingVpnVpncKeyXauthPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPasswordType(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyXauthPasswordType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthUser(data connectionData) (value string)","Funname":"getSettingVpnVpncKeyXauthUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanAgeing(data connectionData) (value uint32)","Funname":"getSettingVxlanAgeing","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanDestinationPort(data connectionData) (value uint32)","Funname":"getSettingVxlanDestinationPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanId(data connectionData) (value uint32)","Funname":"getSettingVxlanId","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanL2Miss(data connectionData) (value bool)","Funname":"getSettingVxlanL2Miss","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanL3Miss(data connectionData) (value bool)","Funname":"getSettingVxlanL3Miss","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLearning(data connectionData) (value bool)","Funname":"getSettingVxlanLearning","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLimit(data connectionData) (value uint32)","Funname":"getSettingVxlanLimit","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLocal(data connectionData) (value string)","Funname":"getSettingVxlanLocal","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanParent(data connectionData) (value string)","Funname":"getSettingVxlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanProxy(data connectionData) (value bool)","Funname":"getSettingVxlanProxy","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanRemote(data connectionData) (value string)","Funname":"getSettingVxlanRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanRsc(data connectionData) (value bool)","Funname":"getSettingVxlanRsc","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanSourcePortMax(data connectionData) (value uint32)","Funname":"getSettingVxlanSourcePortMax","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanSourcePortMin(data connectionData) (value uint32)","Funname":"getSettingVxlanSourcePortMin","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanTos(data connectionData) (value uint32)","Funname":"getSettingVxlanTos","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanTtl(data connectionData) (value uint32)","Funname":"getSettingVxlanTtl","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWimaxMacAddress(data connectionData) (value []byte)","Funname":"getSettingWimaxMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWimaxNetworkName(data connectionData) (value string)","Funname":"getSettingWimaxNetworkName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredAutoNegotiate(data connectionData) (value bool)","Funname":"getSettingWiredAutoNegotiate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredClonedMacAddress(data connectionData) (value []byte)","Funname":"getSettingWiredClonedMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredDuplex(data connectionData) (value string)","Funname":"getSettingWiredDuplex","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredGenerateMacAddressMask(data connectionData) (value string)","Funname":"getSettingWiredGenerateMacAddressMask","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMacAddress(data connectionData) (value []byte)","Funname":"getSettingWiredMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMacAddressBlacklist(data connectionData) (value []string)","Funname":"getSettingWiredMacAddressBlacklist","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMtu(data connectionData) (value uint32)","Funname":"getSettingWiredMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredPort(data connectionData) (value string)","Funname":"getSettingWiredPort","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Nettype(data connectionData) (value string)","Funname":"getSettingWiredS390Nettype","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Options(data connectionData) (value map[string]string)","Funname":"getSettingWiredS390Options","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Subchannels(data connectionData) (value []string)","Funname":"getSettingWiredS390Subchannels","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredSpeed(data connectionData) (value uint32)","Funname":"getSettingWiredSpeed","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredWakeOnLan(data connectionData) (value uint32)","Funname":"getSettingWiredWakeOnLan","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredWakeOnLanPassword(data connectionData) (value string)","Funname":"getSettingWiredWakeOnLanPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessBand(data connectionData) (value string)","Funname":"getSettingWirelessBand","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessBssid(data connectionData) (value []byte)","Funname":"getSettingWirelessBssid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessChannel(data connectionData) (value uint32)","Funname":"getSettingWirelessChannel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessClonedMacAddress(data connectionData) (value []byte)","Funname":"getSettingWirelessClonedMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessGenerateMacAddressMask(data connectionData) (value string)","Funname":"getSettingWirelessGenerateMacAddressMask","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessHidden(data connectionData) (value bool)","Funname":"getSettingWirelessHidden","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddress(data connectionData) (value []byte)","Funname":"getSettingWirelessMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddressBlacklist(data connectionData) (value []string)","Funname":"getSettingWirelessMacAddressBlacklist","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddressRandomization(data connectionData) (value uint32)","Funname":"getSettingWirelessMacAddressRandomization","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMode(data connectionData) (value string)","Funname":"getSettingWirelessMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMtu(data connectionData) (value uint32)","Funname":"getSettingWirelessMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessPowersave(data connectionData) (value uint32)","Funname":"getSettingWirelessPowersave","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessRate(data connectionData) (value uint32)","Funname":"getSettingWirelessRate","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityAuthAlg(data connectionData) (value string)","Funname":"getSettingWirelessSecurityAuthAlg","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityGroup(data connectionData) (value []string)","Funname":"getSettingWirelessSecurityGroup","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityKeyMgmt(data connectionData) (value string)","Funname":"getSettingWirelessSecurityKeyMgmt","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapPassword(data connectionData) (value string)","Funname":"getSettingWirelessSecurityLeapPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapPasswordFlags(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityLeapPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapUsername(data connectionData) (value string)","Funname":"getSettingWirelessSecurityLeapUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPairwise(data connectionData) (value []string)","Funname":"getSettingWirelessSecurityPairwise","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPmf(data connectionData) (value int32)","Funname":"getSettingWirelessSecurityPmf","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityProto(data connectionData) (value []string)","Funname":"getSettingWirelessSecurityProto","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPsk(data connectionData) (value string)","Funname":"getSettingWirelessSecurityPsk","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPskFlags(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityPskFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey0(data connectionData) (value string)","Funname":"getSettingWirelessSecurityWepKey0","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey1(data connectionData) (value string)","Funname":"getSettingWirelessSecurityWepKey1","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey2(data connectionData) (value string)","Funname":"getSettingWirelessSecurityWepKey2","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey3(data connectionData) (value string)","Funname":"getSettingWirelessSecurityWepKey3","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKeyFlags(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityWepKeyFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKeyType(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityWepKeyType","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepTxKeyidx(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityWepTxKeyidx","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWpsMethod(data connectionData) (value uint32)","Funname":"getSettingWirelessSecurityWpsMethod","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSeenBssids(data connectionData) (value []string)","Funname":"getSettingWirelessSeenBssids","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSsid(data connectionData) (value []byte)","Funname":"getSettingWirelessSsid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessTxPower(data connectionData) (value uint32)","Funname":"getSettingWirelessTxPower","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAltsubjectMatchesExists(data connectionData) bool","Funname":"isSetting8021xAltsubjectMatchesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAnonymousIdentityExists(data connectionData) bool","Funname":"isSetting8021xAnonymousIdentityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAuthTimeoutExists(data connectionData) bool","Funname":"isSetting8021xAuthTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertExists(data connectionData) bool","Funname":"isSetting8021xCaCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertPasswordExists(data connectionData) bool","Funname":"isSetting8021xCaCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xCaCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaPathExists(data connectionData) bool","Funname":"isSetting8021xCaPathExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertExists(data connectionData) bool","Funname":"isSetting8021xClientCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertPasswordExists(data connectionData) bool","Funname":"isSetting8021xClientCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xClientCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xDomainSuffixMatchExists(data connectionData) bool","Funname":"isSetting8021xDomainSuffixMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xEapExists(data connectionData) bool","Funname":"isSetting8021xEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xIdentityExists(data connectionData) bool","Funname":"isSetting8021xIdentityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPacFileExists(data connectionData) bool","Funname":"isSetting8021xPacFileExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordExists(data connectionData) bool","Funname":"isSetting8021xPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordRawExists(data connectionData) bool","Funname":"isSetting8021xPasswordRawExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordRawFlagsExists(data connectionData) bool","Funname":"isSetting8021xPasswordRawFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1AuthFlagsExists(data connectionData) bool","Funname":"isSetting8021xPhase1AuthFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1FastProvisioningExists(data connectionData) bool","Funname":"isSetting8021xPhase1FastProvisioningExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1PeaplabelExists(data connectionData) bool","Funname":"isSetting8021xPhase1PeaplabelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1PeapverExists(data connectionData) bool","Funname":"isSetting8021xPhase1PeapverExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AltsubjectMatchesExists(data connectionData) bool","Funname":"isSetting8021xPhase2AltsubjectMatchesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AuthExists(data connectionData) bool","Funname":"isSetting8021xPhase2AuthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AutheapExists(data connectionData) bool","Funname":"isSetting8021xPhase2AutheapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertExists(data connectionData) bool","Funname":"isSetting8021xPhase2CaCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertPasswordExists(data connectionData) bool","Funname":"isSetting8021xPhase2CaCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xPhase2CaCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaPathExists(data connectionData) bool","Funname":"isSetting8021xPhase2CaPathExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertExists(data connectionData) bool","Funname":"isSetting8021xPhase2ClientCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertPasswordExists(data connectionData) bool","Funname":"isSetting8021xPhase2ClientCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xPhase2ClientCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2DomainSuffixMatchExists(data connectionData) bool","Funname":"isSetting8021xPhase2DomainSuffixMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyExists(data connectionData) bool","Funname":"isSetting8021xPhase2PrivateKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyPasswordExists(data connectionData) bool","Funname":"isSetting8021xPhase2PrivateKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xPhase2PrivateKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2SubjectMatchExists(data connectionData) bool","Funname":"isSetting8021xPhase2SubjectMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPinExists(data connectionData) bool","Funname":"isSetting8021xPinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPinFlagsExists(data connectionData) bool","Funname":"isSetting8021xPinFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyExists(data connectionData) bool","Funname":"isSetting8021xPrivateKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyPasswordExists(data connectionData) bool","Funname":"isSetting8021xPrivateKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSetting8021xPrivateKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xSubjectMatchExists(data connectionData) bool","Funname":"isSetting8021xSubjectMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xSystemCaCertsExists(data connectionData) bool","Funname":"isSetting8021xSystemCaCertsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslEncapsulationExists(data connectionData) bool","Funname":"isSettingAdslEncapsulationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslPasswordExists(data connectionData) bool","Funname":"isSettingAdslPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslPasswordFlagsExists(data connectionData) bool","Funname":"isSettingAdslPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslProtocolExists(data connectionData) bool","Funname":"isSettingAdslProtocolExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslUsernameExists(data connectionData) bool","Funname":"isSettingAdslUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslVciExists(data connectionData) bool","Funname":"isSettingAdslVciExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslVpiExists(data connectionData) bool","Funname":"isSettingAdslVpiExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBluetoothBdaddrExists(data connectionData) bool","Funname":"isSettingBluetoothBdaddrExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBluetoothTypeExists(data connectionData) bool","Funname":"isSettingBluetoothTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBondOptionsExists(data connectionData) bool","Funname":"isSettingBondOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeAgeingTimeExists(data connectionData) bool","Funname":"isSettingBridgeAgeingTimeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeForwardDelayExists(data connectionData) bool","Funname":"isSettingBridgeForwardDelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeGroupForwardMaskExists(data connectionData) bool","Funname":"isSettingBridgeGroupForwardMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeHelloTimeExists(data connectionData) bool","Funname":"isSettingBridgeHelloTimeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMacAddressExists(data connectionData) bool","Funname":"isSettingBridgeMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMaxAgeExists(data connectionData) bool","Funname":"isSettingBridgeMaxAgeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMulticastSnoopingExists(data connectionData) bool","Funname":"isSettingBridgeMulticastSnoopingExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortHairpinModeExists(data connectionData) bool","Funname":"isSettingBridgePortHairpinModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortPathCostExists(data connectionData) bool","Funname":"isSettingBridgePortPathCostExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortPriorityExists(data connectionData) bool","Funname":"isSettingBridgePortPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePriorityExists(data connectionData) bool","Funname":"isSettingBridgePriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeStpExists(data connectionData) bool","Funname":"isSettingBridgeStpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaMtuExists(data connectionData) bool","Funname":"isSettingCdmaMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaNumberExists(data connectionData) bool","Funname":"isSettingCdmaNumberExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaPasswordExists(data connectionData) bool","Funname":"isSettingCdmaPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaPasswordFlagsExists(data connectionData) bool","Funname":"isSettingCdmaPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaUsernameExists(data connectionData) bool","Funname":"isSettingCdmaUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAuthRetriesExists(data connectionData) bool","Funname":"isSettingConnectionAuthRetriesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectExists(data connectionData) bool","Funname":"isSettingConnectionAutoconnectExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectPriorityExists(data connectionData) bool","Funname":"isSettingConnectionAutoconnectPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectRetriesExists(data connectionData) bool","Funname":"isSettingConnectionAutoconnectRetriesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectSlavesExists(data connectionData) bool","Funname":"isSettingConnectionAutoconnectSlavesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionGatewayPingTimeoutExists(data connectionData) bool","Funname":"isSettingConnectionGatewayPingTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionIdExists(data connectionData) bool","Funname":"isSettingConnectionIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionInterfaceNameExists(data connectionData) bool","Funname":"isSettingConnectionInterfaceNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionLldpExists(data connectionData) bool","Funname":"isSettingConnectionLldpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionMasterExists(data connectionData) bool","Funname":"isSettingConnectionMasterExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionMeteredExists(data connectionData) bool","Funname":"isSettingConnectionMeteredExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionPermissionsExists(data connectionData) bool","Funname":"isSettingConnectionPermissionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionReadOnlyExists(data connectionData) bool","Funname":"isSettingConnectionReadOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionSecondariesExists(data connectionData) bool","Funname":"isSettingConnectionSecondariesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionSlaveTypeExists(data connectionData) bool","Funname":"isSettingConnectionSlaveTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionStableIdExists(data connectionData) bool","Funname":"isSettingConnectionStableIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionTimestampExists(data connectionData) bool","Funname":"isSettingConnectionTimestampExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionTypeExists(data connectionData) bool","Funname":"isSettingConnectionTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionUuidExists(data connectionData) bool","Funname":"isSettingConnectionUuidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionZoneExists(data connectionData) bool","Funname":"isSettingConnectionZoneExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoeFlagsExists(data connectionData) bool","Funname":"isSettingDcbAppFcoeFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoeModeExists(data connectionData) bool","Funname":"isSettingDcbAppFcoeModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoePriorityExists(data connectionData) bool","Funname":"isSettingDcbAppFcoePriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFipFlagsExists(data connectionData) bool","Funname":"isSettingDcbAppFipFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFipPriorityExists(data connectionData) bool","Funname":"isSettingDcbAppFipPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppIscsiFlagsExists(data connectionData) bool","Funname":"isSettingDcbAppIscsiFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppIscsiPriorityExists(data connectionData) bool","Funname":"isSettingDcbAppIscsiPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityBandwidthExists(data connectionData) bool","Funname":"isSettingDcbPriorityBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityFlowControlExists(data connectionData) bool","Funname":"isSettingDcbPriorityFlowControlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityFlowControlFlagsExists(data connectionData) bool","Funname":"isSettingDcbPriorityFlowControlFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupBandwidthExists(data connectionData) bool","Funname":"isSettingDcbPriorityGroupBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupFlagsExists(data connectionData) bool","Funname":"isSettingDcbPriorityGroupFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupIdExists(data connectionData) bool","Funname":"isSettingDcbPriorityGroupIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityStrictBandwidthExists(data connectionData) bool","Funname":"isSettingDcbPriorityStrictBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityTrafficClassExists(data connectionData) bool","Funname":"isSettingDcbPriorityTrafficClassExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmApnExists(data connectionData) bool","Funname":"isSettingGsmApnExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmDeviceIdExists(data connectionData) bool","Funname":"isSettingGsmDeviceIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmHomeOnlyExists(data connectionData) bool","Funname":"isSettingGsmHomeOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmMtuExists(data connectionData) bool","Funname":"isSettingGsmMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmNetworkIdExists(data connectionData) bool","Funname":"isSettingGsmNetworkIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmNumberExists(data connectionData) bool","Funname":"isSettingGsmNumberExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPasswordExists(data connectionData) bool","Funname":"isSettingGsmPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPasswordFlagsExists(data connectionData) bool","Funname":"isSettingGsmPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPinExists(data connectionData) bool","Funname":"isSettingGsmPinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPinFlagsExists(data connectionData) bool","Funname":"isSettingGsmPinFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmSimIdExists(data connectionData) bool","Funname":"isSettingGsmSimIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmSimOperatorIdExists(data connectionData) bool","Funname":"isSettingGsmSimOperatorIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmUsernameExists(data connectionData) bool","Funname":"isSettingGsmUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigAddressesExists(data connectionData) bool","Funname":"isSettingIP4ConfigAddressesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDadTimeoutExists(data connectionData) bool","Funname":"isSettingIP4ConfigDadTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpClientIdExists(data connectionData) bool","Funname":"isSettingIP4ConfigDhcpClientIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpFqdnExists(data connectionData) bool","Funname":"isSettingIP4ConfigDhcpFqdnExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpHostnameExists(data connectionData) bool","Funname":"isSettingIP4ConfigDhcpHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpSendHostnameExists(data connectionData) bool","Funname":"isSettingIP4ConfigDhcpSendHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpTimeoutExists(data connectionData) bool","Funname":"isSettingIP4ConfigDhcpTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsExists(data connectionData) bool","Funname":"isSettingIP4ConfigDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsOptionsExists(data connectionData) bool","Funname":"isSettingIP4ConfigDnsOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsPriorityExists(data connectionData) bool","Funname":"isSettingIP4ConfigDnsPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsSearchExists(data connectionData) bool","Funname":"isSettingIP4ConfigDnsSearchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigGatewayExists(data connectionData) bool","Funname":"isSettingIP4ConfigGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigIgnoreAutoDnsExists(data connectionData) bool","Funname":"isSettingIP4ConfigIgnoreAutoDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigIgnoreAutoRoutesExists(data connectionData) bool","Funname":"isSettingIP4ConfigIgnoreAutoRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigMayFailExists(data connectionData) bool","Funname":"isSettingIP4ConfigMayFailExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigMethodExists(data connectionData) bool","Funname":"isSettingIP4ConfigMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigNeverDefaultExists(data connectionData) bool","Funname":"isSettingIP4ConfigNeverDefaultExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRouteMetricExists(data connectionData) bool","Funname":"isSettingIP4ConfigRouteMetricExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRouteTableExists(data connectionData) bool","Funname":"isSettingIP4ConfigRouteTableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRoutesExists(data connectionData) bool","Funname":"isSettingIP4ConfigRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigAddrGenModeExists(data connectionData) bool","Funname":"isSettingIP6ConfigAddrGenModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigAddressesExists(data connectionData) bool","Funname":"isSettingIP6ConfigAddressesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDadTimeoutExists(data connectionData) bool","Funname":"isSettingIP6ConfigDadTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpHostnameExists(data connectionData) bool","Funname":"isSettingIP6ConfigDhcpHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpSendHostnameExists(data connectionData) bool","Funname":"isSettingIP6ConfigDhcpSendHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpTimeoutExists(data connectionData) bool","Funname":"isSettingIP6ConfigDhcpTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsExists(data connectionData) bool","Funname":"isSettingIP6ConfigDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsOptionsExists(data connectionData) bool","Funname":"isSettingIP6ConfigDnsOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsPriorityExists(data connectionData) bool","Funname":"isSettingIP6ConfigDnsPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsSearchExists(data connectionData) bool","Funname":"isSettingIP6ConfigDnsSearchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigGatewayExists(data connectionData) bool","Funname":"isSettingIP6ConfigGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIgnoreAutoDnsExists(data connectionData) bool","Funname":"isSettingIP6ConfigIgnoreAutoDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIgnoreAutoRoutesExists(data connectionData) bool","Funname":"isSettingIP6ConfigIgnoreAutoRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIp6PrivacyExists(data connectionData) bool","Funname":"isSettingIP6ConfigIp6PrivacyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigMayFailExists(data connectionData) bool","Funname":"isSettingIP6ConfigMayFailExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigMethodExists(data connectionData) bool","Funname":"isSettingIP6ConfigMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigNeverDefaultExists(data connectionData) bool","Funname":"isSettingIP6ConfigNeverDefaultExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRouteMetricExists(data connectionData) bool","Funname":"isSettingIP6ConfigRouteMetricExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRouteTableExists(data connectionData) bool","Funname":"isSettingIP6ConfigRouteTableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRoutesExists(data connectionData) bool","Funname":"isSettingIP6ConfigRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigTokenExists(data connectionData) bool","Funname":"isSettingIP6ConfigTokenExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelEncapsulationLimitExists(data connectionData) bool","Funname":"isSettingIPTunnelEncapsulationLimitExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelFlowLabelExists(data connectionData) bool","Funname":"isSettingIPTunnelFlowLabelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelInputKeyExists(data connectionData) bool","Funname":"isSettingIPTunnelInputKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelLocalExists(data connectionData) bool","Funname":"isSettingIPTunnelLocalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelModeExists(data connectionData) bool","Funname":"isSettingIPTunnelModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelMtuExists(data connectionData) bool","Funname":"isSettingIPTunnelMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelOutputKeyExists(data connectionData) bool","Funname":"isSettingIPTunnelOutputKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelParentExists(data connectionData) bool","Funname":"isSettingIPTunnelParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelPathMtuDiscoveryExists(data connectionData) bool","Funname":"isSettingIPTunnelPathMtuDiscoveryExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelRemoteExists(data connectionData) bool","Funname":"isSettingIPTunnelRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelTosExists(data connectionData) bool","Funname":"isSettingIPTunnelTosExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelTtlExists(data connectionData) bool","Funname":"isSettingIPTunnelTtlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandMacAddressExists(data connectionData) bool","Funname":"isSettingInfinibandMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandMtuExists(data connectionData) bool","Funname":"isSettingInfinibandMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandPKeyExists(data connectionData) bool","Funname":"isSettingInfinibandPKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandParentExists(data connectionData) bool","Funname":"isSettingInfinibandParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandTransportModeExists(data connectionData) bool","Funname":"isSettingInfinibandTransportModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecEncryptExists(data connectionData) bool","Funname":"isSettingMacsecEncryptExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCakExists(data connectionData) bool","Funname":"isSettingMacsecMkaCakExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCakFlagsExists(data connectionData) bool","Funname":"isSettingMacsecMkaCakFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCknExists(data connectionData) bool","Funname":"isSettingMacsecMkaCknExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecModeExists(data connectionData) bool","Funname":"isSettingMacsecModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecParentExists(data connectionData) bool","Funname":"isSettingMacsecParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecPortExists(data connectionData) bool","Funname":"isSettingMacsecPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecValidationExists(data connectionData) bool","Funname":"isSettingMacsecValidationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanModeExists(data connectionData) bool","Funname":"isSettingMacvlanModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanParentExists(data connectionData) bool","Funname":"isSettingMacvlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanPromiscuousExists(data connectionData) bool","Funname":"isSettingMacvlanPromiscuousExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanTapExists(data connectionData) bool","Funname":"isSettingMacvlanTapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshChannelExists(data connectionData) bool","Funname":"isSettingOlpcMeshChannelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshDhcpAnycastAddressExists(data connectionData) bool","Funname":"isSettingOlpcMeshDhcpAnycastAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshSsidExists(data connectionData) bool","Funname":"isSettingOlpcMeshSsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeFailModeExists(data connectionData) bool","Funname":"isSettingOvsBridgeFailModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeMcastSnoopingEnableExists(data connectionData) bool","Funname":"isSettingOvsBridgeMcastSnoopingEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeRstpEnableExists(data connectionData) bool","Funname":"isSettingOvsBridgeRstpEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeStpEnableExists(data connectionData) bool","Funname":"isSettingOvsBridgeStpEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsInterfaceTypeExists(data connectionData) bool","Funname":"isSettingOvsInterfaceTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPatchPeerExists(data connectionData) bool","Funname":"isSettingOvsPatchPeerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondDowndelayExists(data connectionData) bool","Funname":"isSettingOvsPortBondDowndelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondModeExists(data connectionData) bool","Funname":"isSettingOvsPortBondModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondUpdelayExists(data connectionData) bool","Funname":"isSettingOvsPortBondUpdelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortLacpExists(data connectionData) bool","Funname":"isSettingOvsPortLacpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortTagExists(data connectionData) bool","Funname":"isSettingOvsPortTagExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortVlanModeExists(data connectionData) bool","Funname":"isSettingOvsPortVlanModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppBaudExists(data connectionData) bool","Funname":"isSettingPppBaudExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppCrtsctsExists(data connectionData) bool","Funname":"isSettingPppCrtsctsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppLcpEchoFailureExists(data connectionData) bool","Funname":"isSettingPppLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppLcpEchoIntervalExists(data connectionData) bool","Funname":"isSettingPppLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMppeStatefulExists(data connectionData) bool","Funname":"isSettingPppMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMruExists(data connectionData) bool","Funname":"isSettingPppMruExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMtuExists(data connectionData) bool","Funname":"isSettingPppMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNoVjCompExists(data connectionData) bool","Funname":"isSettingPppNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNoauthExists(data connectionData) bool","Funname":"isSettingPppNoauthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNobsdcompExists(data connectionData) bool","Funname":"isSettingPppNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNodeflateExists(data connectionData) bool","Funname":"isSettingPppNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseChapExists(data connectionData) bool","Funname":"isSettingPppRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseEapExists(data connectionData) bool","Funname":"isSettingPppRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseMschapExists(data connectionData) bool","Funname":"isSettingPppRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseMschapv2Exists(data connectionData) bool","Funname":"isSettingPppRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefusePapExists(data connectionData) bool","Funname":"isSettingPppRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRequireMppe128Exists(data connectionData) bool","Funname":"isSettingPppRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRequireMppeExists(data connectionData) bool","Funname":"isSettingPppRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeParentExists(data connectionData) bool","Funname":"isSettingPppoeParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoePasswordExists(data connectionData) bool","Funname":"isSettingPppoePasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoePasswordFlagsExists(data connectionData) bool","Funname":"isSettingPppoePasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeServiceExists(data connectionData) bool","Funname":"isSettingPppoeServiceExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeUsernameExists(data connectionData) bool","Funname":"isSettingPppoeUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyBrowserOnlyExists(data connectionData) bool","Funname":"isSettingProxyBrowserOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyMethodExists(data connectionData) bool","Funname":"isSettingProxyMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyPacScriptExists(data connectionData) bool","Funname":"isSettingProxyPacScriptExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyPacUrlExists(data connectionData) bool","Funname":"isSettingProxyPacUrlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialBaudExists(data connectionData) bool","Funname":"isSettingSerialBaudExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialBitsExists(data connectionData) bool","Funname":"isSettingSerialBitsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialParityExists(data connectionData) bool","Funname":"isSettingSerialParityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialSendDelayExists(data connectionData) bool","Funname":"isSettingSerialSendDelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialStopbitsExists(data connectionData) bool","Funname":"isSettingSerialStopbitsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamConfigExists(data connectionData) bool","Funname":"isSettingTeamConfigExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamMcastRejoinCountExists(data connectionData) bool","Funname":"isSettingTeamMcastRejoinCountExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamMcastRejoinIntervalExists(data connectionData) bool","Funname":"isSettingTeamMcastRejoinIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamNotifyPeersCountExists(data connectionData) bool","Funname":"isSettingTeamNotifyPeersCountExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamNotifyPeersIntervalExists(data connectionData) bool","Funname":"isSettingTeamNotifyPeersIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortConfigExists(data connectionData) bool","Funname":"isSettingTeamPortConfigExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortLacpKeyExists(data connectionData) bool","Funname":"isSettingTeamPortLacpKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortLacpPrioExists(data connectionData) bool","Funname":"isSettingTeamPortLacpPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortPrioExists(data connectionData) bool","Funname":"isSettingTeamPortPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortQueueIdExists(data connectionData) bool","Funname":"isSettingTeamPortQueueIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortStickyExists(data connectionData) bool","Funname":"isSettingTeamPortStickyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerActiveExists(data connectionData) bool","Funname":"isSettingTeamRunnerActiveExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerAggSelectPolicyExists(data connectionData) bool","Funname":"isSettingTeamRunnerAggSelectPolicyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerExists(data connectionData) bool","Funname":"isSettingTeamRunnerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerFastRateExists(data connectionData) bool","Funname":"isSettingTeamRunnerFastRateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerHwaddrPolicyExists(data connectionData) bool","Funname":"isSettingTeamRunnerHwaddrPolicyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerMinPortsExists(data connectionData) bool","Funname":"isSettingTeamRunnerMinPortsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerSysPrioExists(data connectionData) bool","Funname":"isSettingTeamRunnerSysPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxBalancerExists(data connectionData) bool","Funname":"isSettingTeamRunnerTxBalancerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxBalancerIntervalExists(data connectionData) bool","Funname":"isSettingTeamRunnerTxBalancerIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxHashExists(data connectionData) bool","Funname":"isSettingTeamRunnerTxHashExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunGroupExists(data connectionData) bool","Funname":"isSettingTunGroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunModeExists(data connectionData) bool","Funname":"isSettingTunModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunMultiQueueExists(data connectionData) bool","Funname":"isSettingTunMultiQueueExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunOwnerExists(data connectionData) bool","Funname":"isSettingTunOwnerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunPiExists(data connectionData) bool","Funname":"isSettingTunPiExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunVnetHdrExists(data connectionData) bool","Funname":"isSettingTunVnetHdrExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingUserDataExists(data connectionData) bool","Funname":"isSettingUserDataExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanEgressPriorityMapExists(data connectionData) bool","Funname":"isSettingVlanEgressPriorityMapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanFlagsExists(data connectionData) bool","Funname":"isSettingVlanFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanIdExists(data connectionData) bool","Funname":"isSettingVlanIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanIngressPriorityMapExists(data connectionData) bool","Funname":"isSettingVlanIngressPriorityMapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanParentExists(data connectionData) bool","Funname":"isSettingVlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnDataExists(data connectionData) bool","Funname":"isSettingVpnDataExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyDomainExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyGatewayExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecEnableExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecEspExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecEspExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecGatewayIdExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecGatewayIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecGroupNameExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecGroupNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecIkeExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecIkeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecPskExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyIpsecPskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyLcpEchoFailureExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyLcpEchoIntervalExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyMppeStatefulExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoAccompExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyNoAccompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoPcompExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyNoPcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoVjCompExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNobsdcompExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNodeflateExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyPasswordExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseChapExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseEapExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseMschapExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseMschapv2Exists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefusePapExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppe128Exists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppe40Exists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRequireMppe40Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppeExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyUserExists(data connectionData) bool","Funname":"isSettingVpnL2tpKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyAuthtypeExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyAuthtypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCacertExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyCacertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCookieExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyCookieExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCsdEnableExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyCsdEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCsdWrapperExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyCsdWrapperExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyGatewayExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyGwcertExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyGwcertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyMtuExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyPemPassphraseFsidExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyPemPassphraseFsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyPrivkeyExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyPrivkeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyProxyExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyProxyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyStokenSourceExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyStokenSourceExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyStokenStringExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyStokenStringExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyUsercertExists(data connectionData) bool","Funname":"isSettingVpnOpenconnectKeyUsercertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyAuthExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyAuthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCaExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCaExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertpassExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCertpassExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertpassFlagsExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCertpassFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCipherExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCipherExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCompLzoExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyCompLzoExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyConnectionTypeExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyConnectionTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyFragmentSizeExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyFragmentSizeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyPasswordExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyHttpProxyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyHttpProxyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyUsernameExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyHttpProxyUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyKeyExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyLocalIpExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyLocalIpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyMssfixExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyMssfixExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPasswordExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPortExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProtoTcpExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyProtoTcpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyPortExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyProxyPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyRetryExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyProxyRetryExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyServerExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyProxyServerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyTypeExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyProxyTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteCertTlsExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyRemoteCertTlsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteIpExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyRemoteIpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteRandomExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyRemoteRandomExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRenegSecondsExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyRenegSecondsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyStaticKeyDirectionExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyStaticKeyDirectionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyStaticKeyExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyStaticKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTaDirExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyTaDirExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTaExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyTaExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTapDevExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyTapDevExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTlsRemoteExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyTlsRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTunnelMtuExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyTunnelMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyUsernameExists(data connectionData) bool","Funname":"isSettingVpnOpenvpnKeyUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPersistentExists(data connectionData) bool","Funname":"isSettingVpnPersistentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyDomainExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyGatewayExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyLcpEchoFailureExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyLcpEchoIntervalExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyMppeStatefulExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNoVjCompExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNobsdcompExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNodeflateExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyPasswordExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseChapExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseEapExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseMschapExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseMschapv2Exists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefusePapExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppe128Exists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppe40Exists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRequireMppe40Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppeExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyUserExists(data connectionData) bool","Funname":"isSettingVpnPptpKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnSecretsExists(data connectionData) bool","Funname":"isSettingVpnSecretsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnServiceTypeExists(data connectionData) bool","Funname":"isSettingVpnServiceTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyAddressExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyCertificateExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyCertificateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyEncapExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyEncapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyIpcompExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyIpcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyMethodExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyPasswordExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUserExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUsercertExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyUsercertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUserkeyExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyUserkeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyVirtualExists(data connectionData) bool","Funname":"isSettingVpnStrongswanKeyVirtualExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnTimeoutExists(data connectionData) bool","Funname":"isSettingVpnTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnUserNameExists(data connectionData) bool","Funname":"isSettingVpnUserNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyAppVersionExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyAppVersionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyAuthmodeExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyAuthmodeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyCaFileExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyCaFileExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyCiscoUdpEncapsPortExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyCiscoUdpEncapsPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDhgroupExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyDhgroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDomainExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDpdIdleTimeoutExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyDpdIdleTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyGatewayExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyIdExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyLocalPortExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyLocalPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyNatTraversalModeExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyNatTraversalModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyNoEncryptionExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyNoEncryptionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyPerfectForwardExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyPerfectForwardExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretExists(data connectionData) bool","Funname":"isSettingVpnVpncKeySecretExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretFlagsExists(data connectionData) bool","Funname":"isSettingVpnVpncKeySecretFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretTypeExists(data connectionData) bool","Funname":"isSettingVpnVpncKeySecretTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySingleDesExists(data connectionData) bool","Funname":"isSettingVpnVpncKeySingleDesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyVendorExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyVendorExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyXauthPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordFlagsExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyXauthPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordTypeExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyXauthPasswordTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthUserExists(data connectionData) bool","Funname":"isSettingVpnVpncKeyXauthUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanAgeingExists(data connectionData) bool","Funname":"isSettingVxlanAgeingExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanDestinationPortExists(data connectionData) bool","Funname":"isSettingVxlanDestinationPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanIdExists(data connectionData) bool","Funname":"isSettingVxlanIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanL2MissExists(data connectionData) bool","Funname":"isSettingVxlanL2MissExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanL3MissExists(data connectionData) bool","Funname":"isSettingVxlanL3MissExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLearningExists(data connectionData) bool","Funname":"isSettingVxlanLearningExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLimitExists(data connectionData) bool","Funname":"isSettingVxlanLimitExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLocalExists(data connectionData) bool","Funname":"isSettingVxlanLocalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanParentExists(data connectionData) bool","Funname":"isSettingVxlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanProxyExists(data connectionData) bool","Funname":"isSettingVxlanProxyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanRemoteExists(data connectionData) bool","Funname":"isSettingVxlanRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanRscExists(data connectionData) bool","Funname":"isSettingVxlanRscExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanSourcePortMaxExists(data connectionData) bool","Funname":"isSettingVxlanSourcePortMaxExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanSourcePortMinExists(data connectionData) bool","Funname":"isSettingVxlanSourcePortMinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanTosExists(data connectionData) bool","Funname":"isSettingVxlanTosExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanTtlExists(data connectionData) bool","Funname":"isSettingVxlanTtlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWimaxMacAddressExists(data connectionData) bool","Funname":"isSettingWimaxMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWimaxNetworkNameExists(data connectionData) bool","Funname":"isSettingWimaxNetworkNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredAutoNegotiateExists(data connectionData) bool","Funname":"isSettingWiredAutoNegotiateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredClonedMacAddressExists(data connectionData) bool","Funname":"isSettingWiredClonedMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredDuplexExists(data connectionData) bool","Funname":"isSettingWiredDuplexExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredGenerateMacAddressMaskExists(data connectionData) bool","Funname":"isSettingWiredGenerateMacAddressMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMacAddressBlacklistExists(data connectionData) bool","Funname":"isSettingWiredMacAddressBlacklistExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMacAddressExists(data connectionData) bool","Funname":"isSettingWiredMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMtuExists(data connectionData) bool","Funname":"isSettingWiredMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredPortExists(data connectionData) bool","Funname":"isSettingWiredPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390NettypeExists(data connectionData) bool","Funname":"isSettingWiredS390NettypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390OptionsExists(data connectionData) bool","Funname":"isSettingWiredS390OptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390SubchannelsExists(data connectionData) bool","Funname":"isSettingWiredS390SubchannelsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredSpeedExists(data connectionData) bool","Funname":"isSettingWiredSpeedExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredWakeOnLanExists(data connectionData) bool","Funname":"isSettingWiredWakeOnLanExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredWakeOnLanPasswordExists(data connectionData) bool","Funname":"isSettingWiredWakeOnLanPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessBandExists(data connectionData) bool","Funname":"isSettingWirelessBandExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessBssidExists(data connectionData) bool","Funname":"isSettingWirelessBssidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessChannelExists(data connectionData) bool","Funname":"isSettingWirelessChannelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessClonedMacAddressExists(data connectionData) bool","Funname":"isSettingWirelessClonedMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessGenerateMacAddressMaskExists(data connectionData) bool","Funname":"isSettingWirelessGenerateMacAddressMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessHiddenExists(data connectionData) bool","Funname":"isSettingWirelessHiddenExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressBlacklistExists(data connectionData) bool","Funname":"isSettingWirelessMacAddressBlacklistExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressExists(data connectionData) bool","Funname":"isSettingWirelessMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressRandomizationExists(data connectionData) bool","Funname":"isSettingWirelessMacAddressRandomizationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessModeExists(data connectionData) bool","Funname":"isSettingWirelessModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMtuExists(data connectionData) bool","Funname":"isSettingWirelessMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessPowersaveExists(data connectionData) bool","Funname":"isSettingWirelessPowersaveExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessRateExists(data connectionData) bool","Funname":"isSettingWirelessRateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityAuthAlgExists(data connectionData) bool","Funname":"isSettingWirelessSecurityAuthAlgExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityGroupExists(data connectionData) bool","Funname":"isSettingWirelessSecurityGroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityKeyMgmtExists(data connectionData) bool","Funname":"isSettingWirelessSecurityKeyMgmtExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapPasswordExists(data connectionData) bool","Funname":"isSettingWirelessSecurityLeapPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapPasswordFlagsExists(data connectionData) bool","Funname":"isSettingWirelessSecurityLeapPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapUsernameExists(data connectionData) bool","Funname":"isSettingWirelessSecurityLeapUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPairwiseExists(data connectionData) bool","Funname":"isSettingWirelessSecurityPairwiseExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPmfExists(data connectionData) bool","Funname":"isSettingWirelessSecurityPmfExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityProtoExists(data connectionData) bool","Funname":"isSettingWirelessSecurityProtoExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPskExists(data connectionData) bool","Funname":"isSettingWirelessSecurityPskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPskFlagsExists(data connectionData) bool","Funname":"isSettingWirelessSecurityPskFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey0Exists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKey0Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey1Exists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKey1Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey2Exists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKey2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey3Exists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKey3Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKeyFlagsExists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKeyFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKeyTypeExists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepKeyTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepTxKeyidxExists(data connectionData) bool","Funname":"isSettingWirelessSecurityWepTxKeyidxExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWpsMethodExists(data connectionData) bool","Funname":"isSettingWirelessSecurityWpsMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSeenBssidsExists(data connectionData) bool","Funname":"isSettingWirelessSeenBssidsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSsidExists(data connectionData) bool","Funname":"isSettingWirelessSsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessTxPowerExists(data connectionData) bool","Funname":"isSettingWirelessTxPowerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func generalGetSettingDefaultValue(setting, key string) (defvalue interface","Funname":"network.generalGetSettingDefaultValue","Returntype":"(defvalue interface{})","Args":"setting, key string"},{"Uniquefunname":"func getSetting8021xAltsubjectMatches(data connectionData) (value []string)","Funname":"network.getSetting8021xAltsubjectMatches","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xAnonymousIdentity(data connectionData) (value string)","Funname":"network.getSetting8021xAnonymousIdentity","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xAuthTimeout(data connectionData) (value int32)","Funname":"network.getSetting8021xAuthTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCert(data connectionData) (value []byte)","Funname":"network.getSetting8021xCaCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCertPassword(data connectionData) (value string)","Funname":"network.getSetting8021xCaCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaCertPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xCaCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xCaPath(data connectionData) (value string)","Funname":"network.getSetting8021xCaPath","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCert(data connectionData) (value []byte)","Funname":"network.getSetting8021xClientCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCertPassword(data connectionData) (value string)","Funname":"network.getSetting8021xClientCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xClientCertPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xClientCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xDomainSuffixMatch(data connectionData) (value string)","Funname":"network.getSetting8021xDomainSuffixMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xEap(data connectionData) (value []string)","Funname":"network.getSetting8021xEap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xIdentity(data connectionData) (value string)","Funname":"network.getSetting8021xIdentity","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPacFile(data connectionData) (value string)","Funname":"network.getSetting8021xPacFile","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPassword(data connectionData) (value string)","Funname":"network.getSetting8021xPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordRaw(data connectionData) (value []byte)","Funname":"network.getSetting8021xPasswordRaw","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPasswordRawFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPasswordRawFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1AuthFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPhase1AuthFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1FastProvisioning(data connectionData) (value string)","Funname":"network.getSetting8021xPhase1FastProvisioning","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1Peaplabel(data connectionData) (value string)","Funname":"network.getSetting8021xPhase1Peaplabel","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase1Peapver(data connectionData) (value string)","Funname":"network.getSetting8021xPhase1Peapver","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2AltsubjectMatches(data connectionData) (value []string)","Funname":"network.getSetting8021xPhase2AltsubjectMatches","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2Auth(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2Auth","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2Autheap(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2Autheap","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCert(data connectionData) (value []byte)","Funname":"network.getSetting8021xPhase2CaCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCertPassword(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2CaCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaCertPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPhase2CaCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2CaPath(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2CaPath","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCert(data connectionData) (value []byte)","Funname":"network.getSetting8021xPhase2ClientCert","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCertPassword(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2ClientCertPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2ClientCertPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPhase2ClientCertPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2DomainSuffixMatch(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2DomainSuffixMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKey(data connectionData) (value []byte)","Funname":"network.getSetting8021xPhase2PrivateKey","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKeyPassword(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2PrivateKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPhase2SubjectMatch(data connectionData) (value string)","Funname":"network.getSetting8021xPhase2SubjectMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPin(data connectionData) (value string)","Funname":"network.getSetting8021xPin","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPinFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPinFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKey(data connectionData) (value []byte)","Funname":"network.getSetting8021xPrivateKey","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKeyPassword(data connectionData) (value string)","Funname":"network.getSetting8021xPrivateKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xPrivateKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSetting8021xPrivateKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xSubjectMatch(data connectionData) (value string)","Funname":"network.getSetting8021xSubjectMatch","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSetting8021xSystemCaCerts(data connectionData) (value bool)","Funname":"network.getSetting8021xSystemCaCerts","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslEncapsulation(data connectionData) (value string)","Funname":"network.getSettingAdslEncapsulation","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslPassword(data connectionData) (value string)","Funname":"network.getSettingAdslPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingAdslPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslProtocol(data connectionData) (value string)","Funname":"network.getSettingAdslProtocol","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslUsername(data connectionData) (value string)","Funname":"network.getSettingAdslUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslVci(data connectionData) (value uint32)","Funname":"network.getSettingAdslVci","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingAdslVpi(data connectionData) (value uint32)","Funname":"network.getSettingAdslVpi","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBluetoothBdaddr(data connectionData) (value []byte)","Funname":"network.getSettingBluetoothBdaddr","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBluetoothType(data connectionData) (value string)","Funname":"network.getSettingBluetoothType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBondOptions(data connectionData) (value map[string]string)","Funname":"network.getSettingBondOptions","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeAgeingTime(data connectionData) (value uint32)","Funname":"network.getSettingBridgeAgeingTime","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeForwardDelay(data connectionData) (value uint32)","Funname":"network.getSettingBridgeForwardDelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeGroupForwardMask(data connectionData) (value uint32)","Funname":"network.getSettingBridgeGroupForwardMask","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeHelloTime(data connectionData) (value uint32)","Funname":"network.getSettingBridgeHelloTime","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingBridgeMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMaxAge(data connectionData) (value uint32)","Funname":"network.getSettingBridgeMaxAge","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeMulticastSnooping(data connectionData) (value bool)","Funname":"network.getSettingBridgeMulticastSnooping","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortHairpinMode(data connectionData) (value bool)","Funname":"network.getSettingBridgePortHairpinMode","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortPathCost(data connectionData) (value uint32)","Funname":"network.getSettingBridgePortPathCost","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePortPriority(data connectionData) (value uint32)","Funname":"network.getSettingBridgePortPriority","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgePriority(data connectionData) (value uint32)","Funname":"network.getSettingBridgePriority","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingBridgeStp(data connectionData) (value bool)","Funname":"network.getSettingBridgeStp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaMtu(data connectionData) (value uint32)","Funname":"network.getSettingCdmaMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaNumber(data connectionData) (value string)","Funname":"network.getSettingCdmaNumber","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaPassword(data connectionData) (value string)","Funname":"network.getSettingCdmaPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingCdmaPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingCdmaUsername(data connectionData) (value string)","Funname":"network.getSettingCdmaUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAuthRetries(data connectionData) (value int32)","Funname":"network.getSettingConnectionAuthRetries","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnect(data connectionData) (value bool)","Funname":"network.getSettingConnectionAutoconnect","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectPriority(data connectionData) (value int32)","Funname":"network.getSettingConnectionAutoconnectPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectRetries(data connectionData) (value int32)","Funname":"network.getSettingConnectionAutoconnectRetries","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionAutoconnectSlaves(data connectionData) (value int32)","Funname":"network.getSettingConnectionAutoconnectSlaves","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionGatewayPingTimeout(data connectionData) (value uint32)","Funname":"network.getSettingConnectionGatewayPingTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionId(data connectionData) (value string)","Funname":"network.getSettingConnectionId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionInterfaceName(data connectionData) (value string)","Funname":"network.getSettingConnectionInterfaceName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionLldp(data connectionData) (value int32)","Funname":"network.getSettingConnectionLldp","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionMaster(data connectionData) (value string)","Funname":"network.getSettingConnectionMaster","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionMetered(data connectionData) (value int32)","Funname":"network.getSettingConnectionMetered","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionPermissions(data connectionData) (value []string)","Funname":"network.getSettingConnectionPermissions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionReadOnly(data connectionData) (value bool)","Funname":"network.getSettingConnectionReadOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionSecondaries(data connectionData) (value []string)","Funname":"network.getSettingConnectionSecondaries","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionSlaveType(data connectionData) (value string)","Funname":"network.getSettingConnectionSlaveType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionStableId(data connectionData) (value string)","Funname":"network.getSettingConnectionStableId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionTimestamp(data connectionData) (value uint64)","Funname":"network.getSettingConnectionTimestamp","Returntype":"(value uint64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionType(data connectionData) (value string)","Funname":"network.getSettingConnectionType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionUuid(data connectionData) (value string)","Funname":"network.getSettingConnectionUuid","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingConnectionZone(data connectionData) (value string)","Funname":"network.getSettingConnectionZone","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoeFlags(data connectionData) (value uint32)","Funname":"network.getSettingDcbAppFcoeFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoeMode(data connectionData) (value string)","Funname":"network.getSettingDcbAppFcoeMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFcoePriority(data connectionData) (value int32)","Funname":"network.getSettingDcbAppFcoePriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFipFlags(data connectionData) (value uint32)","Funname":"network.getSettingDcbAppFipFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppFipPriority(data connectionData) (value int32)","Funname":"network.getSettingDcbAppFipPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppIscsiFlags(data connectionData) (value uint32)","Funname":"network.getSettingDcbAppIscsiFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbAppIscsiPriority(data connectionData) (value int32)","Funname":"network.getSettingDcbAppIscsiPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityBandwidth(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityFlowControl(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityFlowControl","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityFlowControlFlags(data connectionData) (value uint32)","Funname":"network.getSettingDcbPriorityFlowControlFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupBandwidth(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityGroupBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupFlags(data connectionData) (value uint32)","Funname":"network.getSettingDcbPriorityGroupFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityGroupId(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityGroupId","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityStrictBandwidth(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityStrictBandwidth","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingDcbPriorityTrafficClass(data connectionData) (value []uint32)","Funname":"network.getSettingDcbPriorityTrafficClass","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmApn(data connectionData) (value string)","Funname":"network.getSettingGsmApn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmDeviceId(data connectionData) (value string)","Funname":"network.getSettingGsmDeviceId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmHomeOnly(data connectionData) (value bool)","Funname":"network.getSettingGsmHomeOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmMtu(data connectionData) (value uint32)","Funname":"network.getSettingGsmMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmNetworkId(data connectionData) (value string)","Funname":"network.getSettingGsmNetworkId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmNumber(data connectionData) (value string)","Funname":"network.getSettingGsmNumber","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPassword(data connectionData) (value string)","Funname":"network.getSettingGsmPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingGsmPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPin(data connectionData) (value string)","Funname":"network.getSettingGsmPin","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmPinFlags(data connectionData) (value uint32)","Funname":"network.getSettingGsmPinFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmSimId(data connectionData) (value string)","Funname":"network.getSettingGsmSimId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmSimOperatorId(data connectionData) (value string)","Funname":"network.getSettingGsmSimOperatorId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingGsmUsername(data connectionData) (value string)","Funname":"network.getSettingGsmUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigAddresses(data connectionData) (value [][]uint32)","Funname":"network.getSettingIP4ConfigAddresses","Returntype":"(value [][]uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDadTimeout(data connectionData) (value int32)","Funname":"network.getSettingIP4ConfigDadTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpClientId(data connectionData) (value string)","Funname":"network.getSettingIP4ConfigDhcpClientId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpFqdn(data connectionData) (value string)","Funname":"network.getSettingIP4ConfigDhcpFqdn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpHostname(data connectionData) (value string)","Funname":"network.getSettingIP4ConfigDhcpHostname","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpSendHostname(data connectionData) (value bool)","Funname":"network.getSettingIP4ConfigDhcpSendHostname","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDhcpTimeout(data connectionData) (value int32)","Funname":"network.getSettingIP4ConfigDhcpTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDns(data connectionData) (value []uint32)","Funname":"network.getSettingIP4ConfigDns","Returntype":"(value []uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsOptions(data connectionData) (value []string)","Funname":"network.getSettingIP4ConfigDnsOptions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsPriority(data connectionData) (value int32)","Funname":"network.getSettingIP4ConfigDnsPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigDnsSearch(data connectionData) (value []string)","Funname":"network.getSettingIP4ConfigDnsSearch","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigGateway(data connectionData) (value string)","Funname":"network.getSettingIP4ConfigGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigIgnoreAutoDns(data connectionData) (value bool)","Funname":"network.getSettingIP4ConfigIgnoreAutoDns","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigIgnoreAutoRoutes(data connectionData) (value bool)","Funname":"network.getSettingIP4ConfigIgnoreAutoRoutes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigMayFail(data connectionData) (value bool)","Funname":"network.getSettingIP4ConfigMayFail","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigMethod(data connectionData) (value string)","Funname":"network.getSettingIP4ConfigMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigNeverDefault(data connectionData) (value bool)","Funname":"network.getSettingIP4ConfigNeverDefault","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRouteMetric(data connectionData) (value int64)","Funname":"network.getSettingIP4ConfigRouteMetric","Returntype":"(value int64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRouteTable(data connectionData) (value uint32)","Funname":"network.getSettingIP4ConfigRouteTable","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP4ConfigRoutes(data connectionData) (value [][]uint32)","Funname":"network.getSettingIP4ConfigRoutes","Returntype":"(value [][]uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigAddrGenMode(data connectionData) (value int32)","Funname":"network.getSettingIP6ConfigAddrGenMode","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigAddresses(data connectionData) (value ipv6Addresses)","Funname":"network.getSettingIP6ConfigAddresses","Returntype":"(value ipv6Addresses)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDadTimeout(data connectionData) (value int32)","Funname":"network.getSettingIP6ConfigDadTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpHostname(data connectionData) (value string)","Funname":"network.getSettingIP6ConfigDhcpHostname","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpSendHostname(data connectionData) (value bool)","Funname":"network.getSettingIP6ConfigDhcpSendHostname","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDhcpTimeout(data connectionData) (value int32)","Funname":"network.getSettingIP6ConfigDhcpTimeout","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDns(data connectionData) (value [][]byte)","Funname":"network.getSettingIP6ConfigDns","Returntype":"(value [][]byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsOptions(data connectionData) (value []string)","Funname":"network.getSettingIP6ConfigDnsOptions","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsPriority(data connectionData) (value int32)","Funname":"network.getSettingIP6ConfigDnsPriority","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigDnsSearch(data connectionData) (value []string)","Funname":"network.getSettingIP6ConfigDnsSearch","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigGateway(data connectionData) (value string)","Funname":"network.getSettingIP6ConfigGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIgnoreAutoDns(data connectionData) (value bool)","Funname":"network.getSettingIP6ConfigIgnoreAutoDns","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIgnoreAutoRoutes(data connectionData) (value bool)","Funname":"network.getSettingIP6ConfigIgnoreAutoRoutes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigIp6Privacy(data connectionData) (value int32)","Funname":"network.getSettingIP6ConfigIp6Privacy","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigMayFail(data connectionData) (value bool)","Funname":"network.getSettingIP6ConfigMayFail","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigMethod(data connectionData) (value string)","Funname":"network.getSettingIP6ConfigMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigNeverDefault(data connectionData) (value bool)","Funname":"network.getSettingIP6ConfigNeverDefault","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRouteMetric(data connectionData) (value int64)","Funname":"network.getSettingIP6ConfigRouteMetric","Returntype":"(value int64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRouteTable(data connectionData) (value uint32)","Funname":"network.getSettingIP6ConfigRouteTable","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigRoutes(data connectionData) (value ipv6Routes)","Funname":"network.getSettingIP6ConfigRoutes","Returntype":"(value ipv6Routes)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIP6ConfigToken(data connectionData) (value string)","Funname":"network.getSettingIP6ConfigToken","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelEncapsulationLimit(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelEncapsulationLimit","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelFlowLabel(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelFlowLabel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelInputKey(data connectionData) (value string)","Funname":"network.getSettingIPTunnelInputKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelLocal(data connectionData) (value string)","Funname":"network.getSettingIPTunnelLocal","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelMode(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelMtu(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelOutputKey(data connectionData) (value string)","Funname":"network.getSettingIPTunnelOutputKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelParent(data connectionData) (value string)","Funname":"network.getSettingIPTunnelParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelPathMtuDiscovery(data connectionData) (value bool)","Funname":"network.getSettingIPTunnelPathMtuDiscovery","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelRemote(data connectionData) (value string)","Funname":"network.getSettingIPTunnelRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelTos(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelTos","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingIPTunnelTtl(data connectionData) (value uint32)","Funname":"network.getSettingIPTunnelTtl","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingInfinibandMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandMtu(data connectionData) (value uint32)","Funname":"network.getSettingInfinibandMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandPKey(data connectionData) (value int32)","Funname":"network.getSettingInfinibandPKey","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandParent(data connectionData) (value string)","Funname":"network.getSettingInfinibandParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingInfinibandTransportMode(data connectionData) (value string)","Funname":"network.getSettingInfinibandTransportMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecEncrypt(data connectionData) (value bool)","Funname":"network.getSettingMacsecEncrypt","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCak(data connectionData) (value string)","Funname":"network.getSettingMacsecMkaCak","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCakFlags(data connectionData) (value uint32)","Funname":"network.getSettingMacsecMkaCakFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMkaCkn(data connectionData) (value string)","Funname":"network.getSettingMacsecMkaCkn","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecMode(data connectionData) (value int32)","Funname":"network.getSettingMacsecMode","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecParent(data connectionData) (value string)","Funname":"network.getSettingMacsecParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecPort(data connectionData) (value int32)","Funname":"network.getSettingMacsecPort","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacsecValidation(data connectionData) (value int32)","Funname":"network.getSettingMacsecValidation","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanMode(data connectionData) (value uint32)","Funname":"network.getSettingMacvlanMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanParent(data connectionData) (value string)","Funname":"network.getSettingMacvlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanPromiscuous(data connectionData) (value bool)","Funname":"network.getSettingMacvlanPromiscuous","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingMacvlanTap(data connectionData) (value bool)","Funname":"network.getSettingMacvlanTap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshChannel(data connectionData) (value uint32)","Funname":"network.getSettingOlpcMeshChannel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshDhcpAnycastAddress(data connectionData) (value []byte)","Funname":"network.getSettingOlpcMeshDhcpAnycastAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOlpcMeshSsid(data connectionData) (value []byte)","Funname":"network.getSettingOlpcMeshSsid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeFailMode(data connectionData) (value string)","Funname":"network.getSettingOvsBridgeFailMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeMcastSnoopingEnable(data connectionData) (value bool)","Funname":"network.getSettingOvsBridgeMcastSnoopingEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeRstpEnable(data connectionData) (value bool)","Funname":"network.getSettingOvsBridgeRstpEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsBridgeStpEnable(data connectionData) (value bool)","Funname":"network.getSettingOvsBridgeStpEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsInterfaceType(data connectionData) (value string)","Funname":"network.getSettingOvsInterfaceType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPatchPeer(data connectionData) (value string)","Funname":"network.getSettingOvsPatchPeer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondDowndelay(data connectionData) (value uint32)","Funname":"network.getSettingOvsPortBondDowndelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondMode(data connectionData) (value string)","Funname":"network.getSettingOvsPortBondMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortBondUpdelay(data connectionData) (value uint32)","Funname":"network.getSettingOvsPortBondUpdelay","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortLacp(data connectionData) (value string)","Funname":"network.getSettingOvsPortLacp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortTag(data connectionData) (value uint32)","Funname":"network.getSettingOvsPortTag","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingOvsPortVlanMode(data connectionData) (value string)","Funname":"network.getSettingOvsPortVlanMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppBaud(data connectionData) (value uint32)","Funname":"network.getSettingPppBaud","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppCrtscts(data connectionData) (value bool)","Funname":"network.getSettingPppCrtscts","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppLcpEchoFailure(data connectionData) (value uint32)","Funname":"network.getSettingPppLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppLcpEchoInterval(data connectionData) (value uint32)","Funname":"network.getSettingPppLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMppeStateful(data connectionData) (value bool)","Funname":"network.getSettingPppMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMru(data connectionData) (value uint32)","Funname":"network.getSettingPppMru","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppMtu(data connectionData) (value uint32)","Funname":"network.getSettingPppMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNoVjComp(data connectionData) (value bool)","Funname":"network.getSettingPppNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNoauth(data connectionData) (value bool)","Funname":"network.getSettingPppNoauth","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNobsdcomp(data connectionData) (value bool)","Funname":"network.getSettingPppNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppNodeflate(data connectionData) (value bool)","Funname":"network.getSettingPppNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseChap(data connectionData) (value bool)","Funname":"network.getSettingPppRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseEap(data connectionData) (value bool)","Funname":"network.getSettingPppRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseMschap(data connectionData) (value bool)","Funname":"network.getSettingPppRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefuseMschapv2(data connectionData) (value bool)","Funname":"network.getSettingPppRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRefusePap(data connectionData) (value bool)","Funname":"network.getSettingPppRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRequireMppe(data connectionData) (value bool)","Funname":"network.getSettingPppRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppRequireMppe128(data connectionData) (value bool)","Funname":"network.getSettingPppRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeParent(data connectionData) (value string)","Funname":"network.getSettingPppoeParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoePassword(data connectionData) (value string)","Funname":"network.getSettingPppoePassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoePasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingPppoePasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeService(data connectionData) (value string)","Funname":"network.getSettingPppoeService","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingPppoeUsername(data connectionData) (value string)","Funname":"network.getSettingPppoeUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyBrowserOnly(data connectionData) (value bool)","Funname":"network.getSettingProxyBrowserOnly","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyMethod(data connectionData) (value int32)","Funname":"network.getSettingProxyMethod","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyPacScript(data connectionData) (value string)","Funname":"network.getSettingProxyPacScript","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingProxyPacUrl(data connectionData) (value string)","Funname":"network.getSettingProxyPacUrl","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialBaud(data connectionData) (value uint32)","Funname":"network.getSettingSerialBaud","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialBits(data connectionData) (value uint32)","Funname":"network.getSettingSerialBits","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialParity(data connectionData) (value byte)","Funname":"network.getSettingSerialParity","Returntype":"(value byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialSendDelay(data connectionData) (value uint64)","Funname":"network.getSettingSerialSendDelay","Returntype":"(value uint64)","Args":"data connectionData"},{"Uniquefunname":"func getSettingSerialStopbits(data connectionData) (value uint32)","Funname":"network.getSettingSerialStopbits","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamConfig(data connectionData) (value string)","Funname":"network.getSettingTeamConfig","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamMcastRejoinCount(data connectionData) (value int32)","Funname":"network.getSettingTeamMcastRejoinCount","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamMcastRejoinInterval(data connectionData) (value int32)","Funname":"network.getSettingTeamMcastRejoinInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamNotifyPeersCount(data connectionData) (value int32)","Funname":"network.getSettingTeamNotifyPeersCount","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamNotifyPeersInterval(data connectionData) (value int32)","Funname":"network.getSettingTeamNotifyPeersInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortConfig(data connectionData) (value string)","Funname":"network.getSettingTeamPortConfig","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortLacpKey(data connectionData) (value int32)","Funname":"network.getSettingTeamPortLacpKey","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortLacpPrio(data connectionData) (value int32)","Funname":"network.getSettingTeamPortLacpPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortPrio(data connectionData) (value int32)","Funname":"network.getSettingTeamPortPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortQueueId(data connectionData) (value int32)","Funname":"network.getSettingTeamPortQueueId","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamPortSticky(data connectionData) (value bool)","Funname":"network.getSettingTeamPortSticky","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunner(data connectionData) (value string)","Funname":"network.getSettingTeamRunner","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerActive(data connectionData) (value bool)","Funname":"network.getSettingTeamRunnerActive","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerAggSelectPolicy(data connectionData) (value string)","Funname":"network.getSettingTeamRunnerAggSelectPolicy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerFastRate(data connectionData) (value bool)","Funname":"network.getSettingTeamRunnerFastRate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerHwaddrPolicy(data connectionData) (value string)","Funname":"network.getSettingTeamRunnerHwaddrPolicy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerMinPorts(data connectionData) (value int32)","Funname":"network.getSettingTeamRunnerMinPorts","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerSysPrio(data connectionData) (value int32)","Funname":"network.getSettingTeamRunnerSysPrio","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxBalancer(data connectionData) (value string)","Funname":"network.getSettingTeamRunnerTxBalancer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxBalancerInterval(data connectionData) (value int32)","Funname":"network.getSettingTeamRunnerTxBalancerInterval","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTeamRunnerTxHash(data connectionData) (value []string)","Funname":"network.getSettingTeamRunnerTxHash","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunGroup(data connectionData) (value string)","Funname":"network.getSettingTunGroup","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunMode(data connectionData) (value uint32)","Funname":"network.getSettingTunMode","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunMultiQueue(data connectionData) (value bool)","Funname":"network.getSettingTunMultiQueue","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunOwner(data connectionData) (value string)","Funname":"network.getSettingTunOwner","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunPi(data connectionData) (value bool)","Funname":"network.getSettingTunPi","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingTunVnetHdr(data connectionData) (value bool)","Funname":"network.getSettingTunVnetHdr","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingUserData(data connectionData) (value map[string]string)","Funname":"network.getSettingUserData","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanEgressPriorityMap(data connectionData) (value []string)","Funname":"network.getSettingVlanEgressPriorityMap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanFlags(data connectionData) (value uint32)","Funname":"network.getSettingVlanFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanId(data connectionData) (value uint32)","Funname":"network.getSettingVlanId","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanIngressPriorityMap(data connectionData) (value []string)","Funname":"network.getSettingVlanIngressPriorityMap","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVlanParent(data connectionData) (value string)","Funname":"network.getSettingVlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnData(data connectionData) (value map[string]string)","Funname":"network.getSettingVpnData","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyDomain(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyGateway(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecEnable(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyIpsecEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecEsp(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyIpsecEsp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecGatewayId(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyIpsecGatewayId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecGroupName(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyIpsecGroupName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecIke(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyIpsecIke","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyIpsecPsk(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyIpsecPsk","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyLcpEchoFailure(data connectionData) (value uint32)","Funname":"network.getSettingVpnL2tpKeyLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyLcpEchoInterval(data connectionData) (value uint32)","Funname":"network.getSettingVpnL2tpKeyLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyMppeStateful(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoAccomp(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyNoAccomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoPcomp(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyNoPcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNoVjComp(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNobsdcomp(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyNodeflate(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyPassword(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnL2tpKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseChap(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseEap(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseMschap(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefuseMschapv2(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRefusePap(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe128(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyRequireMppe40(data connectionData) (value bool)","Funname":"network.getSettingVpnL2tpKeyRequireMppe40","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnL2tpKeyUser(data connectionData) (value string)","Funname":"network.getSettingVpnL2tpKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyAuthtype(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyAuthtype","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCacert(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyCacert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCookie(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyCookie","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCsdEnable(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenconnectKeyCsdEnable","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyCsdWrapper(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyCsdWrapper","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyGateway(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyGwcert(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyGwcert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyMtu(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyMtu","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyPrivkey(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyPrivkey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyProxy(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyProxy","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyStokenSource(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyStokenSource","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyStokenString(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyStokenString","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenconnectKeyUsercert(data connectionData) (value string)","Funname":"network.getSettingVpnOpenconnectKeyUsercert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyAuth(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyAuth","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCa(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyCa","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCert(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyCert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCertpass(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyCertpass","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCertpassFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyCertpassFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCipher(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyCipher","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyCompLzo(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyCompLzo","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyConnectionType(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyConnectionType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyFragmentSize(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyFragmentSize","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyKey(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyLocalIp(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyLocalIp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyMssfix(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyMssfix","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPassword(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyPort(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProtoTcp(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyProtoTcp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyPort(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyProxyPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyRetry(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyProxyRetry","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyServer(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyProxyServer","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyProxyType(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyProxyType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemote(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteCertTls(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteIp(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyRemoteIp","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRemoteRandom(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyRemoteRandom","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyRenegSeconds(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyRenegSeconds","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyStaticKey(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyStaticKey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTa(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyTa","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTaDir(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyTaDir","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTapDev(data connectionData) (value bool)","Funname":"network.getSettingVpnOpenvpnKeyTapDev","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTlsRemote(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyTlsRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyTunnelMtu(data connectionData) (value uint32)","Funname":"network.getSettingVpnOpenvpnKeyTunnelMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnOpenvpnKeyUsername(data connectionData) (value string)","Funname":"network.getSettingVpnOpenvpnKeyUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPersistent(data connectionData) (value bool)","Funname":"network.getSettingVpnPersistent","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyDomain(data connectionData) (value string)","Funname":"network.getSettingVpnPptpKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyGateway(data connectionData) (value string)","Funname":"network.getSettingVpnPptpKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyLcpEchoFailure(data connectionData) (value uint32)","Funname":"network.getSettingVpnPptpKeyLcpEchoFailure","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyLcpEchoInterval(data connectionData) (value uint32)","Funname":"network.getSettingVpnPptpKeyLcpEchoInterval","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyMppeStateful(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyMppeStateful","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNoVjComp(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyNoVjComp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNobsdcomp(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyNobsdcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyNodeflate(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyNodeflate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyPassword(data connectionData) (value string)","Funname":"network.getSettingVpnPptpKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnPptpKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseChap(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRefuseChap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseEap(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRefuseEap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseMschap(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRefuseMschap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefuseMschapv2(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRefuseMschapv2","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRefusePap(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRefusePap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRequireMppe","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe128(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRequireMppe128","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyRequireMppe40(data connectionData) (value bool)","Funname":"network.getSettingVpnPptpKeyRequireMppe40","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnPptpKeyUser(data connectionData) (value string)","Funname":"network.getSettingVpnPptpKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnSecrets(data connectionData) (value map[string]string)","Funname":"network.getSettingVpnSecrets","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnServiceType(data connectionData) (value string)","Funname":"network.getSettingVpnServiceType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyAddress(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyAddress","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyCertificate(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyCertificate","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyEncap(data connectionData) (value bool)","Funname":"network.getSettingVpnStrongswanKeyEncap","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyIpcomp(data connectionData) (value bool)","Funname":"network.getSettingVpnStrongswanKeyIpcomp","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyMethod(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyMethod","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyPassword(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnStrongswanKeyPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUser(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUsercert(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyUsercert","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyUserkey(data connectionData) (value string)","Funname":"network.getSettingVpnStrongswanKeyUserkey","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnStrongswanKeyVirtual(data connectionData) (value bool)","Funname":"network.getSettingVpnStrongswanKeyVirtual","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnTimeout(data connectionData) (value uint32)","Funname":"network.getSettingVpnTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnUserName(data connectionData) (value string)","Funname":"network.getSettingVpnUserName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyAppVersion(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyAppVersion","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyAuthmode(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyAuthmode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyCaFile(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyCaFile","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData) (value uint32)","Funname":"network.getSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDhgroup(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyDhgroup","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDomain(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyDomain","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyDpdIdleTimeout(data connectionData) (value uint32)","Funname":"network.getSettingVpnVpncKeyDpdIdleTimeout","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyGateway(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyGateway","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyId(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyId","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyLocalPort(data connectionData) (value uint32)","Funname":"network.getSettingVpnVpncKeyLocalPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyNatTraversalMode(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyNatTraversalMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyNoEncryption(data connectionData) (value bool)","Funname":"network.getSettingVpnVpncKeyNoEncryption","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyPerfectForward(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyPerfectForward","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecret(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeySecret","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecretFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnVpncKeySecretFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySecretType(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeySecretType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeySingleDes(data connectionData) (value bool)","Funname":"network.getSettingVpnVpncKeySingleDes","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyVendor(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyVendor","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPassword(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyXauthPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingVpnVpncKeyXauthPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthPasswordType(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyXauthPasswordType","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVpnVpncKeyXauthUser(data connectionData) (value string)","Funname":"network.getSettingVpnVpncKeyXauthUser","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanAgeing(data connectionData) (value uint32)","Funname":"network.getSettingVxlanAgeing","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanDestinationPort(data connectionData) (value uint32)","Funname":"network.getSettingVxlanDestinationPort","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanId(data connectionData) (value uint32)","Funname":"network.getSettingVxlanId","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanL2Miss(data connectionData) (value bool)","Funname":"network.getSettingVxlanL2Miss","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanL3Miss(data connectionData) (value bool)","Funname":"network.getSettingVxlanL3Miss","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLearning(data connectionData) (value bool)","Funname":"network.getSettingVxlanLearning","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLimit(data connectionData) (value uint32)","Funname":"network.getSettingVxlanLimit","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanLocal(data connectionData) (value string)","Funname":"network.getSettingVxlanLocal","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanParent(data connectionData) (value string)","Funname":"network.getSettingVxlanParent","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanProxy(data connectionData) (value bool)","Funname":"network.getSettingVxlanProxy","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanRemote(data connectionData) (value string)","Funname":"network.getSettingVxlanRemote","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanRsc(data connectionData) (value bool)","Funname":"network.getSettingVxlanRsc","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanSourcePortMax(data connectionData) (value uint32)","Funname":"network.getSettingVxlanSourcePortMax","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanSourcePortMin(data connectionData) (value uint32)","Funname":"network.getSettingVxlanSourcePortMin","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanTos(data connectionData) (value uint32)","Funname":"network.getSettingVxlanTos","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVxlanTtl(data connectionData) (value uint32)","Funname":"network.getSettingVxlanTtl","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWimaxMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingWimaxMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWimaxNetworkName(data connectionData) (value string)","Funname":"network.getSettingWimaxNetworkName","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredAutoNegotiate(data connectionData) (value bool)","Funname":"network.getSettingWiredAutoNegotiate","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredClonedMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingWiredClonedMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredDuplex(data connectionData) (value string)","Funname":"network.getSettingWiredDuplex","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredGenerateMacAddressMask(data connectionData) (value string)","Funname":"network.getSettingWiredGenerateMacAddressMask","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingWiredMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMacAddressBlacklist(data connectionData) (value []string)","Funname":"network.getSettingWiredMacAddressBlacklist","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredMtu(data connectionData) (value uint32)","Funname":"network.getSettingWiredMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredPort(data connectionData) (value string)","Funname":"network.getSettingWiredPort","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Nettype(data connectionData) (value string)","Funname":"network.getSettingWiredS390Nettype","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Options(data connectionData) (value map[string]string)","Funname":"network.getSettingWiredS390Options","Returntype":"(value map[string]string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredS390Subchannels(data connectionData) (value []string)","Funname":"network.getSettingWiredS390Subchannels","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredSpeed(data connectionData) (value uint32)","Funname":"network.getSettingWiredSpeed","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredWakeOnLan(data connectionData) (value uint32)","Funname":"network.getSettingWiredWakeOnLan","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWiredWakeOnLanPassword(data connectionData) (value string)","Funname":"network.getSettingWiredWakeOnLanPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessBand(data connectionData) (value string)","Funname":"network.getSettingWirelessBand","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessBssid(data connectionData) (value []byte)","Funname":"network.getSettingWirelessBssid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessChannel(data connectionData) (value uint32)","Funname":"network.getSettingWirelessChannel","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessClonedMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingWirelessClonedMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessGenerateMacAddressMask(data connectionData) (value string)","Funname":"network.getSettingWirelessGenerateMacAddressMask","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessHidden(data connectionData) (value bool)","Funname":"network.getSettingWirelessHidden","Returntype":"(value bool)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddress(data connectionData) (value []byte)","Funname":"network.getSettingWirelessMacAddress","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddressBlacklist(data connectionData) (value []string)","Funname":"network.getSettingWirelessMacAddressBlacklist","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMacAddressRandomization(data connectionData) (value uint32)","Funname":"network.getSettingWirelessMacAddressRandomization","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMode(data connectionData) (value string)","Funname":"network.getSettingWirelessMode","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessMtu(data connectionData) (value uint32)","Funname":"network.getSettingWirelessMtu","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessPowersave(data connectionData) (value uint32)","Funname":"network.getSettingWirelessPowersave","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessRate(data connectionData) (value uint32)","Funname":"network.getSettingWirelessRate","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityAuthAlg(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityAuthAlg","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityGroup(data connectionData) (value []string)","Funname":"network.getSettingWirelessSecurityGroup","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityKeyMgmt(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityKeyMgmt","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapPassword(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityLeapPassword","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapPasswordFlags(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityLeapPasswordFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityLeapUsername(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityLeapUsername","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPairwise(data connectionData) (value []string)","Funname":"network.getSettingWirelessSecurityPairwise","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPmf(data connectionData) (value int32)","Funname":"network.getSettingWirelessSecurityPmf","Returntype":"(value int32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityProto(data connectionData) (value []string)","Funname":"network.getSettingWirelessSecurityProto","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPsk(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityPsk","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityPskFlags(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityPskFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey0(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityWepKey0","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey1(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityWepKey1","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey2(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityWepKey2","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKey3(data connectionData) (value string)","Funname":"network.getSettingWirelessSecurityWepKey3","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKeyFlags(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityWepKeyFlags","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepKeyType(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityWepKeyType","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWepTxKeyidx(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityWepTxKeyidx","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSecurityWpsMethod(data connectionData) (value uint32)","Funname":"network.getSettingWirelessSecurityWpsMethod","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSeenBssids(data connectionData) (value []string)","Funname":"network.getSettingWirelessSeenBssids","Returntype":"(value []string)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessSsid(data connectionData) (value []byte)","Funname":"network.getSettingWirelessSsid","Returntype":"(value []byte)","Args":"data connectionData"},{"Uniquefunname":"func getSettingWirelessTxPower(data connectionData) (value uint32)","Funname":"network.getSettingWirelessTxPower","Returntype":"(value uint32)","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAltsubjectMatchesExists(data connectionData) bool","Funname":"network.isSetting8021xAltsubjectMatchesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAnonymousIdentityExists(data connectionData) bool","Funname":"network.isSetting8021xAnonymousIdentityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xAuthTimeoutExists(data connectionData) bool","Funname":"network.isSetting8021xAuthTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertExists(data connectionData) bool","Funname":"network.isSetting8021xCaCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xCaCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaCertPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xCaCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xCaPathExists(data connectionData) bool","Funname":"network.isSetting8021xCaPathExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertExists(data connectionData) bool","Funname":"network.isSetting8021xClientCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xClientCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xClientCertPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xClientCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xDomainSuffixMatchExists(data connectionData) bool","Funname":"network.isSetting8021xDomainSuffixMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xEapExists(data connectionData) bool","Funname":"network.isSetting8021xEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xIdentityExists(data connectionData) bool","Funname":"network.isSetting8021xIdentityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPacFileExists(data connectionData) bool","Funname":"network.isSetting8021xPacFileExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordRawExists(data connectionData) bool","Funname":"network.isSetting8021xPasswordRawExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPasswordRawFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPasswordRawFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1AuthFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPhase1AuthFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1FastProvisioningExists(data connectionData) bool","Funname":"network.isSetting8021xPhase1FastProvisioningExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1PeaplabelExists(data connectionData) bool","Funname":"network.isSetting8021xPhase1PeaplabelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase1PeapverExists(data connectionData) bool","Funname":"network.isSetting8021xPhase1PeapverExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AltsubjectMatchesExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2AltsubjectMatchesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AuthExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2AuthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2AutheapExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2AutheapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2CaCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2CaCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaCertPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2CaCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2CaPathExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2CaPathExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2ClientCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2ClientCertPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2ClientCertPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2ClientCertPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2DomainSuffixMatchExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2DomainSuffixMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2PrivateKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2PrivateKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2PrivateKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2PrivateKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPhase2SubjectMatchExists(data connectionData) bool","Funname":"network.isSetting8021xPhase2SubjectMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPinExists(data connectionData) bool","Funname":"network.isSetting8021xPinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPinFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPinFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyExists(data connectionData) bool","Funname":"network.isSetting8021xPrivateKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyPasswordExists(data connectionData) bool","Funname":"network.isSetting8021xPrivateKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xPrivateKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSetting8021xPrivateKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xSubjectMatchExists(data connectionData) bool","Funname":"network.isSetting8021xSubjectMatchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSetting8021xSystemCaCertsExists(data connectionData) bool","Funname":"network.isSetting8021xSystemCaCertsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslEncapsulationExists(data connectionData) bool","Funname":"network.isSettingAdslEncapsulationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslPasswordExists(data connectionData) bool","Funname":"network.isSettingAdslPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingAdslPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslProtocolExists(data connectionData) bool","Funname":"network.isSettingAdslProtocolExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslUsernameExists(data connectionData) bool","Funname":"network.isSettingAdslUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslVciExists(data connectionData) bool","Funname":"network.isSettingAdslVciExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingAdslVpiExists(data connectionData) bool","Funname":"network.isSettingAdslVpiExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBluetoothBdaddrExists(data connectionData) bool","Funname":"network.isSettingBluetoothBdaddrExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBluetoothTypeExists(data connectionData) bool","Funname":"network.isSettingBluetoothTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBondOptionsExists(data connectionData) bool","Funname":"network.isSettingBondOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeAgeingTimeExists(data connectionData) bool","Funname":"network.isSettingBridgeAgeingTimeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeForwardDelayExists(data connectionData) bool","Funname":"network.isSettingBridgeForwardDelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeGroupForwardMaskExists(data connectionData) bool","Funname":"network.isSettingBridgeGroupForwardMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeHelloTimeExists(data connectionData) bool","Funname":"network.isSettingBridgeHelloTimeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMacAddressExists(data connectionData) bool","Funname":"network.isSettingBridgeMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMaxAgeExists(data connectionData) bool","Funname":"network.isSettingBridgeMaxAgeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeMulticastSnoopingExists(data connectionData) bool","Funname":"network.isSettingBridgeMulticastSnoopingExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortHairpinModeExists(data connectionData) bool","Funname":"network.isSettingBridgePortHairpinModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortPathCostExists(data connectionData) bool","Funname":"network.isSettingBridgePortPathCostExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePortPriorityExists(data connectionData) bool","Funname":"network.isSettingBridgePortPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgePriorityExists(data connectionData) bool","Funname":"network.isSettingBridgePriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingBridgeStpExists(data connectionData) bool","Funname":"network.isSettingBridgeStpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaMtuExists(data connectionData) bool","Funname":"network.isSettingCdmaMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaNumberExists(data connectionData) bool","Funname":"network.isSettingCdmaNumberExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaPasswordExists(data connectionData) bool","Funname":"network.isSettingCdmaPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingCdmaPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingCdmaUsernameExists(data connectionData) bool","Funname":"network.isSettingCdmaUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAuthRetriesExists(data connectionData) bool","Funname":"network.isSettingConnectionAuthRetriesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectExists(data connectionData) bool","Funname":"network.isSettingConnectionAutoconnectExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectPriorityExists(data connectionData) bool","Funname":"network.isSettingConnectionAutoconnectPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectRetriesExists(data connectionData) bool","Funname":"network.isSettingConnectionAutoconnectRetriesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionAutoconnectSlavesExists(data connectionData) bool","Funname":"network.isSettingConnectionAutoconnectSlavesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionGatewayPingTimeoutExists(data connectionData) bool","Funname":"network.isSettingConnectionGatewayPingTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionIdExists(data connectionData) bool","Funname":"network.isSettingConnectionIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionInterfaceNameExists(data connectionData) bool","Funname":"network.isSettingConnectionInterfaceNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionLldpExists(data connectionData) bool","Funname":"network.isSettingConnectionLldpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionMasterExists(data connectionData) bool","Funname":"network.isSettingConnectionMasterExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionMeteredExists(data connectionData) bool","Funname":"network.isSettingConnectionMeteredExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionPermissionsExists(data connectionData) bool","Funname":"network.isSettingConnectionPermissionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionReadOnlyExists(data connectionData) bool","Funname":"network.isSettingConnectionReadOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionSecondariesExists(data connectionData) bool","Funname":"network.isSettingConnectionSecondariesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionSlaveTypeExists(data connectionData) bool","Funname":"network.isSettingConnectionSlaveTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionStableIdExists(data connectionData) bool","Funname":"network.isSettingConnectionStableIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionTimestampExists(data connectionData) bool","Funname":"network.isSettingConnectionTimestampExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionTypeExists(data connectionData) bool","Funname":"network.isSettingConnectionTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionUuidExists(data connectionData) bool","Funname":"network.isSettingConnectionUuidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingConnectionZoneExists(data connectionData) bool","Funname":"network.isSettingConnectionZoneExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoeFlagsExists(data connectionData) bool","Funname":"network.isSettingDcbAppFcoeFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoeModeExists(data connectionData) bool","Funname":"network.isSettingDcbAppFcoeModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFcoePriorityExists(data connectionData) bool","Funname":"network.isSettingDcbAppFcoePriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFipFlagsExists(data connectionData) bool","Funname":"network.isSettingDcbAppFipFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppFipPriorityExists(data connectionData) bool","Funname":"network.isSettingDcbAppFipPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppIscsiFlagsExists(data connectionData) bool","Funname":"network.isSettingDcbAppIscsiFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbAppIscsiPriorityExists(data connectionData) bool","Funname":"network.isSettingDcbAppIscsiPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityBandwidthExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityFlowControlExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityFlowControlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityFlowControlFlagsExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityFlowControlFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupBandwidthExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityGroupBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupFlagsExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityGroupFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityGroupIdExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityGroupIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityStrictBandwidthExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityStrictBandwidthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingDcbPriorityTrafficClassExists(data connectionData) bool","Funname":"network.isSettingDcbPriorityTrafficClassExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmApnExists(data connectionData) bool","Funname":"network.isSettingGsmApnExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmDeviceIdExists(data connectionData) bool","Funname":"network.isSettingGsmDeviceIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmHomeOnlyExists(data connectionData) bool","Funname":"network.isSettingGsmHomeOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmMtuExists(data connectionData) bool","Funname":"network.isSettingGsmMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmNetworkIdExists(data connectionData) bool","Funname":"network.isSettingGsmNetworkIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmNumberExists(data connectionData) bool","Funname":"network.isSettingGsmNumberExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPasswordExists(data connectionData) bool","Funname":"network.isSettingGsmPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingGsmPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPinExists(data connectionData) bool","Funname":"network.isSettingGsmPinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmPinFlagsExists(data connectionData) bool","Funname":"network.isSettingGsmPinFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmSimIdExists(data connectionData) bool","Funname":"network.isSettingGsmSimIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmSimOperatorIdExists(data connectionData) bool","Funname":"network.isSettingGsmSimOperatorIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingGsmUsernameExists(data connectionData) bool","Funname":"network.isSettingGsmUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigAddressesExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigAddressesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDadTimeoutExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDadTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpClientIdExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDhcpClientIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpFqdnExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDhcpFqdnExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpHostnameExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDhcpHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpSendHostnameExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDhcpSendHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDhcpTimeoutExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDhcpTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsOptionsExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDnsOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsPriorityExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDnsPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigDnsSearchExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigDnsSearchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigGatewayExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigIgnoreAutoDnsExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigIgnoreAutoDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigIgnoreAutoRoutesExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigIgnoreAutoRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigMayFailExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigMayFailExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigMethodExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigNeverDefaultExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigNeverDefaultExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRouteMetricExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigRouteMetricExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRouteTableExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigRouteTableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP4ConfigRoutesExists(data connectionData) bool","Funname":"network.isSettingIP4ConfigRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigAddrGenModeExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigAddrGenModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigAddressesExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigAddressesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDadTimeoutExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDadTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpHostnameExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDhcpHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpSendHostnameExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDhcpSendHostnameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDhcpTimeoutExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDhcpTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsOptionsExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDnsOptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsPriorityExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDnsPriorityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigDnsSearchExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigDnsSearchExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigGatewayExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIgnoreAutoDnsExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigIgnoreAutoDnsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIgnoreAutoRoutesExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigIgnoreAutoRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigIp6PrivacyExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigIp6PrivacyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigMayFailExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigMayFailExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigMethodExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigNeverDefaultExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigNeverDefaultExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRouteMetricExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigRouteMetricExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRouteTableExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigRouteTableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigRoutesExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigRoutesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIP6ConfigTokenExists(data connectionData) bool","Funname":"network.isSettingIP6ConfigTokenExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelEncapsulationLimitExists(data connectionData) bool","Funname":"network.isSettingIPTunnelEncapsulationLimitExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelFlowLabelExists(data connectionData) bool","Funname":"network.isSettingIPTunnelFlowLabelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelInputKeyExists(data connectionData) bool","Funname":"network.isSettingIPTunnelInputKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelLocalExists(data connectionData) bool","Funname":"network.isSettingIPTunnelLocalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelModeExists(data connectionData) bool","Funname":"network.isSettingIPTunnelModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelMtuExists(data connectionData) bool","Funname":"network.isSettingIPTunnelMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelOutputKeyExists(data connectionData) bool","Funname":"network.isSettingIPTunnelOutputKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelParentExists(data connectionData) bool","Funname":"network.isSettingIPTunnelParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelPathMtuDiscoveryExists(data connectionData) bool","Funname":"network.isSettingIPTunnelPathMtuDiscoveryExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelRemoteExists(data connectionData) bool","Funname":"network.isSettingIPTunnelRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelTosExists(data connectionData) bool","Funname":"network.isSettingIPTunnelTosExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingIPTunnelTtlExists(data connectionData) bool","Funname":"network.isSettingIPTunnelTtlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandMacAddressExists(data connectionData) bool","Funname":"network.isSettingInfinibandMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandMtuExists(data connectionData) bool","Funname":"network.isSettingInfinibandMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandPKeyExists(data connectionData) bool","Funname":"network.isSettingInfinibandPKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandParentExists(data connectionData) bool","Funname":"network.isSettingInfinibandParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingInfinibandTransportModeExists(data connectionData) bool","Funname":"network.isSettingInfinibandTransportModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecEncryptExists(data connectionData) bool","Funname":"network.isSettingMacsecEncryptExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCakExists(data connectionData) bool","Funname":"network.isSettingMacsecMkaCakExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCakFlagsExists(data connectionData) bool","Funname":"network.isSettingMacsecMkaCakFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecMkaCknExists(data connectionData) bool","Funname":"network.isSettingMacsecMkaCknExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecModeExists(data connectionData) bool","Funname":"network.isSettingMacsecModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecParentExists(data connectionData) bool","Funname":"network.isSettingMacsecParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecPortExists(data connectionData) bool","Funname":"network.isSettingMacsecPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacsecValidationExists(data connectionData) bool","Funname":"network.isSettingMacsecValidationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanModeExists(data connectionData) bool","Funname":"network.isSettingMacvlanModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanParentExists(data connectionData) bool","Funname":"network.isSettingMacvlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanPromiscuousExists(data connectionData) bool","Funname":"network.isSettingMacvlanPromiscuousExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingMacvlanTapExists(data connectionData) bool","Funname":"network.isSettingMacvlanTapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshChannelExists(data connectionData) bool","Funname":"network.isSettingOlpcMeshChannelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshDhcpAnycastAddressExists(data connectionData) bool","Funname":"network.isSettingOlpcMeshDhcpAnycastAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOlpcMeshSsidExists(data connectionData) bool","Funname":"network.isSettingOlpcMeshSsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeFailModeExists(data connectionData) bool","Funname":"network.isSettingOvsBridgeFailModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeMcastSnoopingEnableExists(data connectionData) bool","Funname":"network.isSettingOvsBridgeMcastSnoopingEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeRstpEnableExists(data connectionData) bool","Funname":"network.isSettingOvsBridgeRstpEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsBridgeStpEnableExists(data connectionData) bool","Funname":"network.isSettingOvsBridgeStpEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsInterfaceTypeExists(data connectionData) bool","Funname":"network.isSettingOvsInterfaceTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPatchPeerExists(data connectionData) bool","Funname":"network.isSettingOvsPatchPeerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondDowndelayExists(data connectionData) bool","Funname":"network.isSettingOvsPortBondDowndelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondModeExists(data connectionData) bool","Funname":"network.isSettingOvsPortBondModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortBondUpdelayExists(data connectionData) bool","Funname":"network.isSettingOvsPortBondUpdelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortLacpExists(data connectionData) bool","Funname":"network.isSettingOvsPortLacpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortTagExists(data connectionData) bool","Funname":"network.isSettingOvsPortTagExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingOvsPortVlanModeExists(data connectionData) bool","Funname":"network.isSettingOvsPortVlanModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppBaudExists(data connectionData) bool","Funname":"network.isSettingPppBaudExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppCrtsctsExists(data connectionData) bool","Funname":"network.isSettingPppCrtsctsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppLcpEchoFailureExists(data connectionData) bool","Funname":"network.isSettingPppLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppLcpEchoIntervalExists(data connectionData) bool","Funname":"network.isSettingPppLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMppeStatefulExists(data connectionData) bool","Funname":"network.isSettingPppMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMruExists(data connectionData) bool","Funname":"network.isSettingPppMruExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppMtuExists(data connectionData) bool","Funname":"network.isSettingPppMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNoVjCompExists(data connectionData) bool","Funname":"network.isSettingPppNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNoauthExists(data connectionData) bool","Funname":"network.isSettingPppNoauthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNobsdcompExists(data connectionData) bool","Funname":"network.isSettingPppNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppNodeflateExists(data connectionData) bool","Funname":"network.isSettingPppNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseChapExists(data connectionData) bool","Funname":"network.isSettingPppRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseEapExists(data connectionData) bool","Funname":"network.isSettingPppRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseMschapExists(data connectionData) bool","Funname":"network.isSettingPppRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefuseMschapv2Exists(data connectionData) bool","Funname":"network.isSettingPppRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRefusePapExists(data connectionData) bool","Funname":"network.isSettingPppRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRequireMppe128Exists(data connectionData) bool","Funname":"network.isSettingPppRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppRequireMppeExists(data connectionData) bool","Funname":"network.isSettingPppRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeParentExists(data connectionData) bool","Funname":"network.isSettingPppoeParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoePasswordExists(data connectionData) bool","Funname":"network.isSettingPppoePasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoePasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingPppoePasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeServiceExists(data connectionData) bool","Funname":"network.isSettingPppoeServiceExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingPppoeUsernameExists(data connectionData) bool","Funname":"network.isSettingPppoeUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyBrowserOnlyExists(data connectionData) bool","Funname":"network.isSettingProxyBrowserOnlyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyMethodExists(data connectionData) bool","Funname":"network.isSettingProxyMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyPacScriptExists(data connectionData) bool","Funname":"network.isSettingProxyPacScriptExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingProxyPacUrlExists(data connectionData) bool","Funname":"network.isSettingProxyPacUrlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialBaudExists(data connectionData) bool","Funname":"network.isSettingSerialBaudExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialBitsExists(data connectionData) bool","Funname":"network.isSettingSerialBitsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialParityExists(data connectionData) bool","Funname":"network.isSettingSerialParityExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialSendDelayExists(data connectionData) bool","Funname":"network.isSettingSerialSendDelayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingSerialStopbitsExists(data connectionData) bool","Funname":"network.isSettingSerialStopbitsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamConfigExists(data connectionData) bool","Funname":"network.isSettingTeamConfigExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamMcastRejoinCountExists(data connectionData) bool","Funname":"network.isSettingTeamMcastRejoinCountExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamMcastRejoinIntervalExists(data connectionData) bool","Funname":"network.isSettingTeamMcastRejoinIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamNotifyPeersCountExists(data connectionData) bool","Funname":"network.isSettingTeamNotifyPeersCountExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamNotifyPeersIntervalExists(data connectionData) bool","Funname":"network.isSettingTeamNotifyPeersIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortConfigExists(data connectionData) bool","Funname":"network.isSettingTeamPortConfigExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortLacpKeyExists(data connectionData) bool","Funname":"network.isSettingTeamPortLacpKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortLacpPrioExists(data connectionData) bool","Funname":"network.isSettingTeamPortLacpPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortPrioExists(data connectionData) bool","Funname":"network.isSettingTeamPortPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortQueueIdExists(data connectionData) bool","Funname":"network.isSettingTeamPortQueueIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamPortStickyExists(data connectionData) bool","Funname":"network.isSettingTeamPortStickyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerActiveExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerActiveExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerAggSelectPolicyExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerAggSelectPolicyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerFastRateExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerFastRateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerHwaddrPolicyExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerHwaddrPolicyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerMinPortsExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerMinPortsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerSysPrioExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerSysPrioExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxBalancerExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerTxBalancerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxBalancerIntervalExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerTxBalancerIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTeamRunnerTxHashExists(data connectionData) bool","Funname":"network.isSettingTeamRunnerTxHashExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunGroupExists(data connectionData) bool","Funname":"network.isSettingTunGroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunModeExists(data connectionData) bool","Funname":"network.isSettingTunModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunMultiQueueExists(data connectionData) bool","Funname":"network.isSettingTunMultiQueueExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunOwnerExists(data connectionData) bool","Funname":"network.isSettingTunOwnerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunPiExists(data connectionData) bool","Funname":"network.isSettingTunPiExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingTunVnetHdrExists(data connectionData) bool","Funname":"network.isSettingTunVnetHdrExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingUserDataExists(data connectionData) bool","Funname":"network.isSettingUserDataExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanEgressPriorityMapExists(data connectionData) bool","Funname":"network.isSettingVlanEgressPriorityMapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanFlagsExists(data connectionData) bool","Funname":"network.isSettingVlanFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanIdExists(data connectionData) bool","Funname":"network.isSettingVlanIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanIngressPriorityMapExists(data connectionData) bool","Funname":"network.isSettingVlanIngressPriorityMapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVlanParentExists(data connectionData) bool","Funname":"network.isSettingVlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnDataExists(data connectionData) bool","Funname":"network.isSettingVpnDataExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyDomainExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyGatewayExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecEnableExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecEspExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecEspExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecGatewayIdExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecGatewayIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecGroupNameExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecGroupNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecIkeExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecIkeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyIpsecPskExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyIpsecPskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyLcpEchoFailureExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyLcpEchoIntervalExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyMppeStatefulExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoAccompExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyNoAccompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoPcompExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyNoPcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNoVjCompExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNobsdcompExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyNodeflateExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseChapExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseEapExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseMschapExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefuseMschapv2Exists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRefusePapExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppe128Exists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppe40Exists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRequireMppe40Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyRequireMppeExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnL2tpKeyUserExists(data connectionData) bool","Funname":"network.isSettingVpnL2tpKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyAuthtypeExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyAuthtypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCacertExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyCacertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCookieExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyCookieExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCsdEnableExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyCsdEnableExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyCsdWrapperExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyCsdWrapperExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyGatewayExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyGwcertExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyGwcertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyMtuExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyPemPassphraseFsidExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyPemPassphraseFsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyPrivkeyExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyPrivkeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyProxyExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyProxyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyStokenSourceExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyStokenSourceExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyStokenStringExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyStokenStringExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenconnectKeyUsercertExists(data connectionData) bool","Funname":"network.isSettingVpnOpenconnectKeyUsercertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyAuthExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyAuthExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCaExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCaExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertpassExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCertpassExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCertpassFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCertpassFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCipherExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCipherExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyCompLzoExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyCompLzoExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyConnectionTypeExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyConnectionTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyFragmentSizeExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyFragmentSizeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyHttpProxyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyHttpProxyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyHttpProxyUsernameExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyHttpProxyUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyKeyExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyLocalIpExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyLocalIpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyMssfixExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyMssfixExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyPortExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProtoTcpExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyProtoTcpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyPortExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyProxyPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyRetryExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyProxyRetryExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyServerExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyProxyServerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyProxyTypeExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyProxyTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteCertTlsExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyRemoteCertTlsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteIpExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyRemoteIpExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRemoteRandomExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyRemoteRandomExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyRenegSecondsExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyRenegSecondsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyStaticKeyDirectionExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyStaticKeyDirectionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyStaticKeyExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyStaticKeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTaDirExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyTaDirExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTaExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyTaExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTapDevExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyTapDevExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTlsRemoteExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyTlsRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyTunnelMtuExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyTunnelMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnOpenvpnKeyUsernameExists(data connectionData) bool","Funname":"network.isSettingVpnOpenvpnKeyUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPersistentExists(data connectionData) bool","Funname":"network.isSettingVpnPersistentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyDomainExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyGatewayExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyLcpEchoFailureExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyLcpEchoFailureExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyLcpEchoIntervalExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyLcpEchoIntervalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyMppeStatefulExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyMppeStatefulExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNoVjCompExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyNoVjCompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNobsdcompExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyNobsdcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyNodeflateExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyNodeflateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseChapExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRefuseChapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseEapExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRefuseEapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseMschapExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRefuseMschapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefuseMschapv2Exists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRefuseMschapv2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRefusePapExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRefusePapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppe128Exists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRequireMppe128Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppe40Exists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRequireMppe40Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyRequireMppeExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyRequireMppeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnPptpKeyUserExists(data connectionData) bool","Funname":"network.isSettingVpnPptpKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnSecretsExists(data connectionData) bool","Funname":"network.isSettingVpnSecretsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnServiceTypeExists(data connectionData) bool","Funname":"network.isSettingVpnServiceTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyAddressExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyCertificateExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyCertificateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyEncapExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyEncapExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyIpcompExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyIpcompExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyMethodExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUserExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUsercertExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyUsercertExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyUserkeyExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyUserkeyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnStrongswanKeyVirtualExists(data connectionData) bool","Funname":"network.isSettingVpnStrongswanKeyVirtualExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnTimeoutExists(data connectionData) bool","Funname":"network.isSettingVpnTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnUserNameExists(data connectionData) bool","Funname":"network.isSettingVpnUserNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyAppVersionExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyAppVersionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyAuthmodeExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyAuthmodeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyCaFileExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyCaFileExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyCiscoUdpEncapsPortExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyCiscoUdpEncapsPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDhgroupExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyDhgroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDomainExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyDomainExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyDpdIdleTimeoutExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyDpdIdleTimeoutExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyGatewayExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyGatewayExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyIdExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyLocalPortExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyLocalPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyNatTraversalModeExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyNatTraversalModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyNoEncryptionExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyNoEncryptionExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyPerfectForwardExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyPerfectForwardExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeySecretExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeySecretFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySecretTypeExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeySecretTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeySingleDesExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeySingleDesExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyVendorExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyVendorExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyXauthPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyXauthPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthPasswordTypeExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyXauthPasswordTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVpnVpncKeyXauthUserExists(data connectionData) bool","Funname":"network.isSettingVpnVpncKeyXauthUserExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanAgeingExists(data connectionData) bool","Funname":"network.isSettingVxlanAgeingExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanDestinationPortExists(data connectionData) bool","Funname":"network.isSettingVxlanDestinationPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanIdExists(data connectionData) bool","Funname":"network.isSettingVxlanIdExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanL2MissExists(data connectionData) bool","Funname":"network.isSettingVxlanL2MissExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanL3MissExists(data connectionData) bool","Funname":"network.isSettingVxlanL3MissExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLearningExists(data connectionData) bool","Funname":"network.isSettingVxlanLearningExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLimitExists(data connectionData) bool","Funname":"network.isSettingVxlanLimitExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanLocalExists(data connectionData) bool","Funname":"network.isSettingVxlanLocalExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanParentExists(data connectionData) bool","Funname":"network.isSettingVxlanParentExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanProxyExists(data connectionData) bool","Funname":"network.isSettingVxlanProxyExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanRemoteExists(data connectionData) bool","Funname":"network.isSettingVxlanRemoteExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanRscExists(data connectionData) bool","Funname":"network.isSettingVxlanRscExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanSourcePortMaxExists(data connectionData) bool","Funname":"network.isSettingVxlanSourcePortMaxExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanSourcePortMinExists(data connectionData) bool","Funname":"network.isSettingVxlanSourcePortMinExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanTosExists(data connectionData) bool","Funname":"network.isSettingVxlanTosExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingVxlanTtlExists(data connectionData) bool","Funname":"network.isSettingVxlanTtlExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWimaxMacAddressExists(data connectionData) bool","Funname":"network.isSettingWimaxMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWimaxNetworkNameExists(data connectionData) bool","Funname":"network.isSettingWimaxNetworkNameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredAutoNegotiateExists(data connectionData) bool","Funname":"network.isSettingWiredAutoNegotiateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredClonedMacAddressExists(data connectionData) bool","Funname":"network.isSettingWiredClonedMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredDuplexExists(data connectionData) bool","Funname":"network.isSettingWiredDuplexExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredGenerateMacAddressMaskExists(data connectionData) bool","Funname":"network.isSettingWiredGenerateMacAddressMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMacAddressBlacklistExists(data connectionData) bool","Funname":"network.isSettingWiredMacAddressBlacklistExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMacAddressExists(data connectionData) bool","Funname":"network.isSettingWiredMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredMtuExists(data connectionData) bool","Funname":"network.isSettingWiredMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredPortExists(data connectionData) bool","Funname":"network.isSettingWiredPortExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390NettypeExists(data connectionData) bool","Funname":"network.isSettingWiredS390NettypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390OptionsExists(data connectionData) bool","Funname":"network.isSettingWiredS390OptionsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredS390SubchannelsExists(data connectionData) bool","Funname":"network.isSettingWiredS390SubchannelsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredSpeedExists(data connectionData) bool","Funname":"network.isSettingWiredSpeedExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredWakeOnLanExists(data connectionData) bool","Funname":"network.isSettingWiredWakeOnLanExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWiredWakeOnLanPasswordExists(data connectionData) bool","Funname":"network.isSettingWiredWakeOnLanPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessBandExists(data connectionData) bool","Funname":"network.isSettingWirelessBandExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessBssidExists(data connectionData) bool","Funname":"network.isSettingWirelessBssidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessChannelExists(data connectionData) bool","Funname":"network.isSettingWirelessChannelExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessClonedMacAddressExists(data connectionData) bool","Funname":"network.isSettingWirelessClonedMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessGenerateMacAddressMaskExists(data connectionData) bool","Funname":"network.isSettingWirelessGenerateMacAddressMaskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessHiddenExists(data connectionData) bool","Funname":"network.isSettingWirelessHiddenExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressBlacklistExists(data connectionData) bool","Funname":"network.isSettingWirelessMacAddressBlacklistExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressExists(data connectionData) bool","Funname":"network.isSettingWirelessMacAddressExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMacAddressRandomizationExists(data connectionData) bool","Funname":"network.isSettingWirelessMacAddressRandomizationExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessModeExists(data connectionData) bool","Funname":"network.isSettingWirelessModeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessMtuExists(data connectionData) bool","Funname":"network.isSettingWirelessMtuExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessPowersaveExists(data connectionData) bool","Funname":"network.isSettingWirelessPowersaveExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessRateExists(data connectionData) bool","Funname":"network.isSettingWirelessRateExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityAuthAlgExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityAuthAlgExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityGroupExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityGroupExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityKeyMgmtExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityKeyMgmtExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapPasswordExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityLeapPasswordExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapPasswordFlagsExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityLeapPasswordFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityLeapUsernameExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityLeapUsernameExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPairwiseExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityPairwiseExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPmfExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityPmfExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityProtoExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityProtoExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPskExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityPskExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityPskFlagsExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityPskFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey0Exists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKey0Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey1Exists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKey1Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey2Exists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKey2Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKey3Exists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKey3Exists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKeyFlagsExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKeyFlagsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepKeyTypeExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepKeyTypeExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWepTxKeyidxExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWepTxKeyidxExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSecurityWpsMethodExists(data connectionData) bool","Funname":"network.isSettingWirelessSecurityWpsMethodExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSeenBssidsExists(data connectionData) bool","Funname":"network.isSettingWirelessSeenBssidsExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessSsidExists(data connectionData) bool","Funname":"network.isSettingWirelessSsidExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func isSettingWirelessTxPowerExists(data connectionData) bool","Funname":"network.isSettingWirelessTxPowerExists","Returntype":"bool","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xAltsubjectMatches(data connectionData)","Funname":"network.removeSetting8021xAltsubjectMatches","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xAnonymousIdentity(data connectionData)","Funname":"network.removeSetting8021xAnonymousIdentity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xAuthTimeout(data connectionData)","Funname":"network.removeSetting8021xAuthTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCert(data connectionData)","Funname":"network.removeSetting8021xCaCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCertPassword(data connectionData)","Funname":"network.removeSetting8021xCaCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCertPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xCaCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaPath(data connectionData)","Funname":"network.removeSetting8021xCaPath","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCert(data connectionData)","Funname":"network.removeSetting8021xClientCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCertPassword(data connectionData)","Funname":"network.removeSetting8021xClientCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCertPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xClientCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xDomainSuffixMatch(data connectionData)","Funname":"network.removeSetting8021xDomainSuffixMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xEap(data connectionData)","Funname":"network.removeSetting8021xEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xIdentity(data connectionData)","Funname":"network.removeSetting8021xIdentity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPacFile(data connectionData)","Funname":"network.removeSetting8021xPacFile","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPassword(data connectionData)","Funname":"network.removeSetting8021xPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordRaw(data connectionData)","Funname":"network.removeSetting8021xPasswordRaw","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordRawFlags(data connectionData)","Funname":"network.removeSetting8021xPasswordRawFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1AuthFlags(data connectionData)","Funname":"network.removeSetting8021xPhase1AuthFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1FastProvisioning(data connectionData)","Funname":"network.removeSetting8021xPhase1FastProvisioning","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1Peaplabel(data connectionData)","Funname":"network.removeSetting8021xPhase1Peaplabel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1Peapver(data connectionData)","Funname":"network.removeSetting8021xPhase1Peapver","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2AltsubjectMatches(data connectionData)","Funname":"network.removeSetting8021xPhase2AltsubjectMatches","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2Auth(data connectionData)","Funname":"network.removeSetting8021xPhase2Auth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2Autheap(data connectionData)","Funname":"network.removeSetting8021xPhase2Autheap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCert(data connectionData)","Funname":"network.removeSetting8021xPhase2CaCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCertPassword(data connectionData)","Funname":"network.removeSetting8021xPhase2CaCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCertPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xPhase2CaCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaPath(data connectionData)","Funname":"network.removeSetting8021xPhase2CaPath","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCert(data connectionData)","Funname":"network.removeSetting8021xPhase2ClientCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCertPassword(data connectionData)","Funname":"network.removeSetting8021xPhase2ClientCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCertPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xPhase2ClientCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2DomainSuffixMatch(data connectionData)","Funname":"network.removeSetting8021xPhase2DomainSuffixMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKey(data connectionData)","Funname":"network.removeSetting8021xPhase2PrivateKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKeyPassword(data connectionData)","Funname":"network.removeSetting8021xPhase2PrivateKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2SubjectMatch(data connectionData)","Funname":"network.removeSetting8021xPhase2SubjectMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPin(data connectionData)","Funname":"network.removeSetting8021xPin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPinFlags(data connectionData)","Funname":"network.removeSetting8021xPinFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKey(data connectionData)","Funname":"network.removeSetting8021xPrivateKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKeyPassword(data connectionData)","Funname":"network.removeSetting8021xPrivateKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKeyPasswordFlags(data connectionData)","Funname":"network.removeSetting8021xPrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xSubjectMatch(data connectionData)","Funname":"network.removeSetting8021xSubjectMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xSystemCaCerts(data connectionData)","Funname":"network.removeSetting8021xSystemCaCerts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslEncapsulation(data connectionData)","Funname":"network.removeSettingAdslEncapsulation","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslPassword(data connectionData)","Funname":"network.removeSettingAdslPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslPasswordFlags(data connectionData)","Funname":"network.removeSettingAdslPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslProtocol(data connectionData)","Funname":"network.removeSettingAdslProtocol","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslUsername(data connectionData)","Funname":"network.removeSettingAdslUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslVci(data connectionData)","Funname":"network.removeSettingAdslVci","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslVpi(data connectionData)","Funname":"network.removeSettingAdslVpi","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBluetoothBdaddr(data connectionData)","Funname":"network.removeSettingBluetoothBdaddr","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBluetoothType(data connectionData)","Funname":"network.removeSettingBluetoothType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBondOptions(data connectionData)","Funname":"network.removeSettingBondOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeAgeingTime(data connectionData)","Funname":"network.removeSettingBridgeAgeingTime","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeForwardDelay(data connectionData)","Funname":"network.removeSettingBridgeForwardDelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeGroupForwardMask(data connectionData)","Funname":"network.removeSettingBridgeGroupForwardMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeHelloTime(data connectionData)","Funname":"network.removeSettingBridgeHelloTime","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMacAddress(data connectionData)","Funname":"network.removeSettingBridgeMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMaxAge(data connectionData)","Funname":"network.removeSettingBridgeMaxAge","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMulticastSnooping(data connectionData)","Funname":"network.removeSettingBridgeMulticastSnooping","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortHairpinMode(data connectionData)","Funname":"network.removeSettingBridgePortHairpinMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortPathCost(data connectionData)","Funname":"network.removeSettingBridgePortPathCost","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortPriority(data connectionData)","Funname":"network.removeSettingBridgePortPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePriority(data connectionData)","Funname":"network.removeSettingBridgePriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeStp(data connectionData)","Funname":"network.removeSettingBridgeStp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaMtu(data connectionData)","Funname":"network.removeSettingCdmaMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaNumber(data connectionData)","Funname":"network.removeSettingCdmaNumber","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaPassword(data connectionData)","Funname":"network.removeSettingCdmaPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaPasswordFlags(data connectionData)","Funname":"network.removeSettingCdmaPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaUsername(data connectionData)","Funname":"network.removeSettingCdmaUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAuthRetries(data connectionData)","Funname":"network.removeSettingConnectionAuthRetries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnect(data connectionData)","Funname":"network.removeSettingConnectionAutoconnect","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectPriority(data connectionData)","Funname":"network.removeSettingConnectionAutoconnectPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectRetries(data connectionData)","Funname":"network.removeSettingConnectionAutoconnectRetries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectSlaves(data connectionData)","Funname":"network.removeSettingConnectionAutoconnectSlaves","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionGatewayPingTimeout(data connectionData)","Funname":"network.removeSettingConnectionGatewayPingTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionId(data connectionData)","Funname":"network.removeSettingConnectionId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionInterfaceName(data connectionData)","Funname":"network.removeSettingConnectionInterfaceName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionLldp(data connectionData)","Funname":"network.removeSettingConnectionLldp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionMaster(data connectionData)","Funname":"network.removeSettingConnectionMaster","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionMetered(data connectionData)","Funname":"network.removeSettingConnectionMetered","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionPermissions(data connectionData)","Funname":"network.removeSettingConnectionPermissions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionReadOnly(data connectionData)","Funname":"network.removeSettingConnectionReadOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionSecondaries(data connectionData)","Funname":"network.removeSettingConnectionSecondaries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionSlaveType(data connectionData)","Funname":"network.removeSettingConnectionSlaveType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionStableId(data connectionData)","Funname":"network.removeSettingConnectionStableId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionTimestamp(data connectionData)","Funname":"network.removeSettingConnectionTimestamp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionType(data connectionData)","Funname":"network.removeSettingConnectionType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionUuid(data connectionData)","Funname":"network.removeSettingConnectionUuid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionZone(data connectionData)","Funname":"network.removeSettingConnectionZone","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoeFlags(data connectionData)","Funname":"network.removeSettingDcbAppFcoeFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoeMode(data connectionData)","Funname":"network.removeSettingDcbAppFcoeMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoePriority(data connectionData)","Funname":"network.removeSettingDcbAppFcoePriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFipFlags(data connectionData)","Funname":"network.removeSettingDcbAppFipFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFipPriority(data connectionData)","Funname":"network.removeSettingDcbAppFipPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppIscsiFlags(data connectionData)","Funname":"network.removeSettingDcbAppIscsiFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppIscsiPriority(data connectionData)","Funname":"network.removeSettingDcbAppIscsiPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityBandwidth(data connectionData)","Funname":"network.removeSettingDcbPriorityBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityFlowControl(data connectionData)","Funname":"network.removeSettingDcbPriorityFlowControl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityFlowControlFlags(data connectionData)","Funname":"network.removeSettingDcbPriorityFlowControlFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupBandwidth(data connectionData)","Funname":"network.removeSettingDcbPriorityGroupBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupFlags(data connectionData)","Funname":"network.removeSettingDcbPriorityGroupFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupId(data connectionData)","Funname":"network.removeSettingDcbPriorityGroupId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityStrictBandwidth(data connectionData)","Funname":"network.removeSettingDcbPriorityStrictBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityTrafficClass(data connectionData)","Funname":"network.removeSettingDcbPriorityTrafficClass","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmApn(data connectionData)","Funname":"network.removeSettingGsmApn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmDeviceId(data connectionData)","Funname":"network.removeSettingGsmDeviceId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmHomeOnly(data connectionData)","Funname":"network.removeSettingGsmHomeOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmMtu(data connectionData)","Funname":"network.removeSettingGsmMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmNetworkId(data connectionData)","Funname":"network.removeSettingGsmNetworkId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmNumber(data connectionData)","Funname":"network.removeSettingGsmNumber","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPassword(data connectionData)","Funname":"network.removeSettingGsmPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPasswordFlags(data connectionData)","Funname":"network.removeSettingGsmPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPin(data connectionData)","Funname":"network.removeSettingGsmPin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPinFlags(data connectionData)","Funname":"network.removeSettingGsmPinFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmSimId(data connectionData)","Funname":"network.removeSettingGsmSimId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmSimOperatorId(data connectionData)","Funname":"network.removeSettingGsmSimOperatorId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmUsername(data connectionData)","Funname":"network.removeSettingGsmUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigAddresses(data connectionData)","Funname":"network.removeSettingIP4ConfigAddresses","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDadTimeout(data connectionData)","Funname":"network.removeSettingIP4ConfigDadTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpClientId(data connectionData)","Funname":"network.removeSettingIP4ConfigDhcpClientId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpFqdn(data connectionData)","Funname":"network.removeSettingIP4ConfigDhcpFqdn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpHostname(data connectionData)","Funname":"network.removeSettingIP4ConfigDhcpHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpSendHostname(data connectionData)","Funname":"network.removeSettingIP4ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpTimeout(data connectionData)","Funname":"network.removeSettingIP4ConfigDhcpTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDns(data connectionData)","Funname":"network.removeSettingIP4ConfigDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsOptions(data connectionData)","Funname":"network.removeSettingIP4ConfigDnsOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsPriority(data connectionData)","Funname":"network.removeSettingIP4ConfigDnsPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsSearch(data connectionData)","Funname":"network.removeSettingIP4ConfigDnsSearch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigGateway(data connectionData)","Funname":"network.removeSettingIP4ConfigGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigIgnoreAutoDns(data connectionData)","Funname":"network.removeSettingIP4ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigIgnoreAutoRoutes(data connectionData)","Funname":"network.removeSettingIP4ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigMayFail(data connectionData)","Funname":"network.removeSettingIP4ConfigMayFail","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigMethod(data connectionData)","Funname":"network.removeSettingIP4ConfigMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigNeverDefault(data connectionData)","Funname":"network.removeSettingIP4ConfigNeverDefault","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRouteMetric(data connectionData)","Funname":"network.removeSettingIP4ConfigRouteMetric","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRouteTable(data connectionData)","Funname":"network.removeSettingIP4ConfigRouteTable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRoutes(data connectionData)","Funname":"network.removeSettingIP4ConfigRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigAddrGenMode(data connectionData)","Funname":"network.removeSettingIP6ConfigAddrGenMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigAddresses(data connectionData)","Funname":"network.removeSettingIP6ConfigAddresses","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDadTimeout(data connectionData)","Funname":"network.removeSettingIP6ConfigDadTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpHostname(data connectionData)","Funname":"network.removeSettingIP6ConfigDhcpHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpSendHostname(data connectionData)","Funname":"network.removeSettingIP6ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpTimeout(data connectionData)","Funname":"network.removeSettingIP6ConfigDhcpTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDns(data connectionData)","Funname":"network.removeSettingIP6ConfigDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsOptions(data connectionData)","Funname":"network.removeSettingIP6ConfigDnsOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsPriority(data connectionData)","Funname":"network.removeSettingIP6ConfigDnsPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsSearch(data connectionData)","Funname":"network.removeSettingIP6ConfigDnsSearch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigGateway(data connectionData)","Funname":"network.removeSettingIP6ConfigGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIgnoreAutoDns(data connectionData)","Funname":"network.removeSettingIP6ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIgnoreAutoRoutes(data connectionData)","Funname":"network.removeSettingIP6ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIp6Privacy(data connectionData)","Funname":"network.removeSettingIP6ConfigIp6Privacy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigMayFail(data connectionData)","Funname":"network.removeSettingIP6ConfigMayFail","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigMethod(data connectionData)","Funname":"network.removeSettingIP6ConfigMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigNeverDefault(data connectionData)","Funname":"network.removeSettingIP6ConfigNeverDefault","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRouteMetric(data connectionData)","Funname":"network.removeSettingIP6ConfigRouteMetric","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRouteTable(data connectionData)","Funname":"network.removeSettingIP6ConfigRouteTable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRoutes(data connectionData)","Funname":"network.removeSettingIP6ConfigRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigToken(data connectionData)","Funname":"network.removeSettingIP6ConfigToken","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelEncapsulationLimit(data connectionData)","Funname":"network.removeSettingIPTunnelEncapsulationLimit","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelFlowLabel(data connectionData)","Funname":"network.removeSettingIPTunnelFlowLabel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelInputKey(data connectionData)","Funname":"network.removeSettingIPTunnelInputKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelLocal(data connectionData)","Funname":"network.removeSettingIPTunnelLocal","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelMode(data connectionData)","Funname":"network.removeSettingIPTunnelMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelMtu(data connectionData)","Funname":"network.removeSettingIPTunnelMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelOutputKey(data connectionData)","Funname":"network.removeSettingIPTunnelOutputKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelParent(data connectionData)","Funname":"network.removeSettingIPTunnelParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelPathMtuDiscovery(data connectionData)","Funname":"network.removeSettingIPTunnelPathMtuDiscovery","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelRemote(data connectionData)","Funname":"network.removeSettingIPTunnelRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelTos(data connectionData)","Funname":"network.removeSettingIPTunnelTos","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelTtl(data connectionData)","Funname":"network.removeSettingIPTunnelTtl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandMacAddress(data connectionData)","Funname":"network.removeSettingInfinibandMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandMtu(data connectionData)","Funname":"network.removeSettingInfinibandMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandPKey(data connectionData)","Funname":"network.removeSettingInfinibandPKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandParent(data connectionData)","Funname":"network.removeSettingInfinibandParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandTransportMode(data connectionData)","Funname":"network.removeSettingInfinibandTransportMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecEncrypt(data connectionData)","Funname":"network.removeSettingMacsecEncrypt","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCak(data connectionData)","Funname":"network.removeSettingMacsecMkaCak","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCakFlags(data connectionData)","Funname":"network.removeSettingMacsecMkaCakFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCkn(data connectionData)","Funname":"network.removeSettingMacsecMkaCkn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMode(data connectionData)","Funname":"network.removeSettingMacsecMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecParent(data connectionData)","Funname":"network.removeSettingMacsecParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecPort(data connectionData)","Funname":"network.removeSettingMacsecPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecValidation(data connectionData)","Funname":"network.removeSettingMacsecValidation","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanMode(data connectionData)","Funname":"network.removeSettingMacvlanMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanParent(data connectionData)","Funname":"network.removeSettingMacvlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanPromiscuous(data connectionData)","Funname":"network.removeSettingMacvlanPromiscuous","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanTap(data connectionData)","Funname":"network.removeSettingMacvlanTap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshChannel(data connectionData)","Funname":"network.removeSettingOlpcMeshChannel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshDhcpAnycastAddress(data connectionData)","Funname":"network.removeSettingOlpcMeshDhcpAnycastAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshSsid(data connectionData)","Funname":"network.removeSettingOlpcMeshSsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeFailMode(data connectionData)","Funname":"network.removeSettingOvsBridgeFailMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeMcastSnoopingEnable(data connectionData)","Funname":"network.removeSettingOvsBridgeMcastSnoopingEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeRstpEnable(data connectionData)","Funname":"network.removeSettingOvsBridgeRstpEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeStpEnable(data connectionData)","Funname":"network.removeSettingOvsBridgeStpEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsInterfaceType(data connectionData)","Funname":"network.removeSettingOvsInterfaceType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPatchPeer(data connectionData)","Funname":"network.removeSettingOvsPatchPeer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondDowndelay(data connectionData)","Funname":"network.removeSettingOvsPortBondDowndelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondMode(data connectionData)","Funname":"network.removeSettingOvsPortBondMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondUpdelay(data connectionData)","Funname":"network.removeSettingOvsPortBondUpdelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortLacp(data connectionData)","Funname":"network.removeSettingOvsPortLacp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortTag(data connectionData)","Funname":"network.removeSettingOvsPortTag","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortVlanMode(data connectionData)","Funname":"network.removeSettingOvsPortVlanMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppBaud(data connectionData)","Funname":"network.removeSettingPppBaud","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppCrtscts(data connectionData)","Funname":"network.removeSettingPppCrtscts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppLcpEchoFailure(data connectionData)","Funname":"network.removeSettingPppLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppLcpEchoInterval(data connectionData)","Funname":"network.removeSettingPppLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMppeStateful(data connectionData)","Funname":"network.removeSettingPppMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMru(data connectionData)","Funname":"network.removeSettingPppMru","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMtu(data connectionData)","Funname":"network.removeSettingPppMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNoVjComp(data connectionData)","Funname":"network.removeSettingPppNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNoauth(data connectionData)","Funname":"network.removeSettingPppNoauth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNobsdcomp(data connectionData)","Funname":"network.removeSettingPppNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNodeflate(data connectionData)","Funname":"network.removeSettingPppNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseChap(data connectionData)","Funname":"network.removeSettingPppRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseEap(data connectionData)","Funname":"network.removeSettingPppRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseMschap(data connectionData)","Funname":"network.removeSettingPppRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseMschapv2(data connectionData)","Funname":"network.removeSettingPppRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefusePap(data connectionData)","Funname":"network.removeSettingPppRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRequireMppe(data connectionData)","Funname":"network.removeSettingPppRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRequireMppe128(data connectionData)","Funname":"network.removeSettingPppRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeParent(data connectionData)","Funname":"network.removeSettingPppoeParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoePassword(data connectionData)","Funname":"network.removeSettingPppoePassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoePasswordFlags(data connectionData)","Funname":"network.removeSettingPppoePasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeService(data connectionData)","Funname":"network.removeSettingPppoeService","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeUsername(data connectionData)","Funname":"network.removeSettingPppoeUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyBrowserOnly(data connectionData)","Funname":"network.removeSettingProxyBrowserOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyMethod(data connectionData)","Funname":"network.removeSettingProxyMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyPacScript(data connectionData)","Funname":"network.removeSettingProxyPacScript","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyPacUrl(data connectionData)","Funname":"network.removeSettingProxyPacUrl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialBaud(data connectionData)","Funname":"network.removeSettingSerialBaud","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialBits(data connectionData)","Funname":"network.removeSettingSerialBits","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialParity(data connectionData)","Funname":"network.removeSettingSerialParity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialSendDelay(data connectionData)","Funname":"network.removeSettingSerialSendDelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialStopbits(data connectionData)","Funname":"network.removeSettingSerialStopbits","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamConfig(data connectionData)","Funname":"network.removeSettingTeamConfig","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamMcastRejoinCount(data connectionData)","Funname":"network.removeSettingTeamMcastRejoinCount","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamMcastRejoinInterval(data connectionData)","Funname":"network.removeSettingTeamMcastRejoinInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamNotifyPeersCount(data connectionData)","Funname":"network.removeSettingTeamNotifyPeersCount","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamNotifyPeersInterval(data connectionData)","Funname":"network.removeSettingTeamNotifyPeersInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortConfig(data connectionData)","Funname":"network.removeSettingTeamPortConfig","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortLacpKey(data connectionData)","Funname":"network.removeSettingTeamPortLacpKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortLacpPrio(data connectionData)","Funname":"network.removeSettingTeamPortLacpPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortPrio(data connectionData)","Funname":"network.removeSettingTeamPortPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortQueueId(data connectionData)","Funname":"network.removeSettingTeamPortQueueId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortSticky(data connectionData)","Funname":"network.removeSettingTeamPortSticky","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunner(data connectionData)","Funname":"network.removeSettingTeamRunner","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerActive(data connectionData)","Funname":"network.removeSettingTeamRunnerActive","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerAggSelectPolicy(data connectionData)","Funname":"network.removeSettingTeamRunnerAggSelectPolicy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerFastRate(data connectionData)","Funname":"network.removeSettingTeamRunnerFastRate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerHwaddrPolicy(data connectionData)","Funname":"network.removeSettingTeamRunnerHwaddrPolicy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerMinPorts(data connectionData)","Funname":"network.removeSettingTeamRunnerMinPorts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerSysPrio(data connectionData)","Funname":"network.removeSettingTeamRunnerSysPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxBalancer(data connectionData)","Funname":"network.removeSettingTeamRunnerTxBalancer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxBalancerInterval(data connectionData)","Funname":"network.removeSettingTeamRunnerTxBalancerInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxHash(data connectionData)","Funname":"network.removeSettingTeamRunnerTxHash","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunGroup(data connectionData)","Funname":"network.removeSettingTunGroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunMode(data connectionData)","Funname":"network.removeSettingTunMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunMultiQueue(data connectionData)","Funname":"network.removeSettingTunMultiQueue","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunOwner(data connectionData)","Funname":"network.removeSettingTunOwner","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunPi(data connectionData)","Funname":"network.removeSettingTunPi","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunVnetHdr(data connectionData)","Funname":"network.removeSettingTunVnetHdr","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingUserData(data connectionData)","Funname":"network.removeSettingUserData","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanEgressPriorityMap(data connectionData)","Funname":"network.removeSettingVlanEgressPriorityMap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanFlags(data connectionData)","Funname":"network.removeSettingVlanFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanId(data connectionData)","Funname":"network.removeSettingVlanId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanIngressPriorityMap(data connectionData)","Funname":"network.removeSettingVlanIngressPriorityMap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanParent(data connectionData)","Funname":"network.removeSettingVlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnData(data connectionData)","Funname":"network.removeSettingVpnData","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyDomain(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyGateway(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecEnable(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecEsp(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecEsp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecGatewayId(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecGatewayId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecGroupName(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecGroupName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecIke(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecIke","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecPsk(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyIpsecPsk","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyLcpEchoFailure(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyLcpEchoInterval(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyMppeStateful(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoAccomp(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyNoAccomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoPcomp(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyNoPcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoVjComp(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNobsdcomp(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNodeflate(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyPassword(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseChap(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseEap(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseMschap(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseMschapv2(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefusePap(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe128(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe40(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyRequireMppe40","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyUser(data connectionData)","Funname":"network.removeSettingVpnL2tpKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyAuthtype(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyAuthtype","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCacert(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyCacert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCookie(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyCookie","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCsdEnable(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyCsdEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCsdWrapper(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyCsdWrapper","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyGateway(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyGwcert(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyGwcert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyMtu(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyPrivkey(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyPrivkey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyProxy(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyProxy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyStokenSource(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyStokenSource","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyStokenString(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyStokenString","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyUsercert(data connectionData)","Funname":"network.removeSettingVpnOpenconnectKeyUsercert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyAuth(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyAuth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCa(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCa","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCert(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCertpass(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCertpass","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCertpassFlags(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCertpassFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCipher(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCipher","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCompLzo(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyCompLzo","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyConnectionType(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyConnectionType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyFragmentSize(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyFragmentSize","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyKey(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyLocalIp(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyLocalIp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyMssfix(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyMssfix","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPassword(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPort(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProtoTcp(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyProtoTcp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyPort(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyProxyPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyRetry(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyProxyRetry","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyServer(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyProxyServer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyType(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyProxyType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemote(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteCertTls(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteIp(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyRemoteIp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteRandom(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyRemoteRandom","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRenegSeconds(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyRenegSeconds","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyStaticKey(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyStaticKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTa(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyTa","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTaDir(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyTaDir","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTapDev(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyTapDev","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTlsRemote(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyTlsRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTunnelMtu(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyTunnelMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyUsername(data connectionData)","Funname":"network.removeSettingVpnOpenvpnKeyUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPersistent(data connectionData)","Funname":"network.removeSettingVpnPersistent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyDomain(data connectionData)","Funname":"network.removeSettingVpnPptpKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyGateway(data connectionData)","Funname":"network.removeSettingVpnPptpKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyLcpEchoFailure(data connectionData)","Funname":"network.removeSettingVpnPptpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyLcpEchoInterval(data connectionData)","Funname":"network.removeSettingVpnPptpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyMppeStateful(data connectionData)","Funname":"network.removeSettingVpnPptpKeyMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNoVjComp(data connectionData)","Funname":"network.removeSettingVpnPptpKeyNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNobsdcomp(data connectionData)","Funname":"network.removeSettingVpnPptpKeyNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNodeflate(data connectionData)","Funname":"network.removeSettingVpnPptpKeyNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyPassword(data connectionData)","Funname":"network.removeSettingVpnPptpKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnPptpKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseChap(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseEap(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseMschap(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseMschapv2(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefusePap(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe128(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe40(data connectionData)","Funname":"network.removeSettingVpnPptpKeyRequireMppe40","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyUser(data connectionData)","Funname":"network.removeSettingVpnPptpKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnSecrets(data connectionData)","Funname":"network.removeSettingVpnSecrets","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnServiceType(data connectionData)","Funname":"network.removeSettingVpnServiceType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyAddress(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyCertificate(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyCertificate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyEncap(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyEncap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyIpcomp(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyIpcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyMethod(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyPassword(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUser(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUsercert(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyUsercert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUserkey(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyUserkey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyVirtual(data connectionData)","Funname":"network.removeSettingVpnStrongswanKeyVirtual","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnTimeout(data connectionData)","Funname":"network.removeSettingVpnTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnUserName(data connectionData)","Funname":"network.removeSettingVpnUserName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyAppVersion(data connectionData)","Funname":"network.removeSettingVpnVpncKeyAppVersion","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyAuthmode(data connectionData)","Funname":"network.removeSettingVpnVpncKeyAuthmode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyCaFile(data connectionData)","Funname":"network.removeSettingVpnVpncKeyCaFile","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData)","Funname":"network.removeSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDhgroup(data connectionData)","Funname":"network.removeSettingVpnVpncKeyDhgroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDomain(data connectionData)","Funname":"network.removeSettingVpnVpncKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDpdIdleTimeout(data connectionData)","Funname":"network.removeSettingVpnVpncKeyDpdIdleTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyGateway(data connectionData)","Funname":"network.removeSettingVpnVpncKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyId(data connectionData)","Funname":"network.removeSettingVpnVpncKeyId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyLocalPort(data connectionData)","Funname":"network.removeSettingVpnVpncKeyLocalPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyNatTraversalMode(data connectionData)","Funname":"network.removeSettingVpnVpncKeyNatTraversalMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyNoEncryption(data connectionData)","Funname":"network.removeSettingVpnVpncKeyNoEncryption","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyPerfectForward(data connectionData)","Funname":"network.removeSettingVpnVpncKeyPerfectForward","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecret(data connectionData)","Funname":"network.removeSettingVpnVpncKeySecret","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecretFlags(data connectionData)","Funname":"network.removeSettingVpnVpncKeySecretFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecretType(data connectionData)","Funname":"network.removeSettingVpnVpncKeySecretType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySingleDes(data connectionData)","Funname":"network.removeSettingVpnVpncKeySingleDes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyVendor(data connectionData)","Funname":"network.removeSettingVpnVpncKeyVendor","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPassword(data connectionData)","Funname":"network.removeSettingVpnVpncKeyXauthPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPasswordFlags(data connectionData)","Funname":"network.removeSettingVpnVpncKeyXauthPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPasswordType(data connectionData)","Funname":"network.removeSettingVpnVpncKeyXauthPasswordType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthUser(data connectionData)","Funname":"network.removeSettingVpnVpncKeyXauthUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanAgeing(data connectionData)","Funname":"network.removeSettingVxlanAgeing","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanDestinationPort(data connectionData)","Funname":"network.removeSettingVxlanDestinationPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanId(data connectionData)","Funname":"network.removeSettingVxlanId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanL2Miss(data connectionData)","Funname":"network.removeSettingVxlanL2Miss","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanL3Miss(data connectionData)","Funname":"network.removeSettingVxlanL3Miss","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLearning(data connectionData)","Funname":"network.removeSettingVxlanLearning","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLimit(data connectionData)","Funname":"network.removeSettingVxlanLimit","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLocal(data connectionData)","Funname":"network.removeSettingVxlanLocal","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanParent(data connectionData)","Funname":"network.removeSettingVxlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanProxy(data connectionData)","Funname":"network.removeSettingVxlanProxy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanRemote(data connectionData)","Funname":"network.removeSettingVxlanRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanRsc(data connectionData)","Funname":"network.removeSettingVxlanRsc","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanSourcePortMax(data connectionData)","Funname":"network.removeSettingVxlanSourcePortMax","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanSourcePortMin(data connectionData)","Funname":"network.removeSettingVxlanSourcePortMin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanTos(data connectionData)","Funname":"network.removeSettingVxlanTos","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanTtl(data connectionData)","Funname":"network.removeSettingVxlanTtl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWimaxMacAddress(data connectionData)","Funname":"network.removeSettingWimaxMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWimaxNetworkName(data connectionData)","Funname":"network.removeSettingWimaxNetworkName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredAutoNegotiate(data connectionData)","Funname":"network.removeSettingWiredAutoNegotiate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredClonedMacAddress(data connectionData)","Funname":"network.removeSettingWiredClonedMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredDuplex(data connectionData)","Funname":"network.removeSettingWiredDuplex","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredGenerateMacAddressMask(data connectionData)","Funname":"network.removeSettingWiredGenerateMacAddressMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMacAddress(data connectionData)","Funname":"network.removeSettingWiredMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMacAddressBlacklist(data connectionData)","Funname":"network.removeSettingWiredMacAddressBlacklist","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMtu(data connectionData)","Funname":"network.removeSettingWiredMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredPort(data connectionData)","Funname":"network.removeSettingWiredPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Nettype(data connectionData)","Funname":"network.removeSettingWiredS390Nettype","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Options(data connectionData)","Funname":"network.removeSettingWiredS390Options","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Subchannels(data connectionData)","Funname":"network.removeSettingWiredS390Subchannels","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredSpeed(data connectionData)","Funname":"network.removeSettingWiredSpeed","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredWakeOnLan(data connectionData)","Funname":"network.removeSettingWiredWakeOnLan","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredWakeOnLanPassword(data connectionData)","Funname":"network.removeSettingWiredWakeOnLanPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessBand(data connectionData)","Funname":"network.removeSettingWirelessBand","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessBssid(data connectionData)","Funname":"network.removeSettingWirelessBssid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessChannel(data connectionData)","Funname":"network.removeSettingWirelessChannel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessClonedMacAddress(data connectionData)","Funname":"network.removeSettingWirelessClonedMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessGenerateMacAddressMask(data connectionData)","Funname":"network.removeSettingWirelessGenerateMacAddressMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessHidden(data connectionData)","Funname":"network.removeSettingWirelessHidden","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddress(data connectionData)","Funname":"network.removeSettingWirelessMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddressBlacklist(data connectionData)","Funname":"network.removeSettingWirelessMacAddressBlacklist","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddressRandomization(data connectionData)","Funname":"network.removeSettingWirelessMacAddressRandomization","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMode(data connectionData)","Funname":"network.removeSettingWirelessMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMtu(data connectionData)","Funname":"network.removeSettingWirelessMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessPowersave(data connectionData)","Funname":"network.removeSettingWirelessPowersave","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessRate(data connectionData)","Funname":"network.removeSettingWirelessRate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityAuthAlg(data connectionData)","Funname":"network.removeSettingWirelessSecurityAuthAlg","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityGroup(data connectionData)","Funname":"network.removeSettingWirelessSecurityGroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityKeyMgmt(data connectionData)","Funname":"network.removeSettingWirelessSecurityKeyMgmt","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapPassword(data connectionData)","Funname":"network.removeSettingWirelessSecurityLeapPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapPasswordFlags(data connectionData)","Funname":"network.removeSettingWirelessSecurityLeapPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapUsername(data connectionData)","Funname":"network.removeSettingWirelessSecurityLeapUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPairwise(data connectionData)","Funname":"network.removeSettingWirelessSecurityPairwise","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPmf(data connectionData)","Funname":"network.removeSettingWirelessSecurityPmf","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityProto(data connectionData)","Funname":"network.removeSettingWirelessSecurityProto","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPsk(data connectionData)","Funname":"network.removeSettingWirelessSecurityPsk","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPskFlags(data connectionData)","Funname":"network.removeSettingWirelessSecurityPskFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey0(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKey0","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey1(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKey1","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey2(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKey2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey3(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKey3","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKeyFlags(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKeyFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKeyType(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepKeyType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepTxKeyidx(data connectionData)","Funname":"network.removeSettingWirelessSecurityWepTxKeyidx","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWpsMethod(data connectionData)","Funname":"network.removeSettingWirelessSecurityWpsMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSeenBssids(data connectionData)","Funname":"network.removeSettingWirelessSeenBssids","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSsid(data connectionData)","Funname":"network.removeSettingWirelessSsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessTxPower(data connectionData)","Funname":"network.removeSettingWirelessTxPower","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func setSetting8021xAltsubjectMatches(data connectionData, value []string)","Funname":"network.setSetting8021xAltsubjectMatches","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xAnonymousIdentity(data connectionData, value string)","Funname":"network.setSetting8021xAnonymousIdentity","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xAuthTimeout(data connectionData, value int32)","Funname":"network.setSetting8021xAuthTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSetting8021xCaCert(data connectionData, value []byte)","Funname":"network.setSetting8021xCaCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xCaCertPassword(data connectionData, value string)","Funname":"network.setSetting8021xCaCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xCaCertPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xCaCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xCaPath(data connectionData, value string)","Funname":"network.setSetting8021xCaPath","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xClientCert(data connectionData, value []byte)","Funname":"network.setSetting8021xClientCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xClientCertPassword(data connectionData, value string)","Funname":"network.setSetting8021xClientCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xClientCertPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xClientCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xDomainSuffixMatch(data connectionData, value string)","Funname":"network.setSetting8021xDomainSuffixMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xEap(data connectionData, value []string)","Funname":"network.setSetting8021xEap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xIdentity(data connectionData, value string)","Funname":"network.setSetting8021xIdentity","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPacFile(data connectionData, value string)","Funname":"network.setSetting8021xPacFile","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPassword(data connectionData, value string)","Funname":"network.setSetting8021xPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPasswordRaw(data connectionData, value []byte)","Funname":"network.setSetting8021xPasswordRaw","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPasswordRawFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPasswordRawFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase1AuthFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPhase1AuthFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase1FastProvisioning(data connectionData, value string)","Funname":"network.setSetting8021xPhase1FastProvisioning","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase1Peaplabel(data connectionData, value string)","Funname":"network.setSetting8021xPhase1Peaplabel","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase1Peapver(data connectionData, value string)","Funname":"network.setSetting8021xPhase1Peapver","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2AltsubjectMatches(data connectionData, value []string)","Funname":"network.setSetting8021xPhase2AltsubjectMatches","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xPhase2Auth(data connectionData, value string)","Funname":"network.setSetting8021xPhase2Auth","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2Autheap(data connectionData, value string)","Funname":"network.setSetting8021xPhase2Autheap","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2CaCert(data connectionData, value []byte)","Funname":"network.setSetting8021xPhase2CaCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2CaCertPassword(data connectionData, value string)","Funname":"network.setSetting8021xPhase2CaCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2CaCertPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPhase2CaCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2CaPath(data connectionData, value string)","Funname":"network.setSetting8021xPhase2CaPath","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2ClientCert(data connectionData, value []byte)","Funname":"network.setSetting8021xPhase2ClientCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2ClientCertPassword(data connectionData, value string)","Funname":"network.setSetting8021xPhase2ClientCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2ClientCertPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPhase2ClientCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2DomainSuffixMatch(data connectionData, value string)","Funname":"network.setSetting8021xPhase2DomainSuffixMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKey(data connectionData, value []byte)","Funname":"network.setSetting8021xPhase2PrivateKey","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKeyPassword(data connectionData, value string)","Funname":"network.setSetting8021xPhase2PrivateKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2SubjectMatch(data connectionData, value string)","Funname":"network.setSetting8021xPhase2SubjectMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPin(data connectionData, value string)","Funname":"network.setSetting8021xPin","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPinFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPinFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPrivateKey(data connectionData, value []byte)","Funname":"network.setSetting8021xPrivateKey","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPrivateKeyPassword(data connectionData, value string)","Funname":"network.setSetting8021xPrivateKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPrivateKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSetting8021xPrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xSubjectMatch(data connectionData, value string)","Funname":"network.setSetting8021xSubjectMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xSystemCaCerts(data connectionData, value bool)","Funname":"network.setSetting8021xSystemCaCerts","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingAdslEncapsulation(data connectionData, value string)","Funname":"network.setSettingAdslEncapsulation","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslPassword(data connectionData, value string)","Funname":"network.setSettingAdslPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingAdslPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingAdslProtocol(data connectionData, value string)","Funname":"network.setSettingAdslProtocol","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslUsername(data connectionData, value string)","Funname":"network.setSettingAdslUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslVci(data connectionData, value uint32)","Funname":"network.setSettingAdslVci","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingAdslVpi(data connectionData, value uint32)","Funname":"network.setSettingAdslVpi","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBluetoothBdaddr(data connectionData, value []byte)","Funname":"network.setSettingBluetoothBdaddr","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingBluetoothType(data connectionData, value string)","Funname":"network.setSettingBluetoothType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingBondOptions(data connectionData, value map[string]string)","Funname":"network.setSettingBondOptions","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingBridgeAgeingTime(data connectionData, value uint32)","Funname":"network.setSettingBridgeAgeingTime","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeForwardDelay(data connectionData, value uint32)","Funname":"network.setSettingBridgeForwardDelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeGroupForwardMask(data connectionData, value uint32)","Funname":"network.setSettingBridgeGroupForwardMask","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeHelloTime(data connectionData, value uint32)","Funname":"network.setSettingBridgeHelloTime","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeMacAddress(data connectionData, value []byte)","Funname":"network.setSettingBridgeMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingBridgeMaxAge(data connectionData, value uint32)","Funname":"network.setSettingBridgeMaxAge","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeMulticastSnooping(data connectionData, value bool)","Funname":"network.setSettingBridgeMulticastSnooping","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingBridgePortHairpinMode(data connectionData, value bool)","Funname":"network.setSettingBridgePortHairpinMode","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingBridgePortPathCost(data connectionData, value uint32)","Funname":"network.setSettingBridgePortPathCost","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgePortPriority(data connectionData, value uint32)","Funname":"network.setSettingBridgePortPriority","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgePriority(data connectionData, value uint32)","Funname":"network.setSettingBridgePriority","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeStp(data connectionData, value bool)","Funname":"network.setSettingBridgeStp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingCdmaMtu(data connectionData, value uint32)","Funname":"network.setSettingCdmaMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingCdmaNumber(data connectionData, value string)","Funname":"network.setSettingCdmaNumber","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingCdmaPassword(data connectionData, value string)","Funname":"network.setSettingCdmaPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingCdmaPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingCdmaPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingCdmaUsername(data connectionData, value string)","Funname":"network.setSettingCdmaUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionAuthRetries(data connectionData, value int32)","Funname":"network.setSettingConnectionAuthRetries","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnect(data connectionData, value bool)","Funname":"network.setSettingConnectionAutoconnect","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingConnectionAutoconnectPriority(data connectionData, value int32)","Funname":"network.setSettingConnectionAutoconnectPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnectRetries(data connectionData, value int32)","Funname":"network.setSettingConnectionAutoconnectRetries","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnectSlaves(data connectionData, value int32)","Funname":"network.setSettingConnectionAutoconnectSlaves","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionGatewayPingTimeout(data connectionData, value uint32)","Funname":"network.setSettingConnectionGatewayPingTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingConnectionId(data connectionData, value string)","Funname":"network.setSettingConnectionId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionInterfaceName(data connectionData, value string)","Funname":"network.setSettingConnectionInterfaceName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionLldp(data connectionData, value int32)","Funname":"network.setSettingConnectionLldp","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionMaster(data connectionData, value string)","Funname":"network.setSettingConnectionMaster","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionMetered(data connectionData, value int32)","Funname":"network.setSettingConnectionMetered","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionPermissions(data connectionData, value []string)","Funname":"network.setSettingConnectionPermissions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingConnectionReadOnly(data connectionData, value bool)","Funname":"network.setSettingConnectionReadOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingConnectionSecondaries(data connectionData, value []string)","Funname":"network.setSettingConnectionSecondaries","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingConnectionSlaveType(data connectionData, value string)","Funname":"network.setSettingConnectionSlaveType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionStableId(data connectionData, value string)","Funname":"network.setSettingConnectionStableId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionTimestamp(data connectionData, value uint64)","Funname":"network.setSettingConnectionTimestamp","Returntype":"","Args":"data connectionData, value uint64"},{"Uniquefunname":"func setSettingConnectionType(data connectionData, value string)","Funname":"network.setSettingConnectionType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionUuid(data connectionData, value string)","Funname":"network.setSettingConnectionUuid","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionZone(data connectionData, value string)","Funname":"network.setSettingConnectionZone","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingDcbAppFcoeFlags(data connectionData, value uint32)","Funname":"network.setSettingDcbAppFcoeFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppFcoeMode(data connectionData, value string)","Funname":"network.setSettingDcbAppFcoeMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingDcbAppFcoePriority(data connectionData, value int32)","Funname":"network.setSettingDcbAppFcoePriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbAppFipFlags(data connectionData, value uint32)","Funname":"network.setSettingDcbAppFipFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppFipPriority(data connectionData, value int32)","Funname":"network.setSettingDcbAppFipPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbAppIscsiFlags(data connectionData, value uint32)","Funname":"network.setSettingDcbAppIscsiFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppIscsiPriority(data connectionData, value int32)","Funname":"network.setSettingDcbAppIscsiPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbPriorityBandwidth(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityFlowControl(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityFlowControl","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityFlowControlFlags(data connectionData, value uint32)","Funname":"network.setSettingDcbPriorityFlowControlFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupBandwidth(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityGroupBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupFlags(data connectionData, value uint32)","Funname":"network.setSettingDcbPriorityGroupFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupId(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityGroupId","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityStrictBandwidth(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityStrictBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityTrafficClass(data connectionData, value []uint32)","Funname":"network.setSettingDcbPriorityTrafficClass","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingGsmApn(data connectionData, value string)","Funname":"network.setSettingGsmApn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmDeviceId(data connectionData, value string)","Funname":"network.setSettingGsmDeviceId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmHomeOnly(data connectionData, value bool)","Funname":"network.setSettingGsmHomeOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingGsmMtu(data connectionData, value uint32)","Funname":"network.setSettingGsmMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmNetworkId(data connectionData, value string)","Funname":"network.setSettingGsmNetworkId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmNumber(data connectionData, value string)","Funname":"network.setSettingGsmNumber","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPassword(data connectionData, value string)","Funname":"network.setSettingGsmPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingGsmPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmPin(data connectionData, value string)","Funname":"network.setSettingGsmPin","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPinFlags(data connectionData, value uint32)","Funname":"network.setSettingGsmPinFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmSimId(data connectionData, value string)","Funname":"network.setSettingGsmSimId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmSimOperatorId(data connectionData, value string)","Funname":"network.setSettingGsmSimOperatorId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmUsername(data connectionData, value string)","Funname":"network.setSettingGsmUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigAddresses(data connectionData, value [][]uint32)","Funname":"network.setSettingIP4ConfigAddresses","Returntype":"","Args":"data connectionData, value [][]uint32"},{"Uniquefunname":"func setSettingIP4ConfigDadTimeout(data connectionData, value int32)","Funname":"network.setSettingIP4ConfigDadTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDhcpClientId(data connectionData, value string)","Funname":"network.setSettingIP4ConfigDhcpClientId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpFqdn(data connectionData, value string)","Funname":"network.setSettingIP4ConfigDhcpFqdn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpHostname(data connectionData, value string)","Funname":"network.setSettingIP4ConfigDhcpHostname","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpSendHostname(data connectionData, value bool)","Funname":"network.setSettingIP4ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigDhcpTimeout(data connectionData, value int32)","Funname":"network.setSettingIP4ConfigDhcpTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDns(data connectionData, value []uint32)","Funname":"network.setSettingIP4ConfigDns","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingIP4ConfigDnsOptions(data connectionData, value []string)","Funname":"network.setSettingIP4ConfigDnsOptions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP4ConfigDnsPriority(data connectionData, value int32)","Funname":"network.setSettingIP4ConfigDnsPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDnsSearch(data connectionData, value []string)","Funname":"network.setSettingIP4ConfigDnsSearch","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP4ConfigGateway(data connectionData, value string)","Funname":"network.setSettingIP4ConfigGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigIgnoreAutoDns(data connectionData, value bool)","Funname":"network.setSettingIP4ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigIgnoreAutoRoutes(data connectionData, value bool)","Funname":"network.setSettingIP4ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigMayFail(data connectionData, value bool)","Funname":"network.setSettingIP4ConfigMayFail","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigMethod(data connectionData, value string)","Funname":"network.setSettingIP4ConfigMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigNeverDefault(data connectionData, value bool)","Funname":"network.setSettingIP4ConfigNeverDefault","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigRouteMetric(data connectionData, value int64)","Funname":"network.setSettingIP4ConfigRouteMetric","Returntype":"","Args":"data connectionData, value int64"},{"Uniquefunname":"func setSettingIP4ConfigRouteTable(data connectionData, value uint32)","Funname":"network.setSettingIP4ConfigRouteTable","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIP4ConfigRoutes(data connectionData, value [][]uint32)","Funname":"network.setSettingIP4ConfigRoutes","Returntype":"","Args":"data connectionData, value [][]uint32"},{"Uniquefunname":"func setSettingIP6ConfigAddrGenMode(data connectionData, value int32)","Funname":"network.setSettingIP6ConfigAddrGenMode","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigAddresses(data connectionData, value ipv6Addresses)","Funname":"network.setSettingIP6ConfigAddresses","Returntype":"","Args":"data connectionData, value ipv6Addresses"},{"Uniquefunname":"func setSettingIP6ConfigDadTimeout(data connectionData, value int32)","Funname":"network.setSettingIP6ConfigDadTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDhcpHostname(data connectionData, value string)","Funname":"network.setSettingIP6ConfigDhcpHostname","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigDhcpSendHostname(data connectionData, value bool)","Funname":"network.setSettingIP6ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigDhcpTimeout(data connectionData, value int32)","Funname":"network.setSettingIP6ConfigDhcpTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDns(data connectionData, value [][]byte)","Funname":"network.setSettingIP6ConfigDns","Returntype":"","Args":"data connectionData, value [][]byte"},{"Uniquefunname":"func setSettingIP6ConfigDnsOptions(data connectionData, value []string)","Funname":"network.setSettingIP6ConfigDnsOptions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP6ConfigDnsPriority(data connectionData, value int32)","Funname":"network.setSettingIP6ConfigDnsPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDnsSearch(data connectionData, value []string)","Funname":"network.setSettingIP6ConfigDnsSearch","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP6ConfigGateway(data connectionData, value string)","Funname":"network.setSettingIP6ConfigGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigIgnoreAutoDns(data connectionData, value bool)","Funname":"network.setSettingIP6ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigIgnoreAutoRoutes(data connectionData, value bool)","Funname":"network.setSettingIP6ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigIp6Privacy(data connectionData, value int32)","Funname":"network.setSettingIP6ConfigIp6Privacy","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigMayFail(data connectionData, value bool)","Funname":"network.setSettingIP6ConfigMayFail","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigMethod(data connectionData, value string)","Funname":"network.setSettingIP6ConfigMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigNeverDefault(data connectionData, value bool)","Funname":"network.setSettingIP6ConfigNeverDefault","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigRouteMetric(data connectionData, value int64)","Funname":"network.setSettingIP6ConfigRouteMetric","Returntype":"","Args":"data connectionData, value int64"},{"Uniquefunname":"func setSettingIP6ConfigRouteTable(data connectionData, value uint32)","Funname":"network.setSettingIP6ConfigRouteTable","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIP6ConfigRoutes(data connectionData, value ipv6Routes)","Funname":"network.setSettingIP6ConfigRoutes","Returntype":"","Args":"data connectionData, value ipv6Routes"},{"Uniquefunname":"func setSettingIP6ConfigToken(data connectionData, value string)","Funname":"network.setSettingIP6ConfigToken","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelEncapsulationLimit(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelEncapsulationLimit","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelFlowLabel(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelFlowLabel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelInputKey(data connectionData, value string)","Funname":"network.setSettingIPTunnelInputKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelLocal(data connectionData, value string)","Funname":"network.setSettingIPTunnelLocal","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelMode(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelMtu(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelOutputKey(data connectionData, value string)","Funname":"network.setSettingIPTunnelOutputKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelParent(data connectionData, value string)","Funname":"network.setSettingIPTunnelParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelPathMtuDiscovery(data connectionData, value bool)","Funname":"network.setSettingIPTunnelPathMtuDiscovery","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIPTunnelRemote(data connectionData, value string)","Funname":"network.setSettingIPTunnelRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelTos(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelTos","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelTtl(data connectionData, value uint32)","Funname":"network.setSettingIPTunnelTtl","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingInfinibandMacAddress(data connectionData, value []byte)","Funname":"network.setSettingInfinibandMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingInfinibandMtu(data connectionData, value uint32)","Funname":"network.setSettingInfinibandMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingInfinibandPKey(data connectionData, value int32)","Funname":"network.setSettingInfinibandPKey","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingInfinibandParent(data connectionData, value string)","Funname":"network.setSettingInfinibandParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingInfinibandTransportMode(data connectionData, value string)","Funname":"network.setSettingInfinibandTransportMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecEncrypt(data connectionData, value bool)","Funname":"network.setSettingMacsecEncrypt","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingMacsecMkaCak(data connectionData, value string)","Funname":"network.setSettingMacsecMkaCak","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecMkaCakFlags(data connectionData, value uint32)","Funname":"network.setSettingMacsecMkaCakFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingMacsecMkaCkn(data connectionData, value string)","Funname":"network.setSettingMacsecMkaCkn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecMode(data connectionData, value int32)","Funname":"network.setSettingMacsecMode","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacsecParent(data connectionData, value string)","Funname":"network.setSettingMacsecParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecPort(data connectionData, value int32)","Funname":"network.setSettingMacsecPort","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacsecValidation(data connectionData, value int32)","Funname":"network.setSettingMacsecValidation","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacvlanMode(data connectionData, value uint32)","Funname":"network.setSettingMacvlanMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingMacvlanParent(data connectionData, value string)","Funname":"network.setSettingMacvlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacvlanPromiscuous(data connectionData, value bool)","Funname":"network.setSettingMacvlanPromiscuous","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingMacvlanTap(data connectionData, value bool)","Funname":"network.setSettingMacvlanTap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOlpcMeshChannel(data connectionData, value uint32)","Funname":"network.setSettingOlpcMeshChannel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOlpcMeshDhcpAnycastAddress(data connectionData, value []byte)","Funname":"network.setSettingOlpcMeshDhcpAnycastAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingOlpcMeshSsid(data connectionData, value []byte)","Funname":"network.setSettingOlpcMeshSsid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingOvsBridgeFailMode(data connectionData, value string)","Funname":"network.setSettingOvsBridgeFailMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsBridgeMcastSnoopingEnable(data connectionData, value bool)","Funname":"network.setSettingOvsBridgeMcastSnoopingEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsBridgeRstpEnable(data connectionData, value bool)","Funname":"network.setSettingOvsBridgeRstpEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsBridgeStpEnable(data connectionData, value bool)","Funname":"network.setSettingOvsBridgeStpEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsInterfaceType(data connectionData, value string)","Funname":"network.setSettingOvsInterfaceType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPatchPeer(data connectionData, value string)","Funname":"network.setSettingOvsPatchPeer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortBondDowndelay(data connectionData, value uint32)","Funname":"network.setSettingOvsPortBondDowndelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortBondMode(data connectionData, value string)","Funname":"network.setSettingOvsPortBondMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortBondUpdelay(data connectionData, value uint32)","Funname":"network.setSettingOvsPortBondUpdelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortLacp(data connectionData, value string)","Funname":"network.setSettingOvsPortLacp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortTag(data connectionData, value uint32)","Funname":"network.setSettingOvsPortTag","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortVlanMode(data connectionData, value string)","Funname":"network.setSettingOvsPortVlanMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppBaud(data connectionData, value uint32)","Funname":"network.setSettingPppBaud","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppCrtscts(data connectionData, value bool)","Funname":"network.setSettingPppCrtscts","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppLcpEchoFailure(data connectionData, value uint32)","Funname":"network.setSettingPppLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppLcpEchoInterval(data connectionData, value uint32)","Funname":"network.setSettingPppLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppMppeStateful(data connectionData, value bool)","Funname":"network.setSettingPppMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppMru(data connectionData, value uint32)","Funname":"network.setSettingPppMru","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppMtu(data connectionData, value uint32)","Funname":"network.setSettingPppMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppNoVjComp(data connectionData, value bool)","Funname":"network.setSettingPppNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNoauth(data connectionData, value bool)","Funname":"network.setSettingPppNoauth","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNobsdcomp(data connectionData, value bool)","Funname":"network.setSettingPppNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNodeflate(data connectionData, value bool)","Funname":"network.setSettingPppNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseChap(data connectionData, value bool)","Funname":"network.setSettingPppRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseEap(data connectionData, value bool)","Funname":"network.setSettingPppRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseMschap(data connectionData, value bool)","Funname":"network.setSettingPppRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseMschapv2(data connectionData, value bool)","Funname":"network.setSettingPppRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefusePap(data connectionData, value bool)","Funname":"network.setSettingPppRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRequireMppe(data connectionData, value bool)","Funname":"network.setSettingPppRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRequireMppe128(data connectionData, value bool)","Funname":"network.setSettingPppRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppoeParent(data connectionData, value string)","Funname":"network.setSettingPppoeParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoePassword(data connectionData, value string)","Funname":"network.setSettingPppoePassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoePasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingPppoePasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppoeService(data connectionData, value string)","Funname":"network.setSettingPppoeService","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoeUsername(data connectionData, value string)","Funname":"network.setSettingPppoeUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingProxyBrowserOnly(data connectionData, value bool)","Funname":"network.setSettingProxyBrowserOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingProxyMethod(data connectionData, value int32)","Funname":"network.setSettingProxyMethod","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingProxyPacScript(data connectionData, value string)","Funname":"network.setSettingProxyPacScript","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingProxyPacUrl(data connectionData, value string)","Funname":"network.setSettingProxyPacUrl","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingSerialBaud(data connectionData, value uint32)","Funname":"network.setSettingSerialBaud","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingSerialBits(data connectionData, value uint32)","Funname":"network.setSettingSerialBits","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingSerialParity(data connectionData, value byte)","Funname":"network.setSettingSerialParity","Returntype":"","Args":"data connectionData, value byte"},{"Uniquefunname":"func setSettingSerialSendDelay(data connectionData, value uint64)","Funname":"network.setSettingSerialSendDelay","Returntype":"","Args":"data connectionData, value uint64"},{"Uniquefunname":"func setSettingSerialStopbits(data connectionData, value uint32)","Funname":"network.setSettingSerialStopbits","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingTeamConfig(data connectionData, value string)","Funname":"network.setSettingTeamConfig","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamMcastRejoinCount(data connectionData, value int32)","Funname":"network.setSettingTeamMcastRejoinCount","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamMcastRejoinInterval(data connectionData, value int32)","Funname":"network.setSettingTeamMcastRejoinInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamNotifyPeersCount(data connectionData, value int32)","Funname":"network.setSettingTeamNotifyPeersCount","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamNotifyPeersInterval(data connectionData, value int32)","Funname":"network.setSettingTeamNotifyPeersInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortConfig(data connectionData, value string)","Funname":"network.setSettingTeamPortConfig","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamPortLacpKey(data connectionData, value int32)","Funname":"network.setSettingTeamPortLacpKey","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortLacpPrio(data connectionData, value int32)","Funname":"network.setSettingTeamPortLacpPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortPrio(data connectionData, value int32)","Funname":"network.setSettingTeamPortPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortQueueId(data connectionData, value int32)","Funname":"network.setSettingTeamPortQueueId","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortSticky(data connectionData, value bool)","Funname":"network.setSettingTeamPortSticky","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunner(data connectionData, value string)","Funname":"network.setSettingTeamRunner","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerActive(data connectionData, value bool)","Funname":"network.setSettingTeamRunnerActive","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunnerAggSelectPolicy(data connectionData, value string)","Funname":"network.setSettingTeamRunnerAggSelectPolicy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerFastRate(data connectionData, value bool)","Funname":"network.setSettingTeamRunnerFastRate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunnerHwaddrPolicy(data connectionData, value string)","Funname":"network.setSettingTeamRunnerHwaddrPolicy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerMinPorts(data connectionData, value int32)","Funname":"network.setSettingTeamRunnerMinPorts","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerSysPrio(data connectionData, value int32)","Funname":"network.setSettingTeamRunnerSysPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerTxBalancer(data connectionData, value string)","Funname":"network.setSettingTeamRunnerTxBalancer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerTxBalancerInterval(data connectionData, value int32)","Funname":"network.setSettingTeamRunnerTxBalancerInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerTxHash(data connectionData, value []string)","Funname":"network.setSettingTeamRunnerTxHash","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingTunGroup(data connectionData, value string)","Funname":"network.setSettingTunGroup","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTunMode(data connectionData, value uint32)","Funname":"network.setSettingTunMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingTunMultiQueue(data connectionData, value bool)","Funname":"network.setSettingTunMultiQueue","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTunOwner(data connectionData, value string)","Funname":"network.setSettingTunOwner","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTunPi(data connectionData, value bool)","Funname":"network.setSettingTunPi","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTunVnetHdr(data connectionData, value bool)","Funname":"network.setSettingTunVnetHdr","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingUserData(data connectionData, value map[string]string)","Funname":"network.setSettingUserData","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVlanEgressPriorityMap(data connectionData, value []string)","Funname":"network.setSettingVlanEgressPriorityMap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingVlanFlags(data connectionData, value uint32)","Funname":"network.setSettingVlanFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVlanId(data connectionData, value uint32)","Funname":"network.setSettingVlanId","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVlanIngressPriorityMap(data connectionData, value []string)","Funname":"network.setSettingVlanIngressPriorityMap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingVlanParent(data connectionData, value string)","Funname":"network.setSettingVlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnData(data connectionData, value map[string]string)","Funname":"network.setSettingVpnData","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVpnL2tpKeyDomain(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyGateway(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecEnable(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyIpsecEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecEsp(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyIpsecEsp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecGatewayId(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyIpsecGatewayId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecGroupName(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyIpsecGroupName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecIke(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyIpsecIke","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecPsk(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyIpsecPsk","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyLcpEchoFailure(data connectionData, value uint32)","Funname":"network.setSettingVpnL2tpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyLcpEchoInterval(data connectionData, value uint32)","Funname":"network.setSettingVpnL2tpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyMppeStateful(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoAccomp(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyNoAccomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoPcomp(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyNoPcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoVjComp(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNobsdcomp(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNodeflate(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyPassword(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnL2tpKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseChap(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseEap(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseMschap(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseMschapv2(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefusePap(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe128(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe40(data connectionData, value bool)","Funname":"network.setSettingVpnL2tpKeyRequireMppe40","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyUser(data connectionData, value string)","Funname":"network.setSettingVpnL2tpKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyAuthtype(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyAuthtype","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCacert(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyCacert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCookie(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyCookie","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCsdEnable(data connectionData, value bool)","Funname":"network.setSettingVpnOpenconnectKeyCsdEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCsdWrapper(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyCsdWrapper","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyGateway(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyGwcert(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyGwcert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyMtu(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyMtu","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData, value bool)","Funname":"network.setSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyPrivkey(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyPrivkey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyProxy(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyProxy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyStokenSource(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyStokenSource","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyStokenString(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyStokenString","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyUsercert(data connectionData, value string)","Funname":"network.setSettingVpnOpenconnectKeyUsercert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyAuth(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyAuth","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCa(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyCa","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCert(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyCert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCertpass(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyCertpass","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCertpassFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyCertpassFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCipher(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyCipher","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCompLzo(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyCompLzo","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyConnectionType(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyConnectionType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyFragmentSize(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyFragmentSize","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyKey(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyLocalIp(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyLocalIp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyMssfix(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyMssfix","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPassword(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPort(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProtoTcp(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyProtoTcp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyPort(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyProxyPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyRetry(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyProxyRetry","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyServer(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyProxyServer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyType(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyProxyType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemote(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteCertTls(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteIp(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyRemoteIp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteRandom(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyRemoteRandom","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRenegSeconds(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyRenegSeconds","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyStaticKey(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyStaticKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTa(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyTa","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTaDir(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyTaDir","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTapDev(data connectionData, value bool)","Funname":"network.setSettingVpnOpenvpnKeyTapDev","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTlsRemote(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyTlsRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTunnelMtu(data connectionData, value uint32)","Funname":"network.setSettingVpnOpenvpnKeyTunnelMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyUsername(data connectionData, value string)","Funname":"network.setSettingVpnOpenvpnKeyUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPersistent(data connectionData, value bool)","Funname":"network.setSettingVpnPersistent","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyDomain(data connectionData, value string)","Funname":"network.setSettingVpnPptpKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyGateway(data connectionData, value string)","Funname":"network.setSettingVpnPptpKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyLcpEchoFailure(data connectionData, value uint32)","Funname":"network.setSettingVpnPptpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyLcpEchoInterval(data connectionData, value uint32)","Funname":"network.setSettingVpnPptpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyMppeStateful(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNoVjComp(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNobsdcomp(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNodeflate(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyPassword(data connectionData, value string)","Funname":"network.setSettingVpnPptpKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnPptpKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseChap(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseEap(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseMschap(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseMschapv2(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefusePap(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe128(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe40(data connectionData, value bool)","Funname":"network.setSettingVpnPptpKeyRequireMppe40","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyUser(data connectionData, value string)","Funname":"network.setSettingVpnPptpKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnSecrets(data connectionData, value map[string]string)","Funname":"network.setSettingVpnSecrets","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVpnServiceType(data connectionData, value string)","Funname":"network.setSettingVpnServiceType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyAddress(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyAddress","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyCertificate(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyCertificate","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyEncap(data connectionData, value bool)","Funname":"network.setSettingVpnStrongswanKeyEncap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnStrongswanKeyIpcomp(data connectionData, value bool)","Funname":"network.setSettingVpnStrongswanKeyIpcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnStrongswanKeyMethod(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyPassword(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnStrongswanKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUser(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUsercert(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyUsercert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUserkey(data connectionData, value string)","Funname":"network.setSettingVpnStrongswanKeyUserkey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyVirtual(data connectionData, value bool)","Funname":"network.setSettingVpnStrongswanKeyVirtual","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnTimeout(data connectionData, value uint32)","Funname":"network.setSettingVpnTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnUserName(data connectionData, value string)","Funname":"network.setSettingVpnUserName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyAppVersion(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyAppVersion","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyAuthmode(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyAuthmode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyCaFile(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyCaFile","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData, value uint32)","Funname":"network.setSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyDhgroup(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyDhgroup","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyDomain(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyDpdIdleTimeout(data connectionData, value uint32)","Funname":"network.setSettingVpnVpncKeyDpdIdleTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyGateway(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyId(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyLocalPort(data connectionData, value uint32)","Funname":"network.setSettingVpnVpncKeyLocalPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyNatTraversalMode(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyNatTraversalMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyNoEncryption(data connectionData, value bool)","Funname":"network.setSettingVpnVpncKeyNoEncryption","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnVpncKeyPerfectForward(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyPerfectForward","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySecret(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeySecret","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySecretFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnVpncKeySecretFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeySecretType(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeySecretType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySingleDes(data connectionData, value bool)","Funname":"network.setSettingVpnVpncKeySingleDes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnVpncKeyVendor(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyVendor","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPassword(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyXauthPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingVpnVpncKeyXauthPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPasswordType(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyXauthPasswordType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthUser(data connectionData, value string)","Funname":"network.setSettingVpnVpncKeyXauthUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanAgeing(data connectionData, value uint32)","Funname":"network.setSettingVxlanAgeing","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanDestinationPort(data connectionData, value uint32)","Funname":"network.setSettingVxlanDestinationPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanId(data connectionData, value uint32)","Funname":"network.setSettingVxlanId","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanL2Miss(data connectionData, value bool)","Funname":"network.setSettingVxlanL2Miss","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanL3Miss(data connectionData, value bool)","Funname":"network.setSettingVxlanL3Miss","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanLearning(data connectionData, value bool)","Funname":"network.setSettingVxlanLearning","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanLimit(data connectionData, value uint32)","Funname":"network.setSettingVxlanLimit","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanLocal(data connectionData, value string)","Funname":"network.setSettingVxlanLocal","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanParent(data connectionData, value string)","Funname":"network.setSettingVxlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanProxy(data connectionData, value bool)","Funname":"network.setSettingVxlanProxy","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanRemote(data connectionData, value string)","Funname":"network.setSettingVxlanRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanRsc(data connectionData, value bool)","Funname":"network.setSettingVxlanRsc","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanSourcePortMax(data connectionData, value uint32)","Funname":"network.setSettingVxlanSourcePortMax","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanSourcePortMin(data connectionData, value uint32)","Funname":"network.setSettingVxlanSourcePortMin","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanTos(data connectionData, value uint32)","Funname":"network.setSettingVxlanTos","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanTtl(data connectionData, value uint32)","Funname":"network.setSettingVxlanTtl","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWimaxMacAddress(data connectionData, value []byte)","Funname":"network.setSettingWimaxMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWimaxNetworkName(data connectionData, value string)","Funname":"network.setSettingWimaxNetworkName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredAutoNegotiate(data connectionData, value bool)","Funname":"network.setSettingWiredAutoNegotiate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingWiredClonedMacAddress(data connectionData, value []byte)","Funname":"network.setSettingWiredClonedMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWiredDuplex(data connectionData, value string)","Funname":"network.setSettingWiredDuplex","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredGenerateMacAddressMask(data connectionData, value string)","Funname":"network.setSettingWiredGenerateMacAddressMask","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredMacAddress(data connectionData, value []byte)","Funname":"network.setSettingWiredMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWiredMacAddressBlacklist(data connectionData, value []string)","Funname":"network.setSettingWiredMacAddressBlacklist","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWiredMtu(data connectionData, value uint32)","Funname":"network.setSettingWiredMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredPort(data connectionData, value string)","Funname":"network.setSettingWiredPort","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredS390Nettype(data connectionData, value string)","Funname":"network.setSettingWiredS390Nettype","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredS390Options(data connectionData, value map[string]string)","Funname":"network.setSettingWiredS390Options","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingWiredS390Subchannels(data connectionData, value []string)","Funname":"network.setSettingWiredS390Subchannels","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWiredSpeed(data connectionData, value uint32)","Funname":"network.setSettingWiredSpeed","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredWakeOnLan(data connectionData, value uint32)","Funname":"network.setSettingWiredWakeOnLan","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredWakeOnLanPassword(data connectionData, value string)","Funname":"network.setSettingWiredWakeOnLanPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessBand(data connectionData, value string)","Funname":"network.setSettingWirelessBand","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessBssid(data connectionData, value []byte)","Funname":"network.setSettingWirelessBssid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessChannel(data connectionData, value uint32)","Funname":"network.setSettingWirelessChannel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessClonedMacAddress(data connectionData, value []byte)","Funname":"network.setSettingWirelessClonedMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessGenerateMacAddressMask(data connectionData, value string)","Funname":"network.setSettingWirelessGenerateMacAddressMask","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessHidden(data connectionData, value bool)","Funname":"network.setSettingWirelessHidden","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingWirelessMacAddress(data connectionData, value []byte)","Funname":"network.setSettingWirelessMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessMacAddressBlacklist(data connectionData, value []string)","Funname":"network.setSettingWirelessMacAddressBlacklist","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessMacAddressRandomization(data connectionData, value uint32)","Funname":"network.setSettingWirelessMacAddressRandomization","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessMode(data connectionData, value string)","Funname":"network.setSettingWirelessMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessMtu(data connectionData, value uint32)","Funname":"network.setSettingWirelessMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessPowersave(data connectionData, value uint32)","Funname":"network.setSettingWirelessPowersave","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessRate(data connectionData, value uint32)","Funname":"network.setSettingWirelessRate","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityAuthAlg(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityAuthAlg","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityGroup(data connectionData, value []string)","Funname":"network.setSettingWirelessSecurityGroup","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityKeyMgmt(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityKeyMgmt","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityLeapPassword(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityLeapPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityLeapPasswordFlags(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityLeapPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityLeapUsername(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityLeapUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityPairwise(data connectionData, value []string)","Funname":"network.setSettingWirelessSecurityPairwise","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityPmf(data connectionData, value int32)","Funname":"network.setSettingWirelessSecurityPmf","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingWirelessSecurityProto(data connectionData, value []string)","Funname":"network.setSettingWirelessSecurityProto","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityPsk(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityPsk","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityPskFlags(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityPskFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey0(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityWepKey0","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey1(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityWepKey1","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey2(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityWepKey2","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey3(data connectionData, value string)","Funname":"network.setSettingWirelessSecurityWepKey3","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKeyFlags(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityWepKeyFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepKeyType(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityWepKeyType","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepTxKeyidx(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityWepTxKeyidx","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWpsMethod(data connectionData, value uint32)","Funname":"network.setSettingWirelessSecurityWpsMethod","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSeenBssids(data connectionData, value []string)","Funname":"network.setSettingWirelessSeenBssids","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSsid(data connectionData, value []byte)","Funname":"network.setSettingWirelessSsid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessTxPower(data connectionData, value uint32)","Funname":"network.setSettingWirelessTxPower","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func removeSetting8021xAltsubjectMatches(data connectionData)","Funname":"removeSetting8021xAltsubjectMatches","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xAnonymousIdentity(data connectionData)","Funname":"removeSetting8021xAnonymousIdentity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xAuthTimeout(data connectionData)","Funname":"removeSetting8021xAuthTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCert(data connectionData)","Funname":"removeSetting8021xCaCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCertPassword(data connectionData)","Funname":"removeSetting8021xCaCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaCertPasswordFlags(data connectionData)","Funname":"removeSetting8021xCaCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xCaPath(data connectionData)","Funname":"removeSetting8021xCaPath","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCert(data connectionData)","Funname":"removeSetting8021xClientCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCertPassword(data connectionData)","Funname":"removeSetting8021xClientCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xClientCertPasswordFlags(data connectionData)","Funname":"removeSetting8021xClientCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xDomainSuffixMatch(data connectionData)","Funname":"removeSetting8021xDomainSuffixMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xEap(data connectionData)","Funname":"removeSetting8021xEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xIdentity(data connectionData)","Funname":"removeSetting8021xIdentity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPacFile(data connectionData)","Funname":"removeSetting8021xPacFile","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPassword(data connectionData)","Funname":"removeSetting8021xPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordFlags(data connectionData)","Funname":"removeSetting8021xPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordRaw(data connectionData)","Funname":"removeSetting8021xPasswordRaw","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPasswordRawFlags(data connectionData)","Funname":"removeSetting8021xPasswordRawFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1AuthFlags(data connectionData)","Funname":"removeSetting8021xPhase1AuthFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1FastProvisioning(data connectionData)","Funname":"removeSetting8021xPhase1FastProvisioning","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1Peaplabel(data connectionData)","Funname":"removeSetting8021xPhase1Peaplabel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase1Peapver(data connectionData)","Funname":"removeSetting8021xPhase1Peapver","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2AltsubjectMatches(data connectionData)","Funname":"removeSetting8021xPhase2AltsubjectMatches","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2Auth(data connectionData)","Funname":"removeSetting8021xPhase2Auth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2Autheap(data connectionData)","Funname":"removeSetting8021xPhase2Autheap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCert(data connectionData)","Funname":"removeSetting8021xPhase2CaCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCertPassword(data connectionData)","Funname":"removeSetting8021xPhase2CaCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaCertPasswordFlags(data connectionData)","Funname":"removeSetting8021xPhase2CaCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2CaPath(data connectionData)","Funname":"removeSetting8021xPhase2CaPath","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCert(data connectionData)","Funname":"removeSetting8021xPhase2ClientCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCertPassword(data connectionData)","Funname":"removeSetting8021xPhase2ClientCertPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2ClientCertPasswordFlags(data connectionData)","Funname":"removeSetting8021xPhase2ClientCertPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2DomainSuffixMatch(data connectionData)","Funname":"removeSetting8021xPhase2DomainSuffixMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKey(data connectionData)","Funname":"removeSetting8021xPhase2PrivateKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKeyPassword(data connectionData)","Funname":"removeSetting8021xPhase2PrivateKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData)","Funname":"removeSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPhase2SubjectMatch(data connectionData)","Funname":"removeSetting8021xPhase2SubjectMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPin(data connectionData)","Funname":"removeSetting8021xPin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPinFlags(data connectionData)","Funname":"removeSetting8021xPinFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKey(data connectionData)","Funname":"removeSetting8021xPrivateKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKeyPassword(data connectionData)","Funname":"removeSetting8021xPrivateKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xPrivateKeyPasswordFlags(data connectionData)","Funname":"removeSetting8021xPrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xSubjectMatch(data connectionData)","Funname":"removeSetting8021xSubjectMatch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSetting8021xSystemCaCerts(data connectionData)","Funname":"removeSetting8021xSystemCaCerts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslEncapsulation(data connectionData)","Funname":"removeSettingAdslEncapsulation","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslPassword(data connectionData)","Funname":"removeSettingAdslPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslPasswordFlags(data connectionData)","Funname":"removeSettingAdslPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslProtocol(data connectionData)","Funname":"removeSettingAdslProtocol","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslUsername(data connectionData)","Funname":"removeSettingAdslUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslVci(data connectionData)","Funname":"removeSettingAdslVci","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingAdslVpi(data connectionData)","Funname":"removeSettingAdslVpi","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBluetoothBdaddr(data connectionData)","Funname":"removeSettingBluetoothBdaddr","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBluetoothType(data connectionData)","Funname":"removeSettingBluetoothType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBondOptions(data connectionData)","Funname":"removeSettingBondOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeAgeingTime(data connectionData)","Funname":"removeSettingBridgeAgeingTime","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeForwardDelay(data connectionData)","Funname":"removeSettingBridgeForwardDelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeGroupForwardMask(data connectionData)","Funname":"removeSettingBridgeGroupForwardMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeHelloTime(data connectionData)","Funname":"removeSettingBridgeHelloTime","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMacAddress(data connectionData)","Funname":"removeSettingBridgeMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMaxAge(data connectionData)","Funname":"removeSettingBridgeMaxAge","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeMulticastSnooping(data connectionData)","Funname":"removeSettingBridgeMulticastSnooping","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortHairpinMode(data connectionData)","Funname":"removeSettingBridgePortHairpinMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortPathCost(data connectionData)","Funname":"removeSettingBridgePortPathCost","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePortPriority(data connectionData)","Funname":"removeSettingBridgePortPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgePriority(data connectionData)","Funname":"removeSettingBridgePriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingBridgeStp(data connectionData)","Funname":"removeSettingBridgeStp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaMtu(data connectionData)","Funname":"removeSettingCdmaMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaNumber(data connectionData)","Funname":"removeSettingCdmaNumber","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaPassword(data connectionData)","Funname":"removeSettingCdmaPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaPasswordFlags(data connectionData)","Funname":"removeSettingCdmaPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingCdmaUsername(data connectionData)","Funname":"removeSettingCdmaUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAuthRetries(data connectionData)","Funname":"removeSettingConnectionAuthRetries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnect(data connectionData)","Funname":"removeSettingConnectionAutoconnect","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectPriority(data connectionData)","Funname":"removeSettingConnectionAutoconnectPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectRetries(data connectionData)","Funname":"removeSettingConnectionAutoconnectRetries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionAutoconnectSlaves(data connectionData)","Funname":"removeSettingConnectionAutoconnectSlaves","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionGatewayPingTimeout(data connectionData)","Funname":"removeSettingConnectionGatewayPingTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionId(data connectionData)","Funname":"removeSettingConnectionId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionInterfaceName(data connectionData)","Funname":"removeSettingConnectionInterfaceName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionLldp(data connectionData)","Funname":"removeSettingConnectionLldp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionMaster(data connectionData)","Funname":"removeSettingConnectionMaster","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionMetered(data connectionData)","Funname":"removeSettingConnectionMetered","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionPermissions(data connectionData)","Funname":"removeSettingConnectionPermissions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionReadOnly(data connectionData)","Funname":"removeSettingConnectionReadOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionSecondaries(data connectionData)","Funname":"removeSettingConnectionSecondaries","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionSlaveType(data connectionData)","Funname":"removeSettingConnectionSlaveType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionStableId(data connectionData)","Funname":"removeSettingConnectionStableId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionTimestamp(data connectionData)","Funname":"removeSettingConnectionTimestamp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionType(data connectionData)","Funname":"removeSettingConnectionType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionUuid(data connectionData)","Funname":"removeSettingConnectionUuid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingConnectionZone(data connectionData)","Funname":"removeSettingConnectionZone","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoeFlags(data connectionData)","Funname":"removeSettingDcbAppFcoeFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoeMode(data connectionData)","Funname":"removeSettingDcbAppFcoeMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFcoePriority(data connectionData)","Funname":"removeSettingDcbAppFcoePriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFipFlags(data connectionData)","Funname":"removeSettingDcbAppFipFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppFipPriority(data connectionData)","Funname":"removeSettingDcbAppFipPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppIscsiFlags(data connectionData)","Funname":"removeSettingDcbAppIscsiFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbAppIscsiPriority(data connectionData)","Funname":"removeSettingDcbAppIscsiPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityBandwidth(data connectionData)","Funname":"removeSettingDcbPriorityBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityFlowControl(data connectionData)","Funname":"removeSettingDcbPriorityFlowControl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityFlowControlFlags(data connectionData)","Funname":"removeSettingDcbPriorityFlowControlFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupBandwidth(data connectionData)","Funname":"removeSettingDcbPriorityGroupBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupFlags(data connectionData)","Funname":"removeSettingDcbPriorityGroupFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityGroupId(data connectionData)","Funname":"removeSettingDcbPriorityGroupId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityStrictBandwidth(data connectionData)","Funname":"removeSettingDcbPriorityStrictBandwidth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingDcbPriorityTrafficClass(data connectionData)","Funname":"removeSettingDcbPriorityTrafficClass","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmApn(data connectionData)","Funname":"removeSettingGsmApn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmDeviceId(data connectionData)","Funname":"removeSettingGsmDeviceId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmHomeOnly(data connectionData)","Funname":"removeSettingGsmHomeOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmMtu(data connectionData)","Funname":"removeSettingGsmMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmNetworkId(data connectionData)","Funname":"removeSettingGsmNetworkId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmNumber(data connectionData)","Funname":"removeSettingGsmNumber","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPassword(data connectionData)","Funname":"removeSettingGsmPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPasswordFlags(data connectionData)","Funname":"removeSettingGsmPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPin(data connectionData)","Funname":"removeSettingGsmPin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmPinFlags(data connectionData)","Funname":"removeSettingGsmPinFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmSimId(data connectionData)","Funname":"removeSettingGsmSimId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmSimOperatorId(data connectionData)","Funname":"removeSettingGsmSimOperatorId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingGsmUsername(data connectionData)","Funname":"removeSettingGsmUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigAddresses(data connectionData)","Funname":"removeSettingIP4ConfigAddresses","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDadTimeout(data connectionData)","Funname":"removeSettingIP4ConfigDadTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpClientId(data connectionData)","Funname":"removeSettingIP4ConfigDhcpClientId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpFqdn(data connectionData)","Funname":"removeSettingIP4ConfigDhcpFqdn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpHostname(data connectionData)","Funname":"removeSettingIP4ConfigDhcpHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpSendHostname(data connectionData)","Funname":"removeSettingIP4ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDhcpTimeout(data connectionData)","Funname":"removeSettingIP4ConfigDhcpTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDns(data connectionData)","Funname":"removeSettingIP4ConfigDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsOptions(data connectionData)","Funname":"removeSettingIP4ConfigDnsOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsPriority(data connectionData)","Funname":"removeSettingIP4ConfigDnsPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigDnsSearch(data connectionData)","Funname":"removeSettingIP4ConfigDnsSearch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigGateway(data connectionData)","Funname":"removeSettingIP4ConfigGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigIgnoreAutoDns(data connectionData)","Funname":"removeSettingIP4ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigIgnoreAutoRoutes(data connectionData)","Funname":"removeSettingIP4ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigMayFail(data connectionData)","Funname":"removeSettingIP4ConfigMayFail","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigMethod(data connectionData)","Funname":"removeSettingIP4ConfigMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigNeverDefault(data connectionData)","Funname":"removeSettingIP4ConfigNeverDefault","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRouteMetric(data connectionData)","Funname":"removeSettingIP4ConfigRouteMetric","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRouteTable(data connectionData)","Funname":"removeSettingIP4ConfigRouteTable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP4ConfigRoutes(data connectionData)","Funname":"removeSettingIP4ConfigRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigAddrGenMode(data connectionData)","Funname":"removeSettingIP6ConfigAddrGenMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigAddresses(data connectionData)","Funname":"removeSettingIP6ConfigAddresses","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDadTimeout(data connectionData)","Funname":"removeSettingIP6ConfigDadTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpHostname(data connectionData)","Funname":"removeSettingIP6ConfigDhcpHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpSendHostname(data connectionData)","Funname":"removeSettingIP6ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDhcpTimeout(data connectionData)","Funname":"removeSettingIP6ConfigDhcpTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDns(data connectionData)","Funname":"removeSettingIP6ConfigDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsOptions(data connectionData)","Funname":"removeSettingIP6ConfigDnsOptions","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsPriority(data connectionData)","Funname":"removeSettingIP6ConfigDnsPriority","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigDnsSearch(data connectionData)","Funname":"removeSettingIP6ConfigDnsSearch","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigGateway(data connectionData)","Funname":"removeSettingIP6ConfigGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIgnoreAutoDns(data connectionData)","Funname":"removeSettingIP6ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIgnoreAutoRoutes(data connectionData)","Funname":"removeSettingIP6ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigIp6Privacy(data connectionData)","Funname":"removeSettingIP6ConfigIp6Privacy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigMayFail(data connectionData)","Funname":"removeSettingIP6ConfigMayFail","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigMethod(data connectionData)","Funname":"removeSettingIP6ConfigMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigNeverDefault(data connectionData)","Funname":"removeSettingIP6ConfigNeverDefault","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRouteMetric(data connectionData)","Funname":"removeSettingIP6ConfigRouteMetric","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRouteTable(data connectionData)","Funname":"removeSettingIP6ConfigRouteTable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigRoutes(data connectionData)","Funname":"removeSettingIP6ConfigRoutes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIP6ConfigToken(data connectionData)","Funname":"removeSettingIP6ConfigToken","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelEncapsulationLimit(data connectionData)","Funname":"removeSettingIPTunnelEncapsulationLimit","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelFlowLabel(data connectionData)","Funname":"removeSettingIPTunnelFlowLabel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelInputKey(data connectionData)","Funname":"removeSettingIPTunnelInputKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelLocal(data connectionData)","Funname":"removeSettingIPTunnelLocal","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelMode(data connectionData)","Funname":"removeSettingIPTunnelMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelMtu(data connectionData)","Funname":"removeSettingIPTunnelMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelOutputKey(data connectionData)","Funname":"removeSettingIPTunnelOutputKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelParent(data connectionData)","Funname":"removeSettingIPTunnelParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelPathMtuDiscovery(data connectionData)","Funname":"removeSettingIPTunnelPathMtuDiscovery","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelRemote(data connectionData)","Funname":"removeSettingIPTunnelRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelTos(data connectionData)","Funname":"removeSettingIPTunnelTos","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingIPTunnelTtl(data connectionData)","Funname":"removeSettingIPTunnelTtl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandMacAddress(data connectionData)","Funname":"removeSettingInfinibandMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandMtu(data connectionData)","Funname":"removeSettingInfinibandMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandPKey(data connectionData)","Funname":"removeSettingInfinibandPKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandParent(data connectionData)","Funname":"removeSettingInfinibandParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingInfinibandTransportMode(data connectionData)","Funname":"removeSettingInfinibandTransportMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecEncrypt(data connectionData)","Funname":"removeSettingMacsecEncrypt","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCak(data connectionData)","Funname":"removeSettingMacsecMkaCak","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCakFlags(data connectionData)","Funname":"removeSettingMacsecMkaCakFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMkaCkn(data connectionData)","Funname":"removeSettingMacsecMkaCkn","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecMode(data connectionData)","Funname":"removeSettingMacsecMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecParent(data connectionData)","Funname":"removeSettingMacsecParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecPort(data connectionData)","Funname":"removeSettingMacsecPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacsecValidation(data connectionData)","Funname":"removeSettingMacsecValidation","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanMode(data connectionData)","Funname":"removeSettingMacvlanMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanParent(data connectionData)","Funname":"removeSettingMacvlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanPromiscuous(data connectionData)","Funname":"removeSettingMacvlanPromiscuous","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingMacvlanTap(data connectionData)","Funname":"removeSettingMacvlanTap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshChannel(data connectionData)","Funname":"removeSettingOlpcMeshChannel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshDhcpAnycastAddress(data connectionData)","Funname":"removeSettingOlpcMeshDhcpAnycastAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOlpcMeshSsid(data connectionData)","Funname":"removeSettingOlpcMeshSsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeFailMode(data connectionData)","Funname":"removeSettingOvsBridgeFailMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeMcastSnoopingEnable(data connectionData)","Funname":"removeSettingOvsBridgeMcastSnoopingEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeRstpEnable(data connectionData)","Funname":"removeSettingOvsBridgeRstpEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsBridgeStpEnable(data connectionData)","Funname":"removeSettingOvsBridgeStpEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsInterfaceType(data connectionData)","Funname":"removeSettingOvsInterfaceType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPatchPeer(data connectionData)","Funname":"removeSettingOvsPatchPeer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondDowndelay(data connectionData)","Funname":"removeSettingOvsPortBondDowndelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondMode(data connectionData)","Funname":"removeSettingOvsPortBondMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortBondUpdelay(data connectionData)","Funname":"removeSettingOvsPortBondUpdelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortLacp(data connectionData)","Funname":"removeSettingOvsPortLacp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortTag(data connectionData)","Funname":"removeSettingOvsPortTag","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingOvsPortVlanMode(data connectionData)","Funname":"removeSettingOvsPortVlanMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppBaud(data connectionData)","Funname":"removeSettingPppBaud","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppCrtscts(data connectionData)","Funname":"removeSettingPppCrtscts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppLcpEchoFailure(data connectionData)","Funname":"removeSettingPppLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppLcpEchoInterval(data connectionData)","Funname":"removeSettingPppLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMppeStateful(data connectionData)","Funname":"removeSettingPppMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMru(data connectionData)","Funname":"removeSettingPppMru","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppMtu(data connectionData)","Funname":"removeSettingPppMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNoVjComp(data connectionData)","Funname":"removeSettingPppNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNoauth(data connectionData)","Funname":"removeSettingPppNoauth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNobsdcomp(data connectionData)","Funname":"removeSettingPppNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppNodeflate(data connectionData)","Funname":"removeSettingPppNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseChap(data connectionData)","Funname":"removeSettingPppRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseEap(data connectionData)","Funname":"removeSettingPppRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseMschap(data connectionData)","Funname":"removeSettingPppRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefuseMschapv2(data connectionData)","Funname":"removeSettingPppRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRefusePap(data connectionData)","Funname":"removeSettingPppRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRequireMppe(data connectionData)","Funname":"removeSettingPppRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppRequireMppe128(data connectionData)","Funname":"removeSettingPppRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeParent(data connectionData)","Funname":"removeSettingPppoeParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoePassword(data connectionData)","Funname":"removeSettingPppoePassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoePasswordFlags(data connectionData)","Funname":"removeSettingPppoePasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeService(data connectionData)","Funname":"removeSettingPppoeService","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingPppoeUsername(data connectionData)","Funname":"removeSettingPppoeUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyBrowserOnly(data connectionData)","Funname":"removeSettingProxyBrowserOnly","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyMethod(data connectionData)","Funname":"removeSettingProxyMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyPacScript(data connectionData)","Funname":"removeSettingProxyPacScript","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingProxyPacUrl(data connectionData)","Funname":"removeSettingProxyPacUrl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialBaud(data connectionData)","Funname":"removeSettingSerialBaud","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialBits(data connectionData)","Funname":"removeSettingSerialBits","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialParity(data connectionData)","Funname":"removeSettingSerialParity","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialSendDelay(data connectionData)","Funname":"removeSettingSerialSendDelay","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingSerialStopbits(data connectionData)","Funname":"removeSettingSerialStopbits","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamConfig(data connectionData)","Funname":"removeSettingTeamConfig","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamMcastRejoinCount(data connectionData)","Funname":"removeSettingTeamMcastRejoinCount","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamMcastRejoinInterval(data connectionData)","Funname":"removeSettingTeamMcastRejoinInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamNotifyPeersCount(data connectionData)","Funname":"removeSettingTeamNotifyPeersCount","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamNotifyPeersInterval(data connectionData)","Funname":"removeSettingTeamNotifyPeersInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortConfig(data connectionData)","Funname":"removeSettingTeamPortConfig","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortLacpKey(data connectionData)","Funname":"removeSettingTeamPortLacpKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortLacpPrio(data connectionData)","Funname":"removeSettingTeamPortLacpPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortPrio(data connectionData)","Funname":"removeSettingTeamPortPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortQueueId(data connectionData)","Funname":"removeSettingTeamPortQueueId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamPortSticky(data connectionData)","Funname":"removeSettingTeamPortSticky","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunner(data connectionData)","Funname":"removeSettingTeamRunner","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerActive(data connectionData)","Funname":"removeSettingTeamRunnerActive","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerAggSelectPolicy(data connectionData)","Funname":"removeSettingTeamRunnerAggSelectPolicy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerFastRate(data connectionData)","Funname":"removeSettingTeamRunnerFastRate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerHwaddrPolicy(data connectionData)","Funname":"removeSettingTeamRunnerHwaddrPolicy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerMinPorts(data connectionData)","Funname":"removeSettingTeamRunnerMinPorts","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerSysPrio(data connectionData)","Funname":"removeSettingTeamRunnerSysPrio","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxBalancer(data connectionData)","Funname":"removeSettingTeamRunnerTxBalancer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxBalancerInterval(data connectionData)","Funname":"removeSettingTeamRunnerTxBalancerInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTeamRunnerTxHash(data connectionData)","Funname":"removeSettingTeamRunnerTxHash","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunGroup(data connectionData)","Funname":"removeSettingTunGroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunMode(data connectionData)","Funname":"removeSettingTunMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunMultiQueue(data connectionData)","Funname":"removeSettingTunMultiQueue","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunOwner(data connectionData)","Funname":"removeSettingTunOwner","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunPi(data connectionData)","Funname":"removeSettingTunPi","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingTunVnetHdr(data connectionData)","Funname":"removeSettingTunVnetHdr","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingUserData(data connectionData)","Funname":"removeSettingUserData","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanEgressPriorityMap(data connectionData)","Funname":"removeSettingVlanEgressPriorityMap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanFlags(data connectionData)","Funname":"removeSettingVlanFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanId(data connectionData)","Funname":"removeSettingVlanId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanIngressPriorityMap(data connectionData)","Funname":"removeSettingVlanIngressPriorityMap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVlanParent(data connectionData)","Funname":"removeSettingVlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnData(data connectionData)","Funname":"removeSettingVpnData","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyDomain(data connectionData)","Funname":"removeSettingVpnL2tpKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyGateway(data connectionData)","Funname":"removeSettingVpnL2tpKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecEnable(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecEsp(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecEsp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecGatewayId(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecGatewayId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecGroupName(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecGroupName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecIke(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecIke","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyIpsecPsk(data connectionData)","Funname":"removeSettingVpnL2tpKeyIpsecPsk","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyLcpEchoFailure(data connectionData)","Funname":"removeSettingVpnL2tpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyLcpEchoInterval(data connectionData)","Funname":"removeSettingVpnL2tpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyMppeStateful(data connectionData)","Funname":"removeSettingVpnL2tpKeyMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoAccomp(data connectionData)","Funname":"removeSettingVpnL2tpKeyNoAccomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoPcomp(data connectionData)","Funname":"removeSettingVpnL2tpKeyNoPcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNoVjComp(data connectionData)","Funname":"removeSettingVpnL2tpKeyNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNobsdcomp(data connectionData)","Funname":"removeSettingVpnL2tpKeyNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyNodeflate(data connectionData)","Funname":"removeSettingVpnL2tpKeyNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyPassword(data connectionData)","Funname":"removeSettingVpnL2tpKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyPasswordFlags(data connectionData)","Funname":"removeSettingVpnL2tpKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseChap(data connectionData)","Funname":"removeSettingVpnL2tpKeyRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseEap(data connectionData)","Funname":"removeSettingVpnL2tpKeyRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseMschap(data connectionData)","Funname":"removeSettingVpnL2tpKeyRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefuseMschapv2(data connectionData)","Funname":"removeSettingVpnL2tpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRefusePap(data connectionData)","Funname":"removeSettingVpnL2tpKeyRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe(data connectionData)","Funname":"removeSettingVpnL2tpKeyRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe128(data connectionData)","Funname":"removeSettingVpnL2tpKeyRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyRequireMppe40(data connectionData)","Funname":"removeSettingVpnL2tpKeyRequireMppe40","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnL2tpKeyUser(data connectionData)","Funname":"removeSettingVpnL2tpKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyAuthtype(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyAuthtype","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCacert(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyCacert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCookie(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyCookie","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCsdEnable(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyCsdEnable","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyCsdWrapper(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyCsdWrapper","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyGateway(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyGwcert(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyGwcert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyMtu(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyPrivkey(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyPrivkey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyProxy(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyProxy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyStokenSource(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyStokenSource","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyStokenString(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyStokenString","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenconnectKeyUsercert(data connectionData)","Funname":"removeSettingVpnOpenconnectKeyUsercert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyAuth(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyAuth","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCa(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCa","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCert(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCertpass(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCertpass","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCertpassFlags(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCertpassFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCipher(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCipher","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyCompLzo(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyCompLzo","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyConnectionType(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyConnectionType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyFragmentSize(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyFragmentSize","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyKey(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyLocalIp(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyLocalIp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyMssfix(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyMssfix","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPassword(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPasswordFlags(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyPort(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProtoTcp(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyProtoTcp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyPort(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyProxyPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyRetry(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyProxyRetry","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyServer(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyProxyServer","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyProxyType(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyProxyType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemote(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteCertTls(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteIp(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyRemoteIp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRemoteRandom(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyRemoteRandom","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyRenegSeconds(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyRenegSeconds","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyStaticKey(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyStaticKey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTa(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyTa","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTaDir(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyTaDir","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTapDev(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyTapDev","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTlsRemote(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyTlsRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyTunnelMtu(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyTunnelMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnOpenvpnKeyUsername(data connectionData)","Funname":"removeSettingVpnOpenvpnKeyUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPersistent(data connectionData)","Funname":"removeSettingVpnPersistent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyDomain(data connectionData)","Funname":"removeSettingVpnPptpKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyGateway(data connectionData)","Funname":"removeSettingVpnPptpKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyLcpEchoFailure(data connectionData)","Funname":"removeSettingVpnPptpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyLcpEchoInterval(data connectionData)","Funname":"removeSettingVpnPptpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyMppeStateful(data connectionData)","Funname":"removeSettingVpnPptpKeyMppeStateful","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNoVjComp(data connectionData)","Funname":"removeSettingVpnPptpKeyNoVjComp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNobsdcomp(data connectionData)","Funname":"removeSettingVpnPptpKeyNobsdcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyNodeflate(data connectionData)","Funname":"removeSettingVpnPptpKeyNodeflate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyPassword(data connectionData)","Funname":"removeSettingVpnPptpKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyPasswordFlags(data connectionData)","Funname":"removeSettingVpnPptpKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseChap(data connectionData)","Funname":"removeSettingVpnPptpKeyRefuseChap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseEap(data connectionData)","Funname":"removeSettingVpnPptpKeyRefuseEap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseMschap(data connectionData)","Funname":"removeSettingVpnPptpKeyRefuseMschap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefuseMschapv2(data connectionData)","Funname":"removeSettingVpnPptpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRefusePap(data connectionData)","Funname":"removeSettingVpnPptpKeyRefusePap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe(data connectionData)","Funname":"removeSettingVpnPptpKeyRequireMppe","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe128(data connectionData)","Funname":"removeSettingVpnPptpKeyRequireMppe128","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyRequireMppe40(data connectionData)","Funname":"removeSettingVpnPptpKeyRequireMppe40","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnPptpKeyUser(data connectionData)","Funname":"removeSettingVpnPptpKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnSecrets(data connectionData)","Funname":"removeSettingVpnSecrets","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnServiceType(data connectionData)","Funname":"removeSettingVpnServiceType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyAddress(data connectionData)","Funname":"removeSettingVpnStrongswanKeyAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyCertificate(data connectionData)","Funname":"removeSettingVpnStrongswanKeyCertificate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyEncap(data connectionData)","Funname":"removeSettingVpnStrongswanKeyEncap","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyIpcomp(data connectionData)","Funname":"removeSettingVpnStrongswanKeyIpcomp","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyMethod(data connectionData)","Funname":"removeSettingVpnStrongswanKeyMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyPassword(data connectionData)","Funname":"removeSettingVpnStrongswanKeyPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyPasswordFlags(data connectionData)","Funname":"removeSettingVpnStrongswanKeyPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUser(data connectionData)","Funname":"removeSettingVpnStrongswanKeyUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUsercert(data connectionData)","Funname":"removeSettingVpnStrongswanKeyUsercert","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyUserkey(data connectionData)","Funname":"removeSettingVpnStrongswanKeyUserkey","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnStrongswanKeyVirtual(data connectionData)","Funname":"removeSettingVpnStrongswanKeyVirtual","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnTimeout(data connectionData)","Funname":"removeSettingVpnTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnUserName(data connectionData)","Funname":"removeSettingVpnUserName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyAppVersion(data connectionData)","Funname":"removeSettingVpnVpncKeyAppVersion","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyAuthmode(data connectionData)","Funname":"removeSettingVpnVpncKeyAuthmode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyCaFile(data connectionData)","Funname":"removeSettingVpnVpncKeyCaFile","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData)","Funname":"removeSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDhgroup(data connectionData)","Funname":"removeSettingVpnVpncKeyDhgroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDomain(data connectionData)","Funname":"removeSettingVpnVpncKeyDomain","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyDpdIdleTimeout(data connectionData)","Funname":"removeSettingVpnVpncKeyDpdIdleTimeout","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyGateway(data connectionData)","Funname":"removeSettingVpnVpncKeyGateway","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyId(data connectionData)","Funname":"removeSettingVpnVpncKeyId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyLocalPort(data connectionData)","Funname":"removeSettingVpnVpncKeyLocalPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyNatTraversalMode(data connectionData)","Funname":"removeSettingVpnVpncKeyNatTraversalMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyNoEncryption(data connectionData)","Funname":"removeSettingVpnVpncKeyNoEncryption","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyPerfectForward(data connectionData)","Funname":"removeSettingVpnVpncKeyPerfectForward","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecret(data connectionData)","Funname":"removeSettingVpnVpncKeySecret","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecretFlags(data connectionData)","Funname":"removeSettingVpnVpncKeySecretFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySecretType(data connectionData)","Funname":"removeSettingVpnVpncKeySecretType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeySingleDes(data connectionData)","Funname":"removeSettingVpnVpncKeySingleDes","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyVendor(data connectionData)","Funname":"removeSettingVpnVpncKeyVendor","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPassword(data connectionData)","Funname":"removeSettingVpnVpncKeyXauthPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPasswordFlags(data connectionData)","Funname":"removeSettingVpnVpncKeyXauthPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthPasswordType(data connectionData)","Funname":"removeSettingVpnVpncKeyXauthPasswordType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVpnVpncKeyXauthUser(data connectionData)","Funname":"removeSettingVpnVpncKeyXauthUser","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanAgeing(data connectionData)","Funname":"removeSettingVxlanAgeing","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanDestinationPort(data connectionData)","Funname":"removeSettingVxlanDestinationPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanId(data connectionData)","Funname":"removeSettingVxlanId","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanL2Miss(data connectionData)","Funname":"removeSettingVxlanL2Miss","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanL3Miss(data connectionData)","Funname":"removeSettingVxlanL3Miss","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLearning(data connectionData)","Funname":"removeSettingVxlanLearning","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLimit(data connectionData)","Funname":"removeSettingVxlanLimit","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanLocal(data connectionData)","Funname":"removeSettingVxlanLocal","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanParent(data connectionData)","Funname":"removeSettingVxlanParent","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanProxy(data connectionData)","Funname":"removeSettingVxlanProxy","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanRemote(data connectionData)","Funname":"removeSettingVxlanRemote","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanRsc(data connectionData)","Funname":"removeSettingVxlanRsc","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanSourcePortMax(data connectionData)","Funname":"removeSettingVxlanSourcePortMax","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanSourcePortMin(data connectionData)","Funname":"removeSettingVxlanSourcePortMin","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanTos(data connectionData)","Funname":"removeSettingVxlanTos","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingVxlanTtl(data connectionData)","Funname":"removeSettingVxlanTtl","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWimaxMacAddress(data connectionData)","Funname":"removeSettingWimaxMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWimaxNetworkName(data connectionData)","Funname":"removeSettingWimaxNetworkName","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredAutoNegotiate(data connectionData)","Funname":"removeSettingWiredAutoNegotiate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredClonedMacAddress(data connectionData)","Funname":"removeSettingWiredClonedMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredDuplex(data connectionData)","Funname":"removeSettingWiredDuplex","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredGenerateMacAddressMask(data connectionData)","Funname":"removeSettingWiredGenerateMacAddressMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMacAddress(data connectionData)","Funname":"removeSettingWiredMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMacAddressBlacklist(data connectionData)","Funname":"removeSettingWiredMacAddressBlacklist","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredMtu(data connectionData)","Funname":"removeSettingWiredMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredPort(data connectionData)","Funname":"removeSettingWiredPort","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Nettype(data connectionData)","Funname":"removeSettingWiredS390Nettype","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Options(data connectionData)","Funname":"removeSettingWiredS390Options","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredS390Subchannels(data connectionData)","Funname":"removeSettingWiredS390Subchannels","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredSpeed(data connectionData)","Funname":"removeSettingWiredSpeed","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredWakeOnLan(data connectionData)","Funname":"removeSettingWiredWakeOnLan","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWiredWakeOnLanPassword(data connectionData)","Funname":"removeSettingWiredWakeOnLanPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessBand(data connectionData)","Funname":"removeSettingWirelessBand","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessBssid(data connectionData)","Funname":"removeSettingWirelessBssid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessChannel(data connectionData)","Funname":"removeSettingWirelessChannel","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessClonedMacAddress(data connectionData)","Funname":"removeSettingWirelessClonedMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessGenerateMacAddressMask(data connectionData)","Funname":"removeSettingWirelessGenerateMacAddressMask","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessHidden(data connectionData)","Funname":"removeSettingWirelessHidden","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddress(data connectionData)","Funname":"removeSettingWirelessMacAddress","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddressBlacklist(data connectionData)","Funname":"removeSettingWirelessMacAddressBlacklist","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMacAddressRandomization(data connectionData)","Funname":"removeSettingWirelessMacAddressRandomization","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMode(data connectionData)","Funname":"removeSettingWirelessMode","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessMtu(data connectionData)","Funname":"removeSettingWirelessMtu","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessPowersave(data connectionData)","Funname":"removeSettingWirelessPowersave","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessRate(data connectionData)","Funname":"removeSettingWirelessRate","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityAuthAlg(data connectionData)","Funname":"removeSettingWirelessSecurityAuthAlg","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityGroup(data connectionData)","Funname":"removeSettingWirelessSecurityGroup","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityKeyMgmt(data connectionData)","Funname":"removeSettingWirelessSecurityKeyMgmt","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapPassword(data connectionData)","Funname":"removeSettingWirelessSecurityLeapPassword","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapPasswordFlags(data connectionData)","Funname":"removeSettingWirelessSecurityLeapPasswordFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityLeapUsername(data connectionData)","Funname":"removeSettingWirelessSecurityLeapUsername","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPairwise(data connectionData)","Funname":"removeSettingWirelessSecurityPairwise","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPmf(data connectionData)","Funname":"removeSettingWirelessSecurityPmf","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityProto(data connectionData)","Funname":"removeSettingWirelessSecurityProto","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPsk(data connectionData)","Funname":"removeSettingWirelessSecurityPsk","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityPskFlags(data connectionData)","Funname":"removeSettingWirelessSecurityPskFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey0(data connectionData)","Funname":"removeSettingWirelessSecurityWepKey0","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey1(data connectionData)","Funname":"removeSettingWirelessSecurityWepKey1","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey2(data connectionData)","Funname":"removeSettingWirelessSecurityWepKey2","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKey3(data connectionData)","Funname":"removeSettingWirelessSecurityWepKey3","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKeyFlags(data connectionData)","Funname":"removeSettingWirelessSecurityWepKeyFlags","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepKeyType(data connectionData)","Funname":"removeSettingWirelessSecurityWepKeyType","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWepTxKeyidx(data connectionData)","Funname":"removeSettingWirelessSecurityWepTxKeyidx","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSecurityWpsMethod(data connectionData)","Funname":"removeSettingWirelessSecurityWpsMethod","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSeenBssids(data connectionData)","Funname":"removeSettingWirelessSeenBssids","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessSsid(data connectionData)","Funname":"removeSettingWirelessSsid","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func removeSettingWirelessTxPower(data connectionData)","Funname":"removeSettingWirelessTxPower","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func setSetting8021xAltsubjectMatches(data connectionData, value []string)","Funname":"setSetting8021xAltsubjectMatches","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xAnonymousIdentity(data connectionData, value string)","Funname":"setSetting8021xAnonymousIdentity","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xAuthTimeout(data connectionData, value int32)","Funname":"setSetting8021xAuthTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSetting8021xCaCert(data connectionData, value []byte)","Funname":"setSetting8021xCaCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xCaCertPassword(data connectionData, value string)","Funname":"setSetting8021xCaCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xCaCertPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xCaCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xCaPath(data connectionData, value string)","Funname":"setSetting8021xCaPath","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xClientCert(data connectionData, value []byte)","Funname":"setSetting8021xClientCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xClientCertPassword(data connectionData, value string)","Funname":"setSetting8021xClientCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xClientCertPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xClientCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xDomainSuffixMatch(data connectionData, value string)","Funname":"setSetting8021xDomainSuffixMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xEap(data connectionData, value []string)","Funname":"setSetting8021xEap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xIdentity(data connectionData, value string)","Funname":"setSetting8021xIdentity","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPacFile(data connectionData, value string)","Funname":"setSetting8021xPacFile","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPassword(data connectionData, value string)","Funname":"setSetting8021xPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPasswordRaw(data connectionData, value []byte)","Funname":"setSetting8021xPasswordRaw","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPasswordRawFlags(data connectionData, value uint32)","Funname":"setSetting8021xPasswordRawFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase1AuthFlags(data connectionData, value uint32)","Funname":"setSetting8021xPhase1AuthFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase1FastProvisioning(data connectionData, value string)","Funname":"setSetting8021xPhase1FastProvisioning","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase1Peaplabel(data connectionData, value string)","Funname":"setSetting8021xPhase1Peaplabel","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase1Peapver(data connectionData, value string)","Funname":"setSetting8021xPhase1Peapver","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2AltsubjectMatches(data connectionData, value []string)","Funname":"setSetting8021xPhase2AltsubjectMatches","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSetting8021xPhase2Auth(data connectionData, value string)","Funname":"setSetting8021xPhase2Auth","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2Autheap(data connectionData, value string)","Funname":"setSetting8021xPhase2Autheap","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2CaCert(data connectionData, value []byte)","Funname":"setSetting8021xPhase2CaCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2CaCertPassword(data connectionData, value string)","Funname":"setSetting8021xPhase2CaCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2CaCertPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xPhase2CaCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2CaPath(data connectionData, value string)","Funname":"setSetting8021xPhase2CaPath","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2ClientCert(data connectionData, value []byte)","Funname":"setSetting8021xPhase2ClientCert","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2ClientCertPassword(data connectionData, value string)","Funname":"setSetting8021xPhase2ClientCertPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2ClientCertPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xPhase2ClientCertPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2DomainSuffixMatch(data connectionData, value string)","Funname":"setSetting8021xPhase2DomainSuffixMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKey(data connectionData, value []byte)","Funname":"setSetting8021xPhase2PrivateKey","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKeyPassword(data connectionData, value string)","Funname":"setSetting8021xPhase2PrivateKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPhase2PrivateKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xPhase2PrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPhase2SubjectMatch(data connectionData, value string)","Funname":"setSetting8021xPhase2SubjectMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPin(data connectionData, value string)","Funname":"setSetting8021xPin","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPinFlags(data connectionData, value uint32)","Funname":"setSetting8021xPinFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xPrivateKey(data connectionData, value []byte)","Funname":"setSetting8021xPrivateKey","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSetting8021xPrivateKeyPassword(data connectionData, value string)","Funname":"setSetting8021xPrivateKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xPrivateKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSetting8021xPrivateKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSetting8021xSubjectMatch(data connectionData, value string)","Funname":"setSetting8021xSubjectMatch","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSetting8021xSystemCaCerts(data connectionData, value bool)","Funname":"setSetting8021xSystemCaCerts","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingAdslEncapsulation(data connectionData, value string)","Funname":"setSettingAdslEncapsulation","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslPassword(data connectionData, value string)","Funname":"setSettingAdslPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslPasswordFlags(data connectionData, value uint32)","Funname":"setSettingAdslPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingAdslProtocol(data connectionData, value string)","Funname":"setSettingAdslProtocol","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslUsername(data connectionData, value string)","Funname":"setSettingAdslUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingAdslVci(data connectionData, value uint32)","Funname":"setSettingAdslVci","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingAdslVpi(data connectionData, value uint32)","Funname":"setSettingAdslVpi","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBluetoothBdaddr(data connectionData, value []byte)","Funname":"setSettingBluetoothBdaddr","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingBluetoothType(data connectionData, value string)","Funname":"setSettingBluetoothType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingBondOptions(data connectionData, value map[string]string)","Funname":"setSettingBondOptions","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingBridgeAgeingTime(data connectionData, value uint32)","Funname":"setSettingBridgeAgeingTime","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeForwardDelay(data connectionData, value uint32)","Funname":"setSettingBridgeForwardDelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeGroupForwardMask(data connectionData, value uint32)","Funname":"setSettingBridgeGroupForwardMask","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeHelloTime(data connectionData, value uint32)","Funname":"setSettingBridgeHelloTime","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeMacAddress(data connectionData, value []byte)","Funname":"setSettingBridgeMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingBridgeMaxAge(data connectionData, value uint32)","Funname":"setSettingBridgeMaxAge","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeMulticastSnooping(data connectionData, value bool)","Funname":"setSettingBridgeMulticastSnooping","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingBridgePortHairpinMode(data connectionData, value bool)","Funname":"setSettingBridgePortHairpinMode","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingBridgePortPathCost(data connectionData, value uint32)","Funname":"setSettingBridgePortPathCost","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgePortPriority(data connectionData, value uint32)","Funname":"setSettingBridgePortPriority","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgePriority(data connectionData, value uint32)","Funname":"setSettingBridgePriority","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingBridgeStp(data connectionData, value bool)","Funname":"setSettingBridgeStp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingCdmaMtu(data connectionData, value uint32)","Funname":"setSettingCdmaMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingCdmaNumber(data connectionData, value string)","Funname":"setSettingCdmaNumber","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingCdmaPassword(data connectionData, value string)","Funname":"setSettingCdmaPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingCdmaPasswordFlags(data connectionData, value uint32)","Funname":"setSettingCdmaPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingCdmaUsername(data connectionData, value string)","Funname":"setSettingCdmaUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionAuthRetries(data connectionData, value int32)","Funname":"setSettingConnectionAuthRetries","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnect(data connectionData, value bool)","Funname":"setSettingConnectionAutoconnect","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingConnectionAutoconnectPriority(data connectionData, value int32)","Funname":"setSettingConnectionAutoconnectPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnectRetries(data connectionData, value int32)","Funname":"setSettingConnectionAutoconnectRetries","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionAutoconnectSlaves(data connectionData, value int32)","Funname":"setSettingConnectionAutoconnectSlaves","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionGatewayPingTimeout(data connectionData, value uint32)","Funname":"setSettingConnectionGatewayPingTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingConnectionId(data connectionData, value string)","Funname":"setSettingConnectionId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionInterfaceName(data connectionData, value string)","Funname":"setSettingConnectionInterfaceName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionLldp(data connectionData, value int32)","Funname":"setSettingConnectionLldp","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionMaster(data connectionData, value string)","Funname":"setSettingConnectionMaster","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionMetered(data connectionData, value int32)","Funname":"setSettingConnectionMetered","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingConnectionPermissions(data connectionData, value []string)","Funname":"setSettingConnectionPermissions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingConnectionReadOnly(data connectionData, value bool)","Funname":"setSettingConnectionReadOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingConnectionSecondaries(data connectionData, value []string)","Funname":"setSettingConnectionSecondaries","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingConnectionSlaveType(data connectionData, value string)","Funname":"setSettingConnectionSlaveType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionStableId(data connectionData, value string)","Funname":"setSettingConnectionStableId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionTimestamp(data connectionData, value uint64)","Funname":"setSettingConnectionTimestamp","Returntype":"","Args":"data connectionData, value uint64"},{"Uniquefunname":"func setSettingConnectionType(data connectionData, value string)","Funname":"setSettingConnectionType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionUuid(data connectionData, value string)","Funname":"setSettingConnectionUuid","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingConnectionZone(data connectionData, value string)","Funname":"setSettingConnectionZone","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingDcbAppFcoeFlags(data connectionData, value uint32)","Funname":"setSettingDcbAppFcoeFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppFcoeMode(data connectionData, value string)","Funname":"setSettingDcbAppFcoeMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingDcbAppFcoePriority(data connectionData, value int32)","Funname":"setSettingDcbAppFcoePriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbAppFipFlags(data connectionData, value uint32)","Funname":"setSettingDcbAppFipFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppFipPriority(data connectionData, value int32)","Funname":"setSettingDcbAppFipPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbAppIscsiFlags(data connectionData, value uint32)","Funname":"setSettingDcbAppIscsiFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbAppIscsiPriority(data connectionData, value int32)","Funname":"setSettingDcbAppIscsiPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingDcbPriorityBandwidth(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityFlowControl(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityFlowControl","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityFlowControlFlags(data connectionData, value uint32)","Funname":"setSettingDcbPriorityFlowControlFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupBandwidth(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityGroupBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupFlags(data connectionData, value uint32)","Funname":"setSettingDcbPriorityGroupFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingDcbPriorityGroupId(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityGroupId","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityStrictBandwidth(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityStrictBandwidth","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingDcbPriorityTrafficClass(data connectionData, value []uint32)","Funname":"setSettingDcbPriorityTrafficClass","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingGsmApn(data connectionData, value string)","Funname":"setSettingGsmApn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmDeviceId(data connectionData, value string)","Funname":"setSettingGsmDeviceId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmHomeOnly(data connectionData, value bool)","Funname":"setSettingGsmHomeOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingGsmMtu(data connectionData, value uint32)","Funname":"setSettingGsmMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmNetworkId(data connectionData, value string)","Funname":"setSettingGsmNetworkId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmNumber(data connectionData, value string)","Funname":"setSettingGsmNumber","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPassword(data connectionData, value string)","Funname":"setSettingGsmPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPasswordFlags(data connectionData, value uint32)","Funname":"setSettingGsmPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmPin(data connectionData, value string)","Funname":"setSettingGsmPin","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmPinFlags(data connectionData, value uint32)","Funname":"setSettingGsmPinFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingGsmSimId(data connectionData, value string)","Funname":"setSettingGsmSimId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmSimOperatorId(data connectionData, value string)","Funname":"setSettingGsmSimOperatorId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingGsmUsername(data connectionData, value string)","Funname":"setSettingGsmUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigAddresses(data connectionData, value [][]uint32)","Funname":"setSettingIP4ConfigAddresses","Returntype":"","Args":"data connectionData, value [][]uint32"},{"Uniquefunname":"func setSettingIP4ConfigDadTimeout(data connectionData, value int32)","Funname":"setSettingIP4ConfigDadTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDhcpClientId(data connectionData, value string)","Funname":"setSettingIP4ConfigDhcpClientId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpFqdn(data connectionData, value string)","Funname":"setSettingIP4ConfigDhcpFqdn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpHostname(data connectionData, value string)","Funname":"setSettingIP4ConfigDhcpHostname","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigDhcpSendHostname(data connectionData, value bool)","Funname":"setSettingIP4ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigDhcpTimeout(data connectionData, value int32)","Funname":"setSettingIP4ConfigDhcpTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDns(data connectionData, value []uint32)","Funname":"setSettingIP4ConfigDns","Returntype":"","Args":"data connectionData, value []uint32"},{"Uniquefunname":"func setSettingIP4ConfigDnsOptions(data connectionData, value []string)","Funname":"setSettingIP4ConfigDnsOptions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP4ConfigDnsPriority(data connectionData, value int32)","Funname":"setSettingIP4ConfigDnsPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP4ConfigDnsSearch(data connectionData, value []string)","Funname":"setSettingIP4ConfigDnsSearch","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP4ConfigGateway(data connectionData, value string)","Funname":"setSettingIP4ConfigGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigIgnoreAutoDns(data connectionData, value bool)","Funname":"setSettingIP4ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigIgnoreAutoRoutes(data connectionData, value bool)","Funname":"setSettingIP4ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigMayFail(data connectionData, value bool)","Funname":"setSettingIP4ConfigMayFail","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigMethod(data connectionData, value string)","Funname":"setSettingIP4ConfigMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP4ConfigNeverDefault(data connectionData, value bool)","Funname":"setSettingIP4ConfigNeverDefault","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP4ConfigRouteMetric(data connectionData, value int64)","Funname":"setSettingIP4ConfigRouteMetric","Returntype":"","Args":"data connectionData, value int64"},{"Uniquefunname":"func setSettingIP4ConfigRouteTable(data connectionData, value uint32)","Funname":"setSettingIP4ConfigRouteTable","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIP4ConfigRoutes(data connectionData, value [][]uint32)","Funname":"setSettingIP4ConfigRoutes","Returntype":"","Args":"data connectionData, value [][]uint32"},{"Uniquefunname":"func setSettingIP6ConfigAddrGenMode(data connectionData, value int32)","Funname":"setSettingIP6ConfigAddrGenMode","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigAddresses(data connectionData, value ipv6Addresses)","Funname":"setSettingIP6ConfigAddresses","Returntype":"","Args":"data connectionData, value ipv6Addresses"},{"Uniquefunname":"func setSettingIP6ConfigDadTimeout(data connectionData, value int32)","Funname":"setSettingIP6ConfigDadTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDhcpHostname(data connectionData, value string)","Funname":"setSettingIP6ConfigDhcpHostname","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigDhcpSendHostname(data connectionData, value bool)","Funname":"setSettingIP6ConfigDhcpSendHostname","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigDhcpTimeout(data connectionData, value int32)","Funname":"setSettingIP6ConfigDhcpTimeout","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDns(data connectionData, value [][]byte)","Funname":"setSettingIP6ConfigDns","Returntype":"","Args":"data connectionData, value [][]byte"},{"Uniquefunname":"func setSettingIP6ConfigDnsOptions(data connectionData, value []string)","Funname":"setSettingIP6ConfigDnsOptions","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP6ConfigDnsPriority(data connectionData, value int32)","Funname":"setSettingIP6ConfigDnsPriority","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigDnsSearch(data connectionData, value []string)","Funname":"setSettingIP6ConfigDnsSearch","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingIP6ConfigGateway(data connectionData, value string)","Funname":"setSettingIP6ConfigGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigIgnoreAutoDns(data connectionData, value bool)","Funname":"setSettingIP6ConfigIgnoreAutoDns","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigIgnoreAutoRoutes(data connectionData, value bool)","Funname":"setSettingIP6ConfigIgnoreAutoRoutes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigIp6Privacy(data connectionData, value int32)","Funname":"setSettingIP6ConfigIp6Privacy","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingIP6ConfigMayFail(data connectionData, value bool)","Funname":"setSettingIP6ConfigMayFail","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigMethod(data connectionData, value string)","Funname":"setSettingIP6ConfigMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIP6ConfigNeverDefault(data connectionData, value bool)","Funname":"setSettingIP6ConfigNeverDefault","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIP6ConfigRouteMetric(data connectionData, value int64)","Funname":"setSettingIP6ConfigRouteMetric","Returntype":"","Args":"data connectionData, value int64"},{"Uniquefunname":"func setSettingIP6ConfigRouteTable(data connectionData, value uint32)","Funname":"setSettingIP6ConfigRouteTable","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIP6ConfigRoutes(data connectionData, value ipv6Routes)","Funname":"setSettingIP6ConfigRoutes","Returntype":"","Args":"data connectionData, value ipv6Routes"},{"Uniquefunname":"func setSettingIP6ConfigToken(data connectionData, value string)","Funname":"setSettingIP6ConfigToken","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelEncapsulationLimit(data connectionData, value uint32)","Funname":"setSettingIPTunnelEncapsulationLimit","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelFlowLabel(data connectionData, value uint32)","Funname":"setSettingIPTunnelFlowLabel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelInputKey(data connectionData, value string)","Funname":"setSettingIPTunnelInputKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelLocal(data connectionData, value string)","Funname":"setSettingIPTunnelLocal","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelMode(data connectionData, value uint32)","Funname":"setSettingIPTunnelMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelMtu(data connectionData, value uint32)","Funname":"setSettingIPTunnelMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelOutputKey(data connectionData, value string)","Funname":"setSettingIPTunnelOutputKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelParent(data connectionData, value string)","Funname":"setSettingIPTunnelParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelPathMtuDiscovery(data connectionData, value bool)","Funname":"setSettingIPTunnelPathMtuDiscovery","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingIPTunnelRemote(data connectionData, value string)","Funname":"setSettingIPTunnelRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingIPTunnelTos(data connectionData, value uint32)","Funname":"setSettingIPTunnelTos","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingIPTunnelTtl(data connectionData, value uint32)","Funname":"setSettingIPTunnelTtl","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingInfinibandMacAddress(data connectionData, value []byte)","Funname":"setSettingInfinibandMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingInfinibandMtu(data connectionData, value uint32)","Funname":"setSettingInfinibandMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingInfinibandPKey(data connectionData, value int32)","Funname":"setSettingInfinibandPKey","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingInfinibandParent(data connectionData, value string)","Funname":"setSettingInfinibandParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingInfinibandTransportMode(data connectionData, value string)","Funname":"setSettingInfinibandTransportMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecEncrypt(data connectionData, value bool)","Funname":"setSettingMacsecEncrypt","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingMacsecMkaCak(data connectionData, value string)","Funname":"setSettingMacsecMkaCak","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecMkaCakFlags(data connectionData, value uint32)","Funname":"setSettingMacsecMkaCakFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingMacsecMkaCkn(data connectionData, value string)","Funname":"setSettingMacsecMkaCkn","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecMode(data connectionData, value int32)","Funname":"setSettingMacsecMode","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacsecParent(data connectionData, value string)","Funname":"setSettingMacsecParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacsecPort(data connectionData, value int32)","Funname":"setSettingMacsecPort","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacsecValidation(data connectionData, value int32)","Funname":"setSettingMacsecValidation","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingMacvlanMode(data connectionData, value uint32)","Funname":"setSettingMacvlanMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingMacvlanParent(data connectionData, value string)","Funname":"setSettingMacvlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingMacvlanPromiscuous(data connectionData, value bool)","Funname":"setSettingMacvlanPromiscuous","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingMacvlanTap(data connectionData, value bool)","Funname":"setSettingMacvlanTap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOlpcMeshChannel(data connectionData, value uint32)","Funname":"setSettingOlpcMeshChannel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOlpcMeshDhcpAnycastAddress(data connectionData, value []byte)","Funname":"setSettingOlpcMeshDhcpAnycastAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingOlpcMeshSsid(data connectionData, value []byte)","Funname":"setSettingOlpcMeshSsid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingOvsBridgeFailMode(data connectionData, value string)","Funname":"setSettingOvsBridgeFailMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsBridgeMcastSnoopingEnable(data connectionData, value bool)","Funname":"setSettingOvsBridgeMcastSnoopingEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsBridgeRstpEnable(data connectionData, value bool)","Funname":"setSettingOvsBridgeRstpEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsBridgeStpEnable(data connectionData, value bool)","Funname":"setSettingOvsBridgeStpEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingOvsInterfaceType(data connectionData, value string)","Funname":"setSettingOvsInterfaceType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPatchPeer(data connectionData, value string)","Funname":"setSettingOvsPatchPeer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortBondDowndelay(data connectionData, value uint32)","Funname":"setSettingOvsPortBondDowndelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortBondMode(data connectionData, value string)","Funname":"setSettingOvsPortBondMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortBondUpdelay(data connectionData, value uint32)","Funname":"setSettingOvsPortBondUpdelay","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortLacp(data connectionData, value string)","Funname":"setSettingOvsPortLacp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingOvsPortTag(data connectionData, value uint32)","Funname":"setSettingOvsPortTag","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingOvsPortVlanMode(data connectionData, value string)","Funname":"setSettingOvsPortVlanMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppBaud(data connectionData, value uint32)","Funname":"setSettingPppBaud","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppCrtscts(data connectionData, value bool)","Funname":"setSettingPppCrtscts","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppLcpEchoFailure(data connectionData, value uint32)","Funname":"setSettingPppLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppLcpEchoInterval(data connectionData, value uint32)","Funname":"setSettingPppLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppMppeStateful(data connectionData, value bool)","Funname":"setSettingPppMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppMru(data connectionData, value uint32)","Funname":"setSettingPppMru","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppMtu(data connectionData, value uint32)","Funname":"setSettingPppMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppNoVjComp(data connectionData, value bool)","Funname":"setSettingPppNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNoauth(data connectionData, value bool)","Funname":"setSettingPppNoauth","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNobsdcomp(data connectionData, value bool)","Funname":"setSettingPppNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppNodeflate(data connectionData, value bool)","Funname":"setSettingPppNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseChap(data connectionData, value bool)","Funname":"setSettingPppRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseEap(data connectionData, value bool)","Funname":"setSettingPppRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseMschap(data connectionData, value bool)","Funname":"setSettingPppRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefuseMschapv2(data connectionData, value bool)","Funname":"setSettingPppRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRefusePap(data connectionData, value bool)","Funname":"setSettingPppRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRequireMppe(data connectionData, value bool)","Funname":"setSettingPppRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppRequireMppe128(data connectionData, value bool)","Funname":"setSettingPppRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingPppoeParent(data connectionData, value string)","Funname":"setSettingPppoeParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoePassword(data connectionData, value string)","Funname":"setSettingPppoePassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoePasswordFlags(data connectionData, value uint32)","Funname":"setSettingPppoePasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingPppoeService(data connectionData, value string)","Funname":"setSettingPppoeService","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingPppoeUsername(data connectionData, value string)","Funname":"setSettingPppoeUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingProxyBrowserOnly(data connectionData, value bool)","Funname":"setSettingProxyBrowserOnly","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingProxyMethod(data connectionData, value int32)","Funname":"setSettingProxyMethod","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingProxyPacScript(data connectionData, value string)","Funname":"setSettingProxyPacScript","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingProxyPacUrl(data connectionData, value string)","Funname":"setSettingProxyPacUrl","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingSerialBaud(data connectionData, value uint32)","Funname":"setSettingSerialBaud","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingSerialBits(data connectionData, value uint32)","Funname":"setSettingSerialBits","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingSerialParity(data connectionData, value byte)","Funname":"setSettingSerialParity","Returntype":"","Args":"data connectionData, value byte"},{"Uniquefunname":"func setSettingSerialSendDelay(data connectionData, value uint64)","Funname":"setSettingSerialSendDelay","Returntype":"","Args":"data connectionData, value uint64"},{"Uniquefunname":"func setSettingSerialStopbits(data connectionData, value uint32)","Funname":"setSettingSerialStopbits","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingTeamConfig(data connectionData, value string)","Funname":"setSettingTeamConfig","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamMcastRejoinCount(data connectionData, value int32)","Funname":"setSettingTeamMcastRejoinCount","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamMcastRejoinInterval(data connectionData, value int32)","Funname":"setSettingTeamMcastRejoinInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamNotifyPeersCount(data connectionData, value int32)","Funname":"setSettingTeamNotifyPeersCount","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamNotifyPeersInterval(data connectionData, value int32)","Funname":"setSettingTeamNotifyPeersInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortConfig(data connectionData, value string)","Funname":"setSettingTeamPortConfig","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamPortLacpKey(data connectionData, value int32)","Funname":"setSettingTeamPortLacpKey","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortLacpPrio(data connectionData, value int32)","Funname":"setSettingTeamPortLacpPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortPrio(data connectionData, value int32)","Funname":"setSettingTeamPortPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortQueueId(data connectionData, value int32)","Funname":"setSettingTeamPortQueueId","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamPortSticky(data connectionData, value bool)","Funname":"setSettingTeamPortSticky","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunner(data connectionData, value string)","Funname":"setSettingTeamRunner","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerActive(data connectionData, value bool)","Funname":"setSettingTeamRunnerActive","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunnerAggSelectPolicy(data connectionData, value string)","Funname":"setSettingTeamRunnerAggSelectPolicy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerFastRate(data connectionData, value bool)","Funname":"setSettingTeamRunnerFastRate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTeamRunnerHwaddrPolicy(data connectionData, value string)","Funname":"setSettingTeamRunnerHwaddrPolicy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerMinPorts(data connectionData, value int32)","Funname":"setSettingTeamRunnerMinPorts","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerSysPrio(data connectionData, value int32)","Funname":"setSettingTeamRunnerSysPrio","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerTxBalancer(data connectionData, value string)","Funname":"setSettingTeamRunnerTxBalancer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTeamRunnerTxBalancerInterval(data connectionData, value int32)","Funname":"setSettingTeamRunnerTxBalancerInterval","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingTeamRunnerTxHash(data connectionData, value []string)","Funname":"setSettingTeamRunnerTxHash","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingTunGroup(data connectionData, value string)","Funname":"setSettingTunGroup","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTunMode(data connectionData, value uint32)","Funname":"setSettingTunMode","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingTunMultiQueue(data connectionData, value bool)","Funname":"setSettingTunMultiQueue","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTunOwner(data connectionData, value string)","Funname":"setSettingTunOwner","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingTunPi(data connectionData, value bool)","Funname":"setSettingTunPi","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingTunVnetHdr(data connectionData, value bool)","Funname":"setSettingTunVnetHdr","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingUserData(data connectionData, value map[string]string)","Funname":"setSettingUserData","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVlanEgressPriorityMap(data connectionData, value []string)","Funname":"setSettingVlanEgressPriorityMap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingVlanFlags(data connectionData, value uint32)","Funname":"setSettingVlanFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVlanId(data connectionData, value uint32)","Funname":"setSettingVlanId","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVlanIngressPriorityMap(data connectionData, value []string)","Funname":"setSettingVlanIngressPriorityMap","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingVlanParent(data connectionData, value string)","Funname":"setSettingVlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnData(data connectionData, value map[string]string)","Funname":"setSettingVpnData","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVpnL2tpKeyDomain(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyGateway(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecEnable(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyIpsecEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecEsp(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyIpsecEsp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecGatewayId(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyIpsecGatewayId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecGroupName(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyIpsecGroupName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecIke(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyIpsecIke","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyIpsecPsk(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyIpsecPsk","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyLcpEchoFailure(data connectionData, value uint32)","Funname":"setSettingVpnL2tpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyLcpEchoInterval(data connectionData, value uint32)","Funname":"setSettingVpnL2tpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyMppeStateful(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoAccomp(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyNoAccomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoPcomp(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyNoPcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNoVjComp(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNobsdcomp(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyNodeflate(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyPassword(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnL2tpKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnL2tpKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseChap(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseEap(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseMschap(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefuseMschapv2(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRefusePap(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe128(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyRequireMppe40(data connectionData, value bool)","Funname":"setSettingVpnL2tpKeyRequireMppe40","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnL2tpKeyUser(data connectionData, value string)","Funname":"setSettingVpnL2tpKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyAuthtype(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyAuthtype","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCacert(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyCacert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCookie(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyCookie","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCsdEnable(data connectionData, value bool)","Funname":"setSettingVpnOpenconnectKeyCsdEnable","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyCsdWrapper(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyCsdWrapper","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyGateway(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyGwcert(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyGwcert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyMtu(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyMtu","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyPemPassphraseFsid(data connectionData, value bool)","Funname":"setSettingVpnOpenconnectKeyPemPassphraseFsid","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyPrivkey(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyPrivkey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyProxy(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyProxy","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyStokenSource(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyStokenSource","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyStokenString(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyStokenString","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenconnectKeyUsercert(data connectionData, value string)","Funname":"setSettingVpnOpenconnectKeyUsercert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyAuth(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyAuth","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCa(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyCa","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCert(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyCert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCertpass(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyCertpass","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCertpassFlags(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyCertpassFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCipher(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyCipher","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyCompLzo(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyCompLzo","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyConnectionType(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyConnectionType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyFragmentSize(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyFragmentSize","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyPassword(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyHttpProxyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyHttpProxyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyHttpProxyUsername(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyHttpProxyUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyKey(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyLocalIp(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyLocalIp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyMssfix(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyMssfix","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPassword(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyPort(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProtoTcp(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyProtoTcp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyPort(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyProxyPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyRetry(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyProxyRetry","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyServer(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyProxyServer","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyProxyType(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyProxyType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemote(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteCertTls(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyRemoteCertTls","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteIp(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyRemoteIp","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRemoteRandom(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyRemoteRandom","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyRenegSeconds(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyRenegSeconds","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyStaticKey(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyStaticKey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyStaticKeyDirection(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyStaticKeyDirection","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTa(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyTa","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTaDir(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyTaDir","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTapDev(data connectionData, value bool)","Funname":"setSettingVpnOpenvpnKeyTapDev","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTlsRemote(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyTlsRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyTunnelMtu(data connectionData, value uint32)","Funname":"setSettingVpnOpenvpnKeyTunnelMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnOpenvpnKeyUsername(data connectionData, value string)","Funname":"setSettingVpnOpenvpnKeyUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPersistent(data connectionData, value bool)","Funname":"setSettingVpnPersistent","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyDomain(data connectionData, value string)","Funname":"setSettingVpnPptpKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyGateway(data connectionData, value string)","Funname":"setSettingVpnPptpKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyLcpEchoFailure(data connectionData, value uint32)","Funname":"setSettingVpnPptpKeyLcpEchoFailure","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyLcpEchoInterval(data connectionData, value uint32)","Funname":"setSettingVpnPptpKeyLcpEchoInterval","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyMppeStateful(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyMppeStateful","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNoVjComp(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyNoVjComp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNobsdcomp(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyNobsdcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyNodeflate(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyNodeflate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyPassword(data connectionData, value string)","Funname":"setSettingVpnPptpKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnPptpKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnPptpKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseChap(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRefuseChap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseEap(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRefuseEap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseMschap(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRefuseMschap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefuseMschapv2(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRefuseMschapv2","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRefusePap(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRefusePap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRequireMppe","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe128(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRequireMppe128","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyRequireMppe40(data connectionData, value bool)","Funname":"setSettingVpnPptpKeyRequireMppe40","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnPptpKeyUser(data connectionData, value string)","Funname":"setSettingVpnPptpKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnSecrets(data connectionData, value map[string]string)","Funname":"setSettingVpnSecrets","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingVpnServiceType(data connectionData, value string)","Funname":"setSettingVpnServiceType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyAddress(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyAddress","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyCertificate(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyCertificate","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyEncap(data connectionData, value bool)","Funname":"setSettingVpnStrongswanKeyEncap","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnStrongswanKeyIpcomp(data connectionData, value bool)","Funname":"setSettingVpnStrongswanKeyIpcomp","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnStrongswanKeyMethod(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyMethod","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyPassword(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnStrongswanKeyPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUser(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUsercert(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyUsercert","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyUserkey(data connectionData, value string)","Funname":"setSettingVpnStrongswanKeyUserkey","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnStrongswanKeyVirtual(data connectionData, value bool)","Funname":"setSettingVpnStrongswanKeyVirtual","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnTimeout(data connectionData, value uint32)","Funname":"setSettingVpnTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnUserName(data connectionData, value string)","Funname":"setSettingVpnUserName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyAppVersion(data connectionData, value string)","Funname":"setSettingVpnVpncKeyAppVersion","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyAuthmode(data connectionData, value string)","Funname":"setSettingVpnVpncKeyAuthmode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyCaFile(data connectionData, value string)","Funname":"setSettingVpnVpncKeyCaFile","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyCiscoUdpEncapsPort(data connectionData, value uint32)","Funname":"setSettingVpnVpncKeyCiscoUdpEncapsPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyDhgroup(data connectionData, value string)","Funname":"setSettingVpnVpncKeyDhgroup","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyDomain(data connectionData, value string)","Funname":"setSettingVpnVpncKeyDomain","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyDpdIdleTimeout(data connectionData, value uint32)","Funname":"setSettingVpnVpncKeyDpdIdleTimeout","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyGateway(data connectionData, value string)","Funname":"setSettingVpnVpncKeyGateway","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyId(data connectionData, value string)","Funname":"setSettingVpnVpncKeyId","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyLocalPort(data connectionData, value uint32)","Funname":"setSettingVpnVpncKeyLocalPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyNatTraversalMode(data connectionData, value string)","Funname":"setSettingVpnVpncKeyNatTraversalMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyNoEncryption(data connectionData, value bool)","Funname":"setSettingVpnVpncKeyNoEncryption","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnVpncKeyPerfectForward(data connectionData, value string)","Funname":"setSettingVpnVpncKeyPerfectForward","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySecret(data connectionData, value string)","Funname":"setSettingVpnVpncKeySecret","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySecretFlags(data connectionData, value uint32)","Funname":"setSettingVpnVpncKeySecretFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeySecretType(data connectionData, value string)","Funname":"setSettingVpnVpncKeySecretType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeySingleDes(data connectionData, value bool)","Funname":"setSettingVpnVpncKeySingleDes","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVpnVpncKeyVendor(data connectionData, value string)","Funname":"setSettingVpnVpncKeyVendor","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPassword(data connectionData, value string)","Funname":"setSettingVpnVpncKeyXauthPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPasswordFlags(data connectionData, value uint32)","Funname":"setSettingVpnVpncKeyXauthPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthPasswordType(data connectionData, value string)","Funname":"setSettingVpnVpncKeyXauthPasswordType","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVpnVpncKeyXauthUser(data connectionData, value string)","Funname":"setSettingVpnVpncKeyXauthUser","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanAgeing(data connectionData, value uint32)","Funname":"setSettingVxlanAgeing","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanDestinationPort(data connectionData, value uint32)","Funname":"setSettingVxlanDestinationPort","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanId(data connectionData, value uint32)","Funname":"setSettingVxlanId","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanL2Miss(data connectionData, value bool)","Funname":"setSettingVxlanL2Miss","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanL3Miss(data connectionData, value bool)","Funname":"setSettingVxlanL3Miss","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanLearning(data connectionData, value bool)","Funname":"setSettingVxlanLearning","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanLimit(data connectionData, value uint32)","Funname":"setSettingVxlanLimit","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanLocal(data connectionData, value string)","Funname":"setSettingVxlanLocal","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanParent(data connectionData, value string)","Funname":"setSettingVxlanParent","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanProxy(data connectionData, value bool)","Funname":"setSettingVxlanProxy","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanRemote(data connectionData, value string)","Funname":"setSettingVxlanRemote","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingVxlanRsc(data connectionData, value bool)","Funname":"setSettingVxlanRsc","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingVxlanSourcePortMax(data connectionData, value uint32)","Funname":"setSettingVxlanSourcePortMax","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanSourcePortMin(data connectionData, value uint32)","Funname":"setSettingVxlanSourcePortMin","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanTos(data connectionData, value uint32)","Funname":"setSettingVxlanTos","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingVxlanTtl(data connectionData, value uint32)","Funname":"setSettingVxlanTtl","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWimaxMacAddress(data connectionData, value []byte)","Funname":"setSettingWimaxMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWimaxNetworkName(data connectionData, value string)","Funname":"setSettingWimaxNetworkName","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredAutoNegotiate(data connectionData, value bool)","Funname":"setSettingWiredAutoNegotiate","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingWiredClonedMacAddress(data connectionData, value []byte)","Funname":"setSettingWiredClonedMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWiredDuplex(data connectionData, value string)","Funname":"setSettingWiredDuplex","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredGenerateMacAddressMask(data connectionData, value string)","Funname":"setSettingWiredGenerateMacAddressMask","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredMacAddress(data connectionData, value []byte)","Funname":"setSettingWiredMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWiredMacAddressBlacklist(data connectionData, value []string)","Funname":"setSettingWiredMacAddressBlacklist","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWiredMtu(data connectionData, value uint32)","Funname":"setSettingWiredMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredPort(data connectionData, value string)","Funname":"setSettingWiredPort","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredS390Nettype(data connectionData, value string)","Funname":"setSettingWiredS390Nettype","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWiredS390Options(data connectionData, value map[string]string)","Funname":"setSettingWiredS390Options","Returntype":"","Args":"data connectionData, value map[string]string"},{"Uniquefunname":"func setSettingWiredS390Subchannels(data connectionData, value []string)","Funname":"setSettingWiredS390Subchannels","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWiredSpeed(data connectionData, value uint32)","Funname":"setSettingWiredSpeed","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredWakeOnLan(data connectionData, value uint32)","Funname":"setSettingWiredWakeOnLan","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWiredWakeOnLanPassword(data connectionData, value string)","Funname":"setSettingWiredWakeOnLanPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessBand(data connectionData, value string)","Funname":"setSettingWirelessBand","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessBssid(data connectionData, value []byte)","Funname":"setSettingWirelessBssid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessChannel(data connectionData, value uint32)","Funname":"setSettingWirelessChannel","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessClonedMacAddress(data connectionData, value []byte)","Funname":"setSettingWirelessClonedMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessGenerateMacAddressMask(data connectionData, value string)","Funname":"setSettingWirelessGenerateMacAddressMask","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessHidden(data connectionData, value bool)","Funname":"setSettingWirelessHidden","Returntype":"","Args":"data connectionData, value bool"},{"Uniquefunname":"func setSettingWirelessMacAddress(data connectionData, value []byte)","Funname":"setSettingWirelessMacAddress","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessMacAddressBlacklist(data connectionData, value []string)","Funname":"setSettingWirelessMacAddressBlacklist","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessMacAddressRandomization(data connectionData, value uint32)","Funname":"setSettingWirelessMacAddressRandomization","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessMode(data connectionData, value string)","Funname":"setSettingWirelessMode","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessMtu(data connectionData, value uint32)","Funname":"setSettingWirelessMtu","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessPowersave(data connectionData, value uint32)","Funname":"setSettingWirelessPowersave","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessRate(data connectionData, value uint32)","Funname":"setSettingWirelessRate","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityAuthAlg(data connectionData, value string)","Funname":"setSettingWirelessSecurityAuthAlg","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityGroup(data connectionData, value []string)","Funname":"setSettingWirelessSecurityGroup","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityKeyMgmt(data connectionData, value string)","Funname":"setSettingWirelessSecurityKeyMgmt","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityLeapPassword(data connectionData, value string)","Funname":"setSettingWirelessSecurityLeapPassword","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityLeapPasswordFlags(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityLeapPasswordFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityLeapUsername(data connectionData, value string)","Funname":"setSettingWirelessSecurityLeapUsername","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityPairwise(data connectionData, value []string)","Funname":"setSettingWirelessSecurityPairwise","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityPmf(data connectionData, value int32)","Funname":"setSettingWirelessSecurityPmf","Returntype":"","Args":"data connectionData, value int32"},{"Uniquefunname":"func setSettingWirelessSecurityProto(data connectionData, value []string)","Funname":"setSettingWirelessSecurityProto","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSecurityPsk(data connectionData, value string)","Funname":"setSettingWirelessSecurityPsk","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityPskFlags(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityPskFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey0(data connectionData, value string)","Funname":"setSettingWirelessSecurityWepKey0","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey1(data connectionData, value string)","Funname":"setSettingWirelessSecurityWepKey1","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey2(data connectionData, value string)","Funname":"setSettingWirelessSecurityWepKey2","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKey3(data connectionData, value string)","Funname":"setSettingWirelessSecurityWepKey3","Returntype":"","Args":"data connectionData, value string"},{"Uniquefunname":"func setSettingWirelessSecurityWepKeyFlags(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityWepKeyFlags","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepKeyType(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityWepKeyType","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWepTxKeyidx(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityWepTxKeyidx","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSecurityWpsMethod(data connectionData, value uint32)","Funname":"setSettingWirelessSecurityWpsMethod","Returntype":"","Args":"data connectionData, value uint32"},{"Uniquefunname":"func setSettingWirelessSeenBssids(data connectionData, value []string)","Funname":"setSettingWirelessSeenBssids","Returntype":"","Args":"data connectionData, value []string"},{"Uniquefunname":"func setSettingWirelessSsid(data connectionData, value []byte)","Funname":"setSettingWirelessSsid","Returntype":"","Args":"data connectionData, value []byte"},{"Uniquefunname":"func setSettingWirelessTxPower(data connectionData, value uint32)","Funname":"setSettingWirelessTxPower","Returntype":"","Args":"data connectionData, value uint32"}],"Records":null}
{"Filepath":"network/nm_setting_ip4_config.go","Functions":[{"Uniquefunname":"func initSettingSectionIpv4(data connectionData)","Funname":"initSettingSectionIpv4","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func initSettingSectionIpv4(data connectionData)","Funname":"network.initSettingSectionIpv4","Returntype":"","Args":"data connectionData"}],"Records":null}
{"Filepath":"network/nm_setting_ip6_config.go","Functions":[{"Uniquefunname":"func initSettingSectionIpv6(data connectionData)","Funname":"initSettingSectionIpv6","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func initSettingSectionIpv6(data connectionData)","Funname":"network.initSettingSectionIpv6","Returntype":"","Args":"data connectionData"}],"Records":null}
{"Filepath":"network/nm_setting_vpn.go","Functions":[{"Uniquefunname":"func doGetVpnAuthDialogBin(vpnType string) (authdialog string)","Funname":"doGetVpnAuthDialogBin","Returntype":"(authdialog string)","Args":"vpnType string"},{"Uniquefunname":"func getVpnAuthDialogBin(data connectionData) (authdialog string)","Funname":"getVpnAuthDialogBin","Returntype":"(authdialog string)","Args":"data connectionData"},{"Uniquefunname":"func getVpnNameFile(vpnType string) (nameFile string)","Funname":"getVpnNameFile","Returntype":"(nameFile string)","Args":"vpnType string"},{"Uniquefunname":"func doGetVpnAuthDialogBin(vpnType string) (authdialog string)","Funname":"network.doGetVpnAuthDialogBin","Returntype":"(authdialog string)","Args":"vpnType string"},{"Uniquefunname":"func getVpnAuthDialogBin(data connectionData) (authdialog string)","Funname":"network.getVpnAuthDialogBin","Returntype":"(authdialog string)","Args":"data connectionData"},{"Uniquefunname":"func getVpnNameFile(vpnType string) (nameFile string)","Funname":"network.getVpnNameFile","Returntype":"(nameFile string)","Args":"vpnType string"}],"Records":[{"Name":"const:network","Fields":["network.nmOpenConnectServiceType","network.nmVpnL2tpNameFile","network.nmVpnOpenconnectNameFile","network.nmVpnOpenvpnNameFile","network.nmVpnPptpNameFile","network.nmVpnStrongswanNameFile","network.nmVpnVpncNameFile"]}]}
{"Filepath":"network/nm_setting_wired.go","Functions":[{"Uniquefunname":"func initSettingSectionWired(data connectionData, devPath dbus.ObjectPath)","Funname":"initSettingSectionWired","Returntype":"","Args":"data connectionData, devPath dbus.ObjectPath"},{"Uniquefunname":"func initSettingSectionWired(data connectionData, devPath dbus.ObjectPath)","Funname":"network.initSettingSectionWired","Returntype":"","Args":"data connectionData, devPath dbus.ObjectPath"},{"Uniquefunname":"func newWiredConnectionData(id, uuid string, devPath dbus.ObjectPath) (data connectionData)","Funname":"network.newWiredConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func network.newWiredConnectionForDevice(id, uuid string, devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, err error)","Funname":"network.newWiredConnectionForDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"id, uuid string, devPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func newWiredConnectionData(id, uuid string, devPath dbus.ObjectPath) (data connectionData)","Funname":"newWiredConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string, devPath dbus.ObjectPath"},{"Uniquefunname":"func newWiredConnectionForDevice(id, uuid string, devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, err error)","Funname":"newWiredConnectionForDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"id, uuid string, devPath dbus.ObjectPath, active bool"}],"Records":null}
{"Filepath":"network/nm_setting_wireless.go","Functions":[{"Uniquefunname":"func logicSetSettingWirelessMode(data connectionData, value string) (err error)","Funname":"logicSetSettingWirelessMode","Returntype":"(err error)","Args":"data connectionData, value string"},{"Uniquefunname":"func logicSetSettingWirelessMode(data connectionData, value string) (err error)","Funname":"network.logicSetSettingWirelessMode","Returntype":"(err error)","Args":"data connectionData, value string"},{"Uniquefunname":"func network.newWirelessConnectionData(id, uuid string, ssid []byte, secType apSecType)(data connectionData)","Funname":"network.newWirelessConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string, ssid []byte, secType apSecType"},{"Uniquefunname":"func newWirelessHotspotConnectionData(id, uuid string) (data connectionData)","Funname":"network.newWirelessHotspotConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string"},{"Uniquefunname":"func network.newWirelessHotspotConnectionForDevice(id, uuid string, devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, err error)","Funname":"network.newWirelessHotspotConnectionForDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"id, uuid string, devPath dbus.ObjectPath, active bool"},{"Uniquefunname":"func newWirelessConnectionData(id, uuid string, ssid []byte, secType apSecType)(data connectionData)","Funname":"newWirelessConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string, ssid []byte, secType apSecType"},{"Uniquefunname":"func newWirelessHotspotConnectionData(id, uuid string) (data connectionData)","Funname":"newWirelessHotspotConnectionData","Returntype":"(data connectionData)","Args":"id, uuid string"},{"Uniquefunname":"func newWirelessHotspotConnectionForDevice(id, uuid string, devPath dbus.ObjectPath, active bool)(cpath dbus.ObjectPath, err error)","Funname":"newWirelessHotspotConnectionForDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"id, uuid string, devPath dbus.ObjectPath, active bool"}],"Records":null}
{"Filepath":"network/nm_setting_wireless_security.go","Functions":[{"Uniquefunname":"func getApSecTypeFromConnData(data connectionData) (apSecType, error)","Funname":"getApSecTypeFromConnData","Returntype":"(apSecType, error)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVkWirelessSecurityKeyMgmt(data connectionData) (value string)","Funname":"getSettingVkWirelessSecurityKeyMgmt","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func logicSetSettingVkWirelessSecurityKeyMgmt(data connectionData, value string) (err error)","Funname":"logicSetSettingVkWirelessSecurityKeyMgmt","Returntype":"(err error)","Args":"data connectionData, value string"},{"Uniquefunname":"func getApSecTypeFromConnData(data connectionData) (apSecType, error)","Funname":"network.getApSecTypeFromConnData","Returntype":"(apSecType, error)","Args":"data connectionData"},{"Uniquefunname":"func getSettingVkWirelessSecurityKeyMgmt(data connectionData) (value string)","Funname":"network.getSettingVkWirelessSecurityKeyMgmt","Returntype":"(value string)","Args":"data connectionData"},{"Uniquefunname":"func logicSetSettingVkWirelessSecurityKeyMgmt(data connectionData, value string) (err error)","Funname":"network.logicSetSettingVkWirelessSecurityKeyMgmt","Returntype":"(err error)","Args":"data connectionData, value string"}],"Records":null}
{"Filepath":"network/secret_agent.go","Functions":[{"Uniquefunname":"func CancelGetSecrets(connectionPath dbus.ObjectPath, settingName string)*dbus.Error","Funname":"CancelGetSecrets","Returntype":"*dbus.Error","Args":"connectionPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func DeleteSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"DeleteSecrets","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func (*SecretAgent) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*SecretAgentSession) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func GetSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32)(secretsData map[string]map[string]dbus.Variant, busErr *dbus.Error)","Funname":"GetSecrets","Returntype":"(secretsData map[string]map[string]dbus.Variant, busErr *dbus.Error)","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32"},{"Uniquefunname":"func (*SecretAgentSession) GetSystemBusName() (string, *dbus.Error)","Funname":"GetSystemBusName","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func SaveSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"SaveSecrets","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func SaveSecretsDeepin(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"SaveSecretsDeepin","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func addSaveSecretsTask(connPath dbus.ObjectPath, settingName string, process *os.Process)","Funname":"addSaveSecretsTask","Returntype":"","Args":"connPath dbus.ObjectPath, settingName string, process *os.Process"},{"Uniquefunname":"func askPasswords(connPath dbus.ObjectPath, connectionData map[string]map[string]dbus.Variant, connUUID, settingName string, settingKeys []string, requestNew bool)(map[string]string, error)","Funname":"askPasswords","Returntype":"(map[string]string, error)","Args":"connPath dbus.ObjectPath, connectionData map[string]map[string]dbus.Variant, connUUID, settingName string, settingKeys []string, requestNew bool"},{"Uniquefunname":"func createPendingKey(connectionData map[string]map[string]dbus.Variant, hints []string, flags uint32)chan map[string]string","Funname":"createPendingKey","Returntype":"chan map[string]string","Args":"connectionData map[string]map[string]dbus.Variant, hints []string, flags uint32"},{"Uniquefunname":"func (sa *SecretAgent) delete(uuid, settingName, settingKey string) error","Funname":"delete","Returntype":"error","Args":"uuid, settingName, settingKey string"},{"Uniquefunname":"func (sa *SecretAgent) deleteAll(uuid string) error","Funname":"deleteAll","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func (sa *SecretAgent) getAll(uuid, settingName string) (map[string]string, error)","Funname":"getAll","Returntype":"(map[string]string, error)","Args":"uuid, settingName string"},{"Uniquefunname":"func getConnectionData(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(interface{}, bool)","Funname":"getConnectionData","Returntype":"(interface{}, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func getConnectionDataMapStrStr(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(map[string]string, bool)","Funname":"getConnectionDataMapStrStr","Returntype":"(map[string]string, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func getConnectionDataString(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(string, bool)","Funname":"getConnectionDataString","Returntype":"(string, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func getConnectionDataUint32(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(uint32, bool)","Funname":"getConnectionDataUint32","Returntype":"(uint32, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func getConnectionDataVariant(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(dbus.Variant, bool)","Funname":"getConnectionDataVariant","Returntype":"(dbus.Variant, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func (sa *SecretAgent) getDefaultCollection() (*secrets.Collection, error)","Funname":"getDefaultCollection","Returntype":"(*secrets.Collection, error)","Args":""},{"Uniquefunname":"func getSaveSecretsTaskProcess(connPath dbus.ObjectPath, settingName string)*os.Process","Funname":"getSaveSecretsTaskProcess","Returntype":"*os.Process","Args":"connPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func getSecretFlagsKeyName(key string) string","Funname":"getSecretFlagsKeyName","Returntype":"string","Args":"key string"},{"Uniquefunname":"func getSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32)(secretsData map[string]map[string]dbus.Variant, err error)","Funname":"getSecrets","Returntype":"(secretsData map[string]map[string]dbus.Variant, err error)","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32"},{"Uniquefunname":"func isMustAsk(data connectionData, settingName, secretKey string) bool","Funname":"isMustAsk","Returntype":"bool","Args":"data connectionData, settingName, secretKey string"},{"Uniquefunname":"func isSecretDialogExist() bool","Funname":"isSecretDialogExist","Returntype":"bool","Args":""},{"Uniquefunname":"func network.SecretAgent.CancelGetSecrets(connectionPath dbus.ObjectPath, settingName string)*dbus.Error","Funname":"network.SecretAgent.CancelGetSecrets","Returntype":"*dbus.Error","Args":"connectionPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func network.SecretAgent.DeleteSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"network.SecretAgent.DeleteSecrets","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func (*SecretAgent) GetInterfaceName() string","Funname":"network.SecretAgent.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func network.SecretAgent.GetSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32)(secretsData map[string]map[string]dbus.Variant, busErr *dbus.Error)","Funname":"network.SecretAgent.GetSecrets","Returntype":"(secretsData map[string]map[string]dbus.Variant, busErr *dbus.Error)","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32"},{"Uniquefunname":"func network.SecretAgent.SaveSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"network.SecretAgent.SaveSecrets","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func network.SecretAgent.SaveSecretsDeepin(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)*dbus.Error","Funname":"network.SecretAgent.SaveSecretsDeepin","Returntype":"*dbus.Error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func network.SecretAgent.addSaveSecretsTask(connPath dbus.ObjectPath, settingName string, process *os.Process)","Funname":"network.SecretAgent.addSaveSecretsTask","Returntype":"","Args":"connPath dbus.ObjectPath, settingName string, process *os.Process"},{"Uniquefunname":"func network.SecretAgent.askPasswords(connPath dbus.ObjectPath, connectionData map[string]map[string]dbus.Variant, connUUID, settingName string, settingKeys []string, requestNew bool)(map[string]string, error)","Funname":"network.SecretAgent.askPasswords","Returntype":"(map[string]string, error)","Args":"connPath dbus.ObjectPath, connectionData map[string]map[string]dbus.Variant, connUUID, settingName string, settingKeys []string, requestNew bool"},{"Uniquefunname":"func network.SecretAgent.createPendingKey(connectionData map[string]map[string]dbus.Variant, hints []string, flags uint32)chan map[string]string","Funname":"network.SecretAgent.createPendingKey","Returntype":"chan map[string]string","Args":"connectionData map[string]map[string]dbus.Variant, hints []string, flags uint32"},{"Uniquefunname":"func (sa *SecretAgent) delete(uuid, settingName, settingKey string) error","Funname":"network.SecretAgent.delete","Returntype":"error","Args":"uuid, settingName, settingKey string"},{"Uniquefunname":"func (sa *SecretAgent) deleteAll(uuid string) error","Funname":"network.SecretAgent.deleteAll","Returntype":"error","Args":"uuid string"},{"Uniquefunname":"func (sa *SecretAgent) getAll(uuid, settingName string) (map[string]string, error)","Funname":"network.SecretAgent.getAll","Returntype":"(map[string]string, error)","Args":"uuid, settingName string"},{"Uniquefunname":"func (sa *SecretAgent) getDefaultCollection() (*secrets.Collection, error)","Funname":"network.SecretAgent.getDefaultCollection","Returntype":"(*secrets.Collection, error)","Args":""},{"Uniquefunname":"func network.SecretAgent.getSaveSecretsTaskProcess(connPath dbus.ObjectPath, settingName string)*os.Process","Funname":"network.SecretAgent.getSaveSecretsTaskProcess","Returntype":"*os.Process","Args":"connPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func network.SecretAgent.getSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32)(secretsData map[string]map[string]dbus.Variant, err error)","Funname":"network.SecretAgent.getSecrets","Returntype":"(secretsData map[string]map[string]dbus.Variant, err error)","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath, settingName string, hints []string, flags uint32"},{"Uniquefunname":"func network.SecretAgent.removeSaveSecretsTask(connPath dbus.ObjectPath, settingName string)","Funname":"network.SecretAgent.removeSaveSecretsTask","Returntype":"","Args":"connPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func network.SecretAgent.saveSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)error","Funname":"network.SecretAgent.saveSecrets","Returntype":"error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func (sa *SecretAgent) set(label, uuid, settingName, settingKey, value string) error","Funname":"network.SecretAgent.set","Returntype":"error","Args":"label, uuid, settingName, settingKey, value string"},{"Uniquefunname":"func (*SecretAgentSession) GetInterfaceName() string","Funname":"network.SecretAgentSession.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*SecretAgentSession) GetSystemBusName() (string, *dbus.Error)","Funname":"network.SecretAgentSession.GetSystemBusName","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func network.getConnectionData(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(interface{}, bool)","Funname":"network.getConnectionData","Returntype":"(interface{}, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func network.getConnectionDataMapStrStr(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(map[string]string, bool)","Funname":"network.getConnectionDataMapStrStr","Returntype":"(map[string]string, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func network.getConnectionDataString(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(string, bool)","Funname":"network.getConnectionDataString","Returntype":"(string, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func network.getConnectionDataUint32(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(uint32, bool)","Funname":"network.getConnectionDataUint32","Returntype":"(uint32, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func network.getConnectionDataVariant(connectionData map[string]map[string]dbus.Variant, settingName, settingKey string)(dbus.Variant, bool)","Funname":"network.getConnectionDataVariant","Returntype":"(dbus.Variant, bool)","Args":"connectionData map[string]map[string]dbus.Variant, settingName, settingKey string"},{"Uniquefunname":"func getSecretFlagsKeyName(key string) string","Funname":"network.getSecretFlagsKeyName","Returntype":"string","Args":"key string"},{"Uniquefunname":"func isMustAsk(data connectionData, settingName, secretKey string) bool","Funname":"network.isMustAsk","Returntype":"bool","Args":"data connectionData, settingName, secretKey string"},{"Uniquefunname":"func isSecretDialogExist() bool","Funname":"network.isSecretDialogExist","Returntype":"bool","Args":""},{"Uniquefunname":"func newSecretAgent(secServiceObj *secrets.Service, manager *Manager) (*SecretAgent, error)","Funname":"network.newSecretAgent","Returntype":"(*SecretAgent, error)","Args":"secServiceObj *secrets.Service, manager *Manager"},{"Uniquefunname":"func printConnectionData(data map[string]map[string]dbus.Variant)","Funname":"network.printConnectionData","Returntype":"","Args":"data map[string]map[string]dbus.Variant"},{"Uniquefunname":"func newSecretAgent(secServiceObj *secrets.Service, manager *Manager) (*SecretAgent, error)","Funname":"newSecretAgent","Returntype":"(*SecretAgent, error)","Args":"secServiceObj *secrets.Service, manager *Manager"},{"Uniquefunname":"func printConnectionData(data map[string]map[string]dbus.Variant)","Funname":"printConnectionData","Returntype":"","Args":"data map[string]map[string]dbus.Variant"},{"Uniquefunname":"func removeSaveSecretsTask(connPath dbus.ObjectPath, settingName string)","Funname":"removeSaveSecretsTask","Returntype":"","Args":"connPath dbus.ObjectPath, settingName string"},{"Uniquefunname":"func saveSecrets(connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath)error","Funname":"saveSecrets","Returntype":"error","Args":"connectionData map[string]map[string]dbus.Variant, connectionPath dbus.ObjectPath"},{"Uniquefunname":"func (sa *SecretAgent) set(label, uuid, settingName, settingKey, value string) error","Funname":"set","Returntype":"error","Args":"label, uuid, settingName, settingKey, value string"}],"Records":[{"Name":"struct:network.SecretAgent","Fields":["network.SecretAgent.defaultCollection *secrets.Collection","network.SecretAgent.defaultCollectionMu sync.Mutex","network.SecretAgent.m *Manager","network.SecretAgent.methods *struct { GetSecrets func() `in:\"connection,connectionPath,settingName,hints,flags\" out:\"secrets\"`; CancelGetSecrets func() `in:\"connectionPath,settingName\"`; SaveSecrets func() `in:\"connection,connectionPath\"`; SaveSecretsDeepin func() `in:\"connection,connectionPath\"`; DeleteSecrets func() `in:\"connection,connectionPath\"`; }","network.SecretAgent.needSleep bool","network.SecretAgent.saveSecretsTasks map[saveSecretsTaskKey]saveSecretsTask","network.SecretAgent.saveSecretsTasksMu sync.Mutex","network.SecretAgent.secretService *secrets.Service","network.SecretAgent.secretSessionPath dbus.ObjectPath"]},{"Name":"struct:network.SecretAgentSession","Fields":["network.SecretAgentSession.methods *struct { GetSystemBusName func() `out:\"name\"`; }"]},{"Name":"var:network","Fields":["network.errSecretAgentUserCanceled","network.secretSettingKeys","network.vpnSecretKeys"]},{"Name":"const:network","Fields":["network.getSecretsFlagAllowInteraction","network.getSecretsFlagRequestNew","network.getSecretsFlagUserRequested","network.keyringTagConnUUID","network.keyringTagSettingKey","network.keyringTagSettingName","network.nmSecretDialogBin","network.secretFlagAgentOwned","network.secretFlagAgentOwnedStr","network.secretFlagAsk","network.secretFlagAskStr","network.secretFlagNone","network.secretFlagNoneStr","network.secretFlagNotRequired"]},{"Name":"struct:network.getSecretsReply","Fields":["network.getSecretsReply.Secrets []string"]},{"Name":"struct:network.getSecretsRequest","Fields":["network.getSecretsRequest.ConnId string","network.getSecretsRequest.ConnType string","network.getSecretsRequest.ConnUUID string","network.getSecretsRequest.RequestNew bool","network.getSecretsRequest.Secrets []string","network.getSecretsRequest.SettingName string","network.getSecretsRequest.VpnService string"]},{"Name":"struct:network.saveSecretsTask","Fields":["network.saveSecretsTask.process *os.Process"]},{"Name":"struct:network.saveSecretsTaskKey","Fields":["network.saveSecretsTaskKey.connPath dbus.ObjectPath","network.saveSecretsTaskKey.settingName string"]},{"Name":"struct:network.settingItem","Fields":["network.settingItem.label string","network.settingItem.settingKey string","network.settingItem.settingName string","network.settingItem.value string"]}]}
{"Filepath":"network/state_handler.go","Functions":[{"Uniquefunname":"func destroyStateHandler(sh *stateHandler)","Funname":"destroyStateHandler","Returntype":"","Args":"sh *stateHandler"},{"Uniquefunname":"func initNmStateReasons()","Funname":"initNmStateReasons","Returntype":"","Args":""},{"Uniquefunname":"func destroyStateHandler(sh *stateHandler)","Funname":"network.destroyStateHandler","Returntype":"","Args":"sh *stateHandler"},{"Uniquefunname":"func initNmStateReasons()","Funname":"network.initNmStateReasons","Returntype":"","Args":""},{"Uniquefunname":"func newStateHandler(sysSigLoop *dbusutil.SignalLoop, m *Manager) (sh *stateHandler)","Funname":"network.newStateHandler","Returntype":"(sh *stateHandler)","Args":"sysSigLoop *dbusutil.SignalLoop, m *Manager"},{"Uniquefunname":"func (sh *stateHandler) remove(path dbus.ObjectPath)","Funname":"network.stateHandler.remove","Returntype":"","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (sh *stateHandler) savePasswordByConnectionStatus(data connectionData)","Funname":"network.stateHandler.savePasswordByConnectionStatus","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func (sh *stateHandler) watch(path dbus.ObjectPath)","Funname":"network.stateHandler.watch","Returntype":"","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func newStateHandler(sysSigLoop *dbusutil.SignalLoop, m *Manager) (sh *stateHandler)","Funname":"newStateHandler","Returntype":"(sh *stateHandler)","Args":"sysSigLoop *dbusutil.SignalLoop, m *Manager"},{"Uniquefunname":"func (sh *stateHandler) remove(path dbus.ObjectPath)","Funname":"remove","Returntype":"","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func (sh *stateHandler) savePasswordByConnectionStatus(data connectionData)","Funname":"savePasswordByConnectionStatus","Returntype":"","Args":"data connectionData"},{"Uniquefunname":"func (sh *stateHandler) watch(path dbus.ObjectPath)","Funname":"watch","Returntype":"","Args":"path dbus.ObjectPath"}],"Records":[{"Name":"var:network","Fields":["network.deviceErrorTable","network.vpnErrorTable"]},{"Name":"struct:network.deviceStateInfo","Fields":["network.deviceStateInfo.aconnId string","network.deviceStateInfo.connectionType string","network.deviceStateInfo.devType uint32","network.deviceStateInfo.devUdi string","network.deviceStateInfo.enabled bool","network.deviceStateInfo.nmDev *nmdbus.Device"]},{"Name":"struct:network.stateHandler","Fields":["network.stateHandler.devices map[dbus.ObjectPath]*deviceStateInfo","network.stateHandler.locker sync.Mutex","network.stateHandler.m *Manager","network.stateHandler.sysSigLoop *dbusutil.SignalLoop"]}]}
{"Filepath":"network/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func getDaemonSysBus() (dbus.BusObject, error)","Funname":"getDaemonSysBus","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func getDaemonSysBus() (dbus.BusObject, error)","Funname":"network.getDaemonSysBus","Returntype":"(dbus.BusObject, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"network.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"network.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"const:network","Fields":["network.daemonSysIFC","network.daemonSysPath","network.daemonSysService","network.methodSysNetGetConnections","network.methodSysNetSetConnections"]},{"Name":"struct:network.syncConfig","Fields":["network.syncConfig.m *Manager"]}]}
{"Filepath":"network/utils.go","Functions":[{"Uniquefunname":"func byteArrayToStrPath(bytePath []byte) (path string)","Funname":"byteArrayToStrPath","Returntype":"(path string)","Args":"bytePath []byte"},{"Uniquefunname":"func doStrToUuid(str string) (uuid string)","Funname":"doStrToUuid","Returntype":"(uuid string)","Args":"str string"},{"Uniquefunname":"func execWithIO(name string, arg ...string)(process *os.Process, stdin io.WriteCloser, stdout, stderr io.ReadCloser, err error)","Funname":"execWithIO","Returntype":"(process *os.Process, stdin io.WriteCloser, stdout, stderr io.ReadCloser, err error)","Args":"name string, arg ...string"},{"Uniquefunname":"func isDBusPathInArray(path dbus.ObjectPath, pathList []dbus.ObjectPath) bool","Funname":"isDBusPathInArray","Returntype":"bool","Args":"path dbus.ObjectPath, pathList []dbus.ObjectPath"},{"Uniquefunname":"func isInterfaceNil(v interface","Funname":"isInterfaceNil","Returntype":"bool","Args":"v interface{}"},{"Uniquefunname":"func isStringInArray(s string, list []string) bool","Funname":"isStringInArray","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func isWirelessDeviceSupportHotspot(macAddress string) bool","Funname":"isWirelessDeviceSupportHotspot","Returntype":"bool","Args":"macAddress string"},{"Uniquefunname":"func marshalJSON(v interface","Funname":"marshalJSON","Returntype":"(jsonStr string, err error)","Args":"v interface{}"},{"Uniquefunname":"func byteArrayToStrPath(bytePath []byte) (path string)","Funname":"network.byteArrayToStrPath","Returntype":"(path string)","Args":"bytePath []byte"},{"Uniquefunname":"func doStrToUuid(str string) (uuid string)","Funname":"network.doStrToUuid","Returntype":"(uuid string)","Args":"str string"},{"Uniquefunname":"func network.execWithIO(name string, arg ...string)(process *os.Process, stdin io.WriteCloser, stdout, stderr io.ReadCloser, err error)","Funname":"network.execWithIO","Returntype":"(process *os.Process, stdin io.WriteCloser, stdout, stderr io.ReadCloser, err error)","Args":"name string, arg ...string"},{"Uniquefunname":"func isDBusPathInArray(path dbus.ObjectPath, pathList []dbus.ObjectPath) bool","Funname":"network.isDBusPathInArray","Returntype":"bool","Args":"path dbus.ObjectPath, pathList []dbus.ObjectPath"},{"Uniquefunname":"func isInterfaceNil(v interface","Funname":"network.isInterfaceNil","Returntype":"bool","Args":"v interface{}"},{"Uniquefunname":"func isStringInArray(s string, list []string) bool","Funname":"network.isStringInArray","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func isWirelessDeviceSupportHotspot(macAddress string) bool","Funname":"network.isWirelessDeviceSupportHotspot","Returntype":"bool","Args":"macAddress string"},{"Uniquefunname":"func marshalJSON(v interface","Funname":"network.marshalJSON","Returntype":"(jsonStr string, err error)","Args":"v interface{}"},{"Uniquefunname":"func strToByteArrayPath(path string) (bytePath []byte)","Funname":"network.strToByteArrayPath","Returntype":"(bytePath []byte)","Args":"path string"},{"Uniquefunname":"func strToUuid(str string) (uuid string)","Funname":"network.strToUuid","Returntype":"(uuid string)","Args":"str string"},{"Uniquefunname":"func toLocalPath(path string) (localPath string)","Funname":"network.toLocalPath","Returntype":"(localPath string)","Args":"path string"},{"Uniquefunname":"func toLocalPathFor8021x(path string) (uriPath string)","Funname":"network.toLocalPathFor8021x","Returntype":"(uriPath string)","Args":"path string"},{"Uniquefunname":"func toUriPath(path string) (uriPath string)","Funname":"network.toUriPath","Returntype":"(uriPath string)","Args":"path string"},{"Uniquefunname":"func toUriPathFor8021x(path string) (uriPath string)","Funname":"network.toUriPathFor8021x","Returntype":"(uriPath string)","Args":"path string"},{"Uniquefunname":"func strToByteArrayPath(path string) (bytePath []byte)","Funname":"strToByteArrayPath","Returntype":"(bytePath []byte)","Args":"path string"},{"Uniquefunname":"func strToUuid(str string) (uuid string)","Funname":"strToUuid","Returntype":"(uuid string)","Args":"str string"},{"Uniquefunname":"func toLocalPath(path string) (localPath string)","Funname":"toLocalPath","Returntype":"(localPath string)","Args":"path string"},{"Uniquefunname":"func toLocalPathFor8021x(path string) (uriPath string)","Funname":"toLocalPathFor8021x","Returntype":"(uriPath string)","Args":"path string"},{"Uniquefunname":"func toUriPath(path string) (uriPath string)","Funname":"toUriPath","Returntype":"(uriPath string)","Args":"path string"},{"Uniquefunname":"func toUriPathFor8021x(path string) (uriPath string)","Funname":"toUriPathFor8021x","Returntype":"(uriPath string)","Args":"path string"}],"Records":null}
{"Filepath":"network/utils_dbus.go","Functions":[{"Uniquefunname":"func destroyDBusDaemon()","Funname":"destroyDBusDaemon","Returntype":"","Args":""},{"Uniquefunname":"func destroyDbusObjects()","Funname":"destroyDbusObjects","Returntype":"","Args":""},{"Uniquefunname":"func initDBusDaemon()","Funname":"initDBusDaemon","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initDbusObjects()","Funname":"initDbusObjects","Returntype":"","Args":""},{"Uniquefunname":"func initSysSignalLoop()","Funname":"initSysSignalLoop","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initDbusObjects()","Funname":"network.Manager.initDbusObjects","Returntype":"","Args":""},{"Uniquefunname":"func destroyDBusDaemon()","Funname":"network.destroyDBusDaemon","Returntype":"","Args":""},{"Uniquefunname":"func destroyDbusObjects()","Funname":"network.destroyDbusObjects","Returntype":"","Args":""},{"Uniquefunname":"func initDBusDaemon()","Funname":"network.initDBusDaemon","Returntype":"","Args":""},{"Uniquefunname":"func initSysSignalLoop()","Funname":"network.initSysSignalLoop","Returntype":"","Args":""}],"Records":[{"Name":"var:network","Fields":["network.dbusDaemon","network.loginManager","network.nmManager","network.nmSettings","network.sysSigLoop"]}]}
{"Filepath":"network/utils_dbus_mm.go","Functions":[{"Uniquefunname":"func mmDestroyModem(modem *mmdbus.Modem)","Funname":"mmDestroyModem","Returntype":"","Args":"modem *mmdbus.Modem"},{"Uniquefunname":"func mmDoGetModemDeviceSignalQuality(modem *mmdbus.Modem) (signalQuality uint32)","Funname":"mmDoGetModemDeviceSignalQuality","Returntype":"(signalQuality uint32)","Args":"modem *mmdbus.Modem"},{"Uniquefunname":"func mmDoGetModemMobileNetworkType(technologies uint32) (networkType string)","Funname":"mmDoGetModemMobileNetworkType","Returntype":"(networkType string)","Args":"technologies uint32"},{"Uniquefunname":"func mmGetModemDeviceAccessTechnologies(modemPath dbus.ObjectPath)(accessTechnologies uint32, err error)","Funname":"mmGetModemDeviceAccessTechnologies","Returntype":"(accessTechnologies uint32, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemDeviceIdentifier(modemPath dbus.ObjectPath) (devId string, err error)","Funname":"mmGetModemDeviceIdentifier","Returntype":"(devId string, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemDeviceSignalQuality(modemPath dbus.ObjectPath)(signalQuality uint32, err error)","Funname":"mmGetModemDeviceSignalQuality","Returntype":"(signalQuality uint32, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemDeviceSysPath(modemPath dbus.ObjectPath) (sysPath string, err error)","Funname":"mmGetModemDeviceSysPath","Returntype":"(sysPath string, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemMobileNetworkType(modemPath dbus.ObjectPath) (networkType string)","Funname":"mmGetModemMobileNetworkType","Returntype":"(networkType string)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmNewModem(modemPath dbus.ObjectPath) (modem *mmdbus.Modem, err error)","Funname":"mmNewModem","Returntype":"(modem *mmdbus.Modem, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmDestroyModem(modem *mmdbus.Modem)","Funname":"network.mmDestroyModem","Returntype":"","Args":"modem *mmdbus.Modem"},{"Uniquefunname":"func mmDoGetModemDeviceSignalQuality(modem *mmdbus.Modem) (signalQuality uint32)","Funname":"network.mmDoGetModemDeviceSignalQuality","Returntype":"(signalQuality uint32)","Args":"modem *mmdbus.Modem"},{"Uniquefunname":"func mmDoGetModemMobileNetworkType(technologies uint32) (networkType string)","Funname":"network.mmDoGetModemMobileNetworkType","Returntype":"(networkType string)","Args":"technologies uint32"},{"Uniquefunname":"func network.mmGetModemDeviceAccessTechnologies(modemPath dbus.ObjectPath)(accessTechnologies uint32, err error)","Funname":"network.mmGetModemDeviceAccessTechnologies","Returntype":"(accessTechnologies uint32, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemDeviceIdentifier(modemPath dbus.ObjectPath) (devId string, err error)","Funname":"network.mmGetModemDeviceIdentifier","Returntype":"(devId string, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func network.mmGetModemDeviceSignalQuality(modemPath dbus.ObjectPath)(signalQuality uint32, err error)","Funname":"network.mmGetModemDeviceSignalQuality","Returntype":"(signalQuality uint32, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemDeviceSysPath(modemPath dbus.ObjectPath) (sysPath string, err error)","Funname":"network.mmGetModemDeviceSysPath","Returntype":"(sysPath string, err error)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmGetModemMobileNetworkType(modemPath dbus.ObjectPath) (networkType string)","Funname":"network.mmGetModemMobileNetworkType","Returntype":"(networkType string)","Args":"modemPath dbus.ObjectPath"},{"Uniquefunname":"func mmNewModem(modemPath dbus.ObjectPath) (modem *mmdbus.Modem, err error)","Funname":"network.mmNewModem","Returntype":"(modem *mmdbus.Modem, err error)","Args":"modemPath dbus.ObjectPath"}],"Records":[{"Name":"const:network","Fields":["network.MM_MODEM_ACCESS_TECHNOLOGY_1XRTT","network.MM_MODEM_ACCESS_TECHNOLOGY_ANY","network.MM_MODEM_ACCESS_TECHNOLOGY_EDGE","network.MM_MODEM_ACCESS_TECHNOLOGY_EVDO0","network.MM_MODEM_ACCESS_TECHNOLOGY_EVDOA","network.MM_MODEM_ACCESS_TECHNOLOGY_EVDOB","network.MM_MODEM_ACCESS_TECHNOLOGY_GPRS","network.MM_MODEM_ACCESS_TECHNOLOGY_GSM","network.MM_MODEM_ACCESS_TECHNOLOGY_GSM_COMPACT","network.MM_MODEM_ACCESS_TECHNOLOGY_HSDPA","network.MM_MODEM_ACCESS_TECHNOLOGY_HSPA","network.MM_MODEM_ACCESS_TECHNOLOGY_HSPA_PLUS","network.MM_MODEM_ACCESS_TECHNOLOGY_HSUPA","network.MM_MODEM_ACCESS_TECHNOLOGY_LTE","network.MM_MODEM_ACCESS_TECHNOLOGY_POTS","network.MM_MODEM_ACCESS_TECHNOLOGY_UMTS","network.MM_MODEM_ACCESS_TECHNOLOGY_UNKNOWN","network.MM_MODEM_CAPABILITY_ANY","network.MM_MODEM_CAPABILITY_CDMA_EVDO","network.MM_MODEM_CAPABILITY_GSM_UMTS","network.MM_MODEM_CAPABILITY_IRIDIUM","network.MM_MODEM_CAPABILITY_LTE","network.MM_MODEM_CAPABILITY_LTE_ADVANCED","network.MM_MODEM_CAPABILITY_NONE","network.MM_MODEM_CAPABILITY_POTS","network.MM_MODEM_MODE_2G","network.MM_MODEM_MODE_3G","network.MM_MODEM_MODE_4G","network.MM_MODEM_MODE_ANY","network.MM_MODEM_MODE_CS","network.MM_MODEM_MODE_NONE","network.moblieNetworkType2G","network.moblieNetworkType3G","network.moblieNetworkType4G","network.moblieNetworkTypeUnknown"]}]}
{"Filepath":"network/utils_dbus_nm.go","Functions":[{"Uniquefunname":"func isConnectionStateInActivating(state uint32) bool","Funname":"isConnectionStateInActivating","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateActivated(state uint32) bool","Funname":"isDeviceStateActivated","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateAvailable(state uint32) bool","Funname":"isDeviceStateAvailable","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateInActivating(state uint32) bool","Funname":"isDeviceStateInActivating","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateManaged(state uint32) bool","Funname":"isDeviceStateManaged","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateReasonInvalid(reason uint32) bool","Funname":"isDeviceStateReasonInvalid","Returntype":"bool","Args":"reason uint32"},{"Uniquefunname":"func isDeviceTypeValid(devType uint32) bool","Funname":"isDeviceTypeValid","Returntype":"bool","Args":"devType uint32"},{"Uniquefunname":"func isInDeviceWhitelist(filename string, ifc string) bool","Funname":"isInDeviceWhitelist","Returntype":"bool","Args":"filename string, ifc string"},{"Uniquefunname":"func isNmObjectPathValid(p dbus.ObjectPath) bool","Funname":"isNmObjectPathValid","Returntype":"bool","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func isVirtualDeviceIfc(dev *nmdbus.Device) bool","Funname":"isVirtualDeviceIfc","Returntype":"bool","Args":"dev *nmdbus.Device"},{"Uniquefunname":"func isWiredDevice(devPath dbus.ObjectPath) bool","Funname":"isWiredDevice","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func isConnectionStateInActivating(state uint32) bool","Funname":"network.isConnectionStateInActivating","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateActivated(state uint32) bool","Funname":"network.isDeviceStateActivated","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateAvailable(state uint32) bool","Funname":"network.isDeviceStateAvailable","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateInActivating(state uint32) bool","Funname":"network.isDeviceStateInActivating","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateManaged(state uint32) bool","Funname":"network.isDeviceStateManaged","Returntype":"bool","Args":"state uint32"},{"Uniquefunname":"func isDeviceStateReasonInvalid(reason uint32) bool","Funname":"network.isDeviceStateReasonInvalid","Returntype":"bool","Args":"reason uint32"},{"Uniquefunname":"func isDeviceTypeValid(devType uint32) bool","Funname":"network.isDeviceTypeValid","Returntype":"bool","Args":"devType uint32"},{"Uniquefunname":"func isInDeviceWhitelist(filename string, ifc string) bool","Funname":"network.isInDeviceWhitelist","Returntype":"bool","Args":"filename string, ifc string"},{"Uniquefunname":"func isNmObjectPathValid(p dbus.ObjectPath) bool","Funname":"network.isNmObjectPathValid","Returntype":"bool","Args":"p dbus.ObjectPath"},{"Uniquefunname":"func isVirtualDeviceIfc(dev *nmdbus.Device) bool","Funname":"network.isVirtualDeviceIfc","Returntype":"bool","Args":"dev *nmdbus.Device"},{"Uniquefunname":"func isWiredDevice(devPath dbus.ObjectPath) bool","Funname":"network.isWiredDevice","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmActivateConnection(cpath, devPath dbus.ObjectPath) (apath dbus.ObjectPath, err error)","Funname":"network.nmActivateConnection","Returntype":"(apath dbus.ObjectPath, err error)","Args":"cpath, devPath dbus.ObjectPath"},{"Uniquefunname":"func network.nmAddAndActivateConnection(data connectionData, devPath dbus.ObjectPath, forced bool)(cpath, apath dbus.ObjectPath, err error)","Funname":"network.nmAddAndActivateConnection","Returntype":"(cpath, apath dbus.ObjectPath, err error)","Args":"data connectionData, devPath dbus.ObjectPath, forced bool"},{"Uniquefunname":"func nmAddConnection(data connectionData) (cpath dbus.ObjectPath, err error)","Funname":"network.nmAddConnection","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"data connectionData"},{"Uniquefunname":"func nmDeactivateConnection(apath dbus.ObjectPath) (err error)","Funname":"network.nmDeactivateConnection","Returntype":"(err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmDestroyAccessPoint(ap *nmdbus.AccessPoint)","Funname":"network.nmDestroyAccessPoint","Returntype":"","Args":"ap *nmdbus.AccessPoint"},{"Uniquefunname":"func nmDestroyDevice(dev *nmdbus.Device)","Funname":"network.nmDestroyDevice","Returntype":"","Args":"dev *nmdbus.Device"},{"Uniquefunname":"func nmDestroySettingsConnection(conn *nmdbus.ConnectionSettings)","Funname":"network.nmDestroySettingsConnection","Returntype":"","Args":"conn *nmdbus.ConnectionSettings"},{"Uniquefunname":"func nmGeneralGetDeviceDesc(devPath dbus.ObjectPath) (desc string)","Funname":"network.nmGeneralGetDeviceDesc","Returntype":"(desc string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceHwAddr(devPath dbus.ObjectPath, perm bool) (hwAddr string, err error)","Funname":"network.nmGeneralGetDeviceHwAddr","Returntype":"(hwAddr string, err error)","Args":"devPath dbus.ObjectPath, perm bool"},{"Uniquefunname":"func nmGeneralGetDeviceIdentifier(devPath dbus.ObjectPath) (devId string, err error)","Funname":"network.nmGeneralGetDeviceIdentifier","Returntype":"(devId string, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceSpeed(devPath dbus.ObjectPath) (speedStr string)","Funname":"network.nmGeneralGetDeviceSpeed","Returntype":"(speedStr string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceSysPath(devPath dbus.ObjectPath) (sysPath string, err error)","Funname":"network.nmGeneralGetDeviceSysPath","Returntype":"(sysPath string, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceUniqueUuid(devPath dbus.ObjectPath) (uuid string)","Funname":"network.nmGeneralGetDeviceUniqueUuid","Returntype":"(uuid string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralIsDeviceManaged(devPath dbus.ObjectPath) bool","Funname":"network.nmGeneralIsDeviceManaged","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralIsUsbDevice(devPath dbus.ObjectPath) bool","Funname":"network.nmGeneralIsUsbDevice","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetAccessPoints(devPath dbus.ObjectPath) (apPaths []dbus.ObjectPath)","Funname":"network.nmGetAccessPoints","Returntype":"(apPaths []dbus.ObjectPath)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetActiveConnectionByUuid(uuid string) (apaths []dbus.ObjectPath, err error)","Funname":"network.nmGetActiveConnectionByUuid","Returntype":"(apaths []dbus.ObjectPath, err error)","Args":"uuid string"},{"Uniquefunname":"func nmGetActiveConnectionState(apath dbus.ObjectPath) (state uint32)","Funname":"network.nmGetActiveConnectionState","Returntype":"(state uint32)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmGetActiveConnections() (apaths []dbus.ObjectPath)","Funname":"network.nmGetActiveConnections","Returntype":"(apaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetConnectionByUuid(uuid string) (cpath dbus.ObjectPath, err error)","Funname":"network.nmGetConnectionByUuid","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string"},{"Uniquefunname":"func nmGetConnectionData(cpath dbus.ObjectPath) (data connectionData, err error)","Funname":"network.nmGetConnectionData","Returntype":"(data connectionData, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetConnectionId(cpath dbus.ObjectPath) (id string)","Funname":"network.nmGetConnectionId","Returntype":"(id string)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetConnectionList() (connections []dbus.ObjectPath)","Funname":"network.nmGetConnectionList","Returntype":"(connections []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetConnectionUuid(cpath dbus.ObjectPath) (uuid string, err error)","Funname":"network.nmGetConnectionUuid","Returntype":"(uuid string, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceActiveConnection(devPath dbus.ObjectPath) (acPath dbus.ObjectPath)","Funname":"network.nmGetDeviceActiveConnection","Returntype":"(acPath dbus.ObjectPath)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceActiveConnectionData(devPath dbus.ObjectPath) (data connectionData, err error)","Funname":"network.nmGetDeviceActiveConnectionData","Returntype":"(data connectionData, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceInterface(devPath dbus.ObjectPath) (devInterface string)","Funname":"network.nmGetDeviceInterface","Returntype":"(devInterface string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceState(devPath dbus.ObjectPath) (state uint32)","Funname":"network.nmGetDeviceState","Returntype":"(state uint32)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceType(devPath dbus.ObjectPath) (devType uint32)","Funname":"network.nmGetDeviceType","Returntype":"(devType uint32)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDevices() (devPaths []dbus.ObjectPath)","Funname":"network.nmGetDevices","Returntype":"(devPaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func network.nmGetIp4ConfigInfo(path dbus.ObjectPath)(address, mask string, gateways, nameServers []string)","Funname":"network.nmGetIp4ConfigInfo","Returntype":"(address, mask string, gateways, nameServers []string)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func network.nmGetIp6ConfigInfo(path dbus.ObjectPath)(address, prefix string, gateways, nameServers []string)","Funname":"network.nmGetIp6ConfigInfo","Returntype":"(address, prefix string, gateways, nameServers []string)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmGetManagerState() (state uint32)","Funname":"network.nmGetManagerState","Returntype":"(state uint32)","Args":""},{"Uniquefunname":"func nmGetNetworkEnabled() bool","Funname":"network.nmGetNetworkEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func nmGetPermissions() (permissions map[string]string)","Funname":"network.nmGetPermissions","Returntype":"(permissions map[string]string)","Args":""},{"Uniquefunname":"func nmGetPermissionsInstance() map[string]string","Funname":"network.nmGetPermissionsInstance","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func nmGetPrimaryConnection() (cpath dbus.ObjectPath)","Funname":"network.nmGetPrimaryConnection","Returntype":"(cpath dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetVpnActiveConnections() (apaths []dbus.ObjectPath)","Funname":"network.nmGetVpnActiveConnections","Returntype":"(apaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetWiredCarrier(devPath dbus.ObjectPath) bool","Funname":"network.nmGetWiredCarrier","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetWirelessConnectionSsidByUuid(uuid string) (ssid []byte)","Funname":"network.nmGetWirelessConnectionSsidByUuid","Returntype":"(ssid []byte)","Args":"uuid string"},{"Uniquefunname":"func nmGetWirelessHardwareEnabled() bool","Funname":"network.nmGetWirelessHardwareEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func nmHandleActivatingError(data connectionData, devPath dbus.ObjectPath)","Funname":"network.nmHandleActivatingError","Returntype":"","Args":"data connectionData, devPath dbus.ObjectPath"},{"Uniquefunname":"func nmHasSystemSettingsModifyPermission() (hasPerm bool)","Funname":"network.nmHasSystemSettingsModifyPermission","Returntype":"(hasPerm bool)","Args":""},{"Uniquefunname":"func nmNewAccessPoint(apPath dbus.ObjectPath) (ap *nmdbus.AccessPoint, err error)","Funname":"network.nmNewAccessPoint","Returntype":"(ap *nmdbus.AccessPoint, err error)","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func nmNewActiveConnection(apath dbus.ObjectPath) (aconn *nmdbus.ActiveConnection, err error)","Funname":"network.nmNewActiveConnection","Returntype":"(aconn *nmdbus.ActiveConnection, err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmNewDevice(devPath dbus.ObjectPath) (dev *nmdbus.Device, err error)","Funname":"network.nmNewDevice","Returntype":"(dev *nmdbus.Device, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmNewIP4Config(path dbus.ObjectPath) (ip4config *nmdbus.IP4Config, err error)","Funname":"network.nmNewIP4Config","Returntype":"(ip4config *nmdbus.IP4Config, err error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmNewIP6Config(path dbus.ObjectPath) (ip6config *nmdbus.IP6Config, err error)","Funname":"network.nmNewIP6Config","Returntype":"(ip6config *nmdbus.IP6Config, err error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmNewManager() (m *nmdbus.Manager, err error)","Funname":"network.nmNewManager","Returntype":"(m *nmdbus.Manager, err error)","Args":""},{"Uniquefunname":"func network.nmNewSettingsConnection(cpath dbus.ObjectPath)(conn *nmdbus.ConnectionSettings, err error)","Funname":"network.nmNewSettingsConnection","Returntype":"(conn *nmdbus.ConnectionSettings, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmSetDeviceAutoconnect(devPath dbus.ObjectPath, autoConnect bool)","Funname":"network.nmSetDeviceAutoconnect","Returntype":"","Args":"devPath dbus.ObjectPath, autoConnect bool"},{"Uniquefunname":"func nmSetDeviceManaged(devPath dbus.ObjectPath, managed bool) (err error)","Funname":"network.nmSetDeviceManaged","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, managed bool"},{"Uniquefunname":"func wrapNMDBusIpv6Addresses(data []nmdbus.IP6Address) (wrapData ipv6AddressesWrapper)","Funname":"network.wrapNMDBusIpv6Addresses","Returntype":"(wrapData ipv6AddressesWrapper)","Args":"data []nmdbus.IP6Address"},{"Uniquefunname":"func nmActivateConnection(cpath, devPath dbus.ObjectPath) (apath dbus.ObjectPath, err error)","Funname":"nmActivateConnection","Returntype":"(apath dbus.ObjectPath, err error)","Args":"cpath, devPath dbus.ObjectPath"},{"Uniquefunname":"func nmAddAndActivateConnection(data connectionData, devPath dbus.ObjectPath, forced bool)(cpath, apath dbus.ObjectPath, err error)","Funname":"nmAddAndActivateConnection","Returntype":"(cpath, apath dbus.ObjectPath, err error)","Args":"data connectionData, devPath dbus.ObjectPath, forced bool"},{"Uniquefunname":"func nmAddConnection(data connectionData) (cpath dbus.ObjectPath, err error)","Funname":"nmAddConnection","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"data connectionData"},{"Uniquefunname":"func nmDeactivateConnection(apath dbus.ObjectPath) (err error)","Funname":"nmDeactivateConnection","Returntype":"(err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmDestroyAccessPoint(ap *nmdbus.AccessPoint)","Funname":"nmDestroyAccessPoint","Returntype":"","Args":"ap *nmdbus.AccessPoint"},{"Uniquefunname":"func nmDestroyDevice(dev *nmdbus.Device)","Funname":"nmDestroyDevice","Returntype":"","Args":"dev *nmdbus.Device"},{"Uniquefunname":"func nmDestroySettingsConnection(conn *nmdbus.ConnectionSettings)","Funname":"nmDestroySettingsConnection","Returntype":"","Args":"conn *nmdbus.ConnectionSettings"},{"Uniquefunname":"func nmGeneralGetDeviceDesc(devPath dbus.ObjectPath) (desc string)","Funname":"nmGeneralGetDeviceDesc","Returntype":"(desc string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceHwAddr(devPath dbus.ObjectPath, perm bool) (hwAddr string, err error)","Funname":"nmGeneralGetDeviceHwAddr","Returntype":"(hwAddr string, err error)","Args":"devPath dbus.ObjectPath, perm bool"},{"Uniquefunname":"func nmGeneralGetDeviceIdentifier(devPath dbus.ObjectPath) (devId string, err error)","Funname":"nmGeneralGetDeviceIdentifier","Returntype":"(devId string, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceSpeed(devPath dbus.ObjectPath) (speedStr string)","Funname":"nmGeneralGetDeviceSpeed","Returntype":"(speedStr string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceSysPath(devPath dbus.ObjectPath) (sysPath string, err error)","Funname":"nmGeneralGetDeviceSysPath","Returntype":"(sysPath string, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralGetDeviceUniqueUuid(devPath dbus.ObjectPath) (uuid string)","Funname":"nmGeneralGetDeviceUniqueUuid","Returntype":"(uuid string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralIsDeviceManaged(devPath dbus.ObjectPath) bool","Funname":"nmGeneralIsDeviceManaged","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGeneralIsUsbDevice(devPath dbus.ObjectPath) bool","Funname":"nmGeneralIsUsbDevice","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetAccessPoints(devPath dbus.ObjectPath) (apPaths []dbus.ObjectPath)","Funname":"nmGetAccessPoints","Returntype":"(apPaths []dbus.ObjectPath)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetActiveConnectionByUuid(uuid string) (apaths []dbus.ObjectPath, err error)","Funname":"nmGetActiveConnectionByUuid","Returntype":"(apaths []dbus.ObjectPath, err error)","Args":"uuid string"},{"Uniquefunname":"func nmGetActiveConnectionState(apath dbus.ObjectPath) (state uint32)","Funname":"nmGetActiveConnectionState","Returntype":"(state uint32)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmGetActiveConnections() (apaths []dbus.ObjectPath)","Funname":"nmGetActiveConnections","Returntype":"(apaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetConnectionByUuid(uuid string) (cpath dbus.ObjectPath, err error)","Funname":"nmGetConnectionByUuid","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"uuid string"},{"Uniquefunname":"func nmGetConnectionData(cpath dbus.ObjectPath) (data connectionData, err error)","Funname":"nmGetConnectionData","Returntype":"(data connectionData, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetConnectionId(cpath dbus.ObjectPath) (id string)","Funname":"nmGetConnectionId","Returntype":"(id string)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetConnectionList() (connections []dbus.ObjectPath)","Funname":"nmGetConnectionList","Returntype":"(connections []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetConnectionUuid(cpath dbus.ObjectPath) (uuid string, err error)","Funname":"nmGetConnectionUuid","Returntype":"(uuid string, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceActiveConnection(devPath dbus.ObjectPath) (acPath dbus.ObjectPath)","Funname":"nmGetDeviceActiveConnection","Returntype":"(acPath dbus.ObjectPath)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceActiveConnectionData(devPath dbus.ObjectPath) (data connectionData, err error)","Funname":"nmGetDeviceActiveConnectionData","Returntype":"(data connectionData, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceInterface(devPath dbus.ObjectPath) (devInterface string)","Funname":"nmGetDeviceInterface","Returntype":"(devInterface string)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceState(devPath dbus.ObjectPath) (state uint32)","Funname":"nmGetDeviceState","Returntype":"(state uint32)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDeviceType(devPath dbus.ObjectPath) (devType uint32)","Funname":"nmGetDeviceType","Returntype":"(devType uint32)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetDevices() (devPaths []dbus.ObjectPath)","Funname":"nmGetDevices","Returntype":"(devPaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetIp4ConfigInfo(path dbus.ObjectPath)(address, mask string, gateways, nameServers []string)","Funname":"nmGetIp4ConfigInfo","Returntype":"(address, mask string, gateways, nameServers []string)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmGetIp6ConfigInfo(path dbus.ObjectPath)(address, prefix string, gateways, nameServers []string)","Funname":"nmGetIp6ConfigInfo","Returntype":"(address, prefix string, gateways, nameServers []string)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmGetManagerState() (state uint32)","Funname":"nmGetManagerState","Returntype":"(state uint32)","Args":""},{"Uniquefunname":"func nmGetNetworkEnabled() bool","Funname":"nmGetNetworkEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func nmGetPermissions() (permissions map[string]string)","Funname":"nmGetPermissions","Returntype":"(permissions map[string]string)","Args":""},{"Uniquefunname":"func nmGetPermissionsInstance() map[string]string","Funname":"nmGetPermissionsInstance","Returntype":"map[string]string","Args":""},{"Uniquefunname":"func nmGetPrimaryConnection() (cpath dbus.ObjectPath)","Funname":"nmGetPrimaryConnection","Returntype":"(cpath dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetVpnActiveConnections() (apaths []dbus.ObjectPath)","Funname":"nmGetVpnActiveConnections","Returntype":"(apaths []dbus.ObjectPath)","Args":""},{"Uniquefunname":"func nmGetWiredCarrier(devPath dbus.ObjectPath) bool","Funname":"nmGetWiredCarrier","Returntype":"bool","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmGetWirelessConnectionSsidByUuid(uuid string) (ssid []byte)","Funname":"nmGetWirelessConnectionSsidByUuid","Returntype":"(ssid []byte)","Args":"uuid string"},{"Uniquefunname":"func nmGetWirelessHardwareEnabled() bool","Funname":"nmGetWirelessHardwareEnabled","Returntype":"bool","Args":""},{"Uniquefunname":"func nmHandleActivatingError(data connectionData, devPath dbus.ObjectPath)","Funname":"nmHandleActivatingError","Returntype":"","Args":"data connectionData, devPath dbus.ObjectPath"},{"Uniquefunname":"func nmHasSystemSettingsModifyPermission() (hasPerm bool)","Funname":"nmHasSystemSettingsModifyPermission","Returntype":"(hasPerm bool)","Args":""},{"Uniquefunname":"func nmNewAccessPoint(apPath dbus.ObjectPath) (ap *nmdbus.AccessPoint, err error)","Funname":"nmNewAccessPoint","Returntype":"(ap *nmdbus.AccessPoint, err error)","Args":"apPath dbus.ObjectPath"},{"Uniquefunname":"func nmNewActiveConnection(apath dbus.ObjectPath) (aconn *nmdbus.ActiveConnection, err error)","Funname":"nmNewActiveConnection","Returntype":"(aconn *nmdbus.ActiveConnection, err error)","Args":"apath dbus.ObjectPath"},{"Uniquefunname":"func nmNewDevice(devPath dbus.ObjectPath) (dev *nmdbus.Device, err error)","Funname":"nmNewDevice","Returntype":"(dev *nmdbus.Device, err error)","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func nmNewIP4Config(path dbus.ObjectPath) (ip4config *nmdbus.IP4Config, err error)","Funname":"nmNewIP4Config","Returntype":"(ip4config *nmdbus.IP4Config, err error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmNewIP6Config(path dbus.ObjectPath) (ip6config *nmdbus.IP6Config, err error)","Funname":"nmNewIP6Config","Returntype":"(ip6config *nmdbus.IP6Config, err error)","Args":"path dbus.ObjectPath"},{"Uniquefunname":"func nmNewManager() (m *nmdbus.Manager, err error)","Funname":"nmNewManager","Returntype":"(m *nmdbus.Manager, err error)","Args":""},{"Uniquefunname":"func nmNewSettingsConnection(cpath dbus.ObjectPath)(conn *nmdbus.ConnectionSettings, err error)","Funname":"nmNewSettingsConnection","Returntype":"(conn *nmdbus.ConnectionSettings, err error)","Args":"cpath dbus.ObjectPath"},{"Uniquefunname":"func nmSetDeviceAutoconnect(devPath dbus.ObjectPath, autoConnect bool)","Funname":"nmSetDeviceAutoconnect","Returntype":"","Args":"devPath dbus.ObjectPath, autoConnect bool"},{"Uniquefunname":"func nmSetDeviceManaged(devPath dbus.ObjectPath, managed bool) (err error)","Funname":"nmSetDeviceManaged","Returntype":"(err error)","Args":"devPath dbus.ObjectPath, managed bool"},{"Uniquefunname":"func wrapNMDBusIpv6Addresses(data []nmdbus.IP6Address) (wrapData ipv6AddressesWrapper)","Funname":"wrapNMDBusIpv6Addresses","Returntype":"(wrapData ipv6AddressesWrapper)","Args":"data []nmdbus.IP6Address"}],"Records":[{"Name":"const:network","Fields":["network.CUSTOM_NM_DEVICE_STATE_REASON_CABLE_UNPLUGGED","network.CUSTOM_NM_DEVICE_STATE_REASON_MODEM_NO_SIGNAL","network.CUSTOM_NM_DEVICE_STATE_REASON_MODEM_WRONG_PLAN","network.CUSTOM_NM_DEVICE_STATE_REASON_WIRELESS_DISABLED","network.devWhitelistHuaweiFile"]},{"Name":"var:network","Fields":["network.nmPermissions"]}]}
{"Filepath":"network/utils_ip.go","Functions":[{"Uniquefunname":"func convertIpv4AddressToString(v uint32) (ip4Addr string)","Funname":"convertIpv4AddressToString","Returntype":"(ip4Addr string)","Args":"v uint32"},{"Uniquefunname":"func convertIpv4AddressToUint32(v string) (ip4Addr uint32)","Funname":"convertIpv4AddressToUint32","Returntype":"(ip4Addr uint32)","Args":"v string"},{"Uniquefunname":"func convertIpv4AddressToUint32Check(v string) (ip4Addr uint32, err error)","Funname":"convertIpv4AddressToUint32Check","Returntype":"(ip4Addr uint32, err error)","Args":"v string"},{"Uniquefunname":"func convertIpv4NetMaskToPrefix(maskAddress string) (prefix uint32)","Funname":"convertIpv4NetMaskToPrefix","Returntype":"(prefix uint32)","Args":"maskAddress string"},{"Uniquefunname":"func convertIpv4NetMaskToPrefixCheck(maskAddress string) (prefix uint32, err error)","Funname":"convertIpv4NetMaskToPrefixCheck","Returntype":"(prefix uint32, err error)","Args":"maskAddress string"},{"Uniquefunname":"func convertIpv4PrefixToNetMask(prefix uint32) (maskAddress string)","Funname":"convertIpv4PrefixToNetMask","Returntype":"(maskAddress string)","Args":"prefix uint32"},{"Uniquefunname":"func convertIpv6AddressToArrayByte(v string) (ipv6Addr []byte)","Funname":"convertIpv6AddressToArrayByte","Returntype":"(ipv6Addr []byte)","Args":"v string"},{"Uniquefunname":"func convertIpv6AddressToArrayByteCheck(v string) (ipv6Addr []byte, err error)","Funname":"convertIpv6AddressToArrayByteCheck","Returntype":"(ipv6Addr []byte, err error)","Args":"v string"},{"Uniquefunname":"func convertIpv6AddressToString(v []byte) (ipv6Addr string)","Funname":"convertIpv6AddressToString","Returntype":"(ipv6Addr string)","Args":"v []byte"},{"Uniquefunname":"func convertIpv6AddressToStringCheck(v []byte) (ipv6Addr string, err error)","Funname":"convertIpv6AddressToStringCheck","Returntype":"(ipv6Addr string, err error)","Args":"v []byte"},{"Uniquefunname":"func convertMacAddressToArrayByte(v string) (macAddr []byte)","Funname":"convertMacAddressToArrayByte","Returntype":"(macAddr []byte)","Args":"v string"},{"Uniquefunname":"func convertMacAddressToArrayByteCheck(v string) (macAddr []byte, err error)","Funname":"convertMacAddressToArrayByteCheck","Returntype":"(macAddr []byte, err error)","Args":"v string"},{"Uniquefunname":"func convertMacAddressToString(v []byte) (macAddr string)","Funname":"convertMacAddressToString","Returntype":"(macAddr string)","Args":"v []byte"},{"Uniquefunname":"func expandIpv6Address(v string) (ipv6Addr string, err error)","Funname":"expandIpv6Address","Returntype":"(ipv6Addr string, err error)","Args":"v string"},{"Uniquefunname":"func convertIpv4AddressToString(v uint32) (ip4Addr string)","Funname":"network.convertIpv4AddressToString","Returntype":"(ip4Addr string)","Args":"v uint32"},{"Uniquefunname":"func convertIpv4AddressToUint32(v string) (ip4Addr uint32)","Funname":"network.convertIpv4AddressToUint32","Returntype":"(ip4Addr uint32)","Args":"v string"},{"Uniquefunname":"func convertIpv4AddressToUint32Check(v string) (ip4Addr uint32, err error)","Funname":"network.convertIpv4AddressToUint32Check","Returntype":"(ip4Addr uint32, err error)","Args":"v string"},{"Uniquefunname":"func convertIpv4NetMaskToPrefix(maskAddress string) (prefix uint32)","Funname":"network.convertIpv4NetMaskToPrefix","Returntype":"(prefix uint32)","Args":"maskAddress string"},{"Uniquefunname":"func convertIpv4NetMaskToPrefixCheck(maskAddress string) (prefix uint32, err error)","Funname":"network.convertIpv4NetMaskToPrefixCheck","Returntype":"(prefix uint32, err error)","Args":"maskAddress string"},{"Uniquefunname":"func convertIpv4PrefixToNetMask(prefix uint32) (maskAddress string)","Funname":"network.convertIpv4PrefixToNetMask","Returntype":"(maskAddress string)","Args":"prefix uint32"},{"Uniquefunname":"func convertIpv6AddressToArrayByte(v string) (ipv6Addr []byte)","Funname":"network.convertIpv6AddressToArrayByte","Returntype":"(ipv6Addr []byte)","Args":"v string"},{"Uniquefunname":"func convertIpv6AddressToArrayByteCheck(v string) (ipv6Addr []byte, err error)","Funname":"network.convertIpv6AddressToArrayByteCheck","Returntype":"(ipv6Addr []byte, err error)","Args":"v string"},{"Uniquefunname":"func convertIpv6AddressToString(v []byte) (ipv6Addr string)","Funname":"network.convertIpv6AddressToString","Returntype":"(ipv6Addr string)","Args":"v []byte"},{"Uniquefunname":"func convertIpv6AddressToStringCheck(v []byte) (ipv6Addr string, err error)","Funname":"network.convertIpv6AddressToStringCheck","Returntype":"(ipv6Addr string, err error)","Args":"v []byte"},{"Uniquefunname":"func convertMacAddressToArrayByte(v string) (macAddr []byte)","Funname":"network.convertMacAddressToArrayByte","Returntype":"(macAddr []byte)","Args":"v string"},{"Uniquefunname":"func convertMacAddressToArrayByteCheck(v string) (macAddr []byte, err error)","Funname":"network.convertMacAddressToArrayByteCheck","Returntype":"(macAddr []byte, err error)","Args":"v string"},{"Uniquefunname":"func convertMacAddressToString(v []byte) (macAddr string)","Funname":"network.convertMacAddressToString","Returntype":"(macAddr string)","Args":"v []byte"},{"Uniquefunname":"func expandIpv6Address(v string) (ipv6Addr string, err error)","Funname":"network.expandIpv6Address","Returntype":"(ipv6Addr string, err error)","Args":"v string"},{"Uniquefunname":"func reverseOrderUint32(net uint32) (host uint32)","Funname":"network.reverseOrderUint32","Returntype":"(host uint32)","Args":"net uint32"},{"Uniquefunname":"func reverseOrderUint32(net uint32) (host uint32)","Funname":"reverseOrderUint32","Returntype":"(host uint32)","Args":"net uint32"}],"Records":[{"Name":"const:network","Fields":["network.ipv4Zero","network.ipv6AddrZero","network.macAddrZero"]}]}
{"Filepath":"network/utils_notify.go","Functions":[{"Uniquefunname":"func _notify(icon, summary, body string)","Funname":"_notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (nm *NotifyManager) addMsg(msg *notifyMsg)","Funname":"addMsg","Returntype":"","Args":"msg *notifyMsg"},{"Uniquefunname":"func (q *notifyMsgQueue) dequeue() *notifyMsg","Funname":"dequeue","Returntype":"*notifyMsg","Args":""},{"Uniquefunname":"func disableNotify()","Funname":"disableNotify","Returntype":"","Args":""},{"Uniquefunname":"func enableNotify()","Funname":"enableNotify","Returntype":"","Args":""},{"Uniquefunname":"func (q *notifyMsgQueue) enqueue(val *notifyMsg)","Funname":"enqueue","Returntype":"","Args":"val *notifyMsg"},{"Uniquefunname":"func generalGetNotifyConnectedIcon(devType uint32, devPath dbus.ObjectPath) (icon string)","Funname":"generalGetNotifyConnectedIcon","Returntype":"(icon string)","Args":"devType uint32, devPath dbus.ObjectPath"},{"Uniquefunname":"func generalGetNotifyDisconnectedIcon(devType uint32, devPath dbus.ObjectPath) (icon string)","Funname":"generalGetNotifyDisconnectedIcon","Returntype":"(icon string)","Args":"devType uint32, devPath dbus.ObjectPath"},{"Uniquefunname":"func getMobileConnectedNotifyIcon(mobileNetworkType string) (icon string)","Funname":"getMobileConnectedNotifyIcon","Returntype":"(icon string)","Args":"mobileNetworkType string"},{"Uniquefunname":"func getMobileDisconnectedNotifyIcon(mobileNetworkType string) (icon string)","Funname":"getMobileDisconnectedNotifyIcon","Returntype":"(icon string)","Args":"mobileNetworkType string"},{"Uniquefunname":"func initNotifyManager()","Funname":"initNotifyManager","Returntype":"","Args":""},{"Uniquefunname":"func (nm *NotifyManager) loop()","Funname":"loop","Returntype":"","Args":""},{"Uniquefunname":"func (nm *NotifyManager) addMsg(msg *notifyMsg)","Funname":"network.NotifyManager.addMsg","Returntype":"","Args":"msg *notifyMsg"},{"Uniquefunname":"func (nm *NotifyManager) loop()","Funname":"network.NotifyManager.loop","Returntype":"","Args":""},{"Uniquefunname":"func _notify(icon, summary, body string)","Funname":"network._notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func disableNotify()","Funname":"network.disableNotify","Returntype":"","Args":""},{"Uniquefunname":"func enableNotify()","Funname":"network.enableNotify","Returntype":"","Args":""},{"Uniquefunname":"func generalGetNotifyConnectedIcon(devType uint32, devPath dbus.ObjectPath) (icon string)","Funname":"network.generalGetNotifyConnectedIcon","Returntype":"(icon string)","Args":"devType uint32, devPath dbus.ObjectPath"},{"Uniquefunname":"func generalGetNotifyDisconnectedIcon(devType uint32, devPath dbus.ObjectPath) (icon string)","Funname":"network.generalGetNotifyDisconnectedIcon","Returntype":"(icon string)","Args":"devType uint32, devPath dbus.ObjectPath"},{"Uniquefunname":"func getMobileConnectedNotifyIcon(mobileNetworkType string) (icon string)","Funname":"network.getMobileConnectedNotifyIcon","Returntype":"(icon string)","Args":"mobileNetworkType string"},{"Uniquefunname":"func getMobileDisconnectedNotifyIcon(mobileNetworkType string) (icon string)","Funname":"network.getMobileDisconnectedNotifyIcon","Returntype":"(icon string)","Args":"mobileNetworkType string"},{"Uniquefunname":"func initNotifyManager()","Funname":"network.initNotifyManager","Returntype":"","Args":""},{"Uniquefunname":"func newNotifyManager() *NotifyManager","Funname":"network.newNotifyManager","Returntype":"*NotifyManager","Args":""},{"Uniquefunname":"func newNotifyMsgQueue() *notifyMsgQueue","Funname":"network.newNotifyMsgQueue","Returntype":"*notifyMsgQueue","Args":""},{"Uniquefunname":"func notify(icon, summary, body string)","Funname":"network.notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func notifyAirplanModeEnabled()","Funname":"network.notifyAirplanModeEnabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyApModeNotSupport()","Funname":"network.notifyApModeNotSupport","Returntype":"","Args":""},{"Uniquefunname":"func notifyDeviceRemoved(devPath dbus.ObjectPath)","Funname":"network.notifyDeviceRemoved","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (q *notifyMsgQueue) dequeue() *notifyMsg","Funname":"network.notifyMsgQueue.dequeue","Returntype":"*notifyMsg","Args":""},{"Uniquefunname":"func (q *notifyMsgQueue) enqueue(val *notifyMsg)","Funname":"network.notifyMsgQueue.enqueue","Returntype":"","Args":"val *notifyMsg"},{"Uniquefunname":"func (q *notifyMsgQueue) toList() *list.List","Funname":"network.notifyMsgQueue.toList","Returntype":"*list.List","Args":""},{"Uniquefunname":"func notifyProxyDisabled()","Funname":"network.notifyProxyDisabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyProxyEnabled()","Funname":"network.notifyProxyEnabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyVpnConnected(id string)","Funname":"network.notifyVpnConnected","Returntype":"","Args":"id string"},{"Uniquefunname":"func notifyVpnDisconnected(id string)","Funname":"network.notifyVpnDisconnected","Returntype":"","Args":"id string"},{"Uniquefunname":"func notifyVpnFailed(id string, reason uint32)","Funname":"network.notifyVpnFailed","Returntype":"","Args":"id string, reason uint32"},{"Uniquefunname":"func notifyWiredCableUnplugged()","Funname":"network.notifyWiredCableUnplugged","Returntype":"","Args":""},{"Uniquefunname":"func notifyWirelessHardSwitchOff()","Funname":"network.notifyWirelessHardSwitchOff","Returntype":"","Args":""},{"Uniquefunname":"func newNotifyManager() *NotifyManager","Funname":"newNotifyManager","Returntype":"*NotifyManager","Args":""},{"Uniquefunname":"func newNotifyMsgQueue() *notifyMsgQueue","Funname":"newNotifyMsgQueue","Returntype":"*notifyMsgQueue","Args":""},{"Uniquefunname":"func notify(icon, summary, body string)","Funname":"notify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func notifyAirplanModeEnabled()","Funname":"notifyAirplanModeEnabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyApModeNotSupport()","Funname":"notifyApModeNotSupport","Returntype":"","Args":""},{"Uniquefunname":"func notifyDeviceRemoved(devPath dbus.ObjectPath)","Funname":"notifyDeviceRemoved","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func notifyProxyDisabled()","Funname":"notifyProxyDisabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyProxyEnabled()","Funname":"notifyProxyEnabled","Returntype":"","Args":""},{"Uniquefunname":"func notifyVpnConnected(id string)","Funname":"notifyVpnConnected","Returntype":"","Args":"id string"},{"Uniquefunname":"func notifyVpnDisconnected(id string)","Funname":"notifyVpnDisconnected","Returntype":"","Args":"id string"},{"Uniquefunname":"func notifyVpnFailed(id string, reason uint32)","Funname":"notifyVpnFailed","Returntype":"","Args":"id string, reason uint32"},{"Uniquefunname":"func notifyWiredCableUnplugged()","Funname":"notifyWiredCableUnplugged","Returntype":"","Args":""},{"Uniquefunname":"func notifyWirelessHardSwitchOff()","Funname":"notifyWirelessHardSwitchOff","Returntype":"","Args":""},{"Uniquefunname":"func (q *notifyMsgQueue) toList() *list.List","Funname":"toList","Returntype":"*list.List","Args":""}],"Records":[{"Name":"struct:network.NotifyManager","Fields":["network.NotifyManager.cond *sync.Cond","network.NotifyManager.mu sync.Mutex","network.NotifyManager.queue *notifyMsgQueue"]},{"Name":"var:network","Fields":["network.globalNotifyManager","network.notification","network.notifyEnabled","network.notifyId","network.notifyIdMu"]},{"Name":"const:network","Fields":["network.notifyIconMobile2gConnected","network.notifyIconMobile2gDisconnected","network.notifyIconMobile3gConnected","network.notifyIconMobile3gDisconnected","network.notifyIconMobile4gConnected","network.notifyIconMobile4gDisconnected","network.notifyIconMobileUnknownConnected","network.notifyIconMobileUnknownDisconnected","network.notifyIconNetworkConnected","network.notifyIconNetworkDisconnected","network.notifyIconNetworkOffline","network.notifyIconProxyDisabled","network.notifyIconProxyEnabled","network.notifyIconVpnConnected","network.notifyIconVpnDisconnected","network.notifyIconWiredConnected","network.notifyIconWiredDisconnected","network.notifyIconWiredError","network.notifyIconWirelessConnected","network.notifyIconWirelessDisabled","network.notifyIconWirelessDisconnected","network.notifyIconWirelessError"]},{"Name":"struct:network.notifyMsg","Fields":["network.notifyMsg.body string","network.notifyMsg.icon string","network.notifyMsg.summary string"]}]}
{"Filepath":"network/utils_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestByteArrayToStrPath(c *C.C)","Funname":"TestByteArrayToStrPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4AddressToString(c *C.C)","Funname":"TestConvertIpv4AddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4AddressToUint32(c *C.C)","Funname":"TestConvertIpv4AddressToUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4NetMaskToPrefix(c *C.C)","Funname":"TestConvertIpv4NetMaskToPrefix","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4PrefixToNetMask(c *C.C)","Funname":"TestConvertIpv4PrefixToNetMask","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv6AddressToArrayByte(c *C.C)","Funname":"TestConvertIpv6AddressToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv6AddressToString(c *C.C)","Funname":"TestConvertIpv6AddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertMacAddressToArrayByte(c *C.C)","Funname":"TestConvertMacAddressToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertMacAddressToString(c *C.C)","Funname":"TestConvertMacAddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDoStrToUuid(c *C.C)","Funname":"TestDoStrToUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestExpandIpv6Address(c *C.C)","Funname":"TestExpandIpv6Address","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFixupDeviceDesc(c *C.C)","Funname":"TestFixupDeviceDesc","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetSetConnectionData(c *C.C)","Funname":"TestGetSetConnectionData","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetterAndSetterForVirtualKey(c *C.C)","Funname":"TestGetterAndSetterForVirtualKey","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestReverseOrderUint32(c *C.C)","Funname":"TestReverseOrderUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrToByteArrayPath(c *C.C)","Funname":"TestStrToByteArrayPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrToUuid(c *C.C)","Funname":"TestStrToUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToLocalPath(c *C.C)","Funname":"TestToLocalPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToLocalPathFor8021x(c *C.C)","Funname":"TestToLocalPathFor8021x","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToUriPath(c *C.C)","Funname":"TestToUriPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToUriPathFor8021x(c *C.C)","Funname":"TestToUriPathFor8021x","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func network.Test(t *testing.T)","Funname":"network.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"network.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestByteArrayToStrPath(c *C.C)","Funname":"network.testWrapper.TestByteArrayToStrPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4AddressToString(c *C.C)","Funname":"network.testWrapper.TestConvertIpv4AddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4AddressToUint32(c *C.C)","Funname":"network.testWrapper.TestConvertIpv4AddressToUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4NetMaskToPrefix(c *C.C)","Funname":"network.testWrapper.TestConvertIpv4NetMaskToPrefix","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv4PrefixToNetMask(c *C.C)","Funname":"network.testWrapper.TestConvertIpv4PrefixToNetMask","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv6AddressToArrayByte(c *C.C)","Funname":"network.testWrapper.TestConvertIpv6AddressToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertIpv6AddressToString(c *C.C)","Funname":"network.testWrapper.TestConvertIpv6AddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertMacAddressToArrayByte(c *C.C)","Funname":"network.testWrapper.TestConvertMacAddressToArrayByte","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestConvertMacAddressToString(c *C.C)","Funname":"network.testWrapper.TestConvertMacAddressToString","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDoStrToUuid(c *C.C)","Funname":"network.testWrapper.TestDoStrToUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestExpandIpv6Address(c *C.C)","Funname":"network.testWrapper.TestExpandIpv6Address","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFixupDeviceDesc(c *C.C)","Funname":"network.testWrapper.TestFixupDeviceDesc","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetSetConnectionData(c *C.C)","Funname":"network.testWrapper.TestGetSetConnectionData","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetterAndSetterForVirtualKey(c *C.C)","Funname":"network.testWrapper.TestGetterAndSetterForVirtualKey","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestReverseOrderUint32(c *C.C)","Funname":"network.testWrapper.TestReverseOrderUint32","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrToByteArrayPath(c *C.C)","Funname":"network.testWrapper.TestStrToByteArrayPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestStrToUuid(c *C.C)","Funname":"network.testWrapper.TestStrToUuid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToLocalPath(c *C.C)","Funname":"network.testWrapper.TestToLocalPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToLocalPathFor8021x(c *C.C)","Funname":"network.testWrapper.TestToLocalPathFor8021x","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToUriPath(c *C.C)","Funname":"network.testWrapper.TestToUriPath","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestToUriPathFor8021x(c *C.C)","Funname":"network.testWrapper.TestToUriPathFor8021x","Returntype":"","Args":"c *C.C"}],"Records":null}
{"Filepath":"network/utils_udev.go","Functions":[{"Uniquefunname":"func fixupDeviceDesc(desc string) (fixedDesc string)","Funname":"fixupDeviceDesc","Returntype":"(fixedDesc string)","Args":"desc string"},{"Uniquefunname":"func fixupDeviceDesc(desc string) (fixedDesc string)","Funname":"network.fixupDeviceDesc","Returntype":"(fixedDesc string)","Args":"desc string"},{"Uniquefunname":"func udevGetDeviceDesc(syspath string) (desc string, ok bool)","Funname":"network.udevGetDeviceDesc","Returntype":"(desc string, ok bool)","Args":"syspath string"},{"Uniquefunname":"func udevGetDeviceProduct(syspath string) (product string)","Funname":"network.udevGetDeviceProduct","Returntype":"(product string)","Args":"syspath string"},{"Uniquefunname":"func udevGetDeviceVendor(syspath string) (vendor string)","Funname":"network.udevGetDeviceVendor","Returntype":"(vendor string)","Args":"syspath string"},{"Uniquefunname":"func udevIsUsbDevice(syspath string) bool","Funname":"network.udevIsUsbDevice","Returntype":"bool","Args":"syspath string"},{"Uniquefunname":"func udevGetDeviceDesc(syspath string) (desc string, ok bool)","Funname":"udevGetDeviceDesc","Returntype":"(desc string, ok bool)","Args":"syspath string"},{"Uniquefunname":"func udevGetDeviceProduct(syspath string) (product string)","Funname":"udevGetDeviceProduct","Returntype":"(product string)","Args":"syspath string"},{"Uniquefunname":"func udevGetDeviceVendor(syspath string) (vendor string)","Funname":"udevGetDeviceVendor","Returntype":"(vendor string)","Args":"syspath string"},{"Uniquefunname":"func udevIsUsbDevice(syspath string) bool","Funname":"udevIsUsbDevice","Returntype":"bool","Args":"syspath string"}],"Records":[{"Name":"var:network","Fields":["network.deviceDescIgnoredPhrases","network.deviceDescIgnoredWords"]}]}
{"Filepath":"network/nm/nm_consts_gen.go","Functions":null,"Records":[{"Name":"const:nm","Fields":["nm.NMU_SEC_DYNAMIC_WEP","nm.NMU_SEC_INVALID","nm.NMU_SEC_LEAP","nm.NMU_SEC_NONE","nm.NMU_SEC_STATIC_WEP","nm.NMU_SEC_WPA2_ENTERPRISE","nm.NMU_SEC_WPA2_PSK","nm.NMU_SEC_WPA_ENTERPRISE","nm.NMU_SEC_WPA_PSK","nm.NM_802_11_AP_FLAGS_NONE","nm.NM_802_11_AP_FLAGS_PRIVACY","nm.NM_802_11_AP_FLAGS_WPS","nm.NM_802_11_AP_FLAGS_WPS_PBC","nm.NM_802_11_AP_FLAGS_WPS_PIN","nm.NM_802_11_AP_SEC_GROUP_CCMP","nm.NM_802_11_AP_SEC_GROUP_TKIP","nm.NM_802_11_AP_SEC_GROUP_WEP104","nm.NM_802_11_AP_SEC_GROUP_WEP40","nm.NM_802_11_AP_SEC_KEY_MGMT_802_1X","nm.NM_802_11_AP_SEC_KEY_MGMT_PSK","nm.NM_802_11_AP_SEC_NONE","nm.NM_802_11_AP_SEC_PAIR_CCMP","nm.NM_802_11_AP_SEC_PAIR_TKIP","nm.NM_802_11_AP_SEC_PAIR_WEP104","nm.NM_802_11_AP_SEC_PAIR_WEP40","nm.NM_802_11_MODE_ADHOC","nm.NM_802_11_MODE_AP","nm.NM_802_11_MODE_INFRA","nm.NM_802_11_MODE_UNKNOWN","nm.NM_ACCESS_POINT_BSSID","nm.NM_ACCESS_POINT_FLAGS","nm.NM_ACCESS_POINT_FREQUENCY","nm.NM_ACCESS_POINT_HW_ADDRESS","nm.NM_ACCESS_POINT_LAST_SEEN","nm.NM_ACCESS_POINT_MAX_BITRATE","nm.NM_ACCESS_POINT_MODE","nm.NM_ACCESS_POINT_RSN_FLAGS","nm.NM_ACCESS_POINT_SSID","nm.NM_ACCESS_POINT_STRENGTH","nm.NM_ACCESS_POINT_WPA_FLAGS","nm.NM_ACTIVATION_STATE_FLAG_IP4_READY","nm.NM_ACTIVATION_STATE_FLAG_IP6_READY","nm.NM_ACTIVATION_STATE_FLAG_IS_MASTER","nm.NM_ACTIVATION_STATE_FLAG_IS_SLAVE","nm.NM_ACTIVATION_STATE_FLAG_LAYER2_READY","nm.NM_ACTIVATION_STATE_FLAG_MASTER_HAS_SLAVES","nm.NM_ACTIVATION_STATE_FLAG_NONE","nm.NM_ACTIVE_CONNECTION_CONNECTION","nm.NM_ACTIVE_CONNECTION_DEFAULT","nm.NM_ACTIVE_CONNECTION_DEFAULT6","nm.NM_ACTIVE_CONNECTION_DEVICES","nm.NM_ACTIVE_CONNECTION_DHCP4_CONFIG","nm.NM_ACTIVE_CONNECTION_DHCP6_CONFIG","nm.NM_ACTIVE_CONNECTION_ID","nm.NM_ACTIVE_CONNECTION_IP4_CONFIG","nm.NM_ACTIVE_CONNECTION_IP6_CONFIG","nm.NM_ACTIVE_CONNECTION_MASTER","nm.NM_ACTIVE_CONNECTION_SPECIFIC_OBJECT_PATH","nm.NM_ACTIVE_CONNECTION_STATE","nm.NM_ACTIVE_CONNECTION_STATE_ACTIVATED","nm.NM_ACTIVE_CONNECTION_STATE_ACTIVATING","nm.NM_ACTIVE_CONNECTION_STATE_DEACTIVATED","nm.NM_ACTIVE_CONNECTION_STATE_DEACTIVATING","nm.NM_ACTIVE_CONNECTION_STATE_FLAGS","nm.NM_ACTIVE_CONNECTION_STATE_REASON_CONNECTION_REMOVED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_CONNECT_TIMEOUT","nm.NM_ACTIVE_CONNECTION_STATE_REASON_DEPENDENCY_FAILED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_DISCONNECTED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_REALIZE_FAILED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_DEVICE_REMOVED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_IP_CONFIG_INVALID","nm.NM_ACTIVE_CONNECTION_STATE_REASON_LOGIN_FAILED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_NONE","nm.NM_ACTIVE_CONNECTION_STATE_REASON_NO_SECRETS","nm.NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_START_FAILED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_START_TIMEOUT","nm.NM_ACTIVE_CONNECTION_STATE_REASON_SERVICE_STOPPED","nm.NM_ACTIVE_CONNECTION_STATE_REASON_UNKNOWN","nm.NM_ACTIVE_CONNECTION_STATE_REASON_USER_DISCONNECTED","nm.NM_ACTIVE_CONNECTION_STATE_UNKNOWN","nm.NM_ACTIVE_CONNECTION_TYPE","nm.NM_ACTIVE_CONNECTION_UUID","nm.NM_ACTIVE_CONNECTION_VPN","nm.NM_AGENT_MANAGER_ERROR_FAILED","nm.NM_AGENT_MANAGER_ERROR_INVALID_IDENTIFIER","nm.NM_AGENT_MANAGER_ERROR_NOT_REGISTERED","nm.NM_AGENT_MANAGER_ERROR_NO_SECRETS","nm.NM_AGENT_MANAGER_ERROR_PERMISSION_DENIED","nm.NM_AGENT_MANAGER_ERROR_USER_CANCELED","nm.NM_BT_CAPABILITY_DUN","nm.NM_BT_CAPABILITY_NAP","nm.NM_BT_CAPABILITY_NONE","nm.NM_CAPABILITY_TEAM","nm.NM_CHECKPOINT_CREATE_FLAG_DELETE_NEW_CONNECTIONS","nm.NM_CHECKPOINT_CREATE_FLAG_DESTROY_ALL","nm.NM_CHECKPOINT_CREATE_FLAG_DISCONNECT_NEW_DEVICES","nm.NM_CHECKPOINT_CREATE_FLAG_NONE","nm.NM_CLIENT_ACTIVATING_CONNECTION","nm.NM_CLIENT_ACTIVE_CONNECTIONS","nm.NM_CLIENT_ACTIVE_CONNECTION_ADDED","nm.NM_CLIENT_ACTIVE_CONNECTION_REMOVED","nm.NM_CLIENT_ALL_DEVICES","nm.NM_CLIENT_ANY_DEVICE_ADDED","nm.NM_CLIENT_ANY_DEVICE_REMOVED","nm.NM_CLIENT_CAN_MODIFY","nm.NM_CLIENT_CONNECTIONS","nm.NM_CLIENT_CONNECTION_ADDED","nm.NM_CLIENT_CONNECTION_REMOVED","nm.NM_CLIENT_CONNECTIVITY","nm.NM_CLIENT_CONNECTIVITY_CHECK_AVAILABLE","nm.NM_CLIENT_CONNECTIVITY_CHECK_ENABLED","nm.NM_CLIENT_DEVICES","nm.NM_CLIENT_DEVICE_ADDED","nm.NM_CLIENT_DEVICE_REMOVED","nm.NM_CLIENT_DNS_CONFIGURATION","nm.NM_CLIENT_DNS_MODE","nm.NM_CLIENT_DNS_RC_MANAGER","nm.NM_CLIENT_ERROR_FAILED","nm.NM_CLIENT_ERROR_MANAGER_NOT_RUNNING","nm.NM_CLIENT_ERROR_OBJECT_CREATION_FAILED","nm.NM_CLIENT_HOSTNAME","nm.NM_CLIENT_METERED","nm.NM_CLIENT_NETWORKING_ENABLED","nm.NM_CLIENT_NM_RUNNING","nm.NM_CLIENT_PERMISSION_CHANGED","nm.NM_CLIENT_PERMISSION_CHECKPOINT_ROLLBACK","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_CONNECTIVITY_CHECK","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_NETWORK","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_STATISTICS","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_WIFI","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_WIMAX","nm.NM_CLIENT_PERMISSION_ENABLE_DISABLE_WWAN","nm.NM_CLIENT_PERMISSION_LAST","nm.NM_CLIENT_PERMISSION_NETWORK_CONTROL","nm.NM_CLIENT_PERMISSION_NONE","nm.NM_CLIENT_PERMISSION_RELOAD","nm.NM_CLIENT_PERMISSION_RESULT_AUTH","nm.NM_CLIENT_PERMISSION_RESULT_NO","nm.NM_CLIENT_PERMISSION_RESULT_UNKNOWN","nm.NM_CLIENT_PERMISSION_RESULT_YES","nm.NM_CLIENT_PERMISSION_SETTINGS_MODIFY_GLOBAL_DNS","nm.NM_CLIENT_PERMISSION_SETTINGS_MODIFY_HOSTNAME","nm.NM_CLIENT_PERMISSION_SETTINGS_MODIFY_OWN","nm.NM_CLIENT_PERMISSION_SETTINGS_MODIFY_SYSTEM","nm.NM_CLIENT_PERMISSION_SLEEP_WAKE","nm.NM_CLIENT_PERMISSION_WIFI_SHARE_OPEN","nm.NM_CLIENT_PERMISSION_WIFI_SHARE_PROTECTED","nm.NM_CLIENT_PRIMARY_CONNECTION","nm.NM_CLIENT_STARTUP","nm.NM_CLIENT_STATE","nm.NM_CLIENT_VERSION","nm.NM_CLIENT_WIMAX_ENABLED","nm.NM_CLIENT_WIMAX_HARDWARE_ENABLED","nm.NM_CLIENT_WIRELESS_ENABLED","nm.NM_CLIENT_WIRELESS_HARDWARE_ENABLED","nm.NM_CLIENT_WWAN_ENABLED","nm.NM_CLIENT_WWAN_HARDWARE_ENABLED","nm.NM_CONNECTION_CHANGED","nm.NM_CONNECTION_ERROR_FAILED","nm.NM_CONNECTION_ERROR_INVALID_PROPERTY","nm.NM_CONNECTION_ERROR_INVALID_SETTING","nm.NM_CONNECTION_ERROR_MISSING_PROPERTY","nm.NM_CONNECTION_ERROR_MISSING_SETTING","nm.NM_CONNECTION_ERROR_PROPERTY_NOT_FOUND","nm.NM_CONNECTION_ERROR_PROPERTY_NOT_SECRET","nm.NM_CONNECTION_ERROR_SETTING_NOT_FOUND","nm.NM_CONNECTION_NORMALIZE_PARAM_IP6_CONFIG_METHOD","nm.NM_CONNECTION_SECRETS_CLEARED","nm.NM_CONNECTION_SECRETS_UPDATED","nm.NM_CONNECTION_SERIALIZE_ALL","nm.NM_CONNECTION_SERIALIZE_NO_SECRETS","nm.NM_CONNECTION_SERIALIZE_ONLY_SECRETS","nm.NM_CONNECTIVITY_FULL","nm.NM_CONNECTIVITY_LIMITED","nm.NM_CONNECTIVITY_NONE","nm.NM_CONNECTIVITY_PORTAL","nm.NM_CONNECTIVITY_UNKNOWN","nm.NM_CRYPTO_ERROR_DECRYPTION_FAILED","nm.NM_CRYPTO_ERROR_ENCRYPTION_FAILED","nm.NM_CRYPTO_ERROR_FAILED","nm.NM_CRYPTO_ERROR_INVALID_DATA","nm.NM_CRYPTO_ERROR_INVALID_PASSWORD","nm.NM_CRYPTO_ERROR_UNKNOWN_CIPHER","nm.NM_DBUS_INTERFACE","nm.NM_DBUS_INTERFACE_DNS_MANAGER","nm.NM_DBUS_INTERFACE_SETTINGS","nm.NM_DBUS_INTERFACE_SETTINGS_CONNECTION","nm.NM_DBUS_INTERFACE_SETTINGS_CONNECTION_SECRETS","nm.NM_DBUS_INTERFACE_VPN","nm.NM_DBUS_INTERFACE_VPN_CONNECTION","nm.NM_DBUS_INVALID_VPN_CONNECTION","nm.NM_DBUS_NO_ACTIVE_VPN_CONNECTION","nm.NM_DBUS_NO_VPN_CONNECTIONS","nm.NM_DBUS_PATH","nm.NM_DBUS_PATH_AGENT_MANAGER","nm.NM_DBUS_PATH_DNS_MANAGER","nm.NM_DBUS_PATH_SECRET_AGENT","nm.NM_DBUS_PATH_SETTINGS","nm.NM_DBUS_PATH_SETTINGS_CONNECTION","nm.NM_DBUS_PATH_VPN","nm.NM_DBUS_PATH_VPN_CONNECTION","nm.NM_DBUS_SERVICE","nm.NM_DBUS_VPN_ALREADY_STARTED","nm.NM_DBUS_VPN_ALREADY_STOPPED","nm.NM_DBUS_VPN_BAD_ARGUMENTS","nm.NM_DBUS_VPN_ERROR_PREFIX","nm.NM_DBUS_VPN_INTERACTIVE_NOT_SUPPORTED","nm.NM_DBUS_VPN_SIGNAL_CONNECT_FAILED","nm.NM_DBUS_VPN_SIGNAL_IP4_CONFIG","nm.NM_DBUS_VPN_SIGNAL_IP_CONFIG_BAD","nm.NM_DBUS_VPN_SIGNAL_LAUNCH_FAILED","nm.NM_DBUS_VPN_SIGNAL_LOGIN_BANNER","nm.NM_DBUS_VPN_SIGNAL_LOGIN_FAILED","nm.NM_DBUS_VPN_SIGNAL_STATE_CHANGE","nm.NM_DBUS_VPN_SIGNAL_VPN_CONFIG_BAD","nm.NM_DBUS_VPN_STARTING_IN_PROGRESS","nm.NM_DBUS_VPN_STOPPING_IN_PROGRESS","nm.NM_DBUS_VPN_WRONG_STATE","nm.NM_DEVICE_ACTIVE_CONNECTION","nm.NM_DEVICE_ADSL_CARRIER","nm.NM_DEVICE_AUTOCONNECT","nm.NM_DEVICE_AVAILABLE_CONNECTIONS","nm.NM_DEVICE_BOND_CARRIER","nm.NM_DEVICE_BOND_HW_ADDRESS","nm.NM_DEVICE_BOND_SLAVES","nm.NM_DEVICE_BRIDGE_CARRIER","nm.NM_DEVICE_BRIDGE_HW_ADDRESS","nm.NM_DEVICE_BRIDGE_SLAVES","nm.NM_DEVICE_BT_CAPABILITIES","nm.NM_DEVICE_BT_HW_ADDRESS","nm.NM_DEVICE_BT_NAME","nm.NM_DEVICE_CAPABILITIES","nm.NM_DEVICE_CAP_CARRIER_DETECT","nm.NM_DEVICE_CAP_IS_SOFTWARE","nm.NM_DEVICE_CAP_NM_SUPPORTED","nm.NM_DEVICE_CAP_NONE","nm.NM_DEVICE_CAP_SRIOV","nm.NM_DEVICE_DEVICE_TYPE","nm.NM_DEVICE_DHCP4_CONFIG","nm.NM_DEVICE_DHCP6_CONFIG","nm.NM_DEVICE_DRIVER","nm.NM_DEVICE_DRIVER_VERSION","nm.NM_DEVICE_DUMMY_HW_ADDRESS","nm.NM_DEVICE_ERROR_CREATION_FAILED","nm.NM_DEVICE_ERROR_FAILED","nm.NM_DEVICE_ERROR_INCOMPATIBLE_CONNECTION","nm.NM_DEVICE_ERROR_INVALID_CONNECTION","nm.NM_DEVICE_ERROR_MISSING_DEPENDENCIES","nm.NM_DEVICE_ERROR_NOT_ACTIVE","nm.NM_DEVICE_ERROR_NOT_ALLOWED","nm.NM_DEVICE_ERROR_NOT_SOFTWARE","nm.NM_DEVICE_ERROR_SPECIFIC_OBJECT_NOT_FOUND","nm.NM_DEVICE_ERROR_VERSION_ID_MISMATCH","nm.NM_DEVICE_ETHERNET_CARRIER","nm.NM_DEVICE_ETHERNET_HW_ADDRESS","nm.NM_DEVICE_ETHERNET_PERMANENT_HW_ADDRESS","nm.NM_DEVICE_ETHERNET_S390_SUBCHANNELS","nm.NM_DEVICE_ETHERNET_SPEED","nm.NM_DEVICE_FIRMWARE_MISSING","nm.NM_DEVICE_FIRMWARE_VERSION","nm.NM_DEVICE_GENERIC_HW_ADDRESS","nm.NM_DEVICE_GENERIC_TYPE_DESCRIPTION","nm.NM_DEVICE_INFINIBAND_CARRIER","nm.NM_DEVICE_INFINIBAND_HW_ADDRESS","nm.NM_DEVICE_INTERFACE","nm.NM_DEVICE_IP4_CONFIG","nm.NM_DEVICE_IP6_CONFIG","nm.NM_DEVICE_IP_INTERFACE","nm.NM_DEVICE_IP_TUNNEL_ENCAPSULATION_LIMIT","nm.NM_DEVICE_IP_TUNNEL_FLOW_LABEL","nm.NM_DEVICE_IP_TUNNEL_INPUT_KEY","nm.NM_DEVICE_IP_TUNNEL_LOCAL","nm.NM_DEVICE_IP_TUNNEL_MODE","nm.NM_DEVICE_IP_TUNNEL_OUTPUT_KEY","nm.NM_DEVICE_IP_TUNNEL_PARENT","nm.NM_DEVICE_IP_TUNNEL_PATH_MTU_DISCOVERY","nm.NM_DEVICE_IP_TUNNEL_REMOTE","nm.NM_DEVICE_IP_TUNNEL_TOS","nm.NM_DEVICE_IP_TUNNEL_TTL","nm.NM_DEVICE_LLDP_NEIGHBORS","nm.NM_DEVICE_MACSEC_CIPHER_SUITE","nm.NM_DEVICE_MACSEC_ENCODING_SA","nm.NM_DEVICE_MACSEC_ENCRYPT","nm.NM_DEVICE_MACSEC_ES","nm.NM_DEVICE_MACSEC_HW_ADDRESS","nm.NM_DEVICE_MACSEC_ICV_LENGTH","nm.NM_DEVICE_MACSEC_INCLUDE_SCI","nm.NM_DEVICE_MACSEC_PARENT","nm.NM_DEVICE_MACSEC_PROTECT","nm.NM_DEVICE_MACSEC_REPLAY_PROTECT","nm.NM_DEVICE_MACSEC_SCB","nm.NM_DEVICE_MACSEC_SCI","nm.NM_DEVICE_MACSEC_VALIDATION","nm.NM_DEVICE_MACSEC_WINDOW","nm.NM_DEVICE_MACVLAN_HW_ADDRESS","nm.NM_DEVICE_MACVLAN_MODE","nm.NM_DEVICE_MACVLAN_NO_PROMISC","nm.NM_DEVICE_MACVLAN_PARENT","nm.NM_DEVICE_MACVLAN_TAP","nm.NM_DEVICE_MANAGED","nm.NM_DEVICE_METERED","nm.NM_DEVICE_MODEM_CAPABILITY_CDMA_EVDO","nm.NM_DEVICE_MODEM_CAPABILITY_GSM_UMTS","nm.NM_DEVICE_MODEM_CAPABILITY_LTE","nm.NM_DEVICE_MODEM_CAPABILITY_NONE","nm.NM_DEVICE_MODEM_CAPABILITY_POTS","nm.NM_DEVICE_MODEM_CURRENT_CAPABILITIES","nm.NM_DEVICE_MODEM_MODEM_CAPABILITIES","nm.NM_DEVICE_MTU","nm.NM_DEVICE_NM_PLUGIN_MISSING","nm.NM_DEVICE_OLPC_MESH_ACTIVE_CHANNEL","nm.NM_DEVICE_OLPC_MESH_COMPANION","nm.NM_DEVICE_OLPC_MESH_HW_ADDRESS","nm.NM_DEVICE_PHYSICAL_PORT_ID","nm.NM_DEVICE_PRODUCT","nm.NM_DEVICE_REAL","nm.NM_DEVICE_STATE","nm.NM_DEVICE_STATE_ACTIVATED","nm.NM_DEVICE_STATE_CONFIG","nm.NM_DEVICE_STATE_DEACTIVATING","nm.NM_DEVICE_STATE_DISCONNECTED","nm.NM_DEVICE_STATE_FAILED","nm.NM_DEVICE_STATE_IP_CHECK","nm.NM_DEVICE_STATE_IP_CONFIG","nm.NM_DEVICE_STATE_NEED_AUTH","nm.NM_DEVICE_STATE_PREPARE","nm.NM_DEVICE_STATE_REASON","nm.NM_DEVICE_STATE_REASON_AUTOIP_ERROR","nm.NM_DEVICE_STATE_REASON_AUTOIP_FAILED","nm.NM_DEVICE_STATE_REASON_AUTOIP_START_FAILED","nm.NM_DEVICE_STATE_REASON_BR2684_FAILED","nm.NM_DEVICE_STATE_REASON_BT_FAILED","nm.NM_DEVICE_STATE_REASON_CARRIER","nm.NM_DEVICE_STATE_REASON_CONFIG_FAILED","nm.NM_DEVICE_STATE_REASON_CONNECTION_ASSUMED","nm.NM_DEVICE_STATE_REASON_CONNECTION_REMOVED","nm.NM_DEVICE_STATE_REASON_DCB_FCOE_FAILED","nm.NM_DEVICE_STATE_REASON_DEPENDENCY_FAILED","nm.NM_DEVICE_STATE_REASON_DHCP_ERROR","nm.NM_DEVICE_STATE_REASON_DHCP_FAILED","nm.NM_DEVICE_STATE_REASON_DHCP_START_FAILED","nm.NM_DEVICE_STATE_REASON_FIRMWARE_MISSING","nm.NM_DEVICE_STATE_REASON_GSM_APN_FAILED","nm.NM_DEVICE_STATE_REASON_GSM_PIN_CHECK_FAILED","nm.NM_DEVICE_STATE_REASON_GSM_REGISTRATION_DENIED","nm.NM_DEVICE_STATE_REASON_GSM_REGISTRATION_FAILED","nm.NM_DEVICE_STATE_REASON_GSM_REGISTRATION_NOT_SEARCHING","nm.NM_DEVICE_STATE_REASON_GSM_REGISTRATION_TIMEOUT","nm.NM_DEVICE_STATE_REASON_GSM_SIM_NOT_INSERTED","nm.NM_DEVICE_STATE_REASON_GSM_SIM_PIN_REQUIRED","nm.NM_DEVICE_STATE_REASON_GSM_SIM_PUK_REQUIRED","nm.NM_DEVICE_STATE_REASON_GSM_SIM_WRONG","nm.NM_DEVICE_STATE_REASON_INFINIBAND_MODE","nm.NM_DEVICE_STATE_REASON_IP_ADDRESS_DUPLICATE","nm.NM_DEVICE_STATE_REASON_IP_CONFIG_EXPIRED","nm.NM_DEVICE_STATE_REASON_IP_CONFIG_UNAVAILABLE","nm.NM_DEVICE_STATE_REASON_IP_METHOD_UNSUPPORTED","nm.NM_DEVICE_STATE_REASON_MODEM_AVAILABLE","nm.NM_DEVICE_STATE_REASON_MODEM_BUSY","nm.NM_DEVICE_STATE_REASON_MODEM_DIAL_FAILED","nm.NM_DEVICE_STATE_REASON_MODEM_DIAL_TIMEOUT","nm.NM_DEVICE_STATE_REASON_MODEM_FAILED","nm.NM_DEVICE_STATE_REASON_MODEM_INIT_FAILED","nm.NM_DEVICE_STATE_REASON_MODEM_MANAGER_UNAVAILABLE","nm.NM_DEVICE_STATE_REASON_MODEM_NOT_FOUND","nm.NM_DEVICE_STATE_REASON_MODEM_NO_CARRIER","nm.NM_DEVICE_STATE_REASON_MODEM_NO_DIAL_TONE","nm.NM_DEVICE_STATE_REASON_NEW_ACTIVATION","nm.NM_DEVICE_STATE_REASON_NONE","nm.NM_DEVICE_STATE_REASON_NOW_MANAGED","nm.NM_DEVICE_STATE_REASON_NOW_UNMANAGED","nm.NM_DEVICE_STATE_REASON_NO_SECRETS","nm.NM_DEVICE_STATE_REASON_OVSDB_FAILED","nm.NM_DEVICE_STATE_REASON_PARENT_CHANGED","nm.NM_DEVICE_STATE_REASON_PARENT_MANAGED_CHANGED","nm.NM_DEVICE_STATE_REASON_PPP_DISCONNECT","nm.NM_DEVICE_STATE_REASON_PPP_FAILED","nm.NM_DEVICE_STATE_REASON_PPP_START_FAILED","nm.NM_DEVICE_STATE_REASON_REMOVED","nm.NM_DEVICE_STATE_REASON_SECONDARY_CONNECTION_FAILED","nm.NM_DEVICE_STATE_REASON_SHARED_FAILED","nm.NM_DEVICE_STATE_REASON_SHARED_START_FAILED","nm.NM_DEVICE_STATE_REASON_SIM_PIN_INCORRECT","nm.NM_DEVICE_STATE_REASON_SLEEPING","nm.NM_DEVICE_STATE_REASON_SSID_NOT_FOUND","nm.NM_DEVICE_STATE_REASON_SUPPLICANT_AVAILABLE","nm.NM_DEVICE_STATE_REASON_SUPPLICANT_CONFIG_FAILED","nm.NM_DEVICE_STATE_REASON_SUPPLICANT_DISCONNECT","nm.NM_DEVICE_STATE_REASON_SUPPLICANT_FAILED","nm.NM_DEVICE_STATE_REASON_SUPPLICANT_TIMEOUT","nm.NM_DEVICE_STATE_REASON_TEAMD_CONTROL_FAILED","nm.NM_DEVICE_STATE_REASON_UNKNOWN","nm.NM_DEVICE_STATE_REASON_USER_REQUESTED","nm.NM_DEVICE_STATE_SECONDARIES","nm.NM_DEVICE_STATE_UNAVAILABLE","nm.NM_DEVICE_STATE_UNKNOWN","nm.NM_DEVICE_STATE_UNMANAGED","nm.NM_DEVICE_TEAM_CARRIER","nm.NM_DEVICE_TEAM_CONFIG","nm.NM_DEVICE_TEAM_HW_ADDRESS","nm.NM_DEVICE_TEAM_SLAVES","nm.NM_DEVICE_TUN_GROUP","nm.NM_DEVICE_TUN_HW_ADDRESS","nm.NM_DEVICE_TUN_MODE","nm.NM_DEVICE_TUN_MULTI_QUEUE","nm.NM_DEVICE_TUN_NO_PI","nm.NM_DEVICE_TUN_OWNER","nm.NM_DEVICE_TUN_VNET_HDR","nm.NM_DEVICE_TYPE_ADSL","nm.NM_DEVICE_TYPE_BOND","nm.NM_DEVICE_TYPE_BRIDGE","nm.NM_DEVICE_TYPE_BT","nm.NM_DEVICE_TYPE_DUMMY","nm.NM_DEVICE_TYPE_ETHERNET","nm.NM_DEVICE_TYPE_GENERIC","nm.NM_DEVICE_TYPE_INFINIBAND","nm.NM_DEVICE_TYPE_IP_TUNNEL","nm.NM_DEVICE_TYPE_MACSEC","nm.NM_DEVICE_TYPE_MACVLAN","nm.NM_DEVICE_TYPE_MODEM","nm.NM_DEVICE_TYPE_OLPC_MESH","nm.NM_DEVICE_TYPE_OVS_BRIDGE","nm.NM_DEVICE_TYPE_OVS_INTERFACE","nm.NM_DEVICE_TYPE_OVS_PORT","nm.NM_DEVICE_TYPE_PPP","nm.NM_DEVICE_TYPE_TEAM","nm.NM_DEVICE_TYPE_TUN","nm.NM_DEVICE_TYPE_UNKNOWN","nm.NM_DEVICE_TYPE_UNUSED1","nm.NM_DEVICE_TYPE_UNUSED2","nm.NM_DEVICE_TYPE_VETH","nm.NM_DEVICE_TYPE_VLAN","nm.NM_DEVICE_TYPE_VXLAN","nm.NM_DEVICE_TYPE_WIFI","nm.NM_DEVICE_TYPE_WIMAX","nm.NM_DEVICE_UDI","nm.NM_DEVICE_VENDOR","nm.NM_DEVICE_VLAN_CARRIER","nm.NM_DEVICE_VLAN_HW_ADDRESS","nm.NM_DEVICE_VLAN_PARENT","nm.NM_DEVICE_VLAN_VLAN_ID","nm.NM_DEVICE_VXLAN_AGEING","nm.NM_DEVICE_VXLAN_CARRIER","nm.NM_DEVICE_VXLAN_DST_PORT","nm.NM_DEVICE_VXLAN_GROUP","nm.NM_DEVICE_VXLAN_HW_ADDRESS","nm.NM_DEVICE_VXLAN_ID","nm.NM_DEVICE_VXLAN_L2MISS","nm.NM_DEVICE_VXLAN_L3MISS","nm.NM_DEVICE_VXLAN_LEARNING","nm.NM_DEVICE_VXLAN_LIMIT","nm.NM_DEVICE_VXLAN_LOCAL","nm.NM_DEVICE_VXLAN_PARENT","nm.NM_DEVICE_VXLAN_PROXY","nm.NM_DEVICE_VXLAN_RSC","nm.NM_DEVICE_VXLAN_SRC_PORT_MAX","nm.NM_DEVICE_VXLAN_SRC_PORT_MIN","nm.NM_DEVICE_VXLAN_TOS","nm.NM_DEVICE_VXLAN_TTL","nm.NM_DEVICE_WIFI_ACCESS_POINTS","nm.NM_DEVICE_WIFI_ACTIVE_ACCESS_POINT","nm.NM_DEVICE_WIFI_BITRATE","nm.NM_DEVICE_WIFI_CAPABILITIES","nm.NM_DEVICE_WIFI_HW_ADDRESS","nm.NM_DEVICE_WIFI_MODE","nm.NM_DEVICE_WIFI_PERMANENT_HW_ADDRESS","nm.NM_DEVICE_WIMAX_ACTIVE_NSP","nm.NM_DEVICE_WIMAX_BSID","nm.NM_DEVICE_WIMAX_CENTER_FREQUENCY","nm.NM_DEVICE_WIMAX_CINR","nm.NM_DEVICE_WIMAX_HW_ADDRESS","nm.NM_DEVICE_WIMAX_NSPS","nm.NM_DEVICE_WIMAX_RSSI","nm.NM_DEVICE_WIMAX_TX_POWER","nm.NM_DHCP_CONFIG_FAMILY","nm.NM_DHCP_CONFIG_OPTIONS","nm.NM_IP_CONFIG_ADDRESSES","nm.NM_IP_CONFIG_DOMAINS","nm.NM_IP_CONFIG_FAMILY","nm.NM_IP_CONFIG_GATEWAY","nm.NM_IP_CONFIG_NAMESERVERS","nm.NM_IP_CONFIG_ROUTES","nm.NM_IP_CONFIG_SEARCHES","nm.NM_IP_CONFIG_WINS_SERVERS","nm.NM_IP_ROUTE_ATTRIBUTE_CWND","nm.NM_IP_ROUTE_ATTRIBUTE_FROM","nm.NM_IP_ROUTE_ATTRIBUTE_INITCWND","nm.NM_IP_ROUTE_ATTRIBUTE_INITRWND","nm.NM_IP_ROUTE_ATTRIBUTE_LOCK_CWND","nm.NM_IP_ROUTE_ATTRIBUTE_LOCK_INITCWND","nm.NM_IP_ROUTE_ATTRIBUTE_LOCK_INITRWND","nm.NM_IP_ROUTE_ATTRIBUTE_LOCK_MTU","nm.NM_IP_ROUTE_ATTRIBUTE_LOCK_WINDOW","nm.NM_IP_ROUTE_ATTRIBUTE_MTU","nm.NM_IP_ROUTE_ATTRIBUTE_ONLINK","nm.NM_IP_ROUTE_ATTRIBUTE_SRC","nm.NM_IP_ROUTE_ATTRIBUTE_TABLE","nm.NM_IP_ROUTE_ATTRIBUTE_TOS","nm.NM_IP_ROUTE_ATTRIBUTE_WINDOW","nm.NM_IP_TUNNEL_MODE_GRE","nm.NM_IP_TUNNEL_MODE_IP6GRE","nm.NM_IP_TUNNEL_MODE_IP6IP6","nm.NM_IP_TUNNEL_MODE_IPIP","nm.NM_IP_TUNNEL_MODE_IPIP6","nm.NM_IP_TUNNEL_MODE_ISATAP","nm.NM_IP_TUNNEL_MODE_SIT","nm.NM_IP_TUNNEL_MODE_UNKNOWN","nm.NM_IP_TUNNEL_MODE_VTI","nm.NM_IP_TUNNEL_MODE_VTI6","nm.NM_LLDP_ATTR_CHASSIS_ID","nm.NM_LLDP_ATTR_CHASSIS_ID_TYPE","nm.NM_LLDP_ATTR_DESTINATION","nm.NM_LLDP_ATTR_IEEE_802_1_PPVID","nm.NM_LLDP_ATTR_IEEE_802_1_PPVID_FLAGS","nm.NM_LLDP_ATTR_IEEE_802_1_PVID","nm.NM_LLDP_ATTR_IEEE_802_1_VID","nm.NM_LLDP_ATTR_IEEE_802_1_VLAN_NAME","nm.NM_LLDP_ATTR_PORT_DESCRIPTION","nm.NM_LLDP_ATTR_PORT_ID","nm.NM_LLDP_ATTR_PORT_ID_TYPE","nm.NM_LLDP_ATTR_SYSTEM_CAPABILITIES","nm.NM_LLDP_ATTR_SYSTEM_DESCRIPTION","nm.NM_LLDP_ATTR_SYSTEM_NAME","nm.NM_LLDP_DEST_NEAREST_BRIDGE","nm.NM_LLDP_DEST_NEAREST_CUSTOMER_BRIDGE","nm.NM_LLDP_DEST_NEAREST_NON_TPMR_BRIDGE","nm.NM_MANAGER_ERROR_ALREADY_ASLEEP_OR_AWAKE","nm.NM_MANAGER_ERROR_ALREADY_ENABLED_OR_DISABLED","nm.NM_MANAGER_ERROR_CONNECTION_ALREADY_ACTIVE","nm.NM_MANAGER_ERROR_CONNECTION_NOT_ACTIVE","nm.NM_MANAGER_ERROR_CONNECTION_NOT_AVAILABLE","nm.NM_MANAGER_ERROR_DEPENDENCY_FAILED","nm.NM_MANAGER_ERROR_FAILED","nm.NM_MANAGER_ERROR_INVALID_ARGUMENTS","nm.NM_MANAGER_ERROR_MISSING_PLUGIN","nm.NM_MANAGER_ERROR_PERMISSION_DENIED","nm.NM_MANAGER_ERROR_UNKNOWN_CONNECTION","nm.NM_MANAGER_ERROR_UNKNOWN_DEVICE","nm.NM_MANAGER_ERROR_UNKNOWN_LOG_DOMAIN","nm.NM_MANAGER_ERROR_UNKNOWN_LOG_LEVEL","nm.NM_METERED_GUESS_NO","nm.NM_METERED_GUESS_YES","nm.NM_METERED_NO","nm.NM_METERED_UNKNOWN","nm.NM_METERED_YES","nm.NM_OBJECT_DBUS_CONNECTION","nm.NM_OBJECT_DBUS_OBJECT","nm.NM_OBJECT_DBUS_OBJECT_MANAGER","nm.NM_OBJECT_PATH","nm.NM_REMOTE_CONNECTION_DBUS_CONNECTION","nm.NM_REMOTE_CONNECTION_PATH","nm.NM_REMOTE_CONNECTION_UNSAVED","nm.NM_REMOTE_CONNECTION_VISIBLE","nm.NM_ROLLBACK_RESULT_ERR_DEVICE_UNMANAGED","nm.NM_ROLLBACK_RESULT_ERR_FAILED","nm.NM_ROLLBACK_RESULT_ERR_NO_DEVICE","nm.NM_ROLLBACK_RESULT_OK","nm.NM_SECRET_AGENT_CAPABILITY_LAST","nm.NM_SECRET_AGENT_CAPABILITY_NONE","nm.NM_SECRET_AGENT_CAPABILITY_VPN_HINTS","nm.NM_SECRET_AGENT_ERROR_AGENT_CANCELED","nm.NM_SECRET_AGENT_ERROR_FAILED","nm.NM_SECRET_AGENT_ERROR_INVALID_CONNECTION","nm.NM_SECRET_AGENT_ERROR_NO_SECRETS","nm.NM_SECRET_AGENT_ERROR_PERMISSION_DENIED","nm.NM_SECRET_AGENT_ERROR_USER_CANCELED","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_ALLOW_INTERACTION","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_NONE","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_NO_ERRORS","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_ONLY_SYSTEM","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_REQUEST_NEW","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_USER_REQUESTED","nm.NM_SECRET_AGENT_GET_SECRETS_FLAG_WPS_PBC_ACTIVE","nm.NM_SECRET_AGENT_OLD_AUTO_REGISTER","nm.NM_SECRET_AGENT_OLD_CAPABILITIES","nm.NM_SECRET_AGENT_OLD_IDENTIFIER","nm.NM_SECRET_AGENT_OLD_REGISTERED","nm.NM_SETTINGS_ERROR_FAILED","nm.NM_SETTINGS_ERROR_INVALID_ARGUMENTS","nm.NM_SETTINGS_ERROR_INVALID_CONNECTION","nm.NM_SETTINGS_ERROR_INVALID_HOSTNAME","nm.NM_SETTINGS_ERROR_NOT_SUPPORTED","nm.NM_SETTINGS_ERROR_PERMISSION_DENIED","nm.NM_SETTINGS_ERROR_READ_ONLY_CONNECTION","nm.NM_SETTINGS_ERROR_UUID_EXISTS","nm.NM_SETTINGS_UPDATE2_FLAG_BLOCK_AUTOCONNECT","nm.NM_SETTINGS_UPDATE2_FLAG_IN_MEMORY","nm.NM_SETTINGS_UPDATE2_FLAG_IN_MEMORY_DETACHED","nm.NM_SETTINGS_UPDATE2_FLAG_IN_MEMORY_ONLY","nm.NM_SETTINGS_UPDATE2_FLAG_NONE","nm.NM_SETTINGS_UPDATE2_FLAG_TO_DISK","nm.NM_SETTINGS_UPDATE2_FLAG_VOLATILE","nm.NM_SETTING_802_1X_ALTSUBJECT_MATCHES","nm.NM_SETTING_802_1X_ANONYMOUS_IDENTITY","nm.NM_SETTING_802_1X_AUTH_FLAGS_ALL","nm.NM_SETTING_802_1X_AUTH_FLAGS_NONE","nm.NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_0_DISABLE","nm.NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_1_DISABLE","nm.NM_SETTING_802_1X_AUTH_FLAGS_TLS_1_2_DISABLE","nm.NM_SETTING_802_1X_AUTH_TIMEOUT","nm.NM_SETTING_802_1X_CA_CERT","nm.NM_SETTING_802_1X_CA_CERT_PASSWORD","nm.NM_SETTING_802_1X_CA_CERT_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_CA_PATH","nm.NM_SETTING_802_1X_CERT_SCHEME_PREFIX_PATH","nm.NM_SETTING_802_1X_CERT_SCHEME_PREFIX_PKCS11","nm.NM_SETTING_802_1X_CK_FORMAT_PKCS12","nm.NM_SETTING_802_1X_CK_FORMAT_RAW_KEY","nm.NM_SETTING_802_1X_CK_FORMAT_UNKNOWN","nm.NM_SETTING_802_1X_CK_FORMAT_X509","nm.NM_SETTING_802_1X_CK_SCHEME_BLOB","nm.NM_SETTING_802_1X_CK_SCHEME_PATH","nm.NM_SETTING_802_1X_CK_SCHEME_PKCS11","nm.NM_SETTING_802_1X_CK_SCHEME_UNKNOWN","nm.NM_SETTING_802_1X_CLIENT_CERT","nm.NM_SETTING_802_1X_CLIENT_CERT_PASSWORD","nm.NM_SETTING_802_1X_CLIENT_CERT_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_DOMAIN_SUFFIX_MATCH","nm.NM_SETTING_802_1X_EAP","nm.NM_SETTING_802_1X_IDENTITY","nm.NM_SETTING_802_1X_PAC_FILE","nm.NM_SETTING_802_1X_PASSWORD","nm.NM_SETTING_802_1X_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_PASSWORD_RAW","nm.NM_SETTING_802_1X_PASSWORD_RAW_FLAGS","nm.NM_SETTING_802_1X_PHASE1_AUTH_FLAGS","nm.NM_SETTING_802_1X_PHASE1_FAST_PROVISIONING","nm.NM_SETTING_802_1X_PHASE1_PEAPLABEL","nm.NM_SETTING_802_1X_PHASE1_PEAPVER","nm.NM_SETTING_802_1X_PHASE2_ALTSUBJECT_MATCHES","nm.NM_SETTING_802_1X_PHASE2_AUTH","nm.NM_SETTING_802_1X_PHASE2_AUTHEAP","nm.NM_SETTING_802_1X_PHASE2_CA_CERT","nm.NM_SETTING_802_1X_PHASE2_CA_CERT_PASSWORD","nm.NM_SETTING_802_1X_PHASE2_CA_CERT_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_PHASE2_CA_PATH","nm.NM_SETTING_802_1X_PHASE2_CLIENT_CERT","nm.NM_SETTING_802_1X_PHASE2_CLIENT_CERT_PASSWORD","nm.NM_SETTING_802_1X_PHASE2_CLIENT_CERT_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_PHASE2_DOMAIN_SUFFIX_MATCH","nm.NM_SETTING_802_1X_PHASE2_PRIVATE_KEY","nm.NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD","nm.NM_SETTING_802_1X_PHASE2_PRIVATE_KEY_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_PHASE2_SUBJECT_MATCH","nm.NM_SETTING_802_1X_PIN","nm.NM_SETTING_802_1X_PIN_FLAGS","nm.NM_SETTING_802_1X_PRIVATE_KEY","nm.NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD","nm.NM_SETTING_802_1X_PRIVATE_KEY_PASSWORD_FLAGS","nm.NM_SETTING_802_1X_SETTING_NAME","nm.NM_SETTING_802_1X_SUBJECT_MATCH","nm.NM_SETTING_802_1X_SYSTEM_CA_CERTS","nm.NM_SETTING_ADSL_ENCAPSULATION","nm.NM_SETTING_ADSL_ENCAPSULATION_LLC","nm.NM_SETTING_ADSL_ENCAPSULATION_VCMUX","nm.NM_SETTING_ADSL_PASSWORD","nm.NM_SETTING_ADSL_PASSWORD_FLAGS","nm.NM_SETTING_ADSL_PROTOCOL","nm.NM_SETTING_ADSL_PROTOCOL_IPOATM","nm.NM_SETTING_ADSL_PROTOCOL_PPPOA","nm.NM_SETTING_ADSL_PROTOCOL_PPPOE","nm.NM_SETTING_ADSL_SETTING_NAME","nm.NM_SETTING_ADSL_USERNAME","nm.NM_SETTING_ADSL_VCI","nm.NM_SETTING_ADSL_VPI","nm.NM_SETTING_ALIAS_VPN_L2TP_IPSEC_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_L2TP_PPP_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_L2TP_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENCONNECT_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENVPN_ADVANCED_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENVPN_PROXIES_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENVPN_SECURITY_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENVPN_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_OPENVPN_TLSAUTH_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_PPTP_PPP_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_PPTP_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_STRONGSWAN_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_VPNC_ADVANCED_SETTING_NAME","nm.NM_SETTING_ALIAS_VPN_VPNC_SETTING_NAME","nm.NM_SETTING_BLUETOOTH_BDADDR","nm.NM_SETTING_BLUETOOTH_SETTING_NAME","nm.NM_SETTING_BLUETOOTH_TYPE","nm.NM_SETTING_BLUETOOTH_TYPE_DUN","nm.NM_SETTING_BLUETOOTH_TYPE_NAP","nm.NM_SETTING_BLUETOOTH_TYPE_PANU","nm.NM_SETTING_BOND_OPTIONS","nm.NM_SETTING_BOND_OPTION_ACTIVE_SLAVE","nm.NM_SETTING_BOND_OPTION_AD_ACTOR_SYSTEM","nm.NM_SETTING_BOND_OPTION_AD_ACTOR_SYS_PRIO","nm.NM_SETTING_BOND_OPTION_AD_SELECT","nm.NM_SETTING_BOND_OPTION_AD_USER_PORT_KEY","nm.NM_SETTING_BOND_OPTION_ALL_SLAVES_ACTIVE","nm.NM_SETTING_BOND_OPTION_ARP_ALL_TARGETS","nm.NM_SETTING_BOND_OPTION_ARP_INTERVAL","nm.NM_SETTING_BOND_OPTION_ARP_IP_TARGET","nm.NM_SETTING_BOND_OPTION_ARP_VALIDATE","nm.NM_SETTING_BOND_OPTION_DOWNDELAY","nm.NM_SETTING_BOND_OPTION_FAIL_OVER_MAC","nm.NM_SETTING_BOND_OPTION_LACP_RATE","nm.NM_SETTING_BOND_OPTION_LP_INTERVAL","nm.NM_SETTING_BOND_OPTION_MIIMON","nm.NM_SETTING_BOND_OPTION_MIN_LINKS","nm.NM_SETTING_BOND_OPTION_MODE","nm.NM_SETTING_BOND_OPTION_NUM_GRAT_ARP","nm.NM_SETTING_BOND_OPTION_NUM_UNSOL_NA","nm.NM_SETTING_BOND_OPTION_PACKETS_PER_SLAVE","nm.NM_SETTING_BOND_OPTION_PRIMARY","nm.NM_SETTING_BOND_OPTION_PRIMARY_RESELECT","nm.NM_SETTING_BOND_OPTION_RESEND_IGMP","nm.NM_SETTING_BOND_OPTION_TLB_DYNAMIC_LB","nm.NM_SETTING_BOND_OPTION_UPDELAY","nm.NM_SETTING_BOND_OPTION_USE_CARRIER","nm.NM_SETTING_BOND_OPTION_XMIT_HASH_POLICY","nm.NM_SETTING_BOND_SETTING_NAME","nm.NM_SETTING_BRIDGE_AGEING_TIME","nm.NM_SETTING_BRIDGE_FORWARD_DELAY","nm.NM_SETTING_BRIDGE_GROUP_FORWARD_MASK","nm.NM_SETTING_BRIDGE_HELLO_TIME","nm.NM_SETTING_BRIDGE_MAC_ADDRESS","nm.NM_SETTING_BRIDGE_MAX_AGE","nm.NM_SETTING_BRIDGE_MULTICAST_SNOOPING","nm.NM_SETTING_BRIDGE_PORT_HAIRPIN_MODE","nm.NM_SETTING_BRIDGE_PORT_PATH_COST","nm.NM_SETTING_BRIDGE_PORT_PRIORITY","nm.NM_SETTING_BRIDGE_PORT_SETTING_NAME","nm.NM_SETTING_BRIDGE_PRIORITY","nm.NM_SETTING_BRIDGE_SETTING_NAME","nm.NM_SETTING_BRIDGE_STP","nm.NM_SETTING_CDMA_MTU","nm.NM_SETTING_CDMA_NUMBER","nm.NM_SETTING_CDMA_PASSWORD","nm.NM_SETTING_CDMA_PASSWORD_FLAGS","nm.NM_SETTING_CDMA_SETTING_NAME","nm.NM_SETTING_CDMA_USERNAME","nm.NM_SETTING_COMPARE_FLAG_DIFF_RESULT_NO_DEFAULT","nm.NM_SETTING_COMPARE_FLAG_DIFF_RESULT_WITH_DEFAULT","nm.NM_SETTING_COMPARE_FLAG_EXACT","nm.NM_SETTING_COMPARE_FLAG_FUZZY","nm.NM_SETTING_COMPARE_FLAG_IGNORE_AGENT_OWNED_SECRETS","nm.NM_SETTING_COMPARE_FLAG_IGNORE_ID","nm.NM_SETTING_COMPARE_FLAG_IGNORE_NOT_SAVED_SECRETS","nm.NM_SETTING_COMPARE_FLAG_IGNORE_SECRETS","nm.NM_SETTING_COMPARE_FLAG_IGNORE_TIMESTAMP","nm.NM_SETTING_CONNECTION_AUTH_RETRIES","nm.NM_SETTING_CONNECTION_AUTOCONNECT","nm.NM_SETTING_CONNECTION_AUTOCONNECT_PRIORITY","nm.NM_SETTING_CONNECTION_AUTOCONNECT_RETRIES","nm.NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES","nm.NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_DEFAULT","nm.NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_NO","nm.NM_SETTING_CONNECTION_AUTOCONNECT_SLAVES_YES","nm.NM_SETTING_CONNECTION_GATEWAY_PING_TIMEOUT","nm.NM_SETTING_CONNECTION_ID","nm.NM_SETTING_CONNECTION_INTERFACE_NAME","nm.NM_SETTING_CONNECTION_LLDP","nm.NM_SETTING_CONNECTION_LLDP_DEFAULT","nm.NM_SETTING_CONNECTION_LLDP_DISABLE","nm.NM_SETTING_CONNECTION_LLDP_ENABLE_RX","nm.NM_SETTING_CONNECTION_MASTER","nm.NM_SETTING_CONNECTION_METERED","nm.NM_SETTING_CONNECTION_PERMISSIONS","nm.NM_SETTING_CONNECTION_READ_ONLY","nm.NM_SETTING_CONNECTION_SECONDARIES","nm.NM_SETTING_CONNECTION_SETTING_NAME","nm.NM_SETTING_CONNECTION_SLAVE_TYPE","nm.NM_SETTING_CONNECTION_STABLE_ID","nm.NM_SETTING_CONNECTION_TIMESTAMP","nm.NM_SETTING_CONNECTION_TYPE","nm.NM_SETTING_CONNECTION_UUID","nm.NM_SETTING_CONNECTION_ZONE","nm.NM_SETTING_DCB_APP_FCOE_FLAGS","nm.NM_SETTING_DCB_APP_FCOE_MODE","nm.NM_SETTING_DCB_APP_FCOE_PRIORITY","nm.NM_SETTING_DCB_APP_FIP_FLAGS","nm.NM_SETTING_DCB_APP_FIP_PRIORITY","nm.NM_SETTING_DCB_APP_ISCSI_FLAGS","nm.NM_SETTING_DCB_APP_ISCSI_PRIORITY","nm.NM_SETTING_DCB_FCOE_MODE_FABRIC","nm.NM_SETTING_DCB_FCOE_MODE_VN2VN","nm.NM_SETTING_DCB_FLAG_ADVERTISE","nm.NM_SETTING_DCB_FLAG_ENABLE","nm.NM_SETTING_DCB_FLAG_NONE","nm.NM_SETTING_DCB_FLAG_WILLING","nm.NM_SETTING_DCB_PRIORITY_BANDWIDTH","nm.NM_SETTING_DCB_PRIORITY_FLOW_CONTROL","nm.NM_SETTING_DCB_PRIORITY_FLOW_CONTROL_FLAGS","nm.NM_SETTING_DCB_PRIORITY_GROUP_BANDWIDTH","nm.NM_SETTING_DCB_PRIORITY_GROUP_FLAGS","nm.NM_SETTING_DCB_PRIORITY_GROUP_ID","nm.NM_SETTING_DCB_PRIORITY_STRICT_BANDWIDTH","nm.NM_SETTING_DCB_PRIORITY_TRAFFIC_CLASS","nm.NM_SETTING_DCB_SETTING_NAME","nm.NM_SETTING_DIFF_RESULT_IN_A","nm.NM_SETTING_DIFF_RESULT_IN_A_DEFAULT","nm.NM_SETTING_DIFF_RESULT_IN_B","nm.NM_SETTING_DIFF_RESULT_IN_B_DEFAULT","nm.NM_SETTING_DIFF_RESULT_UNKNOWN","nm.NM_SETTING_DNS_OPTION_ATTEMPTS","nm.NM_SETTING_DNS_OPTION_DEBUG","nm.NM_SETTING_DNS_OPTION_EDNS0","nm.NM_SETTING_DNS_OPTION_INET6","nm.NM_SETTING_DNS_OPTION_IP6_BYTESTRING","nm.NM_SETTING_DNS_OPTION_IP6_DOTINT","nm.NM_SETTING_DNS_OPTION_NDOTS","nm.NM_SETTING_DNS_OPTION_NO_CHECK_NAMES","nm.NM_SETTING_DNS_OPTION_NO_IP6_DOTINT","nm.NM_SETTING_DNS_OPTION_NO_TLD_QUERY","nm.NM_SETTING_DNS_OPTION_ROTATE","nm.NM_SETTING_DNS_OPTION_SINGLE_REQUEST","nm.NM_SETTING_DNS_OPTION_SINGLE_REQUEST_REOPEN","nm.NM_SETTING_DNS_OPTION_TIMEOUT","nm.NM_SETTING_DNS_OPTION_USE_VC","nm.NM_SETTING_DUMMY_SETTING_NAME","nm.NM_SETTING_GENERIC_SETTING_NAME","nm.NM_SETTING_GSM_APN","nm.NM_SETTING_GSM_DEVICE_ID","nm.NM_SETTING_GSM_HOME_ONLY","nm.NM_SETTING_GSM_MTU","nm.NM_SETTING_GSM_NETWORK_ID","nm.NM_SETTING_GSM_NUMBER","nm.NM_SETTING_GSM_PASSWORD","nm.NM_SETTING_GSM_PASSWORD_FLAGS","nm.NM_SETTING_GSM_PIN","nm.NM_SETTING_GSM_PIN_FLAGS","nm.NM_SETTING_GSM_SETTING_NAME","nm.NM_SETTING_GSM_SIM_ID","nm.NM_SETTING_GSM_SIM_OPERATOR_ID","nm.NM_SETTING_GSM_USERNAME","nm.NM_SETTING_INFINIBAND_MAC_ADDRESS","nm.NM_SETTING_INFINIBAND_MTU","nm.NM_SETTING_INFINIBAND_PARENT","nm.NM_SETTING_INFINIBAND_P_KEY","nm.NM_SETTING_INFINIBAND_SETTING_NAME","nm.NM_SETTING_INFINIBAND_TRANSPORT_MODE","nm.NM_SETTING_IP4_CONFIG_ADDRESSES","nm.NM_SETTING_IP4_CONFIG_DAD_TIMEOUT","nm.NM_SETTING_IP4_CONFIG_DHCP_CLIENT_ID","nm.NM_SETTING_IP4_CONFIG_DHCP_FQDN","nm.NM_SETTING_IP4_CONFIG_DHCP_HOSTNAME","nm.NM_SETTING_IP4_CONFIG_DHCP_SEND_HOSTNAME","nm.NM_SETTING_IP4_CONFIG_DHCP_TIMEOUT","nm.NM_SETTING_IP4_CONFIG_DNS","nm.NM_SETTING_IP4_CONFIG_DNS_OPTIONS","nm.NM_SETTING_IP4_CONFIG_DNS_PRIORITY","nm.NM_SETTING_IP4_CONFIG_DNS_SEARCH","nm.NM_SETTING_IP4_CONFIG_GATEWAY","nm.NM_SETTING_IP4_CONFIG_IGNORE_AUTO_DNS","nm.NM_SETTING_IP4_CONFIG_IGNORE_AUTO_ROUTES","nm.NM_SETTING_IP4_CONFIG_MAY_FAIL","nm.NM_SETTING_IP4_CONFIG_METHOD","nm.NM_SETTING_IP4_CONFIG_METHOD_AUTO","nm.NM_SETTING_IP4_CONFIG_METHOD_DISABLED","nm.NM_SETTING_IP4_CONFIG_METHOD_LINK_LOCAL","nm.NM_SETTING_IP4_CONFIG_METHOD_MANUAL","nm.NM_SETTING_IP4_CONFIG_METHOD_SHARED","nm.NM_SETTING_IP4_CONFIG_NEVER_DEFAULT","nm.NM_SETTING_IP4_CONFIG_ROUTES","nm.NM_SETTING_IP4_CONFIG_ROUTE_METRIC","nm.NM_SETTING_IP4_CONFIG_ROUTE_TABLE","nm.NM_SETTING_IP4_CONFIG_SETTING_NAME","nm.NM_SETTING_IP6_CONFIG_ADDRESSES","nm.NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE","nm.NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_EUI64","nm.NM_SETTING_IP6_CONFIG_ADDR_GEN_MODE_STABLE_PRIVACY","nm.NM_SETTING_IP6_CONFIG_DAD_TIMEOUT","nm.NM_SETTING_IP6_CONFIG_DHCP_HOSTNAME","nm.NM_SETTING_IP6_CONFIG_DHCP_SEND_HOSTNAME","nm.NM_SETTING_IP6_CONFIG_DHCP_TIMEOUT","nm.NM_SETTING_IP6_CONFIG_DNS","nm.NM_SETTING_IP6_CONFIG_DNS_OPTIONS","nm.NM_SETTING_IP6_CONFIG_DNS_PRIORITY","nm.NM_SETTING_IP6_CONFIG_DNS_SEARCH","nm.NM_SETTING_IP6_CONFIG_GATEWAY","nm.NM_SETTING_IP6_CONFIG_IGNORE_AUTO_DNS","nm.NM_SETTING_IP6_CONFIG_IGNORE_AUTO_ROUTES","nm.NM_SETTING_IP6_CONFIG_IP6_PRIVACY","nm.NM_SETTING_IP6_CONFIG_MAY_FAIL","nm.NM_SETTING_IP6_CONFIG_METHOD","nm.NM_SETTING_IP6_CONFIG_METHOD_AUTO","nm.NM_SETTING_IP6_CONFIG_METHOD_DHCP","nm.NM_SETTING_IP6_CONFIG_METHOD_IGNORE","nm.NM_SETTING_IP6_CONFIG_METHOD_LINK_LOCAL","nm.NM_SETTING_IP6_CONFIG_METHOD_MANUAL","nm.NM_SETTING_IP6_CONFIG_METHOD_SHARED","nm.NM_SETTING_IP6_CONFIG_NEVER_DEFAULT","nm.NM_SETTING_IP6_CONFIG_PRIVACY_DISABLED","nm.NM_SETTING_IP6_CONFIG_PRIVACY_PREFER_PUBLIC_ADDR","nm.NM_SETTING_IP6_CONFIG_PRIVACY_PREFER_TEMP_ADDR","nm.NM_SETTING_IP6_CONFIG_PRIVACY_UNKNOWN","nm.NM_SETTING_IP6_CONFIG_ROUTES","nm.NM_SETTING_IP6_CONFIG_ROUTE_METRIC","nm.NM_SETTING_IP6_CONFIG_ROUTE_TABLE","nm.NM_SETTING_IP6_CONFIG_SETTING_NAME","nm.NM_SETTING_IP6_CONFIG_TOKEN","nm.NM_SETTING_IP_CONFIG_ADDRESSES","nm.NM_SETTING_IP_CONFIG_DAD_TIMEOUT","nm.NM_SETTING_IP_CONFIG_DHCP_HOSTNAME","nm.NM_SETTING_IP_CONFIG_DHCP_SEND_HOSTNAME","nm.NM_SETTING_IP_CONFIG_DHCP_TIMEOUT","nm.NM_SETTING_IP_CONFIG_DNS","nm.NM_SETTING_IP_CONFIG_DNS_OPTIONS","nm.NM_SETTING_IP_CONFIG_DNS_PRIORITY","nm.NM_SETTING_IP_CONFIG_DNS_SEARCH","nm.NM_SETTING_IP_CONFIG_GATEWAY","nm.NM_SETTING_IP_CONFIG_IGNORE_AUTO_DNS","nm.NM_SETTING_IP_CONFIG_IGNORE_AUTO_ROUTES","nm.NM_SETTING_IP_CONFIG_MAY_FAIL","nm.NM_SETTING_IP_CONFIG_METHOD","nm.NM_SETTING_IP_CONFIG_NEVER_DEFAULT","nm.NM_SETTING_IP_CONFIG_ROUTES","nm.NM_SETTING_IP_CONFIG_ROUTE_METRIC","nm.NM_SETTING_IP_CONFIG_ROUTE_TABLE","nm.NM_SETTING_IP_TUNNEL_ENCAPSULATION_LIMIT","nm.NM_SETTING_IP_TUNNEL_FLOW_LABEL","nm.NM_SETTING_IP_TUNNEL_INPUT_KEY","nm.NM_SETTING_IP_TUNNEL_LOCAL","nm.NM_SETTING_IP_TUNNEL_MODE","nm.NM_SETTING_IP_TUNNEL_MTU","nm.NM_SETTING_IP_TUNNEL_OUTPUT_KEY","nm.NM_SETTING_IP_TUNNEL_PARENT","nm.NM_SETTING_IP_TUNNEL_PATH_MTU_DISCOVERY","nm.NM_SETTING_IP_TUNNEL_REMOTE","nm.NM_SETTING_IP_TUNNEL_SETTING_NAME","nm.NM_SETTING_IP_TUNNEL_TOS","nm.NM_SETTING_IP_TUNNEL_TTL","nm.NM_SETTING_MACSEC_ENCRYPT","nm.NM_SETTING_MACSEC_MKA_CAK","nm.NM_SETTING_MACSEC_MKA_CAK_FLAGS","nm.NM_SETTING_MACSEC_MKA_CKN","nm.NM_SETTING_MACSEC_MODE","nm.NM_SETTING_MACSEC_MODE_EAP","nm.NM_SETTING_MACSEC_MODE_PSK","nm.NM_SETTING_MACSEC_PARENT","nm.NM_SETTING_MACSEC_PORT","nm.NM_SETTING_MACSEC_SETTING_NAME","nm.NM_SETTING_MACSEC_VALIDATION","nm.NM_SETTING_MACSEC_VALIDATION_CHECK","nm.NM_SETTING_MACSEC_VALIDATION_DISABLE","nm.NM_SETTING_MACSEC_VALIDATION_STRICT","nm.NM_SETTING_MACVLAN_MODE","nm.NM_SETTING_MACVLAN_MODE_BRIDGE","nm.NM_SETTING_MACVLAN_MODE_PASSTHRU","nm.NM_SETTING_MACVLAN_MODE_PRIVATE","nm.NM_SETTING_MACVLAN_MODE_SOURCE","nm.NM_SETTING_MACVLAN_MODE_UNKNOWN","nm.NM_SETTING_MACVLAN_MODE_VEPA","nm.NM_SETTING_MACVLAN_PARENT","nm.NM_SETTING_MACVLAN_PROMISCUOUS","nm.NM_SETTING_MACVLAN_SETTING_NAME","nm.NM_SETTING_MACVLAN_TAP","nm.NM_SETTING_MAC_RANDOMIZATION_ALWAYS","nm.NM_SETTING_MAC_RANDOMIZATION_DEFAULT","nm.NM_SETTING_MAC_RANDOMIZATION_NEVER","nm.NM_SETTING_NAME","nm.NM_SETTING_OLPC_MESH_CHANNEL","nm.NM_SETTING_OLPC_MESH_DHCP_ANYCAST_ADDRESS","nm.NM_SETTING_OLPC_MESH_SETTING_NAME","nm.NM_SETTING_OLPC_MESH_SSID","nm.NM_SETTING_OVS_BRIDGE_FAIL_MODE","nm.NM_SETTING_OVS_BRIDGE_MCAST_SNOOPING_ENABLE","nm.NM_SETTING_OVS_BRIDGE_RSTP_ENABLE","nm.NM_SETTING_OVS_BRIDGE_SETTING_NAME","nm.NM_SETTING_OVS_BRIDGE_STP_ENABLE","nm.NM_SETTING_OVS_INTERFACE_SETTING_NAME","nm.NM_SETTING_OVS_INTERFACE_TYPE","nm.NM_SETTING_OVS_PATCH_PEER","nm.NM_SETTING_OVS_PATCH_SETTING_NAME","nm.NM_SETTING_OVS_PORT_BOND_DOWNDELAY","nm.NM_SETTING_OVS_PORT_BOND_MODE","nm.NM_SETTING_OVS_PORT_BOND_UPDELAY","nm.NM_SETTING_OVS_PORT_LACP","nm.NM_SETTING_OVS_PORT_SETTING_NAME","nm.NM_SETTING_OVS_PORT_TAG","nm.NM_SETTING_OVS_PORT_VLAN_MODE","nm.NM_SETTING_PPPOE_PARENT","nm.NM_SETTING_PPPOE_PASSWORD","nm.NM_SETTING_PPPOE_PASSWORD_FLAGS","nm.NM_SETTING_PPPOE_SERVICE","nm.NM_SETTING_PPPOE_SETTING_NAME","nm.NM_SETTING_PPPOE_USERNAME","nm.NM_SETTING_PPP_BAUD","nm.NM_SETTING_PPP_CRTSCTS","nm.NM_SETTING_PPP_LCP_ECHO_FAILURE","nm.NM_SETTING_PPP_LCP_ECHO_INTERVAL","nm.NM_SETTING_PPP_MPPE_STATEFUL","nm.NM_SETTING_PPP_MRU","nm.NM_SETTING_PPP_MTU","nm.NM_SETTING_PPP_NOAUTH","nm.NM_SETTING_PPP_NOBSDCOMP","nm.NM_SETTING_PPP_NODEFLATE","nm.NM_SETTING_PPP_NO_VJ_COMP","nm.NM_SETTING_PPP_REFUSE_CHAP","nm.NM_SETTING_PPP_REFUSE_EAP","nm.NM_SETTING_PPP_REFUSE_MSCHAP","nm.NM_SETTING_PPP_REFUSE_MSCHAPV2","nm.NM_SETTING_PPP_REFUSE_PAP","nm.NM_SETTING_PPP_REQUIRE_MPPE","nm.NM_SETTING_PPP_REQUIRE_MPPE_128","nm.NM_SETTING_PPP_SETTING_NAME","nm.NM_SETTING_PROXY_BROWSER_ONLY","nm.NM_SETTING_PROXY_METHOD","nm.NM_SETTING_PROXY_METHOD_AUTO","nm.NM_SETTING_PROXY_METHOD_NONE","nm.NM_SETTING_PROXY_PAC_SCRIPT","nm.NM_SETTING_PROXY_PAC_URL","nm.NM_SETTING_PROXY_SETTING_NAME","nm.NM_SETTING_SECRET_FLAG_AGENT_OWNED","nm.NM_SETTING_SECRET_FLAG_NONE","nm.NM_SETTING_SECRET_FLAG_NOT_REQUIRED","nm.NM_SETTING_SECRET_FLAG_NOT_SAVED","nm.NM_SETTING_SERIAL_BAUD","nm.NM_SETTING_SERIAL_BITS","nm.NM_SETTING_SERIAL_PARITY","nm.NM_SETTING_SERIAL_PARITY_EVEN","nm.NM_SETTING_SERIAL_PARITY_NONE","nm.NM_SETTING_SERIAL_PARITY_ODD","nm.NM_SETTING_SERIAL_SEND_DELAY","nm.NM_SETTING_SERIAL_SETTING_NAME","nm.NM_SETTING_SERIAL_STOPBITS","nm.NM_SETTING_TC_CONFIG_QDISCS","nm.NM_SETTING_TC_CONFIG_SETTING_NAME","nm.NM_SETTING_TC_CONFIG_TFILTERS","nm.NM_SETTING_TEAM_CONFIG","nm.NM_SETTING_TEAM_LINK_WATCHERS","nm.NM_SETTING_TEAM_MCAST_REJOIN_COUNT","nm.NM_SETTING_TEAM_MCAST_REJOIN_INTERVAL","nm.NM_SETTING_TEAM_NOTIFY_PEERS_COUNT","nm.NM_SETTING_TEAM_NOTIFY_PEERS_INTERVAL","nm.NM_SETTING_TEAM_PORT_CONFIG","nm.NM_SETTING_TEAM_PORT_LACP_KEY","nm.NM_SETTING_TEAM_PORT_LACP_PRIO","nm.NM_SETTING_TEAM_PORT_LINK_WATCHERS","nm.NM_SETTING_TEAM_PORT_PRIO","nm.NM_SETTING_TEAM_PORT_QUEUE_ID","nm.NM_SETTING_TEAM_PORT_SETTING_NAME","nm.NM_SETTING_TEAM_PORT_STICKY","nm.NM_SETTING_TEAM_RUNNER","nm.NM_SETTING_TEAM_RUNNER_ACTIVE","nm.NM_SETTING_TEAM_RUNNER_ACTIVEBACKUP","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY_BANDWIDTH","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY_COUNT","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY_LACP_PRIO","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY_LACP_PRIO_STABLE","nm.NM_SETTING_TEAM_RUNNER_AGG_SELECT_POLICY_PORT_CONFIG","nm.NM_SETTING_TEAM_RUNNER_BROADCAST","nm.NM_SETTING_TEAM_RUNNER_FAST_RATE","nm.NM_SETTING_TEAM_RUNNER_HWADDR_POLICY","nm.NM_SETTING_TEAM_RUNNER_HWADDR_POLICY_BY_ACTIVE","nm.NM_SETTING_TEAM_RUNNER_HWADDR_POLICY_ONLY_ACTIVE","nm.NM_SETTING_TEAM_RUNNER_HWADDR_POLICY_SAME_ALL","nm.NM_SETTING_TEAM_RUNNER_LACP","nm.NM_SETTING_TEAM_RUNNER_LOADBALANCE","nm.NM_SETTING_TEAM_RUNNER_MIN_PORTS","nm.NM_SETTING_TEAM_RUNNER_RANDOM","nm.NM_SETTING_TEAM_RUNNER_ROUNDROBIN","nm.NM_SETTING_TEAM_RUNNER_SYS_PRIO","nm.NM_SETTING_TEAM_RUNNER_TX_BALANCER","nm.NM_SETTING_TEAM_RUNNER_TX_BALANCER_INTERVAL","nm.NM_SETTING_TEAM_RUNNER_TX_HASH","nm.NM_SETTING_TEAM_SETTING_NAME","nm.NM_SETTING_TUN_GROUP","nm.NM_SETTING_TUN_MODE","nm.NM_SETTING_TUN_MODE_TAP","nm.NM_SETTING_TUN_MODE_TUN","nm.NM_SETTING_TUN_MODE_UNKNOWN","nm.NM_SETTING_TUN_MULTI_QUEUE","nm.NM_SETTING_TUN_OWNER","nm.NM_SETTING_TUN_PI","nm.NM_SETTING_TUN_SETTING_NAME","nm.NM_SETTING_TUN_VNET_HDR","nm.NM_SETTING_USER_DATA","nm.NM_SETTING_USER_SETTING_NAME","nm.NM_SETTING_VK_802_1X_CA_CERT","nm.NM_SETTING_VK_802_1X_CLIENT_CERT","nm.NM_SETTING_VK_802_1X_EAP","nm.NM_SETTING_VK_802_1X_ENABLE","nm.NM_SETTING_VK_802_1X_PAC_FILE","nm.NM_SETTING_VK_802_1X_PRIVATE_KEY","nm.NM_SETTING_VK_CONNECTION_AUTOCONNECT","nm.NM_SETTING_VK_CONNECTION_NO_PERMISSION","nm.NM_SETTING_VK_IP4_CONFIG_ADDRESSES_ADDRESS","nm.NM_SETTING_VK_IP4_CONFIG_ADDRESSES_GATEWAY","nm.NM_SETTING_VK_IP4_CONFIG_ADDRESSES_MASK","nm.NM_SETTING_VK_IP4_CONFIG_DNS","nm.NM_SETTING_VK_IP4_CONFIG_DNS2","nm.NM_SETTING_VK_IP6_CONFIG_ADDRESSES_ADDRESS","nm.NM_SETTING_VK_IP6_CONFIG_ADDRESSES_GATEWAY","nm.NM_SETTING_VK_IP6_CONFIG_ADDRESSES_PREFIX","nm.NM_SETTING_VK_IP6_CONFIG_DNS","nm.NM_SETTING_VK_IP6_CONFIG_DNS2","nm.NM_SETTING_VK_MOBILE_APN_READONLY","nm.NM_SETTING_VK_MOBILE_COUNTRY","nm.NM_SETTING_VK_MOBILE_PLAN","nm.NM_SETTING_VK_MOBILE_PROVIDER","nm.NM_SETTING_VK_MOBILE_SERVICE_TYPE","nm.NM_SETTING_VK_PPP_ENABLE_LCP_ECHO","nm.NM_SETTING_VK_VPN_L2TP_ENABLE_LCP_ECHO","nm.NM_SETTING_VK_VPN_L2TP_MPPE_SECURITY","nm.NM_SETTING_VK_VPN_L2TP_REQUIRE_MPPE","nm.NM_SETTING_VK_VPN_MISSING_PLUGIN","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_FRAGMENT_SIZE","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_PORT","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_RENEG_SECONDS","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_STATIC_KEY_DIRECTION","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_TA_DIR","nm.NM_SETTING_VK_VPN_OPENVPN_KEY_ENABLE_TUNNEL_MTU","nm.NM_SETTING_VK_VPN_PPTP_ENABLE_LCP_ECHO","nm.NM_SETTING_VK_VPN_PPTP_MPPE_SECURITY","nm.NM_SETTING_VK_VPN_PPTP_REQUIRE_MPPE","nm.NM_SETTING_VK_VPN_TYPE","nm.NM_SETTING_VK_VPN_VPNC_KEY_DISABLE_DPD","nm.NM_SETTING_VK_VPN_VPNC_KEY_ENCRYPTION_METHOD","nm.NM_SETTING_VK_VPN_VPNC_KEY_HYBRID_AUTHMODE","nm.NM_SETTING_VK_WIRED_ENABLE_MTU","nm.NM_SETTING_VK_WIRELESS_ENABLE_MTU","nm.NM_SETTING_VK_WIRELESS_SECURITY_KEY_MGMT","nm.NM_SETTING_VLAN_EGRESS_PRIORITY_MAP","nm.NM_SETTING_VLAN_FLAGS","nm.NM_SETTING_VLAN_ID","nm.NM_SETTING_VLAN_INGRESS_PRIORITY_MAP","nm.NM_SETTING_VLAN_PARENT","nm.NM_SETTING_VLAN_SETTING_NAME","nm.NM_SETTING_VPN_DATA","nm.NM_SETTING_VPN_L2TP_KEY_DOMAIN","nm.NM_SETTING_VPN_L2TP_KEY_GATEWAY","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_ENABLE","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_ESP","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_GATEWAY_ID","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_GROUP_NAME","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_IKE","nm.NM_SETTING_VPN_L2TP_KEY_IPSEC_PSK","nm.NM_SETTING_VPN_L2TP_KEY_LCP_ECHO_FAILURE","nm.NM_SETTING_VPN_L2TP_KEY_LCP_ECHO_INTERVAL","nm.NM_SETTING_VPN_L2TP_KEY_MPPE_STATEFUL","nm.NM_SETTING_VPN_L2TP_KEY_NOBSDCOMP","nm.NM_SETTING_VPN_L2TP_KEY_NODEFLATE","nm.NM_SETTING_VPN_L2TP_KEY_NO_ACCOMP","nm.NM_SETTING_VPN_L2TP_KEY_NO_PCOMP","nm.NM_SETTING_VPN_L2TP_KEY_NO_VJ_COMP","nm.NM_SETTING_VPN_L2TP_KEY_PASSWORD","nm.NM_SETTING_VPN_L2TP_KEY_PASSWORD_FLAGS","nm.NM_SETTING_VPN_L2TP_KEY_REFUSE_CHAP","nm.NM_SETTING_VPN_L2TP_KEY_REFUSE_EAP","nm.NM_SETTING_VPN_L2TP_KEY_REFUSE_MSCHAP","nm.NM_SETTING_VPN_L2TP_KEY_REFUSE_MSCHAPV2","nm.NM_SETTING_VPN_L2TP_KEY_REFUSE_PAP","nm.NM_SETTING_VPN_L2TP_KEY_REQUIRE_MPPE","nm.NM_SETTING_VPN_L2TP_KEY_REQUIRE_MPPE_128","nm.NM_SETTING_VPN_L2TP_KEY_REQUIRE_MPPE_40","nm.NM_SETTING_VPN_L2TP_KEY_USER","nm.NM_SETTING_VPN_OPENCONNECT_KEY_AUTHTYPE","nm.NM_SETTING_VPN_OPENCONNECT_KEY_CACERT","nm.NM_SETTING_VPN_OPENCONNECT_KEY_COOKIE","nm.NM_SETTING_VPN_OPENCONNECT_KEY_CSD_ENABLE","nm.NM_SETTING_VPN_OPENCONNECT_KEY_CSD_WRAPPER","nm.NM_SETTING_VPN_OPENCONNECT_KEY_GATEWAY","nm.NM_SETTING_VPN_OPENCONNECT_KEY_GWCERT","nm.NM_SETTING_VPN_OPENCONNECT_KEY_MTU","nm.NM_SETTING_VPN_OPENCONNECT_KEY_PEM_PASSPHRASE_FSID","nm.NM_SETTING_VPN_OPENCONNECT_KEY_PRIVKEY","nm.NM_SETTING_VPN_OPENCONNECT_KEY_PROXY","nm.NM_SETTING_VPN_OPENCONNECT_KEY_STOKEN_SOURCE","nm.NM_SETTING_VPN_OPENCONNECT_KEY_STOKEN_STRING","nm.NM_SETTING_VPN_OPENCONNECT_KEY_USERCERT","nm.NM_SETTING_VPN_OPENVPN_KEY_AUTH","nm.NM_SETTING_VPN_OPENVPN_KEY_CA","nm.NM_SETTING_VPN_OPENVPN_KEY_CERT","nm.NM_SETTING_VPN_OPENVPN_KEY_CERTPASS","nm.NM_SETTING_VPN_OPENVPN_KEY_CERTPASS_FLAGS","nm.NM_SETTING_VPN_OPENVPN_KEY_CIPHER","nm.NM_SETTING_VPN_OPENVPN_KEY_COMP_LZO","nm.NM_SETTING_VPN_OPENVPN_KEY_CONNECTION_TYPE","nm.NM_SETTING_VPN_OPENVPN_KEY_FRAGMENT_SIZE","nm.NM_SETTING_VPN_OPENVPN_KEY_HTTP_PROXY_PASSWORD","nm.NM_SETTING_VPN_OPENVPN_KEY_HTTP_PROXY_PASSWORD_FLAGS","nm.NM_SETTING_VPN_OPENVPN_KEY_HTTP_PROXY_USERNAME","nm.NM_SETTING_VPN_OPENVPN_KEY_KEY","nm.NM_SETTING_VPN_OPENVPN_KEY_LOCAL_IP","nm.NM_SETTING_VPN_OPENVPN_KEY_MSSFIX","nm.NM_SETTING_VPN_OPENVPN_KEY_PASSWORD","nm.NM_SETTING_VPN_OPENVPN_KEY_PASSWORD_FLAGS","nm.NM_SETTING_VPN_OPENVPN_KEY_PORT","nm.NM_SETTING_VPN_OPENVPN_KEY_PROTO_TCP","nm.NM_SETTING_VPN_OPENVPN_KEY_PROXY_PORT","nm.NM_SETTING_VPN_OPENVPN_KEY_PROXY_RETRY","nm.NM_SETTING_VPN_OPENVPN_KEY_PROXY_SERVER","nm.NM_SETTING_VPN_OPENVPN_KEY_PROXY_TYPE","nm.NM_SETTING_VPN_OPENVPN_KEY_REMOTE","nm.NM_SETTING_VPN_OPENVPN_KEY_REMOTE_CERT_TLS","nm.NM_SETTING_VPN_OPENVPN_KEY_REMOTE_IP","nm.NM_SETTING_VPN_OPENVPN_KEY_REMOTE_RANDOM","nm.NM_SETTING_VPN_OPENVPN_KEY_RENEG_SECONDS","nm.NM_SETTING_VPN_OPENVPN_KEY_STATIC_KEY","nm.NM_SETTING_VPN_OPENVPN_KEY_STATIC_KEY_DIRECTION","nm.NM_SETTING_VPN_OPENVPN_KEY_TA","nm.NM_SETTING_VPN_OPENVPN_KEY_TAP_DEV","nm.NM_SETTING_VPN_OPENVPN_KEY_TA_DIR","nm.NM_SETTING_VPN_OPENVPN_KEY_TLS_REMOTE","nm.NM_SETTING_VPN_OPENVPN_KEY_TUNNEL_MTU","nm.NM_SETTING_VPN_OPENVPN_KEY_USERNAME","nm.NM_SETTING_VPN_PERSISTENT","nm.NM_SETTING_VPN_PPTP_KEY_DOMAIN","nm.NM_SETTING_VPN_PPTP_KEY_GATEWAY","nm.NM_SETTING_VPN_PPTP_KEY_LCP_ECHO_FAILURE","nm.NM_SETTING_VPN_PPTP_KEY_LCP_ECHO_INTERVAL","nm.NM_SETTING_VPN_PPTP_KEY_MPPE_STATEFUL","nm.NM_SETTING_VPN_PPTP_KEY_NOBSDCOMP","nm.NM_SETTING_VPN_PPTP_KEY_NODEFLATE","nm.NM_SETTING_VPN_PPTP_KEY_NO_VJ_COMP","nm.NM_SETTING_VPN_PPTP_KEY_PASSWORD","nm.NM_SETTING_VPN_PPTP_KEY_PASSWORD_FLAGS","nm.NM_SETTING_VPN_PPTP_KEY_REFUSE_CHAP","nm.NM_SETTING_VPN_PPTP_KEY_REFUSE_EAP","nm.NM_SETTING_VPN_PPTP_KEY_REFUSE_MSCHAP","nm.NM_SETTING_VPN_PPTP_KEY_REFUSE_MSCHAPV2","nm.NM_SETTING_VPN_PPTP_KEY_REFUSE_PAP","nm.NM_SETTING_VPN_PPTP_KEY_REQUIRE_MPPE","nm.NM_SETTING_VPN_PPTP_KEY_REQUIRE_MPPE_128","nm.NM_SETTING_VPN_PPTP_KEY_REQUIRE_MPPE_40","nm.NM_SETTING_VPN_PPTP_KEY_USER","nm.NM_SETTING_VPN_SECRETS","nm.NM_SETTING_VPN_SERVICE_TYPE","nm.NM_SETTING_VPN_SETTING_NAME","nm.NM_SETTING_VPN_STRONGSWAN_KEY_ADDRESS","nm.NM_SETTING_VPN_STRONGSWAN_KEY_CERTIFICATE","nm.NM_SETTING_VPN_STRONGSWAN_KEY_ENCAP","nm.NM_SETTING_VPN_STRONGSWAN_KEY_IPCOMP","nm.NM_SETTING_VPN_STRONGSWAN_KEY_METHOD","nm.NM_SETTING_VPN_STRONGSWAN_KEY_PASSWORD","nm.NM_SETTING_VPN_STRONGSWAN_KEY_PASSWORD_FLAGS","nm.NM_SETTING_VPN_STRONGSWAN_KEY_USER","nm.NM_SETTING_VPN_STRONGSWAN_KEY_USERCERT","nm.NM_SETTING_VPN_STRONGSWAN_KEY_USERKEY","nm.NM_SETTING_VPN_STRONGSWAN_KEY_VIRTUAL","nm.NM_SETTING_VPN_TIMEOUT","nm.NM_SETTING_VPN_USER_NAME","nm.NM_SETTING_VPN_VPNC_KEY_APP_VERSION","nm.NM_SETTING_VPN_VPNC_KEY_AUTHMODE","nm.NM_SETTING_VPN_VPNC_KEY_CA_FILE","nm.NM_SETTING_VPN_VPNC_KEY_CISCO_UDP_ENCAPS_PORT","nm.NM_SETTING_VPN_VPNC_KEY_DHGROUP","nm.NM_SETTING_VPN_VPNC_KEY_DOMAIN","nm.NM_SETTING_VPN_VPNC_KEY_DPD_IDLE_TIMEOUT","nm.NM_SETTING_VPN_VPNC_KEY_GATEWAY","nm.NM_SETTING_VPN_VPNC_KEY_ID","nm.NM_SETTING_VPN_VPNC_KEY_LOCAL_PORT","nm.NM_SETTING_VPN_VPNC_KEY_NAT_TRAVERSAL_MODE","nm.NM_SETTING_VPN_VPNC_KEY_NO_ENCRYPTION","nm.NM_SETTING_VPN_VPNC_KEY_PERFECT_FORWARD","nm.NM_SETTING_VPN_VPNC_KEY_SECRET","nm.NM_SETTING_VPN_VPNC_KEY_SECRET_FLAGS","nm.NM_SETTING_VPN_VPNC_KEY_SECRET_TYPE","nm.NM_SETTING_VPN_VPNC_KEY_SINGLE_DES","nm.NM_SETTING_VPN_VPNC_KEY_VENDOR","nm.NM_SETTING_VPN_VPNC_KEY_XAUTH_PASSWORD","nm.NM_SETTING_VPN_VPNC_KEY_XAUTH_PASSWORD_FLAGS","nm.NM_SETTING_VPN_VPNC_KEY_XAUTH_PASSWORD_TYPE","nm.NM_SETTING_VPN_VPNC_KEY_XAUTH_USER","nm.NM_SETTING_VS_ETHERNET","nm.NM_SETTING_VS_GENERAL","nm.NM_SETTING_VS_IPV4","nm.NM_SETTING_VS_IPV6","nm.NM_SETTING_VS_MOBILE","nm.NM_SETTING_VS_MOBILE_CDMA","nm.NM_SETTING_VS_MOBILE_GSM","nm.NM_SETTING_VS_PPP","nm.NM_SETTING_VS_PPPOE","nm.NM_SETTING_VS_SECURITY","nm.NM_SETTING_VS_VPN","nm.NM_SETTING_VS_VPN_L2TP","nm.NM_SETTING_VS_VPN_L2TP_IPSEC","nm.NM_SETTING_VS_VPN_L2TP_PPP","nm.NM_SETTING_VS_VPN_OPENCONNECT","nm.NM_SETTING_VS_VPN_OPENVPN","nm.NM_SETTING_VS_VPN_OPENVPN_ADVANCED","nm.NM_SETTING_VS_VPN_OPENVPN_PROXIES","nm.NM_SETTING_VS_VPN_OPENVPN_SECURITY","nm.NM_SETTING_VS_VPN_OPENVPN_TLSAUTH","nm.NM_SETTING_VS_VPN_PPTP","nm.NM_SETTING_VS_VPN_PPTP_PPP","nm.NM_SETTING_VS_VPN_STRONGSWAN","nm.NM_SETTING_VS_VPN_VPNC","nm.NM_SETTING_VS_VPN_VPNC_ADVANCED","nm.NM_SETTING_VS_WIFI","nm.NM_SETTING_VXLAN_AGEING","nm.NM_SETTING_VXLAN_DESTINATION_PORT","nm.NM_SETTING_VXLAN_ID","nm.NM_SETTING_VXLAN_L2_MISS","nm.NM_SETTING_VXLAN_L3_MISS","nm.NM_SETTING_VXLAN_LEARNING","nm.NM_SETTING_VXLAN_LIMIT","nm.NM_SETTING_VXLAN_LOCAL","nm.NM_SETTING_VXLAN_PARENT","nm.NM_SETTING_VXLAN_PROXY","nm.NM_SETTING_VXLAN_REMOTE","nm.NM_SETTING_VXLAN_RSC","nm.NM_SETTING_VXLAN_SETTING_NAME","nm.NM_SETTING_VXLAN_SOURCE_PORT_MAX","nm.NM_SETTING_VXLAN_SOURCE_PORT_MIN","nm.NM_SETTING_VXLAN_TOS","nm.NM_SETTING_VXLAN_TTL","nm.NM_SETTING_WIMAX_MAC_ADDRESS","nm.NM_SETTING_WIMAX_NETWORK_NAME","nm.NM_SETTING_WIMAX_SETTING_NAME","nm.NM_SETTING_WIRED_AUTO_NEGOTIATE","nm.NM_SETTING_WIRED_CLONED_MAC_ADDRESS","nm.NM_SETTING_WIRED_DUPLEX","nm.NM_SETTING_WIRED_GENERATE_MAC_ADDRESS_MASK","nm.NM_SETTING_WIRED_MAC_ADDRESS","nm.NM_SETTING_WIRED_MAC_ADDRESS_BLACKLIST","nm.NM_SETTING_WIRED_MTU","nm.NM_SETTING_WIRED_PORT","nm.NM_SETTING_WIRED_S390_NETTYPE","nm.NM_SETTING_WIRED_S390_OPTIONS","nm.NM_SETTING_WIRED_S390_SUBCHANNELS","nm.NM_SETTING_WIRED_SETTING_NAME","nm.NM_SETTING_WIRED_SPEED","nm.NM_SETTING_WIRED_WAKE_ON_LAN","nm.NM_SETTING_WIRED_WAKE_ON_LAN_ARP","nm.NM_SETTING_WIRED_WAKE_ON_LAN_BROADCAST","nm.NM_SETTING_WIRED_WAKE_ON_LAN_DEFAULT","nm.NM_SETTING_WIRED_WAKE_ON_LAN_IGNORE","nm.NM_SETTING_WIRED_WAKE_ON_LAN_MAGIC","nm.NM_SETTING_WIRED_WAKE_ON_LAN_MULTICAST","nm.NM_SETTING_WIRED_WAKE_ON_LAN_PASSWORD","nm.NM_SETTING_WIRED_WAKE_ON_LAN_PHY","nm.NM_SETTING_WIRED_WAKE_ON_LAN_UNICAST","nm.NM_SETTING_WIRELESS_BAND","nm.NM_SETTING_WIRELESS_BSSID","nm.NM_SETTING_WIRELESS_CHANNEL","nm.NM_SETTING_WIRELESS_CLONED_MAC_ADDRESS","nm.NM_SETTING_WIRELESS_GENERATE_MAC_ADDRESS_MASK","nm.NM_SETTING_WIRELESS_HIDDEN","nm.NM_SETTING_WIRELESS_MAC_ADDRESS","nm.NM_SETTING_WIRELESS_MAC_ADDRESS_BLACKLIST","nm.NM_SETTING_WIRELESS_MAC_ADDRESS_RANDOMIZATION","nm.NM_SETTING_WIRELESS_MODE","nm.NM_SETTING_WIRELESS_MODE_ADHOC","nm.NM_SETTING_WIRELESS_MODE_AP","nm.NM_SETTING_WIRELESS_MODE_INFRA","nm.NM_SETTING_WIRELESS_MTU","nm.NM_SETTING_WIRELESS_POWERSAVE","nm.NM_SETTING_WIRELESS_POWERSAVE_DEFAULT","nm.NM_SETTING_WIRELESS_POWERSAVE_DISABLE","nm.NM_SETTING_WIRELESS_POWERSAVE_ENABLE","nm.NM_SETTING_WIRELESS_POWERSAVE_IGNORE","nm.NM_SETTING_WIRELESS_RATE","nm.NM_SETTING_WIRELESS_SECURITY_AUTH_ALG","nm.NM_SETTING_WIRELESS_SECURITY_GROUP","nm.NM_SETTING_WIRELESS_SECURITY_KEY_MGMT","nm.NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD","nm.NM_SETTING_WIRELESS_SECURITY_LEAP_PASSWORD_FLAGS","nm.NM_SETTING_WIRELESS_SECURITY_LEAP_USERNAME","nm.NM_SETTING_WIRELESS_SECURITY_PAIRWISE","nm.NM_SETTING_WIRELESS_SECURITY_PMF","nm.NM_SETTING_WIRELESS_SECURITY_PMF_DEFAULT","nm.NM_SETTING_WIRELESS_SECURITY_PMF_DISABLE","nm.NM_SETTING_WIRELESS_SECURITY_PMF_OPTIONAL","nm.NM_SETTING_WIRELESS_SECURITY_PMF_REQUIRED","nm.NM_SETTING_WIRELESS_SECURITY_PROTO","nm.NM_SETTING_WIRELESS_SECURITY_PSK","nm.NM_SETTING_WIRELESS_SECURITY_PSK_FLAGS","nm.NM_SETTING_WIRELESS_SECURITY_SETTING_NAME","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY0","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY1","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY2","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY3","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY_FLAGS","nm.NM_SETTING_WIRELESS_SECURITY_WEP_KEY_TYPE","nm.NM_SETTING_WIRELESS_SECURITY_WEP_TX_KEYIDX","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD_AUTO","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD_DEFAULT","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD_DISABLED","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD_PBC","nm.NM_SETTING_WIRELESS_SECURITY_WPS_METHOD_PIN","nm.NM_SETTING_WIRELESS_SEEN_BSSIDS","nm.NM_SETTING_WIRELESS_SETTING_NAME","nm.NM_SETTING_WIRELESS_SSID","nm.NM_SETTING_WIRELESS_TX_POWER","nm.NM_STATE_ASLEEP","nm.NM_STATE_CONNECTED_GLOBAL","nm.NM_STATE_CONNECTED_LOCAL","nm.NM_STATE_CONNECTED_SITE","nm.NM_STATE_CONNECTING","nm.NM_STATE_DISCONNECTED","nm.NM_STATE_DISCONNECTING","nm.NM_STATE_UNKNOWN","nm.NM_TEAM_LINK_WATCHER_ARP_PING","nm.NM_TEAM_LINK_WATCHER_ARP_PING_FLAG_SEND_ALWAYS","nm.NM_TEAM_LINK_WATCHER_ARP_PING_FLAG_VALIDATE_ACTIVE","nm.NM_TEAM_LINK_WATCHER_ARP_PING_FLAG_VALIDATE_INACTIVE","nm.NM_TEAM_LINK_WATCHER_ETHTOOL","nm.NM_TEAM_LINK_WATCHER_NSNA_PING","nm.NM_VLAN_EGRESS_MAP","nm.NM_VLAN_FLAG_GVRP","nm.NM_VLAN_FLAG_LOOSE_BINDING","nm.NM_VLAN_FLAG_MVRP","nm.NM_VLAN_FLAG_REORDER_HEADERS","nm.NM_VLAN_INGRESS_MAP","nm.NM_VPN_CONNECTION_BANNER","nm.NM_VPN_CONNECTION_STATE_ACTIVATED","nm.NM_VPN_CONNECTION_STATE_CONNECT","nm.NM_VPN_CONNECTION_STATE_DISCONNECTED","nm.NM_VPN_CONNECTION_STATE_FAILED","nm.NM_VPN_CONNECTION_STATE_IP_CONFIG_GET","nm.NM_VPN_CONNECTION_STATE_NEED_AUTH","nm.NM_VPN_CONNECTION_STATE_PREPARE","nm.NM_VPN_CONNECTION_STATE_REASON_CONNECTION_REMOVED","nm.NM_VPN_CONNECTION_STATE_REASON_CONNECT_TIMEOUT","nm.NM_VPN_CONNECTION_STATE_REASON_DEVICE_DISCONNECTED","nm.NM_VPN_CONNECTION_STATE_REASON_IP_CONFIG_INVALID","nm.NM_VPN_CONNECTION_STATE_REASON_LOGIN_FAILED","nm.NM_VPN_CONNECTION_STATE_REASON_NONE","nm.NM_VPN_CONNECTION_STATE_REASON_NO_SECRETS","nm.NM_VPN_CONNECTION_STATE_REASON_SERVICE_START_FAILED","nm.NM_VPN_CONNECTION_STATE_REASON_SERVICE_START_TIMEOUT","nm.NM_VPN_CONNECTION_STATE_REASON_SERVICE_STOPPED","nm.NM_VPN_CONNECTION_STATE_REASON_UNKNOWN","nm.NM_VPN_CONNECTION_STATE_REASON_USER_DISCONNECTED","nm.NM_VPN_CONNECTION_STATE_UNKNOWN","nm.NM_VPN_CONNECTION_VPN_STATE","nm.NM_VPN_DBUS_PLUGIN_INTERFACE","nm.NM_VPN_DBUS_PLUGIN_PATH","nm.NM_VPN_EDITOR_PLUGIN_CAPABILITY_EXPORT","nm.NM_VPN_EDITOR_PLUGIN_CAPABILITY_IMPORT","nm.NM_VPN_EDITOR_PLUGIN_CAPABILITY_IPV6","nm.NM_VPN_EDITOR_PLUGIN_CAPABILITY_NONE","nm.NM_VPN_EDITOR_PLUGIN_DESCRIPTION","nm.NM_VPN_EDITOR_PLUGIN_NAME","nm.NM_VPN_EDITOR_PLUGIN_SERVICE","nm.NM_VPN_PLUGIN_CAN_PERSIST","nm.NM_VPN_PLUGIN_CONFIG_BANNER","nm.NM_VPN_PLUGIN_CONFIG_EXT_GATEWAY","nm.NM_VPN_PLUGIN_CONFIG_HAS_IP4","nm.NM_VPN_PLUGIN_CONFIG_HAS_IP6","nm.NM_VPN_PLUGIN_CONFIG_MTU","nm.NM_VPN_PLUGIN_CONFIG_PROXY_PAC","nm.NM_VPN_PLUGIN_CONFIG_TUNDEV","nm.NM_VPN_PLUGIN_ERROR_ALREADY_STARTED","nm.NM_VPN_PLUGIN_ERROR_ALREADY_STOPPED","nm.NM_VPN_PLUGIN_ERROR_BAD_ARGUMENTS","nm.NM_VPN_PLUGIN_ERROR_FAILED","nm.NM_VPN_PLUGIN_ERROR_INTERACTIVE_NOT_SUPPORTED","nm.NM_VPN_PLUGIN_ERROR_INVALID_CONNECTION","nm.NM_VPN_PLUGIN_ERROR_LAUNCH_FAILED","nm.NM_VPN_PLUGIN_ERROR_STARTING_IN_PROGRESS","nm.NM_VPN_PLUGIN_ERROR_STOPPING_IN_PROGRESS","nm.NM_VPN_PLUGIN_ERROR_WRONG_STATE","nm.NM_VPN_PLUGIN_FAILURE_BAD_IP_CONFIG","nm.NM_VPN_PLUGIN_FAILURE_CONNECT_FAILED","nm.NM_VPN_PLUGIN_FAILURE_LOGIN_FAILED","nm.NM_VPN_PLUGIN_INFO_FILENAME","nm.NM_VPN_PLUGIN_INFO_KEYFILE","nm.NM_VPN_PLUGIN_INFO_KF_GROUP_CONNECTION","nm.NM_VPN_PLUGIN_INFO_KF_GROUP_GNOME","nm.NM_VPN_PLUGIN_INFO_KF_GROUP_LIBNM","nm.NM_VPN_PLUGIN_INFO_NAME","nm.NM_VPN_PLUGIN_IP4_CONFIG_ADDRESS","nm.NM_VPN_PLUGIN_IP4_CONFIG_DNS","nm.NM_VPN_PLUGIN_IP4_CONFIG_DOMAIN","nm.NM_VPN_PLUGIN_IP4_CONFIG_DOMAINS","nm.NM_VPN_PLUGIN_IP4_CONFIG_INT_GATEWAY","nm.NM_VPN_PLUGIN_IP4_CONFIG_MSS","nm.NM_VPN_PLUGIN_IP4_CONFIG_NBNS","nm.NM_VPN_PLUGIN_IP4_CONFIG_NEVER_DEFAULT","nm.NM_VPN_PLUGIN_IP4_CONFIG_PREFIX","nm.NM_VPN_PLUGIN_IP4_CONFIG_PRESERVE_ROUTES","nm.NM_VPN_PLUGIN_IP4_CONFIG_PTP","nm.NM_VPN_PLUGIN_IP4_CONFIG_ROUTES","nm.NM_VPN_PLUGIN_IP6_CONFIG_ADDRESS","nm.NM_VPN_PLUGIN_IP6_CONFIG_DNS","nm.NM_VPN_PLUGIN_IP6_CONFIG_DOMAIN","nm.NM_VPN_PLUGIN_IP6_CONFIG_DOMAINS","nm.NM_VPN_PLUGIN_IP6_CONFIG_INT_GATEWAY","nm.NM_VPN_PLUGIN_IP6_CONFIG_MSS","nm.NM_VPN_PLUGIN_IP6_CONFIG_NEVER_DEFAULT","nm.NM_VPN_PLUGIN_IP6_CONFIG_PREFIX","nm.NM_VPN_PLUGIN_IP6_CONFIG_PRESERVE_ROUTES","nm.NM_VPN_PLUGIN_IP6_CONFIG_PTP","nm.NM_VPN_PLUGIN_IP6_CONFIG_ROUTES","nm.NM_VPN_PLUGIN_OLD_DBUS_SERVICE_NAME","nm.NM_VPN_PLUGIN_OLD_STATE","nm.NM_VPN_SERVICE_PLUGIN_DBUS_SERVICE_NAME","nm.NM_VPN_SERVICE_PLUGIN_DBUS_WATCH_PEER","nm.NM_VPN_SERVICE_PLUGIN_STATE","nm.NM_VPN_SERVICE_STATE_INIT","nm.NM_VPN_SERVICE_STATE_SHUTDOWN","nm.NM_VPN_SERVICE_STATE_STARTED","nm.NM_VPN_SERVICE_STATE_STARTING","nm.NM_VPN_SERVICE_STATE_STOPPED","nm.NM_VPN_SERVICE_STATE_STOPPING","nm.NM_VPN_SERVICE_STATE_UNKNOWN","nm.NM_WEP_KEY_TYPE_KEY","nm.NM_WEP_KEY_TYPE_PASSPHRASE","nm.NM_WEP_KEY_TYPE_UNKNOWN","nm.NM_WIFI_DEVICE_CAP_ADHOC","nm.NM_WIFI_DEVICE_CAP_AP","nm.NM_WIFI_DEVICE_CAP_CIPHER_CCMP","nm.NM_WIFI_DEVICE_CAP_CIPHER_TKIP","nm.NM_WIFI_DEVICE_CAP_CIPHER_WEP104","nm.NM_WIFI_DEVICE_CAP_CIPHER_WEP40","nm.NM_WIFI_DEVICE_CAP_FREQ_2GHZ","nm.NM_WIFI_DEVICE_CAP_FREQ_5GHZ","nm.NM_WIFI_DEVICE_CAP_FREQ_VALID","nm.NM_WIFI_DEVICE_CAP_NONE","nm.NM_WIFI_DEVICE_CAP_RSN","nm.NM_WIFI_DEVICE_CAP_WPA","nm.NM_WIMAX_NSP_NAME","nm.NM_WIMAX_NSP_NETWORK_TYPE","nm.NM_WIMAX_NSP_NETWORK_TYPE_HOME","nm.NM_WIMAX_NSP_NETWORK_TYPE_PARTNER","nm.NM_WIMAX_NSP_NETWORK_TYPE_ROAMING_PARTNER","nm.NM_WIMAX_NSP_NETWORK_TYPE_UNKNOWN","nm.NM_WIMAX_NSP_SIGNAL_QUALITY"]}]}
{"Filepath":"network/nm/nm_extends_consts.go","Functions":null,"Records":[{"Name":"const:nm","Fields":["nm.NM_DBUS_INTERFACE_L2TP","nm.NM_DBUS_INTERFACE_L2TP_PPP","nm.NM_DBUS_INTERFACE_OPENCONNECT","nm.NM_DBUS_INTERFACE_OPENVPN","nm.NM_DBUS_INTERFACE_PPTP","nm.NM_DBUS_INTERFACE_VPNC","nm.NM_DBUS_PATH_L2TP","nm.NM_DBUS_PATH_L2TP_PPP","nm.NM_DBUS_PATH_OPENCONNECT","nm.NM_DBUS_PATH_OPENVPN","nm.NM_DBUS_PATH_PPTP","nm.NM_DBUS_PATH_VPNC","nm.NM_DBUS_SERVICE_L2TP","nm.NM_DBUS_SERVICE_L2TP_PPP","nm.NM_DBUS_SERVICE_OPENCONNECT","nm.NM_DBUS_SERVICE_OPENVPN","nm.NM_DBUS_SERVICE_PPTP","nm.NM_DBUS_SERVICE_STRONGSWAN","nm.NM_DBUS_SERVICE_VPNC","nm.NM_L2TP_SECRET_FLAG_AGENT_OWNED","nm.NM_L2TP_SECRET_FLAG_NONE","nm.NM_L2TP_SECRET_FLAG_NOT_REQUIRED","nm.NM_L2TP_SECRET_FLAG_NOT_SAVED","nm.NM_OPENVPN_AUTH_MD5","nm.NM_OPENVPN_AUTH_NONE","nm.NM_OPENVPN_AUTH_RIPEMD160","nm.NM_OPENVPN_AUTH_RSA_MD4","nm.NM_OPENVPN_AUTH_SHA1","nm.NM_OPENVPN_AUTH_SHA224","nm.NM_OPENVPN_AUTH_SHA256","nm.NM_OPENVPN_AUTH_SHA384","nm.NM_OPENVPN_AUTH_SHA512","nm.NM_OPENVPN_CONTYPE_PASSWORD","nm.NM_OPENVPN_CONTYPE_PASSWORD_TLS","nm.NM_OPENVPN_CONTYPE_STATIC_KEY","nm.NM_OPENVPN_CONTYPE_TLS","nm.NM_OPENVPN_REM_CERT_TLS_CLIENT","nm.NM_OPENVPN_REM_CERT_TLS_SERVER","nm.NM_OPENVPN_SECRET_FLAG_ASK","nm.NM_OPENVPN_SECRET_FLAG_SAVE","nm.NM_OPENVPN_SECRET_FLAG_UNUSED","nm.NM_PPTP_SECRET_FLAG_AGENT_OWNED","nm.NM_PPTP_SECRET_FLAG_NONE","nm.NM_PPTP_SECRET_FLAG_NOT_REQUIRED","nm.NM_PPTP_SECRET_FLAG_NOT_SAVED","nm.NM_SETTING_VPN_OPENVPN_KEY_NOSECRET","nm.NM_STRONGSWAN_METHOD_AGENT","nm.NM_STRONGSWAN_METHOD_EAP","nm.NM_STRONGSWAN_METHOD_KEY","nm.NM_STRONGSWAN_METHOD_PSK","nm.NM_STRONGSWAN_METHOD_SMARTCARD","nm.NM_VPNC_DHGROUP_DH1","nm.NM_VPNC_DHGROUP_DH2","nm.NM_VPNC_DHGROUP_DH5","nm.NM_VPNC_NATT_MODE_CISCO","nm.NM_VPNC_NATT_MODE_NATT","nm.NM_VPNC_NATT_MODE_NATT_ALWAYS","nm.NM_VPNC_NATT_MODE_NONE","nm.NM_VPNC_PFS_DH1","nm.NM_VPNC_PFS_DH2","nm.NM_VPNC_PFS_DH5","nm.NM_VPNC_PFS_NOPFS","nm.NM_VPNC_PFS_SERVER","nm.NM_VPNC_PW_TYPE_ASK","nm.NM_VPNC_PW_TYPE_SAVE","nm.NM_VPNC_PW_TYPE_UNUSED","nm.NM_VPNC_SECRET_FLAG_ASK","nm.NM_VPNC_SECRET_FLAG_NONE","nm.NM_VPNC_SECRET_FLAG_SAVE","nm.NM_VPNC_SECRET_FLAG_UNUSED","nm.NM_VPNC_VENDOR_CISCO","nm.NM_VPNC_VENDOR_NETSCREEN"]}]}
{"Filepath":"network/nm_generator/main.go","Functions":[{"Uniquefunname":"func genNMBeansCode() (content string)","Funname":"genNMBeansCode","Returntype":"(content string)","Args":""},{"Uniquefunname":"func genNMConstsCode() (content string)","Funname":"genNMConstsCode","Returntype":"(content string)","Args":""},{"Uniquefunname":"func genTpl(data interface","Funname":"genTpl","Returntype":"(content string)","Args":"data interface{}, tplstr string"},{"Uniquefunname":"func main()","Funname":"main","Returntype":"","Args":""},{"Uniquefunname":"func genNMBeansCode() (content string)","Funname":"main.genNMBeansCode","Returntype":"(content string)","Args":""},{"Uniquefunname":"func genNMConstsCode() (content string)","Funname":"main.genNMConstsCode","Returntype":"(content string)","Args":""},{"Uniquefunname":"func genTpl(data interface","Funname":"main.genTpl","Returntype":"(content string)","Args":"data interface{}, tplstr string"},{"Uniquefunname":"func main()","Funname":"main.main","Returntype":"","Args":""}],"Records":[{"Name":"var:main","Fields":["main.argOutputBeansFile","main.argOutputConstsFile","main.argTestMode","main.funcMap","main.nmConsts","main.nmLogicSetKeys","main.nmOverrideKeys","main.nmVirtualSections","main.nmVpnAliasSettings"]},{"Name":"const:main","Fields":["main.nmConstsKeysOverrideYamlFile","main.nmConstsYamlFile","main.nmLogicSetKeysYamlFile","main.nmVirtualSettingYamlFile","main.nmVpnAliasSettingsYamlFile"]},{"Name":"struct:main.nmConstsStruct","Fields":["main.nmConstsStruct.NMEnums []struct { EnumClass string `yaml:\"EnumClass\"`; Members []struct { Name string `yaml:\"Name\"`; Value interface{} `yaml:\"Value\"`; } `yaml:\"Members\"`; }","main.nmConstsStruct.NMSettings []nmSetting"]},{"Name":"struct:main.nmSetting","Fields":["main.nmSetting.Keys []*nmSettingKey","main.nmSetting.Name string","main.nmSetting.RealSettingName string","main.nmSetting.SettingClass string","main.nmSetting.Value string"]},{"Name":"struct:main.nmSettingKey","Fields":["main.nmSettingKey.CapcaseName string","main.nmSettingKey.DefaultValue string","main.nmSettingKey.KeyName string","main.nmSettingKey.Type string","main.nmSettingKey.Value string"]},{"Name":"struct:main.nmVirtualSection","Fields":["main.nmVirtualSection.DisplayName string","main.nmVirtualSection.Expanded bool","main.nmVirtualSection.Keys []struct { KeyValue string `yaml:\"KeyValue\"`; Section string `yaml:\"Section\"`; DisplayName string `yaml:\"DisplayName\"`; WidgetType string `yaml:\"WidgetType\"`; AlwaysUpdate bool `yaml:\"AlwaysUpdate,omitempty\"`; UseValueRange bool `yaml:\"UseValueRange,omitempty\"`; MinValue int `yaml:\"MinValue,omitempty\"`; MaxValue int `yaml:\"MaxValue,omitempty\"`; VKeyInfo struct { VirtualKeyName string `yaml:\"VirtualKeyName\"`; Type string `yaml:\"Type\"`; VkType string `yaml:\"VkType\"`; RelatedKeys []string `yaml:\"RelatedKeys\"`","main.nmVirtualSection.Value string","main.nmVirtualSection.VirtaulSectionName string"]}]}
{"Filepath":"network/nm_generator/tpl.go","Functions":null,"Records":[{"Name":"const:main","Fields":["main.nmConstsHeader","main.nmSettingBeansHeader","main.tplNMBeans","main.tplNMConsts","main.tplNMVirtualConsts"]}]}
{"Filepath":"network/nm_generator/utils.go","Functions":[{"Uniquefunname":"func GetKeyDefaultValue(name string) (gocode string)","Funname":"GetKeyDefaultValue","Returntype":"(gocode string)","Args":"name string"},{"Uniquefunname":"func GetKeyFuncBaseName(name string) (funcName string)","Funname":"GetKeyFuncBaseName","Returntype":"(funcName string)","Args":"name string"},{"Uniquefunname":"func GetKeyTypeGoIfcConverterFunc(ktype string) (converter string)","Funname":"GetKeyTypeGoIfcConverterFunc","Returntype":"(converter string)","Args":"ktype string"},{"Uniquefunname":"func GetKeyTypeGoSyntax(ktype string) (goSyntax string)","Funname":"GetKeyTypeGoSyntax","Returntype":"(goSyntax string)","Args":"ktype string"},{"Uniquefunname":"func GetKeyTypeShortName(ktype string) string","Funname":"GetKeyTypeShortName","Returntype":"string","Args":"ktype string"},{"Uniquefunname":"func GetVsRelatedSettings(vsname string) (relatedSettings []string)","Funname":"GetVsRelatedSettings","Returntype":"(relatedSettings []string)","Args":"vsname string"},{"Uniquefunname":"func IfNeedCheckValueLength(ktype string) (need string)","Funname":"IfNeedCheckValueLength","Returntype":"(need string)","Args":"ktype string"},{"Uniquefunname":"func IsLogicSetKey(keyID string) (logicSet string)","Funname":"IsLogicSetKey","Returntype":"(logicSet string)","Args":"keyID string"},{"Uniquefunname":"func ToCaplitalize(str string) (capstr string)","Funname":"ToCaplitalize","Returntype":"(capstr string)","Args":"str string"},{"Uniquefunname":"func UnwrapInterface(ifc interface","Funname":"UnwrapInterface","Returntype":"(value string)","Args":"ifc interface{}"},{"Uniquefunname":"func doGetKeyDefaultValue(fixedDefaultValue interface","Funname":"doGetKeyDefaultValue","Returntype":"(gocode string)","Args":"fixedDefaultValue interface{}, name, ktype string"},{"Uniquefunname":"func getSettingKeyFixedDefaultValue(ktype, defaultValueYAML string)(fixedDefaultValue interface{})","Funname":"getSettingKeyFixedDefaultValue","Returntype":"(fixedDefaultValue interface{})","Args":"ktype, defaultValueYAML string"},{"Uniquefunname":"func isStringInArray(s string, list []string) bool","Funname":"isStringInArray","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func GetKeyDefaultValue(name string) (gocode string)","Funname":"main.GetKeyDefaultValue","Returntype":"(gocode string)","Args":"name string"},{"Uniquefunname":"func GetKeyFuncBaseName(name string) (funcName string)","Funname":"main.GetKeyFuncBaseName","Returntype":"(funcName string)","Args":"name string"},{"Uniquefunname":"func GetKeyTypeGoIfcConverterFunc(ktype string) (converter string)","Funname":"main.GetKeyTypeGoIfcConverterFunc","Returntype":"(converter string)","Args":"ktype string"},{"Uniquefunname":"func GetKeyTypeGoSyntax(ktype string) (goSyntax string)","Funname":"main.GetKeyTypeGoSyntax","Returntype":"(goSyntax string)","Args":"ktype string"},{"Uniquefunname":"func GetKeyTypeShortName(ktype string) string","Funname":"main.GetKeyTypeShortName","Returntype":"string","Args":"ktype string"},{"Uniquefunname":"func GetVsRelatedSettings(vsname string) (relatedSettings []string)","Funname":"main.GetVsRelatedSettings","Returntype":"(relatedSettings []string)","Args":"vsname string"},{"Uniquefunname":"func IfNeedCheckValueLength(ktype string) (need string)","Funname":"main.IfNeedCheckValueLength","Returntype":"(need string)","Args":"ktype string"},{"Uniquefunname":"func IsLogicSetKey(keyID string) (logicSet string)","Funname":"main.IsLogicSetKey","Returntype":"(logicSet string)","Args":"keyID string"},{"Uniquefunname":"func ToCaplitalize(str string) (capstr string)","Funname":"main.ToCaplitalize","Returntype":"(capstr string)","Args":"str string"},{"Uniquefunname":"func UnwrapInterface(ifc interface","Funname":"main.UnwrapInterface","Returntype":"(value string)","Args":"ifc interface{}"},{"Uniquefunname":"func doGetKeyDefaultValue(fixedDefaultValue interface","Funname":"main.doGetKeyDefaultValue","Returntype":"(gocode string)","Args":"fixedDefaultValue interface{}, name, ktype string"},{"Uniquefunname":"func main.getSettingKeyFixedDefaultValue(ktype, defaultValueYAML string)(fixedDefaultValue interface{})","Funname":"main.getSettingKeyFixedDefaultValue","Returntype":"(fixedDefaultValue interface{})","Args":"ktype, defaultValueYAML string"},{"Uniquefunname":"func isStringInArray(s string, list []string) bool","Funname":"main.isStringInArray","Returntype":"bool","Args":"s string, list []string"},{"Uniquefunname":"func mergeOverrideKeys()","Funname":"main.mergeOverrideKeys","Returntype":"","Args":""},{"Uniquefunname":"func writeOutputFile(file, content string)","Funname":"main.writeOutputFile","Returntype":"","Args":"file, content string"},{"Uniquefunname":"func yamlUnmarshalFile(file string, value interface","Funname":"main.yamlUnmarshalFile","Returntype":"","Args":"file string, value interface{}"},{"Uniquefunname":"func mergeOverrideKeys()","Funname":"mergeOverrideKeys","Returntype":"","Args":""},{"Uniquefunname":"func writeOutputFile(file, content string)","Funname":"writeOutputFile","Returntype":"","Args":"file, content string"},{"Uniquefunname":"func yamlUnmarshalFile(file string, value interface","Funname":"yamlUnmarshalFile","Returntype":"","Args":"file string, value interface{}"}],"Records":[{"Name":"var:main","Fields":["main.logger"]}]}
{"Filepath":"network/proxychains/check.go","Functions":[{"Uniquefunname":"func validIPv4(ipStr string) bool","Funname":"proxychains.validIPv4","Returntype":"bool","Args":"ipStr string"},{"Uniquefunname":"func validPassword(password string) bool","Funname":"proxychains.validPassword","Returntype":"bool","Args":"password string"},{"Uniquefunname":"func validType(type0 string) bool","Funname":"proxychains.validType","Returntype":"bool","Args":"type0 string"},{"Uniquefunname":"func validUser(user string) bool","Funname":"proxychains.validUser","Returntype":"bool","Args":"user string"},{"Uniquefunname":"func validIPv4(ipStr string) bool","Funname":"validIPv4","Returntype":"bool","Args":"ipStr string"},{"Uniquefunname":"func validPassword(password string) bool","Funname":"validPassword","Returntype":"bool","Args":"password string"},{"Uniquefunname":"func validType(type0 string) bool","Funname":"validType","Returntype":"bool","Args":"type0 string"},{"Uniquefunname":"func validUser(user string) bool","Funname":"validUser","Returntype":"bool","Args":"user string"}],"Records":[{"Name":"var:proxychains","Fields":["proxychains.ipv4Reg"]}]}
{"Filepath":"network/proxychains/config.go","Functions":[{"Uniquefunname":"func loadConfig(file string) (*Config, error)","Funname":"loadConfig","Returntype":"(*Config, error)","Args":"file string"},{"Uniquefunname":"func (cfg *Config) save(file string) error","Funname":"proxychains.Config.save","Returntype":"error","Args":"file string"},{"Uniquefunname":"func loadConfig(file string) (*Config, error)","Funname":"proxychains.loadConfig","Returntype":"(*Config, error)","Args":"file string"},{"Uniquefunname":"func (cfg *Config) save(file string) error","Funname":"save","Returntype":"error","Args":"file string"}],"Records":[{"Name":"struct:proxychains.Config","Fields":["proxychains.Config.IP string","proxychains.Config.Password string","proxychains.Config.Port uint32","proxychains.Config.Type string","proxychains.Config.User string"]}]}
{"Filepath":"network/proxychains/proxychains.go","Functions":[{"Uniquefunname":"func (err InvalidParamError) Error() string","Funname":"Error","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) Set(type0, ip string, port uint32, user, password string) *dbus.Error","Funname":"Set","Returntype":"*dbus.Error","Args":"type0, ip string, port uint32, user, password string"},{"Uniquefunname":"func SetLogger(l *log.Logger)","Funname":"SetLogger","Returntype":"","Args":"l *log.Logger"},{"Uniquefunname":"func (m *Manager) checkConfig() bool","Funname":"checkConfig","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) fixConfig() bool","Funname":"fixConfig","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) notifyChange(prop string, v interface","Funname":"notifyChange","Returntype":"","Args":"prop string, v interface{}"},{"Uniquefunname":"func (err InvalidParamError) Error() string","Funname":"proxychains.InvalidParamError.Error","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"proxychains.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Set(type0, ip string, port uint32, user, password string) *dbus.Error","Funname":"proxychains.Manager.Set","Returntype":"*dbus.Error","Args":"type0, ip string, port uint32, user, password string"},{"Uniquefunname":"func (m *Manager) checkConfig() bool","Funname":"proxychains.Manager.checkConfig","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) fixConfig() bool","Funname":"proxychains.Manager.fixConfig","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"proxychains.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) notifyChange(prop string, v interface","Funname":"proxychains.Manager.notifyChange","Returntype":"","Args":"prop string, v interface{}"},{"Uniquefunname":"func (m *Manager) removeConf() error","Funname":"proxychains.Manager.removeConf","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) saveConfig() error","Funname":"proxychains.Manager.saveConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) set(type0, ip string, port uint32, user, password string) error","Funname":"proxychains.Manager.set","Returntype":"error","Args":"type0, ip string, port uint32, user, password string"},{"Uniquefunname":"func (m *Manager) writeConf() error","Funname":"proxychains.Manager.writeConf","Returntype":"error","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"proxychains.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func SetLogger(l *log.Logger)","Funname":"proxychains.SetLogger","Returntype":"","Args":"l *log.Logger"},{"Uniquefunname":"func (m *Manager) removeConf() error","Funname":"removeConf","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) saveConfig() error","Funname":"saveConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) set(type0, ip string, port uint32, user, password string) error","Funname":"set","Returntype":"error","Args":"type0, ip string, port uint32, user, password string"},{"Uniquefunname":"func (m *Manager) writeConf() error","Funname":"writeConf","Returntype":"error","Args":""}],"Records":[{"Name":"const:proxychains","Fields":["proxychains.DBusPath","proxychains.dbusInterface","proxychains.defaultType"]},{"Name":"struct:proxychains.InvalidParamError","Fields":["proxychains.InvalidParamError.Param string"]},{"Name":"struct:proxychains.Manager","Fields":["proxychains.Manager.IP string","proxychains.Manager.Password string","proxychains.Manager.Port uint32","proxychains.Manager.PropsMu sync.RWMutex","proxychains.Manager.Type string","proxychains.Manager.User string","proxychains.Manager.confFile string","proxychains.Manager.jsonFile string","proxychains.Manager.methods *struct { Set func() `in:\"type0,ip,port,user,password\"`; }","proxychains.Manager.service *dbusutil.Service"]},{"Name":"var:proxychains","Fields":["proxychains.logger"]}]}
{"Filepath":"network/proxychains/utils_notify.go","Functions":[{"Uniquefunname":"func createNotify(appName string) func(string, string, string)","Funname":"createNotify","Returntype":"func(string, string, string)","Args":"appName string"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func notifyAppProxyEnableFailed()","Funname":"notifyAppProxyEnableFailed","Returntype":"","Args":""},{"Uniquefunname":"func notifyAppProxyEnabled()","Funname":"notifyAppProxyEnabled","Returntype":"","Args":""},{"Uniquefunname":"func createNotify(appName string) func(string, string, string)","Funname":"proxychains.createNotify","Returntype":"func(string, string, string)","Args":"appName string"},{"Uniquefunname":"func init()","Funname":"proxychains.init","Returntype":"","Args":""},{"Uniquefunname":"func notifyAppProxyEnableFailed()","Funname":"proxychains.notifyAppProxyEnableFailed","Returntype":"","Args":""},{"Uniquefunname":"func notifyAppProxyEnabled()","Funname":"proxychains.notifyAppProxyEnabled","Returntype":"","Args":""}],"Records":[{"Name":"var:proxychains","Fields":["proxychains.notification","proxychains.notify","proxychains.notifyIconProxyDisabled","proxychains.notifyIconProxyEnabled"]}]}
{"Filepath":"screenedge/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"screenedge.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"screenedge.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"screenedge.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"screenedge.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"}],"Records":[{"Name":"struct:screenedge.Daemon","Fields":["screenedge.Daemon.manager *Manager"]},{"Name":"var:screenedge","Fields":["screenedge.logger"]}]}
{"Filepath":"screenedge/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"screenedge.init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"screenedge/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"screenedge.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"screenedge.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"screenedge.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"}],"Records":[{"Name":"const:screenedge","Fields":["screenedge.BottomLeft","screenedge.BottomRight","screenedge.TopLeft","screenedge.TopRight","screenedge.dbusInterface","screenedge.dbusPath","screenedge.dbusServiceName","screenedge.wmDBusServiceName"]},{"Name":"struct:screenedge.Manager","Fields":["screenedge.Manager.methods *struct { EnableZoneDetected func() `in:\"enabled\"`; SetTopLeft func() `in:\"value\"`; TopLeftAction func() `out:\"value\"`; SetBottomLeft func() `in:\"value\"`; BottomLeftAction func() `out:\"value\"`; SetTopRight func() `in:\"value\"`; TopRightAction func() `out:\"value\"`; SetBottomRight func() `in:\"value\"`; BottomRightAction func() `out:\"value\"`; }","screenedge.Manager.service *dbusutil.Service","screenedge.Manager.sessionSigLoop *dbusutil.SignalLoop","screenedge.Manager.settings *Settings","screenedge.Manager.syncConfig *dsync.Config","screenedge.Manager.wm *wm.Wm"]}]}
{"Filepath":"screenedge/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) BottomLeftAction() (string, *dbus.Error)","Funname":"BottomLeftAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) BottomRightAction() (string, *dbus.Error)","Funname":"BottomRightAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) EnableZoneDetected(enabled bool) *dbus.Error","Funname":"EnableZoneDetected","Returntype":"*dbus.Error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) SetBottomLeft(value string) *dbus.Error","Funname":"SetBottomLeft","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetBottomRight(value string) *dbus.Error","Funname":"SetBottomRight","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetTopLeft(value string) *dbus.Error","Funname":"SetTopLeft","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetTopRight(value string) *dbus.Error","Funname":"SetTopRight","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) TopLeftAction() (string, *dbus.Error)","Funname":"TopLeftAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) TopRightAction() (string, *dbus.Error)","Funname":"TopRightAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) BottomLeftAction() (string, *dbus.Error)","Funname":"screenedge.Manager.BottomLeftAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) BottomRightAction() (string, *dbus.Error)","Funname":"screenedge.Manager.BottomRightAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) EnableZoneDetected(enabled bool) *dbus.Error","Funname":"screenedge.Manager.EnableZoneDetected","Returntype":"*dbus.Error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) SetBottomLeft(value string) *dbus.Error","Funname":"screenedge.Manager.SetBottomLeft","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetBottomRight(value string) *dbus.Error","Funname":"screenedge.Manager.SetBottomRight","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetTopLeft(value string) *dbus.Error","Funname":"screenedge.Manager.SetTopLeft","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) SetTopRight(value string) *dbus.Error","Funname":"screenedge.Manager.SetTopRight","Returntype":"*dbus.Error","Args":"value string"},{"Uniquefunname":"func (m *Manager) TopLeftAction() (string, *dbus.Error)","Funname":"screenedge.Manager.TopLeftAction","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) TopRightAction() (string, *dbus.Error)","Funname":"screenedge.Manager.TopRightAction","Returntype":"(string, *dbus.Error)","Args":""}],"Records":null}
{"Filepath":"screenedge/settings.go","Functions":[{"Uniquefunname":"func (s *Settings) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (s *Settings) GetBlackList() []string","Funname":"GetBlackList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *Settings) GetDelay() int32","Funname":"GetDelay","Returntype":"int32","Args":""},{"Uniquefunname":"func (s *Settings) GetEdgeAction(name string) string","Funname":"GetEdgeAction","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (s *Settings) GetWhiteList() []string","Funname":"GetWhiteList","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewSettings() *Settings","Funname":"NewSettings","Returntype":"*Settings","Args":""},{"Uniquefunname":"func (s *Settings) SetEdgeAction(name, value string)","Funname":"SetEdgeAction","Returntype":"","Args":"name, value string"},{"Uniquefunname":"func NewSettings() *Settings","Funname":"screenedge.NewSettings","Returntype":"*Settings","Args":""},{"Uniquefunname":"func (s *Settings) Destroy()","Funname":"screenedge.Settings.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (s *Settings) GetBlackList() []string","Funname":"screenedge.Settings.GetBlackList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *Settings) GetDelay() int32","Funname":"screenedge.Settings.GetDelay","Returntype":"int32","Args":""},{"Uniquefunname":"func (s *Settings) GetEdgeAction(name string) string","Funname":"screenedge.Settings.GetEdgeAction","Returntype":"string","Args":"name string"},{"Uniquefunname":"func (s *Settings) GetWhiteList() []string","Funname":"screenedge.Settings.GetWhiteList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (s *Settings) SetEdgeAction(name, value string)","Funname":"screenedge.Settings.SetEdgeAction","Returntype":"","Args":"name, value string"}],"Records":[{"Name":"struct:screenedge.Settings","Fields":["screenedge.Settings.gsettings *gio.Settings"]}]}
{"Filepath":"screenedge/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"screenedge.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"screenedge.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"struct:screenedge.syncConfig","Fields":["screenedge.syncConfig.m *Manager"]},{"Name":"struct:screenedge.syncData","Fields":["screenedge.syncData.LeftBottom string","screenedge.syncData.LeftTop string","screenedge.syncData.RightBottom string","screenedge.syncData.RightTop string","screenedge.syncData.Version string"]},{"Name":"const:screenedge","Fields":["screenedge.syncDataVersion"]}]}
{"Filepath":"screensaver/module.go","Functions":[{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"newModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"screensaver.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"screensaver.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"screensaver.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"screensaver.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"screensaver.newModule","Returntype":"*Module","Args":"logger *log.Logger"}],"Records":[{"Name":"struct:screensaver.Module","Fields":["screensaver.Module.sSaver *ScreenSaver","screensaver.Module.syncConfig *dsync.Config"]}]}
{"Filepath":"screensaver/screensaver.go","Functions":[{"Uniquefunname":"func (*ScreenSaver) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func Inhibit(sender dbus.Sender, name, reason string)(uint32, *dbus.Error)","Funname":"Inhibit","Returntype":"(uint32, *dbus.Error)","Args":"sender dbus.Sender, name, reason string"},{"Uniquefunname":"func (ss *ScreenSaver) SetTimeout(seconds, interval uint32, blank bool) *dbus.Error","Funname":"SetTimeout","Returntype":"*dbus.Error","Args":"seconds, interval uint32, blank bool"},{"Uniquefunname":"func (ss *ScreenSaver) SimulateUserActivity() *dbus.Error","Funname":"SimulateUserActivity","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) UnInhibit(sender dbus.Sender, cookie uint32) *dbus.Error","Funname":"UnInhibit","Returntype":"*dbus.Error","Args":"sender dbus.Sender, cookie uint32"},{"Uniquefunname":"func (ss *ScreenSaver) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) listenDBusNameOwnerChanged()","Funname":"listenDBusNameOwnerChanged","Returntype":"","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) loop()","Funname":"loop","Returntype":"","Args":""},{"Uniquefunname":"func newScreenSaver(service *dbusutil.Service) (*ScreenSaver, error)","Funname":"newScreenSaver","Returntype":"(*ScreenSaver, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (*ScreenSaver) GetInterfaceName() string","Funname":"screensaver.ScreenSaver.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func screensaver.ScreenSaver.Inhibit(sender dbus.Sender, name, reason string)(uint32, *dbus.Error)","Funname":"screensaver.ScreenSaver.Inhibit","Returntype":"(uint32, *dbus.Error)","Args":"sender dbus.Sender, name, reason string"},{"Uniquefunname":"func (ss *ScreenSaver) SetTimeout(seconds, interval uint32, blank bool) *dbus.Error","Funname":"screensaver.ScreenSaver.SetTimeout","Returntype":"*dbus.Error","Args":"seconds, interval uint32, blank bool"},{"Uniquefunname":"func (ss *ScreenSaver) SimulateUserActivity() *dbus.Error","Funname":"screensaver.ScreenSaver.SimulateUserActivity","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) UnInhibit(sender dbus.Sender, cookie uint32) *dbus.Error","Funname":"screensaver.ScreenSaver.UnInhibit","Returntype":"*dbus.Error","Args":"sender dbus.Sender, cookie uint32"},{"Uniquefunname":"func (ss *ScreenSaver) destroy()","Funname":"screensaver.ScreenSaver.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) listenDBusNameOwnerChanged()","Funname":"screensaver.ScreenSaver.listenDBusNameOwnerChanged","Returntype":"","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) loop()","Funname":"screensaver.ScreenSaver.loop","Returntype":"","Args":""},{"Uniquefunname":"func (ss *ScreenSaver) setTimeout(seconds, interval uint32, blank bool)","Funname":"screensaver.ScreenSaver.setTimeout","Returntype":"","Args":"seconds, interval uint32, blank bool"},{"Uniquefunname":"func (ss *ScreenSaver) unInhibit(cookie uint32)","Funname":"screensaver.ScreenSaver.unInhibit","Returntype":"","Args":"cookie uint32"},{"Uniquefunname":"func newScreenSaver(service *dbusutil.Service) (*ScreenSaver, error)","Funname":"screensaver.newScreenSaver","Returntype":"(*ScreenSaver, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (ss *ScreenSaver) setTimeout(seconds, interval uint32, blank bool)","Funname":"setTimeout","Returntype":"","Args":"seconds, interval uint32, blank bool"},{"Uniquefunname":"func (ss *ScreenSaver) unInhibit(cookie uint32)","Funname":"unInhibit","Returntype":"","Args":"cookie uint32"}],"Records":[{"Name":"struct:screensaver.ScreenSaver","Fields":["screensaver.ScreenSaver.blank byte","screensaver.ScreenSaver.counter uint32","screensaver.ScreenSaver.dbusDaemon *ofdbus.DBus","screensaver.ScreenSaver.idleInterval uint32","screensaver.ScreenSaver.idleTime uint32","screensaver.ScreenSaver.inhibitors map[uint32]inhibitor","screensaver.ScreenSaver.lastVals *timeoutVals","screensaver.ScreenSaver.methods *struct { Inhibit func() `in:\"name,reason\" out:\"cookie\"`; UnInhibit func() `in:\"cookie\"`; SetTimeout func() `in:\"seconds,interval,blank\"`; }","screensaver.ScreenSaver.mu sync.Mutex","screensaver.ScreenSaver.service *dbusutil.Service","screensaver.ScreenSaver.sigLoop *dbusutil.SignalLoop","screensaver.ScreenSaver.signals *struct { IdleOn struct{}; CycleActive struct{}; IdleOff struct{}; }","screensaver.ScreenSaver.xConn *x.Conn"]},{"Name":"const:screensaver","Fields":["screensaver.dbusInterface","screensaver.dbusPath","screensaver.dbusServiceName"]},{"Name":"struct:screensaver.inhibitor","Fields":["screensaver.inhibitor.cookie uint32","screensaver.inhibitor.name string","screensaver.inhibitor.reason string","screensaver.inhibitor.sender dbus.Sender"]},{"Name":"var:screensaver","Fields":["screensaver.logger"]},{"Name":"struct:screensaver.timeoutVals","Fields":["screensaver.timeoutVals.blank bool","screensaver.timeoutVals.interval uint32","screensaver.timeoutVals.seconds uint32"]}]}
{"Filepath":"screensaver/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"screensaver.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"screensaver.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"const:screensaver","Fields":["screensaver.dScreenSaverPath","screensaver.dScreenSaverServiceName","screensaver.gsKeyBatteryScreensaverDelay","screensaver.gsKeyLinePowerScreensaverDelay","screensaver.gsSchemaPower","screensaver.keyCurrent","screensaver.keyLockScreenAtAwake","screensaver.sectionGeneral"]},{"Name":"var:screensaver","Fields":["screensaver.dScreensaverConfigFile"]},{"Name":"struct:screensaver.syncData","Fields":["screensaver.syncData.BatteryDelay int","screensaver.syncData.Current string","screensaver.syncData.LinePowerDelay int","screensaver.syncData.LockScreenAtAwake bool","screensaver.syncData.Version string"]}]}
{"Filepath":"service_trigger/daemon.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"service_trigger.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"service_trigger.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"service_trigger.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"service_trigger.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func init()","Funname":"service_trigger.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:service_trigger.Daemon","Fields":["service_trigger.Daemon.manager *Manager"]},{"Name":"var:service_trigger","Fields":["service_trigger.logger"]},{"Name":"const:service_trigger","Fields":["service_trigger.moduleName"]}]}
{"Filepath":"service_trigger/dbus_signal_monitor.go","Functions":[{"Uniquefunname":"func addMatch(conn *dbus.Conn, rule string) error","Funname":"addMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) appendService(service *Service)","Funname":"appendService","Returntype":"","Args":"service *Service"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) findMatchedServices(signal *dbus.Signal) []*Service","Funname":"findMatchedServices","Returntype":"[]*Service","Args":"signal *dbus.Signal"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) getConn() (*dbus.Conn, error)","Funname":"getConn","Returntype":"(*dbus.Conn, error)","Args":""},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) handleNameOwnerChanged(signalBody []interface","Funname":"handleNameOwnerChanged","Returntype":"","Args":"signalBody []interface{}"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newDBusSignalMonitor(Type uint) *DBusSignalMonitor","Funname":"newDBusSignalMonitor","Returntype":"*DBusSignalMonitor","Args":"Type uint"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) appendService(service *Service)","Funname":"service_trigger.DBusSignalMonitor.appendService","Returntype":"","Args":"service *Service"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) findMatchedServices(signal *dbus.Signal) []*Service","Funname":"service_trigger.DBusSignalMonitor.findMatchedServices","Returntype":"[]*Service","Args":"signal *dbus.Signal"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) getConn() (*dbus.Conn, error)","Funname":"service_trigger.DBusSignalMonitor.getConn","Returntype":"(*dbus.Conn, error)","Args":""},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) handleNameOwnerChanged(signalBody []interface","Funname":"service_trigger.DBusSignalMonitor.handleNameOwnerChanged","Returntype":"","Args":"signalBody []interface{}"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) init()","Funname":"service_trigger.DBusSignalMonitor.init","Returntype":"","Args":""},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) signalLoop(m *Manager)","Funname":"service_trigger.DBusSignalMonitor.signalLoop","Returntype":"","Args":"m *Manager"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) stop() error","Funname":"service_trigger.DBusSignalMonitor.stop","Returntype":"error","Args":""},{"Uniquefunname":"func addMatch(conn *dbus.Conn, rule string) error","Funname":"service_trigger.addMatch","Returntype":"error","Args":"conn *dbus.Conn, rule string"},{"Uniquefunname":"func newDBusSignalMonitor(Type uint) *DBusSignalMonitor","Funname":"service_trigger.newDBusSignalMonitor","Returntype":"*DBusSignalMonitor","Args":"Type uint"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) signalLoop(m *Manager)","Funname":"signalLoop","Returntype":"","Args":"m *Manager"},{"Uniquefunname":"func (sigMonitor *DBusSignalMonitor) stop() error","Funname":"stop","Returntype":"error","Args":""}],"Records":[{"Name":"struct:service_trigger.DBusSignalMonitor","Fields":["service_trigger.DBusSignalMonitor.Type uint","service_trigger.DBusSignalMonitor.conn *dbus.Conn","service_trigger.DBusSignalMonitor.nameMap map[string]string","service_trigger.DBusSignalMonitor.services []*Service","service_trigger.DBusSignalMonitor.signalChan chan *dbus.Signal"]},{"Name":"const:service_trigger","Fields":["service_trigger.busTypeSession","service_trigger.busTypeSystem","service_trigger.ruleNameOwnerChanged"]}]}
{"Filepath":"service_trigger/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) execService(service *Service, signal *dbus.Signal)","Funname":"execService","Returntype":"","Args":"service *Service, signal *dbus.Signal"},{"Uniquefunname":"func getNameOwner(conn *dbus.Conn, name string) (string, error)","Funname":"getNameOwner","Returntype":"(string, error)","Args":"conn *dbus.Conn, name string"},{"Uniquefunname":"func (m *Manager) loadServices()","Funname":"loadServices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) loadServicesFromDir(dirname string)","Funname":"loadServicesFromDir","Returntype":"","Args":"dirname string"},{"Uniquefunname":"func newManager() *Manager","Funname":"newManager","Returntype":"*Manager","Args":""},{"Uniquefunname":"func newReplacer(signal *dbus.Signal) *strings.Replacer","Funname":"newReplacer","Returntype":"*strings.Replacer","Args":"signal *dbus.Signal"},{"Uniquefunname":"func (m *Manager) execService(service *Service, signal *dbus.Signal)","Funname":"service_trigger.Manager.execService","Returntype":"","Args":"service *Service, signal *dbus.Signal"},{"Uniquefunname":"func (m *Manager) loadServices()","Funname":"service_trigger.Manager.loadServices","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) loadServicesFromDir(dirname string)","Funname":"service_trigger.Manager.loadServicesFromDir","Returntype":"","Args":"dirname string"},{"Uniquefunname":"func (m *Manager) start()","Funname":"service_trigger.Manager.start","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) stop() error","Funname":"service_trigger.Manager.stop","Returntype":"error","Args":""},{"Uniquefunname":"func getNameOwner(conn *dbus.Conn, name string) (string, error)","Funname":"service_trigger.getNameOwner","Returntype":"(string, error)","Args":"conn *dbus.Conn, name string"},{"Uniquefunname":"func newManager() *Manager","Funname":"service_trigger.newManager","Returntype":"*Manager","Args":""},{"Uniquefunname":"func newReplacer(signal *dbus.Signal) *strings.Replacer","Funname":"service_trigger.newReplacer","Returntype":"*strings.Replacer","Args":"signal *dbus.Signal"},{"Uniquefunname":"func (m *Manager) start()","Funname":"start","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) stop() error","Funname":"stop","Returntype":"error","Args":""}],"Records":[{"Name":"struct:service_trigger.Manager","Fields":["service_trigger.Manager.serviceMap map[string]*Service","service_trigger.Manager.sessionSigMonitor *DBusSignalMonitor","service_trigger.Manager.systemSigMonitor *DBusSignalMonitor"]},{"Name":"const:service_trigger","Fields":["service_trigger.serviceFileExt"]}]}
{"Filepath":"service_trigger/msg.go","Functions":[{"Uniquefunname":"func Tr(in string) string","Funname":"Tr","Returntype":"string","Args":"in string"},{"Uniquefunname":"func Tr(in string) string","Funname":"service_trigger.Tr","Returntype":"string","Args":"in string"}],"Records":[{"Name":"var:service_trigger","Fields":["service_trigger._"]}]}
{"Filepath":"service_trigger/service.go","Functions":[{"Uniquefunname":"func (service *Service) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (service *Service) check() error","Funname":"check","Returntype":"error","Args":""},{"Uniquefunname":"func (service *Service) checkDBus() error","Funname":"checkDBus","Returntype":"error","Args":""},{"Uniquefunname":"func (service *Service) getDBusMatchRule() string","Funname":"getDBusMatchRule","Returntype":"string","Args":""},{"Uniquefunname":"func loadService(filename string) (*Service, error)","Funname":"loadService","Returntype":"(*Service, error)","Args":"filename string"},{"Uniquefunname":"func (service *Service) String() string","Funname":"service_trigger.Service.String","Returntype":"string","Args":""},{"Uniquefunname":"func (service *Service) check() error","Funname":"service_trigger.Service.check","Returntype":"error","Args":""},{"Uniquefunname":"func (service *Service) checkDBus() error","Funname":"service_trigger.Service.checkDBus","Returntype":"error","Args":""},{"Uniquefunname":"func (service *Service) getDBusMatchRule() string","Funname":"service_trigger.Service.getDBusMatchRule","Returntype":"string","Args":""},{"Uniquefunname":"func loadService(filename string) (*Service, error)","Funname":"service_trigger.loadService","Returntype":"(*Service, error)","Args":"filename string"}],"Records":[{"Name":"struct:service_trigger.Service","Fields":["service_trigger.Service.Description string","service_trigger.Service.Exec []string","service_trigger.Service.Monitor struct { Type string; DBus *struct { BusType string ; Sender string; Interface string; Signal string; Path string ; }; }","service_trigger.Service.Name string","service_trigger.Service.basename string","service_trigger.Service.filename string"]}]}
{"Filepath":"session/common/common.go","Functions":[{"Uniquefunname":"func ActivateSysDaemonService(serviceName string) error","Funname":"ActivateSysDaemonService","Returntype":"error","Args":"serviceName string"},{"Uniquefunname":"func ActivateSysDaemonService(serviceName string) error","Funname":"common.ActivateSysDaemonService","Returntype":"error","Args":"serviceName string"}],"Records":null}
{"Filepath":"session/power/ambient_light_test.go","Functions":[{"Uniquefunname":"func Test_calcBrWithLightLevel(t *testing.T)","Funname":"Test_calcBrWithLightLevel","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_calcBrWithLightLevel(t *testing.T)","Funname":"power.Test_calcBrWithLightLevel","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"session/power/constant.go","Functions":null,"Records":[{"Name":"const:power","Fields":["power.batteryDisplay","power.cmdDDELowPower","power.gsSchemaPower","power.powerActionDoNothing","power.powerActionHibernate","power.powerActionShutdown","power.powerActionSuspend","power.powerActionTurnOffScreen","power.settingKeyActionPercentage","power.settingKeyActionTime","power.settingKeyAdjustBrightnessEnabled","power.settingKeyAmbientLightAdjuestBrightness","power.settingKeyBatteryLidClosedAction","power.settingKeyBatteryLockDelay","power.settingKeyBatteryPressPowerBtnAction","power.settingKeyBatteryScreenBlackDelay","power.settingKeyBatteryScreensaverDelay","power.settingKeyBatterySleepDelay","power.settingKeyBrightnessDropPercent","power.settingKeyCriticalPercentage","power.settingKeyCriticalTime","power.settingKeyDangerTime","power.settingKeyDangerlPercentage","power.settingKeyFullScreenWorkaroundEnabled","power.settingKeyLinePowerLidClosedAction","power.settingKeyLinePowerLockDelay","power.settingKeyLinePowerPressPowerBtnAction","power.settingKeyLinePowerScreenBlackDelay","power.settingKeyLinePowerScreensaverDelay","power.settingKeyLinePowerSleepDelay","power.settingKeyLowPercentage","power.settingKeyLowPowerAutoSleepThreshold","power.settingKeyLowPowerNotifyEnable","power.settingKeyLowPowerNotifyThreshold","power.settingKeyLowTime","power.settingKeyMode","power.settingKeyPowerButtonPressedExec","power.settingKeyPowerSavingEnabled","power.settingKeySaveBrightnessWhilePsm","power.settingKeyScreenBlackLock","power.settingKeySleepLock","power.settingKeyUsePercentageForPolicy"]}]}
{"Filepath":"session/power/count_ticker.go","Functions":[{"Uniquefunname":"func (t *countTicker) Reset()","Funname":"Reset","Returntype":"","Args":""},{"Uniquefunname":"func (t *countTicker) Stop()","Funname":"Stop","Returntype":"","Args":""},{"Uniquefunname":"func newCountTicker(interval time.Duration, action func(int)) *countTicker","Funname":"newCountTicker","Returntype":"*countTicker","Args":"interval time.Duration, action func(int)"},{"Uniquefunname":"func (t *countTicker) Reset()","Funname":"power.countTicker.Reset","Returntype":"","Args":""},{"Uniquefunname":"func (t *countTicker) Stop()","Funname":"power.countTicker.Stop","Returntype":"","Args":""},{"Uniquefunname":"func newCountTicker(interval time.Duration, action func(int)) *countTicker","Funname":"power.newCountTicker","Returntype":"*countTicker","Args":"interval time.Duration, action func(int)"}],"Records":[{"Name":"struct:power.countTicker","Fields":["power.countTicker.action func(int)","power.countTicker.count int","power.countTicker.exit chan struct{}","power.countTicker.interval time.Duration","power.countTicker.ticker *time.Ticker"]}]}
{"Filepath":"session/power/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"power.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"power.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"power.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"power.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"power.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:power.Daemon","Fields":["power.Daemon.manager *Manager"]},{"Name":"var:power","Fields":["power.logger"]}]}
{"Filepath":"session/power/delayed_task.go","Functions":[{"Uniquefunname":"func (t *delayedTask) Cancel()","Funname":"Cancel","Returntype":"","Args":""},{"Uniquefunname":"func (tasks delayedTasks) CancelAll()","Funname":"CancelAll","Returntype":"","Args":""},{"Uniquefunname":"func (tasks delayedTasks) Wait(delay time.Duration, countMax int)","Funname":"Wait","Returntype":"","Args":"delay time.Duration, countMax int"},{"Uniquefunname":"func newDelayedTask(name string, delay time.Duration, fn func()) *delayedTask","Funname":"newDelayedTask","Returntype":"*delayedTask","Args":"name string, delay time.Duration, fn func()"},{"Uniquefunname":"func (t *delayedTask) Cancel()","Funname":"power.delayedTask.Cancel","Returntype":"","Args":""},{"Uniquefunname":"func (tasks delayedTasks) CancelAll()","Funname":"power.delayedTasks.CancelAll","Returntype":"","Args":""},{"Uniquefunname":"func (tasks delayedTasks) Wait(delay time.Duration, countMax int)","Funname":"power.delayedTasks.Wait","Returntype":"","Args":"delay time.Duration, countMax int"},{"Uniquefunname":"func newDelayedTask(name string, delay time.Duration, fn func()) *delayedTask","Funname":"power.newDelayedTask","Returntype":"*delayedTask","Args":"name string, delay time.Duration, fn func()"}],"Records":[{"Name":"struct:power.delayedTask","Fields":["power.delayedTask.cancelable bool","power.delayedTask.mu sync.Mutex","power.delayedTask.name string","power.delayedTask.state delayedTaskState","power.delayedTask.timer *time.Timer"]},{"Name":"const:power","Fields":["power.delayedTaskStateDone","power.delayedTaskStateReady","power.delayedTaskStateRunning"]}]}
{"Filepath":"session/power/helper.go","Functions":[{"Uniquefunname":"func (h *Helper) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *Helper) init(sysBus, sessionBus *dbus.Conn) error","Funname":"init","Returntype":"error","Args":"sysBus, sessionBus *dbus.Conn"},{"Uniquefunname":"func (h *Helper) initSignalExt(systemSigLoop, sessionSigLoop *dbusutil.SignalLoop)","Funname":"initSignalExt","Returntype":"","Args":"systemSigLoop, sessionSigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func newHelper(systemBus, sessionBus *dbus.Conn) (*Helper, error)","Funname":"newHelper","Returntype":"(*Helper, error)","Args":"systemBus, sessionBus *dbus.Conn"},{"Uniquefunname":"func (h *Helper) Destroy()","Funname":"power.Helper.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *Helper) init(sysBus, sessionBus *dbus.Conn) error","Funname":"power.Helper.init","Returntype":"error","Args":"sysBus, sessionBus *dbus.Conn"},{"Uniquefunname":"func (h *Helper) initSignalExt(systemSigLoop, sessionSigLoop *dbusutil.SignalLoop)","Funname":"power.Helper.initSignalExt","Returntype":"","Args":"systemSigLoop, sessionSigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func newHelper(systemBus, sessionBus *dbus.Conn) (*Helper, error)","Funname":"power.newHelper","Returntype":"(*Helper, error)","Args":"systemBus, sessionBus *dbus.Conn"}],"Records":[{"Name":"struct:power.Helper","Fields":["power.Helper.Daemon *daemon.Daemon","power.Helper.Display *display.Display","power.Helper.LoginManager *login1.Manager","power.Helper.Notifications *notifications.Notifications","power.Helper.Power *libpower.Power","power.Helper.ScreenSaver *screensaver.ScreenSaver","power.Helper.SensorProxy *sensorproxy.SensorProxy","power.Helper.SessionManager *sessionmanager.SessionManager","power.Helper.SessionWatcher *sessionwatcher.SessionWatcher","power.Helper.SysDBusDaemon *ofdbus.DBus","power.Helper.xConn *x.Conn"]}]}
{"Filepath":"session/power/lid_switch.go","Functions":[{"Uniquefunname":"func (h *LidSwitchHandler) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func isBuiltinOutput(name string) bool","Funname":"isBuiltinOutput","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func newLidSwitchHandler(m *Manager) (string, submodule, error)","Funname":"newLidSwitchHandler","Returntype":"(string, submodule, error)","Args":"m *Manager"},{"Uniquefunname":"func (h *LidSwitchHandler) onLidClosed()","Funname":"onLidClosed","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) onLidOpened()","Funname":"onLidOpened","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) Destroy()","Funname":"power.LidSwitchHandler.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) Start() error","Funname":"power.LidSwitchHandler.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) onLidClosed()","Funname":"power.LidSwitchHandler.onLidClosed","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) onLidOpened()","Funname":"power.LidSwitchHandler.onLidOpened","Returntype":"","Args":""},{"Uniquefunname":"func (h *LidSwitchHandler) stopAskUser() error","Funname":"power.LidSwitchHandler.stopAskUser","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"power.init","Returntype":"","Args":""},{"Uniquefunname":"func isBuiltinOutput(name string) bool","Funname":"power.isBuiltinOutput","Returntype":"bool","Args":"name string"},{"Uniquefunname":"func newLidSwitchHandler(m *Manager) (string, submodule, error)","Funname":"power.newLidSwitchHandler","Returntype":"(string, submodule, error)","Args":"m *Manager"},{"Uniquefunname":"func (h *LidSwitchHandler) stopAskUser() error","Funname":"stopAskUser","Returntype":"error","Args":""}],"Records":[{"Name":"struct:power.LidSwitchHandler","Fields":["power.LidSwitchHandler.cmd *exec.Cmd","power.LidSwitchHandler.manager *Manager"]},{"Name":"const:power","Fields":["power.lidSwitchStateClose","power.lidSwitchStateOpen","power.lidSwitchStateUnknown"]}]}
{"Filepath":"session/power/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetPrepareSuspend(v int) *dbus.Error","Funname":"SetPrepareSuspend","Returntype":"*dbus.Error","Args":"v int"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) inhibitLogind()","Funname":"inhibitLogind","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isX11SessionActive() (bool, error)","Funname":"isX11SessionActive","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) permitLogind()","Funname":"permitLogind","Returntype":"","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"power.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"power.Manager.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetPrepareSuspend(v int) *dbus.Error","Funname":"power.Manager.SetPrepareSuspend","Returntype":"*dbus.Error","Args":"v int"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"power.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) inhibitLogind()","Funname":"power.Manager.inhibitLogind","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"power.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isX11SessionActive() (bool, error)","Funname":"power.Manager.isX11SessionActive","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Manager) permitLogind()","Funname":"power.Manager.permitLogind","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"power.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:power.Manager","Fields":["power.Manager.AmbientLightAdjustBrightness gsprop.Bool","power.Manager.BatteryIsPresent map[string]bool","power.Manager.BatteryLidClosedAction gsprop.Enum","power.Manager.BatteryLockDelay gsprop.Int","power.Manager.BatteryPercentage map[string]float64","power.Manager.BatteryPressPowerBtnAction gsprop.Enum","power.Manager.BatteryScreenBlackDelay gsprop.Int","power.Manager.BatteryScreensaverDelay gsprop.Int","power.Manager.BatterySleepDelay gsprop.Int","power.Manager.BatteryState map[string]uint32","power.Manager.HasAmbientLightSensor bool","power.Manager.IsHighPerformanceSupported bool","power.Manager.LidClosedSleep gsprop.Bool","power.Manager.LidIsPresent bool","power.Manager.LinePowerLidClosedAction gsprop.Enum","power.Manager.LinePowerLockDelay gsprop.Int","power.Manager.LinePowerPressPowerBtnAction gsprop.Enum","power.Manager.LinePowerScreenBlackDelay gsprop.Int","power.Manager.LinePowerScreensaverDelay gsprop.Int","power.Manager.LinePowerSleepDelay gsprop.Int","power.Manager.LowPowerAutoSleepThreshold gsprop.Int","power.Manager.LowPowerNotifyEnable gsprop.Bool","power.Manager.LowPowerNotifyThreshold gsprop.Int","power.Manager.OnBattery bool","power.Manager.PropsMu sync.RWMutex","power.Manager.ScreenBlackLock gsprop.Bool","power.Manager.SleepLock gsprop.Bool","power.Manager.UseWayland bool","power.Manager.WarnLevel WarnLevel","power.Manager.ambientLightClaimed bool","power.Manager.helper *Helper","power.Manager.inhibitFd dbus.UnixFD","power.Manager.inhibitor *sleepInhibitor","power.Manager.lidSwitchState uint","power.Manager.lightLevelUnit string","power.Manager.methods *struct { SetPrepareSuspend func() `in:\"suspendState\"`; }","power.Manager.prepareSuspend int","power.Manager.prepareSuspendLocker sync.Mutex","power.Manager.savingModeBrightnessDropPercent gsprop.Int","power.Manager.service *dbusutil.Service","power.Manager.sessionActive bool","power.Manager.sessionSigLoop *dbusutil.SignalLoop","power.Manager.settings *gio.Settings","power.Manager.submodules map[string]submodule","power.Manager.syncConfig *dsync.Config","power.Manager.systemPower *systemPower.Power","power.Manager.systemSigLoop *dbusutil.SignalLoop","power.Manager.warnLevelConfig *WarnLevelConfigManager","power.Manager.warnLevelCountTicker *countTicker"]},{"Name":"var:power","Fields":["power._manager"]}]}
{"Filepath":"session/power/manager_ambient_light.go","Functions":[{"Uniquefunname":"func calcBrWithLightLevel(lightLevel float64) byte","Funname":"calcBrWithLightLevel","Returntype":"byte","Args":"lightLevel float64"},{"Uniquefunname":"func (m *Manager) claimAmbientLight()","Funname":"claimAmbientLight","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) claimOrReleaseAmbientLight()","Funname":"claimOrReleaseAmbientLight","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleLightLevelChanged(lightLevel float64)","Funname":"handleLightLevelChanged","Returntype":"","Args":"lightLevel float64"},{"Uniquefunname":"func (m *Manager) claimAmbientLight()","Funname":"power.Manager.claimAmbientLight","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) claimOrReleaseAmbientLight()","Funname":"power.Manager.claimOrReleaseAmbientLight","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleLightLevelChanged(lightLevel float64)","Funname":"power.Manager.handleLightLevelChanged","Returntype":"","Args":"lightLevel float64"},{"Uniquefunname":"func (m *Manager) releaseAmbientLight()","Funname":"power.Manager.releaseAmbientLight","Returntype":"","Args":""},{"Uniquefunname":"func calcBrWithLightLevel(lightLevel float64) byte","Funname":"power.calcBrWithLightLevel","Returntype":"byte","Args":"lightLevel float64"},{"Uniquefunname":"func (m *Manager) releaseAmbientLight()","Funname":"releaseAmbientLight","Returntype":"","Args":""}],"Records":[{"Name":"struct:power.lightLevelBr","Fields":["power.lightLevelBr.brightness byte","power.lightLevelBr.lightLevel int"]},{"Name":"var:power","Fields":["power.lightLevelBrTable"]}]}
{"Filepath":"session/power/manager_events.go","Functions":[{"Uniquefunname":"func (m *Manager) disableWarnLevelCountTicker()","Funname":"disableWarnLevelCountTicker","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleBatteryDisplayUpdate()","Funname":"handleBatteryDisplayUpdate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleBeforeSuspend()","Funname":"handleBeforeSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWakeup()","Funname":"handleWakeup","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWarnLevelChanged(level WarnLevel)","Funname":"handleWarnLevelChanged","Returntype":"","Args":"level WarnLevel"},{"Uniquefunname":"func (m *Manager) initOnBatteryChangedHandler()","Funname":"initOnBatteryChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) disableWarnLevelCountTicker()","Funname":"power.Manager.disableWarnLevelCountTicker","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleBatteryDisplayUpdate()","Funname":"power.Manager.handleBatteryDisplayUpdate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleBeforeSuspend()","Funname":"power.Manager.handleBeforeSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWakeup()","Funname":"power.Manager.handleWakeup","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleWarnLevelChanged(level WarnLevel)","Funname":"power.Manager.handleWarnLevelChanged","Returntype":"","Args":"level WarnLevel"},{"Uniquefunname":"func (m *Manager) initOnBatteryChangedHandler()","Funname":"power.Manager.initOnBatteryChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setPrepareSuspend(v int)","Funname":"power.Manager.setPrepareSuspend","Returntype":"","Args":"v int"},{"Uniquefunname":"func (m *Manager) shouldIgnoreIdleOff() bool","Funname":"power.Manager.shouldIgnoreIdleOff","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) shouldIgnoreIdleOn() bool","Funname":"power.Manager.shouldIgnoreIdleOn","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) setPrepareSuspend(v int)","Funname":"setPrepareSuspend","Returntype":"","Args":"v int"},{"Uniquefunname":"func (m *Manager) shouldIgnoreIdleOff() bool","Funname":"shouldIgnoreIdleOff","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) shouldIgnoreIdleOn() bool","Funname":"shouldIgnoreIdleOn","Returntype":"bool","Args":""}],"Records":[{"Name":"const:power","Fields":["power.suspendStateButtonClick","power.suspendStateFinish","power.suspendStateLidClose","power.suspendStateLidOpen","power.suspendStatePrepare","power.suspendStateUnknown","power.suspendStateWakeup"]}]}
{"Filepath":"session/power/manager_stub.go","Functions":[{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryIsPresent()","Funname":"emitPropChangedBatteryIsPresent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryPercentage()","Funname":"emitPropChangedBatteryPercentage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryState()","Funname":"emitPropChangedBatteryState","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryIsPresent()","Funname":"power.Manager.emitPropChangedBatteryIsPresent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryPercentage()","Funname":"power.Manager.emitPropChangedBatteryPercentage","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedBatteryState()","Funname":"power.Manager.emitPropChangedBatteryState","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setPropBatteryIsPresent(val bool)","Funname":"power.Manager.setPropBatteryIsPresent","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (m *Manager) setPropBatteryPercentage(val float64)","Funname":"power.Manager.setPropBatteryPercentage","Returntype":"","Args":"val float64"},{"Uniquefunname":"func (m *Manager) setPropBatteryState(val uint32)","Funname":"power.Manager.setPropBatteryState","Returntype":"","Args":"val uint32"},{"Uniquefunname":"func (m *Manager) setPropBatteryIsPresent(val bool)","Funname":"setPropBatteryIsPresent","Returntype":"","Args":"val bool"},{"Uniquefunname":"func (m *Manager) setPropBatteryPercentage(val float64)","Funname":"setPropBatteryPercentage","Returntype":"","Args":"val float64"},{"Uniquefunname":"func (m *Manager) setPropBatteryState(val uint32)","Funname":"setPropBatteryState","Returntype":"","Args":"val uint32"}],"Records":[{"Name":"const:power","Fields":["power.dbusInterface","power.dbusPath","power.dbusServiceName"]}]}
{"Filepath":"session/power/power_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedHasAmbientLightSensor(value bool) error","Funname":"emitPropChangedHasAmbientLightSensor","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedLidIsPresent(value bool) error","Funname":"emitPropChangedLidIsPresent","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedOnBattery(value bool) error","Funname":"emitPropChangedOnBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWarnLevel(value WarnLevel) error","Funname":"emitPropChangedWarnLevel","Returntype":"error","Args":"value WarnLevel"},{"Uniquefunname":"func (v *Manager) emitPropChangedHasAmbientLightSensor(value bool) error","Funname":"power.Manager.emitPropChangedHasAmbientLightSensor","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedLidIsPresent(value bool) error","Funname":"power.Manager.emitPropChangedLidIsPresent","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedOnBattery(value bool) error","Funname":"power.Manager.emitPropChangedOnBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWarnLevel(value WarnLevel) error","Funname":"power.Manager.emitPropChangedWarnLevel","Returntype":"error","Args":"value WarnLevel"},{"Uniquefunname":"func (v *Manager) setPropHasAmbientLightSensor(value bool) (changed bool)","Funname":"power.Manager.setPropHasAmbientLightSensor","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropLidIsPresent(value bool) (changed bool)","Funname":"power.Manager.setPropLidIsPresent","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropOnBattery(value bool) (changed bool)","Funname":"power.Manager.setPropOnBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWarnLevel(value WarnLevel) (changed bool)","Funname":"power.Manager.setPropWarnLevel","Returntype":"(changed bool)","Args":"value WarnLevel"},{"Uniquefunname":"func (v *Manager) setPropHasAmbientLightSensor(value bool) (changed bool)","Funname":"setPropHasAmbientLightSensor","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropLidIsPresent(value bool) (changed bool)","Funname":"setPropLidIsPresent","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropOnBattery(value bool) (changed bool)","Funname":"setPropOnBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWarnLevel(value WarnLevel) (changed bool)","Funname":"setPropWarnLevel","Returntype":"(changed bool)","Args":"value WarnLevel"}],"Records":null}
{"Filepath":"session/power/power_save_plan.go","Functions":[{"Uniquefunname":"func (psp *powerSavePlan) Destroy()","Funname":"Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) HandleIdleOff()","Funname":"HandleIdleOff","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) HandleIdleOn()","Funname":"HandleIdleOn","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) OnBattery()","Funname":"OnBattery","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) OnLinePower()","Funname":"OnLinePower","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) Reset()","Funname":"Reset","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func Update(screenSaverStartDelay, lockDelay, screenBlackDelay, sleepDelay int32)","Funname":"Update","Returntype":"","Args":"screenSaverStartDelay, lockDelay, screenBlackDelay, sleepDelay int32"},{"Uniquefunname":"func (psp *powerSavePlan) addTask(t *delayedTask)","Funname":"addTask","Returntype":"","Args":"t *delayedTask"},{"Uniquefunname":"func (psp *powerSavePlan) addTaskNoLock(t *delayedTask)","Funname":"addTaskNoLock","Returntype":"","Args":"t *delayedTask"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) checkBrightnessChanged(data map[string]float64) bool","Funname":"checkBrightnessChanged","Returntype":"bool","Args":"data map[string]float64"},{"Uniquefunname":"func (psp *powerSavePlan) dealWithPowerSavingModeWhenSystemBoot()","Funname":"dealWithPowerSavingModeWhenSystemBoot","Returntype":"","Args":""},{"Uniquefunname":"func getReferenceBrightnessWhilePsmPercentChanged(key string)(float64, error)","Funname":"getReferenceBrightnessWhilePsmPercentChanged","Returntype":"(float64, error)","Args":"key string"},{"Uniquefunname":"func handleBrightnessPropertyChanged(value bool, value2 map[string]float64)","Funname":"handleBrightnessPropertyChanged","Returntype":"","Args":"value bool, value2 map[string]float64"},{"Uniquefunname":"func handlePowerSavingModeBrightnessDropPercentChanged(hasValue bool, lowerValue uint32)","Funname":"handlePowerSavingModeBrightnessDropPercentChanged","Returntype":"","Args":"hasValue bool, lowerValue uint32"},{"Uniquefunname":"func (psp *powerSavePlan) handlePowerSavingModeChanged(hasValue bool, enabled bool)","Funname":"handlePowerSavingModeChanged","Returntype":"","Args":"hasValue bool, enabled bool"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) initMultiBrightnessWithPsm()","Funname":"initMultiBrightnessWithPsm","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) initSettingsChangedHandler()","Funname":"initSettingsChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) interruptTasks()","Funname":"interruptTasks","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) isWindowFullScreenAndFocused(xid x.Window) (bool, error)","Funname":"isWindowFullScreenAndFocused","Returntype":"(bool, error)","Args":"xid x.Window"},{"Uniquefunname":"func (psp *powerSavePlan) lock()","Funname":"lock","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) makeSystemSleep()","Funname":"makeSystemSleep","Returntype":"","Args":""},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) mapToObject()","Funname":"mapToObject","Returntype":"","Args":""},{"Uniquefunname":"func (mts metaTasks) min() int32","Funname":"min","Returntype":"int32","Args":""},{"Uniquefunname":"func newMultiBrightnessWithPsm() *multiBrightnessWithPsm","Funname":"newMultiBrightnessWithPsm","Returntype":"*multiBrightnessWithPsm","Args":""},{"Uniquefunname":"func newPowerSavePlan(manager *Manager) (string, submodule, error)","Funname":"newPowerSavePlan","Returntype":"(string, submodule, error)","Args":"manager *Manager"},{"Uniquefunname":"func init()","Funname":"power.init","Returntype":"","Args":""},{"Uniquefunname":"func (mts metaTasks) min() int32","Funname":"power.metaTasks.min","Returntype":"int32","Args":""},{"Uniquefunname":"func (mts metaTasks) setRealDelay(min int32)","Funname":"power.metaTasks.setRealDelay","Returntype":"","Args":"min int32"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) checkBrightnessChanged(data map[string]float64) bool","Funname":"power.multiBrightnessWithPsm.checkBrightnessChanged","Returntype":"bool","Args":"data map[string]float64"},{"Uniquefunname":"func power.multiBrightnessWithPsm.getReferenceBrightnessWhilePsmPercentChanged(key string)(float64, error)","Funname":"power.multiBrightnessWithPsm.getReferenceBrightnessWhilePsmPercentChanged","Returntype":"(float64, error)","Args":"key string"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) init()","Funname":"power.multiBrightnessWithPsm.init","Returntype":"","Args":""},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) mapToObject()","Funname":"power.multiBrightnessWithPsm.mapToObject","Returntype":"","Args":""},{"Uniquefunname":"func power.multiBrightnessWithPsm.setBrightnessManuallyModified(name string, m bool, val float64)","Funname":"power.multiBrightnessWithPsm.setBrightnessManuallyModified","Returntype":"","Args":"name string, m bool, val float64"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) toObject(b string) error","Funname":"power.multiBrightnessWithPsm.toObject","Returntype":"error","Args":"b string"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) toString() (string, error)","Funname":"power.multiBrightnessWithPsm.toString","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func newMultiBrightnessWithPsm() *multiBrightnessWithPsm","Funname":"power.newMultiBrightnessWithPsm","Returntype":"*multiBrightnessWithPsm","Args":""},{"Uniquefunname":"func newPowerSavePlan(manager *Manager) (string, submodule, error)","Funname":"power.newPowerSavePlan","Returntype":"(string, submodule, error)","Args":"manager *Manager"},{"Uniquefunname":"func (psp *powerSavePlan) Destroy()","Funname":"power.powerSavePlan.Destroy","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) HandleIdleOff()","Funname":"power.powerSavePlan.HandleIdleOff","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) HandleIdleOn()","Funname":"power.powerSavePlan.HandleIdleOn","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) OnBattery()","Funname":"power.powerSavePlan.OnBattery","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) OnLinePower()","Funname":"power.powerSavePlan.OnLinePower","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) Reset()","Funname":"power.powerSavePlan.Reset","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) Start() error","Funname":"power.powerSavePlan.Start","Returntype":"error","Args":""},{"Uniquefunname":"func power.powerSavePlan.Update(screenSaverStartDelay, lockDelay, screenBlackDelay, sleepDelay int32)","Funname":"power.powerSavePlan.Update","Returntype":"","Args":"screenSaverStartDelay, lockDelay, screenBlackDelay, sleepDelay int32"},{"Uniquefunname":"func (psp *powerSavePlan) addTask(t *delayedTask)","Funname":"power.powerSavePlan.addTask","Returntype":"","Args":"t *delayedTask"},{"Uniquefunname":"func (psp *powerSavePlan) addTaskNoLock(t *delayedTask)","Funname":"power.powerSavePlan.addTaskNoLock","Returntype":"","Args":"t *delayedTask"},{"Uniquefunname":"func (psp *powerSavePlan) dealWithPowerSavingModeWhenSystemBoot()","Funname":"power.powerSavePlan.dealWithPowerSavingModeWhenSystemBoot","Returntype":"","Args":""},{"Uniquefunname":"func power.powerSavePlan.handleBrightnessPropertyChanged(value bool, value2 map[string]float64)","Funname":"power.powerSavePlan.handleBrightnessPropertyChanged","Returntype":"","Args":"value bool, value2 map[string]float64"},{"Uniquefunname":"func power.powerSavePlan.handlePowerSavingModeBrightnessDropPercentChanged(hasValue bool, lowerValue uint32)","Funname":"power.powerSavePlan.handlePowerSavingModeBrightnessDropPercentChanged","Returntype":"","Args":"hasValue bool, lowerValue uint32"},{"Uniquefunname":"func (psp *powerSavePlan) handlePowerSavingModeChanged(hasValue bool, enabled bool)","Funname":"power.powerSavePlan.handlePowerSavingModeChanged","Returntype":"","Args":"hasValue bool, enabled bool"},{"Uniquefunname":"func (psp *powerSavePlan) initMultiBrightnessWithPsm()","Funname":"power.powerSavePlan.initMultiBrightnessWithPsm","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) initSettingsChangedHandler()","Funname":"power.powerSavePlan.initSettingsChangedHandler","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) interruptTasks()","Funname":"power.powerSavePlan.interruptTasks","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) isWindowFullScreenAndFocused(xid x.Window) (bool, error)","Funname":"power.powerSavePlan.isWindowFullScreenAndFocused","Returntype":"(bool, error)","Args":"xid x.Window"},{"Uniquefunname":"func (psp *powerSavePlan) lock()","Funname":"power.powerSavePlan.lock","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) makeSystemSleep()","Funname":"power.powerSavePlan.makeSystemSleep","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) resetBrightness()","Funname":"power.powerSavePlan.resetBrightness","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) saveCurrentBrightness() error","Funname":"power.powerSavePlan.saveCurrentBrightness","Returntype":"error","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) screenBlack()","Funname":"power.powerSavePlan.screenBlack","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) setBrightnessFromDisplay()","Funname":"power.powerSavePlan.setBrightnessFromDisplay","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) setScreenSaverTimeout(seconds int32) error","Funname":"power.powerSavePlan.setScreenSaverTimeout","Returntype":"error","Args":"seconds int32"},{"Uniquefunname":"func (psp *powerSavePlan) setToBrightnessSave()","Funname":"power.powerSavePlan.setToBrightnessSave","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) shouldPreventIdle() (bool, error)","Funname":"power.powerSavePlan.shouldPreventIdle","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) startScreensaver()","Funname":"power.powerSavePlan.startScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) stopScreensaver()","Funname":"power.powerSavePlan.stopScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) resetBrightness()","Funname":"resetBrightness","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) saveCurrentBrightness() error","Funname":"saveCurrentBrightness","Returntype":"error","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) screenBlack()","Funname":"screenBlack","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) setBrightnessFromDisplay()","Funname":"setBrightnessFromDisplay","Returntype":"","Args":""},{"Uniquefunname":"func setBrightnessManuallyModified(name string, m bool, val float64)","Funname":"setBrightnessManuallyModified","Returntype":"","Args":"name string, m bool, val float64"},{"Uniquefunname":"func (mts metaTasks) setRealDelay(min int32)","Funname":"setRealDelay","Returntype":"","Args":"min int32"},{"Uniquefunname":"func (psp *powerSavePlan) setScreenSaverTimeout(seconds int32) error","Funname":"setScreenSaverTimeout","Returntype":"error","Args":"seconds int32"},{"Uniquefunname":"func (psp *powerSavePlan) setToBrightnessSave()","Funname":"setToBrightnessSave","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) shouldPreventIdle() (bool, error)","Funname":"shouldPreventIdle","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) startScreensaver()","Funname":"startScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func (psp *powerSavePlan) stopScreensaver()","Funname":"stopScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) toObject(b string) error","Funname":"toObject","Returntype":"error","Args":"b string"},{"Uniquefunname":"func (mb *multiBrightnessWithPsm) toString() (string, error)","Funname":"toString","Returntype":"(string, error)","Args":""}],"Records":[{"Name":"struct:power.brightnessWithPsp","Fields":["power.brightnessWithPsp.BrightnessLatest float64","power.brightnessWithPsp.BrightnessSaved float64","power.brightnessWithPsp.ManuallyModified bool","power.brightnessWithPsp.MonitorName string"]},{"Name":"struct:power.metaTask","Fields":["power.metaTask.delay int32","power.metaTask.fn func()","power.metaTask.name string","power.metaTask.realDelay time.Duration"]},{"Name":"struct:power.multiBrightnessWithPsm","Fields":["power.multiBrightnessWithPsm.MultiBrightness []brightnessWithPsp","power.multiBrightnessWithPsm.valueTmp map[string]float64"]},{"Name":"struct:power.powerSavePlan","Fields":["power.powerSavePlan.atomNetWMStateFocused x.Atom","power.powerSavePlan.atomNetWMStateFullscreen x.Atom","power.powerSavePlan.brightnessSave gsprop.String","power.powerSavePlan.fullscreenWorkaroundAppList []string","power.powerSavePlan.manager *Manager","power.powerSavePlan.metaTasks metaTasks","power.powerSavePlan.mu sync.Mutex","power.powerSavePlan.multiBrightnessWithPsm *multiBrightnessWithPsm","power.powerSavePlan.oldBrightnessTable map[string]float64","power.powerSavePlan.psmEnabledTime time.Time","power.powerSavePlan.psmPercentChangedTime time.Time","power.powerSavePlan.screenSaverTimeout int32","power.powerSavePlan.screensaverRunning bool","power.powerSavePlan.tasks delayedTasks"]},{"Name":"const:power","Fields":["power.submodulePSP"]}]}
{"Filepath":"session/power/power_test.go","Functions":[{"Uniquefunname":"func TestMetaTasksMin(t *testing.T)","Funname":"TestMetaTasksMin","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestWarnLevelConfig(t *testing.T)","Funname":"TestWarnLevelConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getWarnLevel(t *testing.T)","Funname":"Test_getWarnLevel","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMetaTasksMin(t *testing.T)","Funname":"power.TestMetaTasksMin","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestWarnLevelConfig(t *testing.T)","Funname":"power.TestWarnLevelConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getWarnLevel(t *testing.T)","Funname":"power.Test_getWarnLevel","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"session/power/sleep_inhibit.go","Functions":[{"Uniquefunname":"func (inhibitor *sleepInhibitor) block() error","Funname":"block","Returntype":"error","Args":""},{"Uniquefunname":"func newSleepInhibitor(login1Manager *login1.Manager, daemon *daemon.Daemon) *sleepInhibitor","Funname":"newSleepInhibitor","Returntype":"*sleepInhibitor","Args":"login1Manager *login1.Manager, daemon *daemon.Daemon"},{"Uniquefunname":"func newSleepInhibitor(login1Manager *login1.Manager, daemon *daemon.Daemon) *sleepInhibitor","Funname":"power.newSleepInhibitor","Returntype":"*sleepInhibitor","Args":"login1Manager *login1.Manager, daemon *daemon.Daemon"},{"Uniquefunname":"func (inhibitor *sleepInhibitor) block() error","Funname":"power.sleepInhibitor.block","Returntype":"error","Args":""},{"Uniquefunname":"func (inhibitor *sleepInhibitor) unblock() error","Funname":"power.sleepInhibitor.unblock","Returntype":"error","Args":""},{"Uniquefunname":"func (inhibitor *sleepInhibitor) unblock() error","Funname":"unblock","Returntype":"error","Args":""}],"Records":[{"Name":"struct:power.sleepInhibitor","Fields":["power.sleepInhibitor.OnBeforeSuspend func()","power.sleepInhibitor.OnWakeup func()","power.sleepInhibitor.fd int","power.sleepInhibitor.loginManager *login1.Manager"]}]}
{"Filepath":"session/power/submodule.go","Functions":[{"Uniquefunname":"func (m *Manager) _startSubmodule(name string) error","Funname":"_startSubmodule","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (m *Manager) destroySubmodules()","Funname":"destroySubmodules","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initSubmodules()","Funname":"initSubmodules","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) _startSubmodule(name string) error","Funname":"power.Manager._startSubmodule","Returntype":"error","Args":"name string"},{"Uniquefunname":"func (m *Manager) destroySubmodules()","Funname":"power.Manager.destroySubmodules","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initSubmodules()","Funname":"power.Manager.initSubmodules","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) startSubmodules()","Funname":"power.Manager.startSubmodules","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) startSubmodules()","Funname":"startSubmodules","Returntype":"","Args":""}],"Records":[{"Name":"interface","Fields":["power.submodule"]},{"Name":"var:power","Fields":["power.submoduleList"]}]}
{"Filepath":"session/power/sync_config.go","Functions":[{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"Set","Returntype":"error","Args":"data []byte"},{"Uniquefunname":"func (sc *syncConfig) Get() (interface","Funname":"power.syncConfig.Get","Returntype":"(interface{}, error)","Args":""},{"Uniquefunname":"func (sc *syncConfig) Set(data []byte) error","Funname":"power.syncConfig.Set","Returntype":"error","Args":"data []byte"}],"Records":[{"Name":"struct:power.syncConfig","Fields":["power.syncConfig.m *Manager"]},{"Name":"struct:power.syncData","Fields":["power.syncData.ScreenBlackLock bool","power.syncData.SleepLock bool","power.syncData.Version string"]}]}
{"Filepath":"session/power/utils.go","Functions":[{"Uniquefunname":"func doCloseDDELowPower()","Funname":"doCloseDDELowPower","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doHibernate()","Funname":"doHibernate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doLock(autoStartAuth bool)","Funname":"doLock","Returntype":"","Args":"autoStartAuth bool"},{"Uniquefunname":"func doShowDDELowPower()","Funname":"doShowDDELowPower","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doShutdown()","Funname":"doShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doSuspend()","Funname":"doSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doTurnOffScreen()","Funname":"doTurnOffScreen","Returntype":"","Args":""},{"Uniquefunname":"func getNotifyString(option string, action int32) string","Funname":"getNotifyString","Returntype":"string","Args":"option string, action int32"},{"Uniquefunname":"func getPowerActionString(action int32) string","Funname":"getPowerActionString","Returntype":"string","Args":"action int32"},{"Uniquefunname":"func (m *Manager) initGSettingsConnectChanged()","Funname":"initGSettingsConnectChanged","Returntype":"","Args":""},{"Uniquefunname":"func isFloatEqual(f1, f2 float64) bool","Funname":"isFloatEqual","Returntype":"bool","Args":"f1, f2 float64"},{"Uniquefunname":"func (m *Manager) lockWaitShow(timeout time.Duration, autoStartAuth bool)","Funname":"lockWaitShow","Returntype":"","Args":"timeout time.Duration, autoStartAuth bool"},{"Uniquefunname":"func playSound(name string)","Funname":"playSound","Returntype":"","Args":"name string"},{"Uniquefunname":"func (m *Manager) doHibernate()","Funname":"power.Manager.doHibernate","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doLock(autoStartAuth bool)","Funname":"power.Manager.doLock","Returntype":"","Args":"autoStartAuth bool"},{"Uniquefunname":"func (m *Manager) doShutdown()","Funname":"power.Manager.doShutdown","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doSuspend()","Funname":"power.Manager.doSuspend","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doTurnOffScreen()","Funname":"power.Manager.doTurnOffScreen","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initGSettingsConnectChanged()","Funname":"power.Manager.initGSettingsConnectChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) lockWaitShow(timeout time.Duration, autoStartAuth bool)","Funname":"power.Manager.lockWaitShow","Returntype":"","Args":"timeout time.Duration, autoStartAuth bool"},{"Uniquefunname":"func (m *Manager) sendChangeNotify(icon, summary, body string)","Funname":"power.Manager.sendChangeNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (m *Manager) sendNotify(icon, summary, body string)","Funname":"power.Manager.sendNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (m *Manager) setAndSaveDisplayBrightness(brightnessTable map[string]float64)","Funname":"power.Manager.setAndSaveDisplayBrightness","Returntype":"","Args":"brightnessTable map[string]float64"},{"Uniquefunname":"func (m *Manager) setDPMSModeOff()","Funname":"power.Manager.setDPMSModeOff","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setDPMSModeOn()","Funname":"power.Manager.setDPMSModeOn","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setDisplayBrightness(brightnessTable map[string]float64)","Funname":"power.Manager.setDisplayBrightness","Returntype":"","Args":"brightnessTable map[string]float64"},{"Uniquefunname":"func (m *Manager) waitLockShowing(timeout time.Duration)","Funname":"power.Manager.waitLockShowing","Returntype":"","Args":"timeout time.Duration"},{"Uniquefunname":"func doCloseDDELowPower()","Funname":"power.doCloseDDELowPower","Returntype":"","Args":""},{"Uniquefunname":"func doShowDDELowPower()","Funname":"power.doShowDDELowPower","Returntype":"","Args":""},{"Uniquefunname":"func getNotifyString(option string, action int32) string","Funname":"power.getNotifyString","Returntype":"string","Args":"option string, action int32"},{"Uniquefunname":"func getPowerActionString(action int32) string","Funname":"power.getPowerActionString","Returntype":"string","Args":"action int32"},{"Uniquefunname":"func isFloatEqual(f1, f2 float64) bool","Funname":"power.isFloatEqual","Returntype":"bool","Args":"f1, f2 float64"},{"Uniquefunname":"func playSound(name string)","Funname":"power.playSound","Returntype":"","Args":"name string"},{"Uniquefunname":"func startScreensaver()","Funname":"power.startScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func stopScreensaver()","Funname":"power.stopScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func suspendPulseSinks(suspend int)","Funname":"power.suspendPulseSinks","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func suspendPulseSources(suspend int)","Funname":"power.suspendPulseSources","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func (m *Manager) sendChangeNotify(icon, summary, body string)","Funname":"sendChangeNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (m *Manager) sendNotify(icon, summary, body string)","Funname":"sendNotify","Returntype":"","Args":"icon, summary, body string"},{"Uniquefunname":"func (m *Manager) setAndSaveDisplayBrightness(brightnessTable map[string]float64)","Funname":"setAndSaveDisplayBrightness","Returntype":"","Args":"brightnessTable map[string]float64"},{"Uniquefunname":"func (m *Manager) setDPMSModeOff()","Funname":"setDPMSModeOff","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setDPMSModeOn()","Funname":"setDPMSModeOn","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setDisplayBrightness(brightnessTable map[string]float64)","Funname":"setDisplayBrightness","Returntype":"","Args":"brightnessTable map[string]float64"},{"Uniquefunname":"func startScreensaver()","Funname":"startScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func stopScreensaver()","Funname":"stopScreensaver","Returntype":"","Args":""},{"Uniquefunname":"func suspendPulseSinks(suspend int)","Funname":"suspendPulseSinks","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func suspendPulseSources(suspend int)","Funname":"suspendPulseSources","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func (m *Manager) waitLockShowing(timeout time.Duration)","Funname":"waitLockShowing","Returntype":"","Args":"timeout time.Duration"}],"Records":[{"Name":"const:power","Fields":["power.deepinScreensaverDBusInterface","power.deepinScreensaverDBusPath","power.deepinScreensaverDBusServiceName","power.iconBatteryLow","power.lockFrontIfc","power.lockFrontObjPath","power.lockFrontServiceName"]}]}
{"Filepath":"session/power/warn_level.go","Functions":[{"Uniquefunname":"func (lv WarnLevel) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) getWarnLevel(percentage float64, timeToEmpty uint64) WarnLevel","Funname":"getWarnLevel","Returntype":"WarnLevel","Args":"percentage float64, timeToEmpty uint64"},{"Uniquefunname":"func getWarnLevel(config *warnLevelConfig, onBattery bool, percentage float64, timeToEmpty uint64)WarnLevel","Funname":"getWarnLevel","Returntype":"WarnLevel","Args":"config *warnLevelConfig, onBattery bool, percentage float64, timeToEmpty uint64"},{"Uniquefunname":"func (m *Manager) getWarnLevel(percentage float64, timeToEmpty uint64) WarnLevel","Funname":"power.Manager.getWarnLevel","Returntype":"WarnLevel","Args":"percentage float64, timeToEmpty uint64"},{"Uniquefunname":"func (lv WarnLevel) String() string","Funname":"power.WarnLevel.String","Returntype":"string","Args":""},{"Uniquefunname":"func power.getWarnLevel(config *warnLevelConfig, onBattery bool, percentage float64, timeToEmpty uint64)WarnLevel","Funname":"power.getWarnLevel","Returntype":"WarnLevel","Args":"config *warnLevelConfig, onBattery bool, percentage float64, timeToEmpty uint64"}],"Records":[{"Name":"const:power","Fields":["power.WarnLevelAction","power.WarnLevelCritical","power.WarnLevelDanger","power.WarnLevelLow","power.WarnLevelNone"]}]}
{"Filepath":"session/power/warn_level_config.go","Functions":[{"Uniquefunname":"func (*WarnLevelConfigManager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewWarnLevelConfigManager(gs *gio.Settings) *WarnLevelConfigManager","Funname":"NewWarnLevelConfigManager","Returntype":"*WarnLevelConfigManager","Args":"gs *gio.Settings"},{"Uniquefunname":"func (m *WarnLevelConfigManager) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) connectSettingsChanged()","Funname":"connectSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) delayCheckValid()","Funname":"delayCheckValid","Returntype":"","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) getWarnLevelConfig() *warnLevelConfig","Funname":"getWarnLevelConfig","Returntype":"*warnLevelConfig","Args":""},{"Uniquefunname":"func (c *warnLevelConfig) isValid() bool","Funname":"isValid","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) notifyChange()","Funname":"notifyChange","Returntype":"","Args":""},{"Uniquefunname":"func NewWarnLevelConfigManager(gs *gio.Settings) *WarnLevelConfigManager","Funname":"power.NewWarnLevelConfigManager","Returntype":"*WarnLevelConfigManager","Args":"gs *gio.Settings"},{"Uniquefunname":"func (*WarnLevelConfigManager) GetInterfaceName() string","Funname":"power.WarnLevelConfigManager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) Reset() *dbus.Error","Funname":"power.WarnLevelConfigManager.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) connectSettingsChanged()","Funname":"power.WarnLevelConfigManager.connectSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) delayCheckValid()","Funname":"power.WarnLevelConfigManager.delayCheckValid","Returntype":"","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) getWarnLevelConfig() *warnLevelConfig","Funname":"power.WarnLevelConfigManager.getWarnLevelConfig","Returntype":"*warnLevelConfig","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) notifyChange()","Funname":"power.WarnLevelConfigManager.notifyChange","Returntype":"","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) setChangeCallback(fn func())","Funname":"power.WarnLevelConfigManager.setChangeCallback","Returntype":"","Args":"fn func()"},{"Uniquefunname":"func (c *warnLevelConfig) isValid() bool","Funname":"power.warnLevelConfig.isValid","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *WarnLevelConfigManager) setChangeCallback(fn func())","Funname":"setChangeCallback","Returntype":"","Args":"fn func()"}],"Records":[{"Name":"struct:power.WarnLevelConfigManager","Fields":["power.WarnLevelConfigManager.ActionPercentage gsprop.Int","power.WarnLevelConfigManager.ActionTime gsprop.Int","power.WarnLevelConfigManager.CriticalPercentage gsprop.Int","power.WarnLevelConfigManager.CriticalTime gsprop.Int","power.WarnLevelConfigManager.DangerPercentage gsprop.Int","power.WarnLevelConfigManager.DangerTime gsprop.Int","power.WarnLevelConfigManager.LowPercentage gsprop.Int","power.WarnLevelConfigManager.LowTime gsprop.Int","power.WarnLevelConfigManager.UsePercentageForPolicy gsprop.Bool","power.WarnLevelConfigManager.changeCb func()","power.WarnLevelConfigManager.changeTimer *time.Timer","power.WarnLevelConfigManager.settings *gio.Settings"]},{"Name":"struct:power.warnLevelConfig","Fields":["power.warnLevelConfig.ActionPercentage float64","power.warnLevelConfig.ActionTime uint64","power.warnLevelConfig.CriticalPercentage float64","power.warnLevelConfig.CriticalTime uint64","power.warnLevelConfig.DangerPercentage float64","power.warnLevelConfig.DangerTime uint64","power.warnLevelConfig.LowPercentage float64","power.warnLevelConfig.LowTime uint64","power.warnLevelConfig.UsePercentageForPolicy bool"]}]}
{"Filepath":"session/uadpagent/module.go","Functions":[{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"uadpagent.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"uadpagent.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"uadpagent.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule(logger *log.Logger) *Module","Funname":"uadpagent.NewModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"uadpagent.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:uadpagent.Module","Fields":["uadpagent.Module.uAgent *UadpAgent"]}]}
{"Filepath":"session/uadpagent/uadpagent.go","Functions":[{"Uniquefunname":"func (u *UadpAgent) GetDataKey(sender dbus.Sender, keyName string) (string, *dbus.Error)","Funname":"GetDataKey","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, keyName string"},{"Uniquefunname":"func (*UadpAgent) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (u *UadpAgent) SetDataKey(sender dbus.Sender, keyName string, dataKey string) *dbus.Error","Funname":"SetDataKey","Returntype":"*dbus.Error","Args":"sender dbus.Sender, keyName string, dataKey string"},{"Uniquefunname":"func (u *UadpAgent) getDefaultCollection() (*secrets.Collection, error)","Funname":"getDefaultCollection","Returntype":"(*secrets.Collection, error)","Args":""},{"Uniquefunname":"func (u *UadpAgent) getExeKeyringKey(exePath string) (string, error)","Funname":"getExeKeyringKey","Returntype":"(string, error)","Args":"exePath string"},{"Uniquefunname":"func (u *UadpAgent) getExePath(sender dbus.Sender) (string, error)","Funname":"getExePath","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func getExePathAndKeyringKey(sender dbus.Sender, createIfNotExist bool)(string, string, error)","Funname":"getExePathAndKeyringKey","Returntype":"(string, string, error)","Args":"sender dbus.Sender, createIfNotExist bool"},{"Uniquefunname":"func (u *UadpAgent) getKeyringKey(exePath string, createIfNotExist bool) (string, error)","Funname":"getKeyringKey","Returntype":"(string, error)","Args":"exePath string, createIfNotExist bool"},{"Uniquefunname":"func getRandKey(length int) (string, error)","Funname":"getRandKey","Returntype":"(string, error)","Args":"length int"},{"Uniquefunname":"func newUadpAgent(service *dbusutil.Service) (*UadpAgent, error)","Funname":"newUadpAgent","Returntype":"(*UadpAgent, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (u *UadpAgent) saveExeKeyringKey(exePath, keyringKey string) error","Funname":"saveExeKeyringKey","Returntype":"error","Args":"exePath, keyringKey string"},{"Uniquefunname":"func (u *UadpAgent) GetDataKey(sender dbus.Sender, keyName string) (string, *dbus.Error)","Funname":"uadpagent.UadpAgent.GetDataKey","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, keyName string"},{"Uniquefunname":"func (*UadpAgent) GetInterfaceName() string","Funname":"uadpagent.UadpAgent.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (u *UadpAgent) SetDataKey(sender dbus.Sender, keyName string, dataKey string) *dbus.Error","Funname":"uadpagent.UadpAgent.SetDataKey","Returntype":"*dbus.Error","Args":"sender dbus.Sender, keyName string, dataKey string"},{"Uniquefunname":"func (u *UadpAgent) getDefaultCollection() (*secrets.Collection, error)","Funname":"uadpagent.UadpAgent.getDefaultCollection","Returntype":"(*secrets.Collection, error)","Args":""},{"Uniquefunname":"func (u *UadpAgent) getExeKeyringKey(exePath string) (string, error)","Funname":"uadpagent.UadpAgent.getExeKeyringKey","Returntype":"(string, error)","Args":"exePath string"},{"Uniquefunname":"func (u *UadpAgent) getExePath(sender dbus.Sender) (string, error)","Funname":"uadpagent.UadpAgent.getExePath","Returntype":"(string, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func uadpagent.UadpAgent.getExePathAndKeyringKey(sender dbus.Sender, createIfNotExist bool)(string, string, error)","Funname":"uadpagent.UadpAgent.getExePathAndKeyringKey","Returntype":"(string, string, error)","Args":"sender dbus.Sender, createIfNotExist bool"},{"Uniquefunname":"func (u *UadpAgent) getKeyringKey(exePath string, createIfNotExist bool) (string, error)","Funname":"uadpagent.UadpAgent.getKeyringKey","Returntype":"(string, error)","Args":"exePath string, createIfNotExist bool"},{"Uniquefunname":"func (u *UadpAgent) saveExeKeyringKey(exePath, keyringKey string) error","Funname":"uadpagent.UadpAgent.saveExeKeyringKey","Returntype":"error","Args":"exePath, keyringKey string"},{"Uniquefunname":"func getRandKey(length int) (string, error)","Funname":"uadpagent.getRandKey","Returntype":"(string, error)","Args":"length int"},{"Uniquefunname":"func newUadpAgent(service *dbusutil.Service) (*UadpAgent, error)","Funname":"uadpagent.newUadpAgent","Returntype":"(*UadpAgent, error)","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:uadpagent.UadpAgent","Fields":["uadpagent.UadpAgent.defaultCollection *secrets.Collection","uadpagent.UadpAgent.defaultCollectionMu sync.Mutex","uadpagent.UadpAgent.methods *struct { SetDataKey func() `in:\"keyName, dataKey\"`; GetDataKey func() `in:\"keyName\" out:\"dataKey\"`; }","uadpagent.UadpAgent.mu sync.Mutex","uadpagent.UadpAgent.secretData map[string]string","uadpagent.UadpAgent.secretService *secrets.Service","uadpagent.UadpAgent.secretSessionPath dbus.ObjectPath","uadpagent.UadpAgent.service *dbusutil.Service","uadpagent.UadpAgent.uadpDaemon *uadp.Uadp"]},{"Name":"const:uadpagent","Fields":["uadpagent.dbusInterface","uadpagent.dbusPath","uadpagent.dbusServiceName","uadpagent.keyringTagExePath"]},{"Name":"var:uadpagent","Fields":["uadpagent.logger"]}]}
{"Filepath":"sessionwatcher/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetSessions() (ret []dbus.ObjectPath, err *dbus.Error)","Funname":"GetSessions","Returntype":"(ret []dbus.ObjectPath, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) IsX11SessionActive() (bool, *dbus.Error)","Funname":"IsX11SessionActive","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) addSession(id string, path dbus.ObjectPath)","Funname":"addSession","Returntype":"","Args":"id string, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) deleteSession(id string, path dbus.ObjectPath)","Funname":"deleteSession","Returntype":"","Args":"id string, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getActiveSession() *login1.Session","Funname":"getActiveSession","Returntype":"*login1.Session","Args":""},{"Uniquefunname":"func (m *Manager) handleSessionChanged()","Funname":"handleSessionChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserSessions()","Funname":"initUserSessions","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"sessionwatcher.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetSessions() (ret []dbus.ObjectPath, err *dbus.Error)","Funname":"sessionwatcher.Manager.GetSessions","Returntype":"(ret []dbus.ObjectPath, err *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) IsX11SessionActive() (bool, *dbus.Error)","Funname":"sessionwatcher.Manager.IsX11SessionActive","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) addSession(id string, path dbus.ObjectPath)","Funname":"sessionwatcher.Manager.addSession","Returntype":"","Args":"id string, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) deleteSession(id string, path dbus.ObjectPath)","Funname":"sessionwatcher.Manager.deleteSession","Returntype":"","Args":"id string, path dbus.ObjectPath"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"sessionwatcher.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) getActiveSession() *login1.Session","Funname":"sessionwatcher.Manager.getActiveSession","Returntype":"*login1.Session","Args":""},{"Uniquefunname":"func (m *Manager) handleSessionChanged()","Funname":"sessionwatcher.Manager.handleSessionChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserSessions()","Funname":"sessionwatcher.Manager.initUserSessions","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) setIsActive(val bool) bool","Funname":"sessionwatcher.Manager.setIsActive","Returntype":"bool","Args":"val bool"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"sessionwatcher.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) setIsActive(val bool) bool","Funname":"setIsActive","Returntype":"bool","Args":"val bool"}],"Records":[{"Name":"struct:sessionwatcher.Manager","Fields":["sessionwatcher.Manager.IsActive bool","sessionwatcher.Manager.PropsMu sync.RWMutex","sessionwatcher.Manager.activeSessionType string","sessionwatcher.Manager.display *libdisplay.Display","sessionwatcher.Manager.loginManager *login1.Manager","sessionwatcher.Manager.methods *struct { GetSessions func() `out:\"sessions\"`; IsX11SessionActive func() `out:\"is_active\"`; }","sessionwatcher.Manager.mu sync.Mutex","sessionwatcher.Manager.service *dbusutil.Service","sessionwatcher.Manager.sessions map[string]*login1.Session","sessionwatcher.Manager.systemSigLoop *dbusutil.SignalLoop"]},{"Name":"var:sessionwatcher","Fields":["sessionwatcher._validSessionList"]},{"Name":"const:sessionwatcher","Fields":["sessionwatcher.dbusInterface","sessionwatcher.dbusPath","sessionwatcher.dbusServiceName"]}]}
{"Filepath":"sessionwatcher/sessionwatcher.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"sessionwatcher.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"sessionwatcher.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"sessionwatcher.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"sessionwatcher.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"sessionwatcher.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:sessionwatcher.Daemon","Fields":["sessionwatcher.Daemon.manager *Manager"]},{"Name":"var:sessionwatcher","Fields":["sessionwatcher.logger"]}]}
{"Filepath":"sessionwatcher/utils.go","Functions":[{"Uniquefunname":"func isCurrentUser(uid uint32) bool","Funname":"isCurrentUser","Returntype":"bool","Args":"uid uint32"},{"Uniquefunname":"func isCurrentUser(uid uint32) bool","Funname":"sessionwatcher.isCurrentUser","Returntype":"bool","Args":"uid uint32"},{"Uniquefunname":"func suspendPulseSinks(suspend int)","Funname":"sessionwatcher.suspendPulseSinks","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func suspendPulseSources(suspend int)","Funname":"sessionwatcher.suspendPulseSources","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func suspendPulseSinks(suspend int)","Funname":"suspendPulseSinks","Returntype":"","Args":"suspend int"},{"Uniquefunname":"func suspendPulseSources(suspend int)","Funname":"suspendPulseSources","Returntype":"","Args":"suspend int"}],"Records":null}
{"Filepath":"soundeffect/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) EnableSound(name string, enabled bool) *dbus.Error","Funname":"EnableSound","Returntype":"*dbus.Error","Args":"name string, enabled bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetSoundEnabledMap() (map[string]bool, *dbus.Error)","Funname":"GetSoundEnabledMap","Returntype":"(map[string]bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetSoundFile(name string) (string, *dbus.Error)","Funname":"GetSoundFile","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) GetSystemSoundFile(name string) (string, *dbus.Error)","Funname":"GetSystemSoundFile","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) IsSoundEnabled(name string) (bool, *dbus.Error)","Funname":"IsSoundEnabled","Returntype":"(bool, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) PlaySound(name string) *dbus.Error","Funname":"PlaySound","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (m *Manager) PlaySystemSound(name string) *dbus.Error","Funname":"PlaySystemSound","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) enabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"enabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func getSoundNames() ([]string, error)","Funname":"getSoundNames","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func (m *Manager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) EnableSound(name string, enabled bool) *dbus.Error","Funname":"soundeffect.Manager.EnableSound","Returntype":"*dbus.Error","Args":"name string, enabled bool"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"soundeffect.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) GetSoundEnabledMap() (map[string]bool, *dbus.Error)","Funname":"soundeffect.Manager.GetSoundEnabledMap","Returntype":"(map[string]bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetSoundFile(name string) (string, *dbus.Error)","Funname":"soundeffect.Manager.GetSoundFile","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) GetSystemSoundFile(name string) (string, *dbus.Error)","Funname":"soundeffect.Manager.GetSystemSoundFile","Returntype":"(string, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) IsSoundEnabled(name string) (bool, *dbus.Error)","Funname":"soundeffect.Manager.IsSoundEnabled","Returntype":"(bool, *dbus.Error)","Args":"name string"},{"Uniquefunname":"func (m *Manager) PlaySound(name string) *dbus.Error","Funname":"soundeffect.Manager.PlaySound","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (m *Manager) PlaySystemSound(name string) *dbus.Error","Funname":"soundeffect.Manager.PlaySystemSound","Returntype":"*dbus.Error","Args":"name string"},{"Uniquefunname":"func (m *Manager) canQuit() bool","Funname":"soundeffect.Manager.canQuit","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) enabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"soundeffect.Manager.enabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"soundeffect.Manager.init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) syncConfigToSoundThemePlayer(enabled bool) error","Funname":"soundeffect.Manager.syncConfigToSoundThemePlayer","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"soundeffect.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func getSoundNames() ([]string, error)","Funname":"soundeffect.getSoundNames","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func (m *Manager) syncConfigToSoundThemePlayer(enabled bool) error","Funname":"syncConfigToSoundThemePlayer","Returntype":"error","Args":"enabled bool"}],"Records":[{"Name":"const:soundeffect","Fields":["soundeffect.DBusServiceName","soundeffect.allowPlaySoundMaxCount","soundeffect.dbusInterface","soundeffect.dbusPath","soundeffect.gsKeyEnabled","soundeffect.gsKeySoundTheme","soundeffect.gsSchemaAppearance","soundeffect.gsSchemaSoundEffect"]},{"Name":"struct:soundeffect.Manager","Fields":["soundeffect.Manager.Enabled gsprop.Bool","soundeffect.Manager.appearanceGs *gio.Settings","soundeffect.Manager.count int","soundeffect.Manager.countMu sync.Mutex","soundeffect.Manager.methods *struct { PlaySystemSound func() `in:\"name\"`; GetSystemSoundFile func() `in:\"name\" out:\"file\"`; PlaySound func() `in:\"name\"`; GetSoundFile func() `in:\"name\" out:\"file\"`; EnableSound func() `in:\"name,enabled\"`; IsSoundEnabled func() `in:\"name\" out:\"enabled\"`; GetSoundEnabledMap func() `out:\"result\"`; }","soundeffect.Manager.names strv.Strv","soundeffect.Manager.service *dbusutil.Service","soundeffect.Manager.soundEffectGs *gio.Settings"]}]}
{"Filepath":"soundeffect/soundeffect.go","Functions":[{"Uniquefunname":"func Run()","Funname":"Run","Returntype":"","Args":""},{"Uniquefunname":"func run() error","Funname":"run","Returntype":"error","Args":""},{"Uniquefunname":"func Run()","Funname":"soundeffect.Run","Returntype":"","Args":""},{"Uniquefunname":"func run() error","Funname":"soundeffect.run","Returntype":"error","Args":""}],"Records":[{"Name":"var:soundeffect","Fields":["soundeffect.logger"]}]}
{"Filepath":"system/airplane_mode/airplane_mode.go","Functions":[{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewModule() *Module","Funname":"NewModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"airplane_mode.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"airplane_mode.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"airplane_mode.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule() *Module","Funname":"airplane_mode.NewModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func init()","Funname":"airplane_mode.init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"struct:airplane_mode.Module","Fields":["airplane_mode.Module.m *Manager"]},{"Name":"var:airplane_mode","Fields":["airplane_mode.logger"]}]}
{"Filepath":"system/airplane_mode/airplane_mode_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedBluetoothEnabled(value bool) error","Funname":"airplane_mode.Manager.emitPropChangedBluetoothEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedEnabled(value bool) error","Funname":"airplane_mode.Manager.emitPropChangedEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWifiEnabled(value bool) error","Funname":"airplane_mode.Manager.emitPropChangedWifiEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBluetoothEnabled(value bool) (changed bool)","Funname":"airplane_mode.Manager.setPropBluetoothEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropEnabled(value bool) (changed bool)","Funname":"airplane_mode.Manager.setPropEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWifiEnabled(value bool) (changed bool)","Funname":"airplane_mode.Manager.setPropWifiEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedBluetoothEnabled(value bool) error","Funname":"emitPropChangedBluetoothEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedEnabled(value bool) error","Funname":"emitPropChangedEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedWifiEnabled(value bool) error","Funname":"emitPropChangedWifiEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBluetoothEnabled(value bool) (changed bool)","Funname":"setPropBluetoothEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropEnabled(value bool) (changed bool)","Funname":"setPropEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropWifiEnabled(value bool) (changed bool)","Funname":"setPropWifiEnabled","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"system/airplane_mode/config.go","Functions":[{"Uniquefunname":"func loadConfig(filename string, cfg *config) error","Funname":"airplane_mode.loadConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func saveConfig(filename string, cfg *config) error","Funname":"airplane_mode.saveConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func loadConfig(filename string, cfg *config) error","Funname":"loadConfig","Returntype":"error","Args":"filename string, cfg *config"},{"Uniquefunname":"func saveConfig(filename string, cfg *config) error","Funname":"saveConfig","Returntype":"error","Args":"filename string, cfg *config"}],"Records":[{"Name":"struct:airplane_mode.config","Fields":["airplane_mode.config.Enabled bool"]},{"Name":"const:airplane_mode","Fields":["airplane_mode.configFile"]}]}
{"Filepath":"system/airplane_mode/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) DumpState() *dbus.Error","Funname":"DumpState","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) Enable(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"Enable","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) EnableBluetooth(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"EnableBluetooth","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) EnableWifi(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"EnableWifi","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) DumpState() *dbus.Error","Funname":"airplane_mode.Manager.DumpState","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) Enable(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"airplane_mode.Manager.Enable","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) EnableBluetooth(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"airplane_mode.Manager.EnableBluetooth","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) EnableWifi(sender dbus.Sender, enabled bool) *dbus.Error","Funname":"airplane_mode.Manager.EnableWifi","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"airplane_mode.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) enableBluetooth(enabled bool) error","Funname":"airplane_mode.Manager.enableBluetooth","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) enableWifi(enabled bool) error","Funname":"airplane_mode.Manager.enableWifi","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) handleRfkillEvent()","Funname":"airplane_mode.Manager.handleRfkillEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenDBusSignals()","Funname":"airplane_mode.Manager.listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenRfkillEvents()","Funname":"airplane_mode.Manager.listenRfkillEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) saveConfig(enabled bool) error","Funname":"airplane_mode.Manager.saveConfig","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func checkAuthorization(actionId string, sysBusName string) error","Funname":"airplane_mode.checkAuthorization","Returntype":"error","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"airplane_mode.newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func checkAuthorization(actionId string, sysBusName string) error","Funname":"checkAuthorization","Returntype":"error","Args":"actionId string, sysBusName string"},{"Uniquefunname":"func (m *Manager) enableBluetooth(enabled bool) error","Funname":"enableBluetooth","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) enableWifi(enabled bool) error","Funname":"enableWifi","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) handleRfkillEvent()","Funname":"handleRfkillEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenDBusSignals()","Funname":"listenDBusSignals","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenRfkillEvents()","Funname":"listenRfkillEvents","Returntype":"","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) *Manager","Funname":"newManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) saveConfig(enabled bool) error","Funname":"saveConfig","Returntype":"error","Args":"enabled bool"}],"Records":[{"Name":"struct:airplane_mode.Manager","Fields":["airplane_mode.Manager.BluetoothEnabled bool","airplane_mode.Manager.Enabled bool","airplane_mode.Manager.PropsMu sync.RWMutex","airplane_mode.Manager.WifiEnabled bool","airplane_mode.Manager.methods *struct { Enable func() `in:\"enabled\"`; EnableWifi func() `in:\"enabled\"`; EnableBluetooth func() `in:\"enabled\"`; }","airplane_mode.Manager.nmManager *nmdbus.Manager","airplane_mode.Manager.service *dbusutil.Service","airplane_mode.Manager.sigLoop *dbusutil.SignalLoop","airplane_mode.Manager.state AirplaneModeState"]},{"Name":"const:airplane_mode","Fields":["airplane_mode.actionId","airplane_mode.dbusInterface","airplane_mode.dbusPath","airplane_mode.dbusServiceName"]}]}
{"Filepath":"system/airplane_mode/rfkill.go","Functions":[{"Uniquefunname":"func (d *RfkillDev) isBlocked() bool","Funname":"airplane_mode.RfkillDev.isBlocked","Returntype":"bool","Args":""},{"Uniquefunname":"func enableBt(enabled bool) error","Funname":"airplane_mode.enableBt","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func getBtEnabled() (bool, error)","Funname":"airplane_mode.getBtEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func listBt() ([]*RfkillDev, error)","Funname":"airplane_mode.listBt","Returntype":"([]*RfkillDev, error)","Args":""},{"Uniquefunname":"func newRfkillDev(p string) (*RfkillDev, error)","Funname":"airplane_mode.newRfkillDev","Returntype":"(*RfkillDev, error)","Args":"p string"},{"Uniquefunname":"func readFile(filename string) (string, error)","Funname":"airplane_mode.readFile","Returntype":"(string, error)","Args":"filename string"},{"Uniquefunname":"func enableBt(enabled bool) error","Funname":"enableBt","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func getBtEnabled() (bool, error)","Funname":"getBtEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (d *RfkillDev) isBlocked() bool","Funname":"isBlocked","Returntype":"bool","Args":""},{"Uniquefunname":"func listBt() ([]*RfkillDev, error)","Funname":"listBt","Returntype":"([]*RfkillDev, error)","Args":""},{"Uniquefunname":"func newRfkillDev(p string) (*RfkillDev, error)","Funname":"newRfkillDev","Returntype":"(*RfkillDev, error)","Args":"p string"},{"Uniquefunname":"func readFile(filename string) (string, error)","Funname":"readFile","Returntype":"(string, error)","Args":"filename string"}],"Records":[{"Name":"struct:airplane_mode.RfkillDev","Fields":["airplane_mode.RfkillDev.Type string","airplane_mode.RfkillDev.devicePath string","airplane_mode.RfkillDev.hardBlocked bool","airplane_mode.RfkillDev.index string","airplane_mode.RfkillDev.name string","airplane_mode.RfkillDev.softBlocked bool"]},{"Name":"const:airplane_mode","Fields":["airplane_mode.activeBlock","airplane_mode.classRfkillDir"]}]}
{"Filepath":"system/airplane_mode/state.go","Functions":[{"Uniquefunname":"func (s *AirplaneModeState) doEnableBt(enabled bool)","Funname":"airplane_mode.AirplaneModeState.doEnableBt","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) doEnableWifi(enabled bool)","Funname":"airplane_mode.AirplaneModeState.doEnableWifi","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) dump()","Funname":"airplane_mode.AirplaneModeState.dump","Returntype":"","Args":""},{"Uniquefunname":"func (s *AirplaneModeState) enable(enabled bool)","Funname":"airplane_mode.AirplaneModeState.enable","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) enableBt(enabled bool)","Funname":"airplane_mode.AirplaneModeState.enableBt","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) enableWifi(enabled bool)","Funname":"airplane_mode.AirplaneModeState.enableWifi","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) hasBtChanged() bool","Funname":"airplane_mode.AirplaneModeState.hasBtChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (s *AirplaneModeState) hasWifiChanged() bool","Funname":"airplane_mode.AirplaneModeState.hasWifiChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func toEnableDisable(enable bool) string","Funname":"airplane_mode.toEnableDisable","Returntype":"string","Args":"enable bool"},{"Uniquefunname":"func (s *AirplaneModeState) doEnableBt(enabled bool)","Funname":"doEnableBt","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) doEnableWifi(enabled bool)","Funname":"doEnableWifi","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) dump()","Funname":"dump","Returntype":"","Args":""},{"Uniquefunname":"func (s *AirplaneModeState) enable(enabled bool)","Funname":"enable","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) enableBt(enabled bool)","Funname":"enableBt","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) enableWifi(enabled bool)","Funname":"enableWifi","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (s *AirplaneModeState) hasBtChanged() bool","Funname":"hasBtChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func (s *AirplaneModeState) hasWifiChanged() bool","Funname":"hasWifiChanged","Returntype":"bool","Args":""},{"Uniquefunname":"func toEnableDisable(enable bool) string","Funname":"toEnableDisable","Returntype":"string","Args":"enable bool"}],"Records":[{"Name":"struct:airplane_mode.AirplaneModeState","Fields":["airplane_mode.AirplaneModeState.BtEnabled bool","airplane_mode.AirplaneModeState.BtWillChange bool","airplane_mode.AirplaneModeState.Enabled bool","airplane_mode.AirplaneModeState.Saved *savedEnabled","airplane_mode.AirplaneModeState.WifiEnabled bool","airplane_mode.AirplaneModeState.WifiWillChange bool","airplane_mode.AirplaneModeState.enableBtFn func(enabled bool)","airplane_mode.AirplaneModeState.enableWifiFn func(enabled bool)","airplane_mode.AirplaneModeState.mu sync.Mutex"]},{"Name":"struct:airplane_mode.savedEnabled","Fields":["airplane_mode.savedEnabled.BtChanged bool","airplane_mode.savedEnabled.BtEnabled bool","airplane_mode.savedEnabled.WifiChanged bool","airplane_mode.savedEnabled.WifiEnabled bool"]}]}
{"Filepath":"system/airplane_mode/t1_test.go","Functions":[{"Uniquefunname":"func TestScene1(t *testing.T)","Funname":"TestScene1","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene2(t *testing.T)","Funname":"TestScene2","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene3(t *testing.T)","Funname":"TestScene3","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene4(t *testing.T)","Funname":"TestScene4","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene5(t *testing.T)","Funname":"TestScene5","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene6(t *testing.T)","Funname":"TestScene6","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene7(t *testing.T)","Funname":"TestScene7","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_1(t *testing.T)","Funname":"TestScene8_1","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_2(t *testing.T)","Funname":"TestScene8_2","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_3(t *testing.T)","Funname":"TestScene8_3","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_4(t *testing.T)","Funname":"TestScene8_4","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (s *AirplaneModeState) setupForTest()","Funname":"airplane_mode.AirplaneModeState.setupForTest","Returntype":"","Args":""},{"Uniquefunname":"func TestScene1(t *testing.T)","Funname":"airplane_mode.TestScene1","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene2(t *testing.T)","Funname":"airplane_mode.TestScene2","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene3(t *testing.T)","Funname":"airplane_mode.TestScene3","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene4(t *testing.T)","Funname":"airplane_mode.TestScene4","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene5(t *testing.T)","Funname":"airplane_mode.TestScene5","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene6(t *testing.T)","Funname":"airplane_mode.TestScene6","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene7(t *testing.T)","Funname":"airplane_mode.TestScene7","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_1(t *testing.T)","Funname":"airplane_mode.TestScene8_1","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_2(t *testing.T)","Funname":"airplane_mode.TestScene8_2","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_3(t *testing.T)","Funname":"airplane_mode.TestScene8_3","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestScene8_4(t *testing.T)","Funname":"airplane_mode.TestScene8_4","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func airplane_mode.assertIt(t *testing.T, opId int, s *AirplaneModeState, enabled, wifiEnabled, btEnable bool)","Funname":"airplane_mode.assertIt","Returntype":"","Args":"t *testing.T, opId int, s *AirplaneModeState, enabled, wifiEnabled, btEnable bool"},{"Uniquefunname":"func init()","Funname":"airplane_mode.init","Returntype":"","Args":""},{"Uniquefunname":"func assertIt(t *testing.T, opId int, s *AirplaneModeState, enabled, wifiEnabled, btEnable bool)","Funname":"assertIt","Returntype":"","Args":"t *testing.T, opId int, s *AirplaneModeState, enabled, wifiEnabled, btEnable bool"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (s *AirplaneModeState) setupForTest()","Funname":"setupForTest","Returntype":"","Args":""}],"Records":null}
{"Filepath":"system/gesture/config.go","Functions":[{"Uniquefunname":"func getConfigPath() string","Funname":"gesture.getConfigPath","Returntype":"string","Args":""},{"Uniquefunname":"func loadConfig(filename string) (*Config, error)","Funname":"gesture.loadConfig","Returntype":"(*Config, error)","Args":"filename string"},{"Uniquefunname":"func getConfigPath() string","Funname":"getConfigPath","Returntype":"string","Args":""},{"Uniquefunname":"func loadConfig(filename string) (*Config, error)","Funname":"loadConfig","Returntype":"(*Config, error)","Args":"filename string"}],"Records":[{"Name":"struct:gesture.Config","Fields":["gesture.Config.LongPressDistance float64","gesture.Config.Verbose int"]}]}
{"Filepath":"system/gesture/config_test.go","Functions":[{"Uniquefunname":"func Test_loadConfig(t *testing.T)","Funname":"Test_loadConfig","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_loadConfig(t *testing.T)","Funname":"gesture.Test_loadConfig","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"var:gesture","Fields":["gesture.configPath"]}]}
{"Filepath":"system/gesture/gesture.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (*Manager) SetEdgeMoveStopDuration(duration int) *dbus.Error","Funname":"SetEdgeMoveStopDuration","Returntype":"*dbus.Error","Args":"duration int"},{"Uniquefunname":"func (*Daemon) SetLongPressDuration(duration int)","Funname":"SetLongPressDuration","Returntype":"","Args":"duration int"},{"Uniquefunname":"func (*Manager) SetShortPressDuration(duration int) *dbus.Error","Funname":"SetShortPressDuration","Returntype":"*dbus.Error","Args":"duration int"},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (t GestureType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t TouchDirection) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (t TouchType) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"gesture.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Daemon) SetLongPressDuration(duration int)","Funname":"gesture.Daemon.SetLongPressDuration","Returntype":"","Args":"duration int"},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"gesture.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"gesture.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (t GestureType) String() string","Funname":"gesture.GestureType.String","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"gesture.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (*Manager) SetEdgeMoveStopDuration(duration int) *dbus.Error","Funname":"gesture.Manager.SetEdgeMoveStopDuration","Returntype":"*dbus.Error","Args":"duration int"},{"Uniquefunname":"func (*Manager) SetShortPressDuration(duration int) *dbus.Error","Funname":"gesture.Manager.SetShortPressDuration","Returntype":"*dbus.Error","Args":"duration int"},{"Uniquefunname":"func NewDaemon() *Daemon","Funname":"gesture.NewDaemon","Returntype":"*Daemon","Args":""},{"Uniquefunname":"func (t TouchDirection) String() string","Funname":"gesture.TouchDirection.String","Returntype":"string","Args":""},{"Uniquefunname":"func (t TouchType) String() string","Funname":"gesture.TouchType.String","Returntype":"string","Args":""},{"Uniquefunname":"func handleDbclickDown(fingers C.int)","Funname":"gesture.handleDbclickDown","Returntype":"","Args":"fingers C.int"},{"Uniquefunname":"func handleGestureEvent(ty, direction, fingers C.int)","Funname":"gesture.handleGestureEvent","Returntype":"","Args":"ty, direction, fingers C.int"},{"Uniquefunname":"func handleSwipeMoving(fingers C.int, accelX, accelY C.double)","Funname":"gesture.handleSwipeMoving","Returntype":"","Args":"fingers C.int, accelX, accelY C.double"},{"Uniquefunname":"func handleSwipeStop(fingers C.int)","Funname":"gesture.handleSwipeStop","Returntype":"","Args":"fingers C.int"},{"Uniquefunname":"func handleTouchEdgeMoveStop(direction C.int, x, y C.double, duration C.int)","Funname":"gesture.handleTouchEdgeMoveStop","Returntype":"","Args":"direction C.int, x, y C.double, duration C.int"},{"Uniquefunname":"func handleTouchEdgeMoveStopLeave(direction C.int, x, y C.double, duration C.int)","Funname":"gesture.handleTouchEdgeMoveStopLeave","Returntype":"","Args":"direction C.int, x, y C.double, duration C.int"},{"Uniquefunname":"func handleTouchEvent(ty, btn C.int)","Funname":"gesture.handleTouchEvent","Returntype":"","Args":"ty, btn C.int"},{"Uniquefunname":"func handleTouchMoving(scalex, scaley C.double)","Funname":"gesture.handleTouchMoving","Returntype":"","Args":"scalex, scaley C.double"},{"Uniquefunname":"func handleTouchPressTimeout(fingers, time C.int, scalex, scaley C.double)","Funname":"gesture.handleTouchPressTimeout","Returntype":"","Args":"fingers, time C.int, scalex, scaley C.double"},{"Uniquefunname":"func handleTouchScreenEvent(ty, direction, fingers C.int, scaleX, scaleY C.double)","Funname":"gesture.handleTouchScreenEvent","Returntype":"","Args":"ty, direction, fingers C.int, scaleX, scaleY C.double"},{"Uniquefunname":"func handleTouchShortPress(time C.int, scalex, scaley C.double)","Funname":"gesture.handleTouchShortPress","Returntype":"","Args":"time C.int, scalex, scaley C.double"},{"Uniquefunname":"func handleTouchUpOrCancel(scalex, scaley C.double)","Funname":"gesture.handleTouchUpOrCancel","Returntype":"","Args":"scalex, scaley C.double"},{"Uniquefunname":"func init()","Funname":"gesture.init","Returntype":"","Args":""},{"Uniquefunname":"func handleDbclickDown(fingers C.int)","Funname":"handleDbclickDown","Returntype":"","Args":"fingers C.int"},{"Uniquefunname":"func handleGestureEvent(ty, direction, fingers C.int)","Funname":"handleGestureEvent","Returntype":"","Args":"ty, direction, fingers C.int"},{"Uniquefunname":"func handleSwipeMoving(fingers C.int, accelX, accelY C.double)","Funname":"handleSwipeMoving","Returntype":"","Args":"fingers C.int, accelX, accelY C.double"},{"Uniquefunname":"func handleSwipeStop(fingers C.int)","Funname":"handleSwipeStop","Returntype":"","Args":"fingers C.int"},{"Uniquefunname":"func handleTouchEdgeMoveStop(direction C.int, x, y C.double, duration C.int)","Funname":"handleTouchEdgeMoveStop","Returntype":"","Args":"direction C.int, x, y C.double, duration C.int"},{"Uniquefunname":"func handleTouchEdgeMoveStopLeave(direction C.int, x, y C.double, duration C.int)","Funname":"handleTouchEdgeMoveStopLeave","Returntype":"","Args":"direction C.int, x, y C.double, duration C.int"},{"Uniquefunname":"func handleTouchEvent(ty, btn C.int)","Funname":"handleTouchEvent","Returntype":"","Args":"ty, btn C.int"},{"Uniquefunname":"func handleTouchMoving(scalex, scaley C.double)","Funname":"handleTouchMoving","Returntype":"","Args":"scalex, scaley C.double"},{"Uniquefunname":"func handleTouchPressTimeout(fingers, time C.int, scalex, scaley C.double)","Funname":"handleTouchPressTimeout","Returntype":"","Args":"fingers, time C.int, scalex, scaley C.double"},{"Uniquefunname":"func handleTouchScreenEvent(ty, direction, fingers C.int, scaleX, scaleY C.double)","Funname":"handleTouchScreenEvent","Returntype":"","Args":"ty, direction, fingers C.int, scaleX, scaleY C.double"},{"Uniquefunname":"func handleTouchShortPress(time C.int, scalex, scaley C.double)","Funname":"handleTouchShortPress","Returntype":"","Args":"time C.int, scalex, scaley C.double"},{"Uniquefunname":"func handleTouchUpOrCancel(scalex, scaley C.double)","Funname":"handleTouchUpOrCancel","Returntype":"","Args":"scalex, scaley C.double"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""}],"Records":[{"Name":"var:gesture","Fields":["gesture.ButtonTypeDown","gesture.ButtonTypeUp","gesture.GestureDirectionDown","gesture.GestureDirectionIn","gesture.GestureDirectionLeft","gesture.GestureDirectionNone","gesture.GestureDirectionOut","gesture.GestureDirectionRight","gesture.GestureDirectionUp","gesture.GestureTypePinch","gesture.GestureTypeSwipe","gesture.GestureTypeTap","gesture.TouchDirectionBot","gesture.TouchDirectionLeft","gesture.TouchDirectionNone","gesture.TouchDirectionRight","gesture.TouchDirectionTop","gesture.TouchTypeEdge","gesture.TouchTypeMovement","gesture.TouchTypeNone","gesture.TouchTypeRightButton","gesture.TouchTypeTap","gesture._m","gesture.logger"]},{"Name":"struct:gesture.Manager","Fields":["gesture.Manager.methods *struct { SetShortPressDuration func() `in:\"duration\"`; SetEdgeMoveStopDuration func() `in:\"duration\"`; }","gesture.Manager.service *dbusutil.Service","gesture.Manager.signals *struct { Event struct { name string; direction string; fingers int32; }; DbclickDown struct { fingers int32; }; SwipeMoving struct { fingers int32; accelX, accelY float64; }; SwipeStop struct { fingers int32; }; TouchEdgeEvent struct { direction string; scaleX, scaleY float64; }; TouchSinglePressTimeout struct { time int32; scaleX, scaleY float64; }; TouchPressTimeout struct { fingers, time int32; scaleX, scaleY float64; }; TouchUpOrCancel struct { scaleX, scaleY float64; }; TouchEdgeMoveStop struct {"]},{"Name":"const:gesture","Fields":["gesture.dbusInterface","gesture.dbusPath","gesture.dbusServiceName"]}]}
{"Filepath":"system/network/config.go","Functions":[{"Uniquefunname":"func loadConfig(filename string, cfg *Config) error","Funname":"loadConfig","Returntype":"error","Args":"filename string, cfg *Config"},{"Uniquefunname":"func loadConfigSafe(filename string) *Config","Funname":"loadConfigSafe","Returntype":"*Config","Args":"filename string"},{"Uniquefunname":"func loadConfig(filename string, cfg *Config) error","Funname":"network.loadConfig","Returntype":"error","Args":"filename string, cfg *Config"},{"Uniquefunname":"func loadConfigSafe(filename string) *Config","Funname":"network.loadConfigSafe","Returntype":"*Config","Args":"filename string"},{"Uniquefunname":"func saveConfig(filename string, cfg *Config) error","Funname":"network.saveConfig","Returntype":"error","Args":"filename string, cfg *Config"},{"Uniquefunname":"func saveConfig(filename string, cfg *Config) error","Funname":"saveConfig","Returntype":"error","Args":"filename string, cfg *Config"}],"Records":[{"Name":"struct:network.Config","Fields":["network.Config.Devices map[string]*DeviceConfig","network.Config.VpnEnabled bool"]},{"Name":"struct:network.DeviceConfig","Fields":["network.DeviceConfig.Enabled bool"]},{"Name":"const:network","Fields":["network.configFile"]}]}
{"Filepath":"system/network/network.go","Functions":[{"Uniquefunname":"func EnableDevice(pathOrIface string, enabled bool)(cpath dbus.ObjectPath, error *dbus.Error)","Funname":"EnableDevice","Returntype":"(cpath dbus.ObjectPath, error *dbus.Error)","Args":"pathOrIface string, enabled bool"},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (n *Network) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (n *Network) IsDeviceEnabled(pathOrIface string) (bool, *dbus.Error)","Funname":"IsDeviceEnabled","Returntype":"(bool, *dbus.Error)","Args":"pathOrIface string"},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) ToggleWirelessEnabled() (bool, *dbus.Error)","Funname":"ToggleWirelessEnabled","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (n *Network) addDevice(devPath dbus.ObjectPath) error","Funname":"addDevice","Returntype":"error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (n *Network) connectSignal()","Funname":"connectSignal","Returntype":"","Args":""},{"Uniquefunname":"func (n *Network) deactivateConnectionByUuid(uuid string)","Funname":"deactivateConnectionByUuid","Returntype":"","Args":"uuid string"},{"Uniquefunname":"func (n *Network) disableDevice(d *device) error","Funname":"disableDevice","Returntype":"error","Args":"d *device"},{"Uniquefunname":"func (n *Network) disableVpn()","Funname":"disableVpn","Returntype":"","Args":""},{"Uniquefunname":"func enableDevice(pathOrIface string, enabled bool)(cpath dbus.ObjectPath, err error)","Funname":"enableDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"pathOrIface string, enabled bool"},{"Uniquefunname":"func (n *Network) enableDevice1(d *device) (cpath dbus.ObjectPath, err error)","Funname":"enableDevice1","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"d *device"},{"Uniquefunname":"func (n *Network) enableIface(iface string, enabled bool)","Funname":"enableIface","Returntype":"","Args":"iface string, enabled bool"},{"Uniquefunname":"func (n *Network) enableNetworking() error","Funname":"enableNetworking","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) enableVpn(enabled bool)","Funname":"enableVpn","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (n *Network) enableVpn1()","Funname":"enableVpn1","Returntype":"","Args":""},{"Uniquefunname":"func (n *Network) enableWireless() error","Funname":"enableWireless","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) findDevice(pathOrIface string) *device","Funname":"findDevice","Returntype":"*device","Args":"pathOrIface string"},{"Uniquefunname":"func getActiveConnectionsByUuid(uuid string)([]*networkmanager.ActiveConnection, error)","Funname":"getActiveConnectionsByUuid","Returntype":"([]*networkmanager.ActiveConnection, error)","Args":"uuid string"},{"Uniquefunname":"func (n *Network) getConnSettingsListByConnType(connType string) ([]*connSettings, error)","Funname":"getConnSettingsListByConnType","Returntype":"([]*connSettings, error)","Args":"connType string"},{"Uniquefunname":"func (n *Network) getDeviceByIface(iface string) *device","Funname":"getDeviceByIface","Returntype":"*device","Args":"iface string"},{"Uniquefunname":"func (n *Network) getSysBus() *dbus.Conn","Funname":"getSysBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func (n *Network) getWirelessDevices() (devices []*device)","Funname":"getWirelessDevices","Returntype":"(devices []*device)","Args":""},{"Uniquefunname":"func (n *Network) handleVpnStateChanged(state uint32)","Funname":"handleVpnStateChanged","Returntype":"","Args":"state uint32"},{"Uniquefunname":"func (n *Network) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (n *Network) isDeviceEnabled(pathOrIface string) (bool, error)","Funname":"isDeviceEnabled","Returntype":"(bool, error)","Args":"pathOrIface string"},{"Uniquefunname":"func (n *Network) isIfaceEnabled(iface string) bool","Funname":"isIfaceEnabled","Returntype":"bool","Args":"iface string"},{"Uniquefunname":"func (n *Network) isNetworkAvailable() (bool, error)","Funname":"isNetworkAvailable","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"network.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"network.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"network.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func network.Network.EnableDevice(pathOrIface string, enabled bool)(cpath dbus.ObjectPath, error *dbus.Error)","Funname":"network.Network.EnableDevice","Returntype":"(cpath dbus.ObjectPath, error *dbus.Error)","Args":"pathOrIface string, enabled bool"},{"Uniquefunname":"func (n *Network) GetInterfaceName() string","Funname":"network.Network.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (n *Network) IsDeviceEnabled(pathOrIface string) (bool, *dbus.Error)","Funname":"network.Network.IsDeviceEnabled","Returntype":"(bool, *dbus.Error)","Args":"pathOrIface string"},{"Uniquefunname":"func (n *Network) ToggleWirelessEnabled() (bool, *dbus.Error)","Funname":"network.Network.ToggleWirelessEnabled","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (n *Network) addDevice(devPath dbus.ObjectPath) error","Funname":"network.Network.addDevice","Returntype":"error","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (n *Network) connectSignal()","Funname":"network.Network.connectSignal","Returntype":"","Args":""},{"Uniquefunname":"func (n *Network) deactivateConnectionByUuid(uuid string)","Funname":"network.Network.deactivateConnectionByUuid","Returntype":"","Args":"uuid string"},{"Uniquefunname":"func (n *Network) disableDevice(d *device) error","Funname":"network.Network.disableDevice","Returntype":"error","Args":"d *device"},{"Uniquefunname":"func (n *Network) disableVpn()","Funname":"network.Network.disableVpn","Returntype":"","Args":""},{"Uniquefunname":"func network.Network.enableDevice(pathOrIface string, enabled bool)(cpath dbus.ObjectPath, err error)","Funname":"network.Network.enableDevice","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"pathOrIface string, enabled bool"},{"Uniquefunname":"func (n *Network) enableDevice1(d *device) (cpath dbus.ObjectPath, err error)","Funname":"network.Network.enableDevice1","Returntype":"(cpath dbus.ObjectPath, err error)","Args":"d *device"},{"Uniquefunname":"func (n *Network) enableIface(iface string, enabled bool)","Funname":"network.Network.enableIface","Returntype":"","Args":"iface string, enabled bool"},{"Uniquefunname":"func (n *Network) enableNetworking() error","Funname":"network.Network.enableNetworking","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) enableVpn(enabled bool)","Funname":"network.Network.enableVpn","Returntype":"","Args":"enabled bool"},{"Uniquefunname":"func (n *Network) enableVpn1()","Funname":"network.Network.enableVpn1","Returntype":"","Args":""},{"Uniquefunname":"func (n *Network) enableWireless() error","Funname":"network.Network.enableWireless","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) findDevice(pathOrIface string) *device","Funname":"network.Network.findDevice","Returntype":"*device","Args":"pathOrIface string"},{"Uniquefunname":"func network.Network.getActiveConnectionsByUuid(uuid string)([]*networkmanager.ActiveConnection, error)","Funname":"network.Network.getActiveConnectionsByUuid","Returntype":"([]*networkmanager.ActiveConnection, error)","Args":"uuid string"},{"Uniquefunname":"func (n *Network) getConnSettingsListByConnType(connType string) ([]*connSettings, error)","Funname":"network.Network.getConnSettingsListByConnType","Returntype":"([]*connSettings, error)","Args":"connType string"},{"Uniquefunname":"func (n *Network) getDeviceByIface(iface string) *device","Funname":"network.Network.getDeviceByIface","Returntype":"*device","Args":"iface string"},{"Uniquefunname":"func (n *Network) getSysBus() *dbus.Conn","Funname":"network.Network.getSysBus","Returntype":"*dbus.Conn","Args":""},{"Uniquefunname":"func (n *Network) getWirelessDevices() (devices []*device)","Funname":"network.Network.getWirelessDevices","Returntype":"(devices []*device)","Args":""},{"Uniquefunname":"func (n *Network) handleVpnStateChanged(state uint32)","Funname":"network.Network.handleVpnStateChanged","Returntype":"","Args":"state uint32"},{"Uniquefunname":"func (n *Network) init() error","Funname":"network.Network.init","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) isDeviceEnabled(pathOrIface string) (bool, error)","Funname":"network.Network.isDeviceEnabled","Returntype":"(bool, error)","Args":"pathOrIface string"},{"Uniquefunname":"func (n *Network) isIfaceEnabled(iface string) bool","Funname":"network.Network.isIfaceEnabled","Returntype":"bool","Args":"iface string"},{"Uniquefunname":"func (n *Network) isNetworkAvailable() (bool, error)","Funname":"network.Network.isNetworkAvailable","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (n *Network) removeDevice(devPath dbus.ObjectPath)","Funname":"network.Network.removeDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (n *Network) saveConfig() error","Funname":"network.Network.saveConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) toggleWirelessEnabled() (bool, error)","Funname":"network.Network.toggleWirelessEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (n *Network) vpnEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"network.Network.vpnEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func init()","Funname":"network.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"network.newModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func newNetwork() *Network","Funname":"network.newNetwork","Returntype":"*Network","Args":""},{"Uniquefunname":"func newModule(logger *log.Logger) *Module","Funname":"newModule","Returntype":"*Module","Args":"logger *log.Logger"},{"Uniquefunname":"func newNetwork() *Network","Funname":"newNetwork","Returntype":"*Network","Args":""},{"Uniquefunname":"func (n *Network) removeDevice(devPath dbus.ObjectPath)","Funname":"removeDevice","Returntype":"","Args":"devPath dbus.ObjectPath"},{"Uniquefunname":"func (n *Network) saveConfig() error","Funname":"saveConfig","Returntype":"error","Args":""},{"Uniquefunname":"func (n *Network) toggleWirelessEnabled() (bool, error)","Funname":"toggleWirelessEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (n *Network) vpnEnabledWriteCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"vpnEnabledWriteCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"}],"Records":[{"Name":"struct:network.Module","Fields":["network.Module.network *Network"]},{"Name":"struct:network.Network","Fields":["network.Network.PropsMu sync.RWMutex","network.Network.VpnEnabled bool","network.Network.config *Config","network.Network.configMu sync.Mutex","network.Network.delayEnableVpn bool","network.Network.devices map[dbus.ObjectPath]*device","network.Network.devicesMu sync.Mutex","network.Network.methods *struct { IsDeviceEnabled func() `in:\"pathOrIface\" out:\"enabled\"`; EnableDevice func() `in:\"pathOrIface,enabled\" out:\"cpath\"`; Ping func() `in:\"host\"`; ToggleWirelessEnabled func() `out:\"enabled\"`; }","network.Network.nmManager *networkmanager.Manager","network.Network.nmSettings *networkmanager.Settings","network.Network.service *dbusutil.Service","network.Network.sigLoop *dbusutil.SignalLoop","network.Network.signals *struct { DeviceEnabled struct { devPath dbus.ObjectPath; enabled bool; }; }"]},{"Name":"struct:network.connSettings","Fields":["network.connSettings.nmConn *networkmanager.ConnectionSettings","network.connSettings.settings map[string]map[string]dbus.Variant","network.connSettings.uuid string"]},{"Name":"const:network","Fields":["network.dbusInterface","network.dbusPath","network.dbusServiceName"]},{"Name":"struct:network.device","Fields":["network.device.iface string","network.device.nmDevice *networkmanager.Device","network.device.type0 uint32"]},{"Name":"var:network","Fields":["network.logger"]}]}
{"Filepath":"system/network/network_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Network) emitPropChangedVpnEnabled(value bool) error","Funname":"emitPropChangedVpnEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Network) emitPropChangedVpnEnabled(value bool) error","Funname":"network.Network.emitPropChangedVpnEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Network) setPropVpnEnabled(value bool) (changed bool)","Funname":"network.Network.setPropVpnEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Network) setPropVpnEnabled(value bool) (changed bool)","Funname":"setPropVpnEnabled","Returntype":"(changed bool)","Args":"value bool"}],"Records":null}
{"Filepath":"system/network/ping.go","Functions":[{"Uniquefunname":"func (n *Network) Ping(host string) *dbus.Error","Funname":"Ping","Returntype":"*dbus.Error","Args":"host string"},{"Uniquefunname":"func calcCheckSum(data []byte) uint16","Funname":"calcCheckSum","Returntype":"uint16","Args":"data []byte"},{"Uniquefunname":"func handleICMPReply(icmp *ICMP) error","Funname":"handleICMPReply","Returntype":"error","Args":"icmp *ICMP"},{"Uniquefunname":"func makeEchoReqHeader() *ICMP","Funname":"makeEchoReqHeader","Returntype":"*ICMP","Args":""},{"Uniquefunname":"func (n *Network) Ping(host string) *dbus.Error","Funname":"network.Network.Ping","Returntype":"*dbus.Error","Args":"host string"},{"Uniquefunname":"func calcCheckSum(data []byte) uint16","Funname":"network.calcCheckSum","Returntype":"uint16","Args":"data []byte"},{"Uniquefunname":"func handleICMPReply(icmp *ICMP) error","Funname":"network.handleICMPReply","Returntype":"error","Args":"icmp *ICMP"},{"Uniquefunname":"func makeEchoReqHeader() *ICMP","Funname":"network.makeEchoReqHeader","Returntype":"*ICMP","Args":""},{"Uniquefunname":"func newICMPConn(host string) (*net.IPConn, error)","Funname":"network.newICMPConn","Returntype":"(*net.IPConn, error)","Args":"host string"},{"Uniquefunname":"func recvEchoReply(conn *net.IPConn) (*ICMP, error)","Funname":"network.recvEchoReply","Returntype":"(*ICMP, error)","Args":"conn *net.IPConn"},{"Uniquefunname":"func sendEchoRequest(conn *net.IPConn) error","Funname":"network.sendEchoRequest","Returntype":"error","Args":"conn *net.IPConn"},{"Uniquefunname":"func unmarshalIPHeader(datas []byte) (*IPHeader, error)","Funname":"network.unmarshalIPHeader","Returntype":"(*IPHeader, error)","Args":"datas []byte"},{"Uniquefunname":"func newICMPConn(host string) (*net.IPConn, error)","Funname":"newICMPConn","Returntype":"(*net.IPConn, error)","Args":"host string"},{"Uniquefunname":"func recvEchoReply(conn *net.IPConn) (*ICMP, error)","Funname":"recvEchoReply","Returntype":"(*ICMP, error)","Args":"conn *net.IPConn"},{"Uniquefunname":"func sendEchoRequest(conn *net.IPConn) error","Funname":"sendEchoRequest","Returntype":"error","Args":"conn *net.IPConn"},{"Uniquefunname":"func unmarshalIPHeader(datas []byte) (*IPHeader, error)","Funname":"unmarshalIPHeader","Returntype":"(*IPHeader, error)","Args":"datas []byte"}],"Records":[{"Name":"struct:network.ICMP","Fields":["network.ICMP.CheckSum uint16","network.ICMP.Code uint8","network.ICMP.Identifier uint16","network.ICMP.SequenceNum uint16","network.ICMP.Type uint8"]},{"Name":"struct:network.IPHeader","Fields":["network.IPHeader.CheckSum uint16","network.IPHeader.Destination [4]uint8","network.IPHeader.Flag uint8","network.IPHeader.Identifier uint16","network.IPHeader.Length uint8","network.IPHeader.Offset uint16","network.IPHeader.Options [40]uint8","network.IPHeader.Protocol uint8","network.IPHeader.Source [4]uint8","network.IPHeader.TOS uint8","network.IPHeader.TTL uint8","network.IPHeader.TotalLen uint16","network.IPHeader.Version uint8"]},{"Name":"const:network","Fields":["network.codeHostUnrechable","network.codeNetUnrechable","network.codePortUnrechable","network.codeProtocolUnrechable","network.ipHeaderMinLen","network.ipProtocolICMP","network.typeEchoReply","network.typeEchoRequest","network.typeNetUnrechable"]},{"Name":"var:network","Fields":["network.getSequenceNum"]}]}
{"Filepath":"system/network/utils.go","Functions":[{"Uniquefunname":"func getSettingConnectionAutoconnect(settings map[string]map[string]dbus.Variant) bool","Funname":"getSettingConnectionAutoconnect","Returntype":"bool","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionTimestamp(settings map[string]map[string]dbus.Variant) uint64","Funname":"getSettingConnectionTimestamp","Returntype":"uint64","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionType(settings map[string]map[string]dbus.Variant) string","Funname":"getSettingConnectionType","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionUuid(settings map[string]map[string]dbus.Variant) string","Funname":"getSettingConnectionUuid","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingString(settings map[string]map[string]dbus.Variant, key1, key2 string) string","Funname":"getSettingString","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant, key1, key2 string"},{"Uniquefunname":"func getSettingConnectionAutoconnect(settings map[string]map[string]dbus.Variant) bool","Funname":"network.getSettingConnectionAutoconnect","Returntype":"bool","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionTimestamp(settings map[string]map[string]dbus.Variant) uint64","Funname":"network.getSettingConnectionTimestamp","Returntype":"uint64","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionType(settings map[string]map[string]dbus.Variant) string","Funname":"network.getSettingConnectionType","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingConnectionUuid(settings map[string]map[string]dbus.Variant) string","Funname":"network.getSettingConnectionUuid","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant"},{"Uniquefunname":"func getSettingString(settings map[string]map[string]dbus.Variant, key1, key2 string) string","Funname":"network.getSettingString","Returntype":"string","Args":"settings map[string]map[string]dbus.Variant, key1, key2 string"},{"Uniquefunname":"func setDeviceAutoConnect(d *networkmanager.Device, val bool) error","Funname":"network.setDeviceAutoConnect","Returntype":"error","Args":"d *networkmanager.Device, val bool"},{"Uniquefunname":"func setDeviceManaged(d *networkmanager.Device, val bool) error","Funname":"network.setDeviceManaged","Returntype":"error","Args":"d *networkmanager.Device, val bool"},{"Uniquefunname":"func setDeviceAutoConnect(d *networkmanager.Device, val bool) error","Funname":"setDeviceAutoConnect","Returntype":"error","Args":"d *networkmanager.Device, val bool"},{"Uniquefunname":"func setDeviceManaged(d *networkmanager.Device, val bool) error","Funname":"setDeviceManaged","Returntype":"error","Args":"d *networkmanager.Device, val bool"}],"Records":null}
{"Filepath":"system/power/battery.go","Functions":[{"Uniquefunname":"func (*Battery) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (bat *Battery) Refresh()","Funname":"Refresh","Returntype":"","Args":""},{"Uniquefunname":"func (bat *Battery) _refresh(info *battery.BatteryInfo, setTimeToFull bool)","Funname":"_refresh","Returntype":"","Args":"info *battery.BatteryInfo, setTimeToFull bool"},{"Uniquefunname":"func checkTimeStabilized(s []uint64, t uint64) bool","Funname":"checkTimeStabilized","Returntype":"bool","Args":"s []uint64, t uint64"},{"Uniquefunname":"func (bat *Battery) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (bat *Battery) getObjPath() dbus.ObjectPath","Funname":"getObjPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func getValidName(n string) string","Funname":"getValidName","Returntype":"string","Args":"n string"},{"Uniquefunname":"func newBattery(manager *Manager, device *gudev.Device) *Battery","Funname":"newBattery","Returntype":"*Battery","Args":"manager *Manager, device *gudev.Device"},{"Uniquefunname":"func (bat *Battery) newDevice() *gudev.Device","Funname":"newDevice","Returntype":"*gudev.Device","Args":""},{"Uniquefunname":"func (*Battery) GetInterfaceName() string","Funname":"power.Battery.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (bat *Battery) Refresh()","Funname":"power.Battery.Refresh","Returntype":"","Args":""},{"Uniquefunname":"func (bat *Battery) _refresh(info *battery.BatteryInfo, setTimeToFull bool)","Funname":"power.Battery._refresh","Returntype":"","Args":"info *battery.BatteryInfo, setTimeToFull bool"},{"Uniquefunname":"func (bat *Battery) destroy()","Funname":"power.Battery.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (bat *Battery) getObjPath() dbus.ObjectPath","Funname":"power.Battery.getObjPath","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (bat *Battery) newDevice() *gudev.Device","Funname":"power.Battery.newDevice","Returntype":"*gudev.Device","Args":""},{"Uniquefunname":"func (bat *Battery) refresh(dev *gudev.Device) (ok bool)","Funname":"power.Battery.refresh","Returntype":"(ok bool)","Args":"dev *gudev.Device"},{"Uniquefunname":"func (bat *Battery) resetUpdateInterval(d time.Duration)","Funname":"power.Battery.resetUpdateInterval","Returntype":"","Args":"d time.Duration"},{"Uniquefunname":"func (bat *Battery) setRefreshDoneCallback(fn func())","Funname":"power.Battery.setRefreshDoneCallback","Returntype":"","Args":"fn func()"},{"Uniquefunname":"func (bat *Battery) startLoopUpdate(d time.Duration) chan struct","Funname":"power.Battery.startLoopUpdate","Returntype":"chan struct{}","Args":"d time.Duration"},{"Uniquefunname":"func checkTimeStabilized(s []uint64, t uint64) bool","Funname":"power.checkTimeStabilized","Returntype":"bool","Args":"s []uint64, t uint64"},{"Uniquefunname":"func getValidName(n string) string","Funname":"power.getValidName","Returntype":"string","Args":"n string"},{"Uniquefunname":"func newBattery(manager *Manager, device *gudev.Device) *Battery","Funname":"power.newBattery","Returntype":"*Battery","Args":"manager *Manager, device *gudev.Device"},{"Uniquefunname":"func (bat *Battery) refresh(dev *gudev.Device) (ok bool)","Funname":"refresh","Returntype":"(ok bool)","Args":"dev *gudev.Device"},{"Uniquefunname":"func (bat *Battery) resetUpdateInterval(d time.Duration)","Funname":"resetUpdateInterval","Returntype":"","Args":"d time.Duration"},{"Uniquefunname":"func (bat *Battery) setRefreshDoneCallback(fn func())","Funname":"setRefreshDoneCallback","Returntype":"","Args":"fn func()"},{"Uniquefunname":"func (bat *Battery) startLoopUpdate(d time.Duration) chan struct","Funname":"startLoopUpdate","Returntype":"chan struct{}","Args":"d time.Duration"}],"Records":[{"Name":"struct:power.Battery","Fields":["power.Battery.Capacity float64","power.Battery.Energy float64","power.Battery.EnergyFull float64","power.Battery.EnergyFullDesign float64","power.Battery.EnergyRate float64","power.Battery.IsPresent bool","power.Battery.Manufacturer string","power.Battery.ModelName string","power.Battery.Name string","power.Battery.Percentage float64","power.Battery.PropsMu sync.RWMutex","power.Battery.SerialNumber string","power.Battery.Status battery.Status","power.Battery.SysfsPath string","power.Battery.Technology string","power.Battery.TimeToEmpty uint64","power.Battery.TimeToFull uint64","power.Battery.UpdateTime int64","power.Battery.Voltage float64","power.Battery.batteryHistory []float64","power.Battery.exit chan struct{}","power.Battery.gudevClient *gudev.Client","power.Battery.methods *struct { Debug func() `in:\"cmd\"`; }","power.Battery.refreshDone func()","power.Battery.service *dbusutil.Service"]},{"Name":"const:power","Fields":["power.batteryDBusInterface","power.checkTimeFloatRange","power.checkTimeSliceCount"]}]}
{"Filepath":"system/power/battery_display.go","Functions":[{"Uniquefunname":"func (m *Manager) changeBatteryLowByBatteryPercentage(percentage float64)","Funname":"changeBatteryLowByBatteryPercentage","Returntype":"","Args":"percentage float64"},{"Uniquefunname":"func (m *Manager) changeBatteryLowByBatteryPercentage(percentage float64)","Funname":"power.Manager.changeBatteryLowByBatteryPercentage","Returntype":"","Args":"percentage float64"},{"Uniquefunname":"func (m *Manager) refreshBatteryDisplay()","Funname":"power.Manager.refreshBatteryDisplay","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) resetBatteryDisplay()","Funname":"power.Manager.resetBatteryDisplay","Returntype":"","Args":""},{"Uniquefunname":"func rightPercentage(val float64) float64","Funname":"power.rightPercentage","Returntype":"float64","Args":"val float64"},{"Uniquefunname":"func (m *Manager) refreshBatteryDisplay()","Funname":"refreshBatteryDisplay","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) resetBatteryDisplay()","Funname":"resetBatteryDisplay","Returntype":"","Args":""},{"Uniquefunname":"func rightPercentage(val float64) float64","Funname":"rightPercentage","Returntype":"float64","Args":"val float64"}],"Records":null}
{"Filepath":"system/power/battery_history.go","Functions":[{"Uniquefunname":"func (bat *Battery) appendToHistory(percentage float64)","Funname":"appendToHistory","Returntype":"","Args":"percentage float64"},{"Uniquefunname":"func (bat *Battery) calcHistoryVariance() float64","Funname":"calcHistoryVariance","Returntype":"float64","Args":""},{"Uniquefunname":"func (bat *Battery) getHistoryLength() int","Funname":"getHistoryLength","Returntype":"int","Args":""},{"Uniquefunname":"func (bat *Battery) appendToHistory(percentage float64)","Funname":"power.Battery.appendToHistory","Returntype":"","Args":"percentage float64"},{"Uniquefunname":"func (bat *Battery) calcHistoryVariance() float64","Funname":"power.Battery.calcHistoryVariance","Returntype":"float64","Args":""},{"Uniquefunname":"func (bat *Battery) getHistoryLength() int","Funname":"power.Battery.getHistoryLength","Returntype":"int","Args":""}],"Records":null}
{"Filepath":"system/power/battery_test.go","Functions":[{"Uniquefunname":"func Test_checkTimeStabilized(t *testing.T)","Funname":"Test_checkTimeStabilized","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_checkTimeStabilized(t *testing.T)","Funname":"power.Test_checkTimeStabilized","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"system/power/cpu_handler.go","Functions":[{"Uniquefunname":"func (cpu *CpuHandler) GetAvailableGovernors(force bool) (map[string]bool, error)","Funname":"GetAvailableGovernors","Returntype":"(map[string]bool, error)","Args":"force bool"},{"Uniquefunname":"func (cpus *CpuHandlers) GetAvailableGovernors() (map[string]bool, error)","Funname":"GetAvailableGovernors","Returntype":"(map[string]bool, error)","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) GetBoostEnabled() (bool, error)","Funname":"GetBoostEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (cpu *CpuHandler) GetGovernor(force bool) (string, error)","Funname":"GetGovernor","Returntype":"(string, error)","Args":"force bool"},{"Uniquefunname":"func (cpus *CpuHandlers) GetGovernor() (string, error)","Funname":"GetGovernor","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) IsBoostFileExist() bool","Funname":"IsBoostFileExist","Returntype":"bool","Args":""},{"Uniquefunname":"func NewCpuHandlers() *CpuHandlers","Funname":"NewCpuHandlers","Returntype":"*CpuHandlers","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) SetBoostEnabled(enabled bool) error","Funname":"SetBoostEnabled","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (cpu *CpuHandler) SetGovernor(governor string) error","Funname":"SetGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func (cpus *CpuHandlers) SetGovernor(governor string) error","Funname":"SetGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func (cpu *CpuHandler) GetAvailableGovernors(force bool) (map[string]bool, error)","Funname":"power.CpuHandler.GetAvailableGovernors","Returntype":"(map[string]bool, error)","Args":"force bool"},{"Uniquefunname":"func (cpu *CpuHandler) GetGovernor(force bool) (string, error)","Funname":"power.CpuHandler.GetGovernor","Returntype":"(string, error)","Args":"force bool"},{"Uniquefunname":"func (cpu *CpuHandler) SetGovernor(governor string) error","Funname":"power.CpuHandler.SetGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func (cpus *CpuHandlers) GetAvailableGovernors() (map[string]bool, error)","Funname":"power.CpuHandlers.GetAvailableGovernors","Returntype":"(map[string]bool, error)","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) GetBoostEnabled() (bool, error)","Funname":"power.CpuHandlers.GetBoostEnabled","Returntype":"(bool, error)","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) GetGovernor() (string, error)","Funname":"power.CpuHandlers.GetGovernor","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) IsBoostFileExist() bool","Funname":"power.CpuHandlers.IsBoostFileExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (cpus *CpuHandlers) SetBoostEnabled(enabled bool) error","Funname":"power.CpuHandlers.SetBoostEnabled","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (cpus *CpuHandlers) SetGovernor(governor string) error","Funname":"power.CpuHandlers.SetGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func NewCpuHandlers() *CpuHandlers","Funname":"power.NewCpuHandlers","Returntype":"*CpuHandlers","Args":""}],"Records":[{"Name":"struct:power.CpuHandler","Fields":["power.CpuHandler.availableGovernors map[string]bool","power.CpuHandler.governor string","power.CpuHandler.path string"]},{"Name":"const:power","Fields":["power.globalAvailableGovernorFileName","power.globalBoostFilePath","power.globalCpuDirPath","power.globalCpuFreqDirName","power.globalGovernorFileName"]}]}
{"Filepath":"system/power/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() (err error)","Funname":"Start","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"power.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() (err error)","Funname":"power.Daemon.Start","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"power.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"power.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"power.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:power.Daemon","Fields":["power.Daemon.manager *Manager"]},{"Name":"var:power","Fields":["power.logger"]}]}
{"Filepath":"system/power/debug.go","Functions":[{"Uniquefunname":"func (bat *Battery) Debug(cmd string) *dbus.Error","Funname":"Debug","Returntype":"*dbus.Error","Args":"cmd string"},{"Uniquefunname":"func (m *Manager) Debug(cmd string) *dbus.Error","Funname":"Debug","Returntype":"*dbus.Error","Args":"cmd string"},{"Uniquefunname":"func (bat *Battery) Debug(cmd string) *dbus.Error","Funname":"power.Battery.Debug","Returntype":"*dbus.Error","Args":"cmd string"},{"Uniquefunname":"func (m *Manager) Debug(cmd string) *dbus.Error","Funname":"power.Manager.Debug","Returntype":"*dbus.Error","Args":"cmd string"}],"Records":null}
{"Filepath":"system/power/lid_switch.go","Functions":[{"Uniquefunname":"func (m *Manager) handleLidSwitchEvent(closed bool)","Funname":"handleLidSwitchEvent","Returntype":"","Args":"closed bool"},{"Uniquefunname":"func (m *Manager) initLidSwitch()","Funname":"initLidSwitch","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleLidSwitchEvent(closed bool)","Funname":"power.Manager.handleLidSwitchEvent","Returntype":"","Args":"closed bool"},{"Uniquefunname":"func (m *Manager) initLidSwitch()","Funname":"power.Manager.initLidSwitch","Returntype":"","Args":""}],"Records":null}
{"Filepath":"system/power/lid_switch_common.go","Functions":[{"Uniquefunname":"func LONG(x int) int","Funname":"LONG","Returntype":"int","Args":"x int"},{"Uniquefunname":"func NBITS(x int) int","Funname":"NBITS","Returntype":"int","Args":"x int"},{"Uniquefunname":"func OFF(x int) int","Funname":"OFF","Returntype":"int","Args":"x int"},{"Uniquefunname":"func (ev *InputEvent) String() string","Funname":"String","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) findLidSwitch() string","Funname":"findLidSwitch","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) initLidSwitchCommon()","Funname":"initLidSwitchCommon","Returntype":"","Args":""},{"Uniquefunname":"func (ev *InputEvent) String() string","Funname":"power.InputEvent.String","Returntype":"string","Args":""},{"Uniquefunname":"func LONG(x int) int","Funname":"power.LONG","Returntype":"int","Args":"x int"},{"Uniquefunname":"func (m *Manager) findLidSwitch() string","Funname":"power.Manager.findLidSwitch","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) initLidSwitchCommon()","Funname":"power.Manager.initLidSwitchCommon","Returntype":"","Args":""},{"Uniquefunname":"func NBITS(x int) int","Funname":"power.NBITS","Returntype":"int","Args":"x int"},{"Uniquefunname":"func OFF(x int) int","Funname":"power.OFF","Returntype":"int","Args":"x int"},{"Uniquefunname":"func readLidSwitchEvent(f *os.File) ([]InputEvent, error)","Funname":"power.readLidSwitchEvent","Returntype":"([]InputEvent, error)","Args":"f *os.File"},{"Uniquefunname":"func testBit(bit int, array []int) bool","Funname":"power.testBit","Returntype":"bool","Args":"bit int, array []int"},{"Uniquefunname":"func upInputStrToBitmask(s string, bitmask []int) int","Funname":"power.upInputStrToBitmask","Returntype":"int","Args":"s string, bitmask []int"},{"Uniquefunname":"func readLidSwitchEvent(f *os.File) ([]InputEvent, error)","Funname":"readLidSwitchEvent","Returntype":"([]InputEvent, error)","Args":"f *os.File"},{"Uniquefunname":"func testBit(bit int, array []int) bool","Funname":"testBit","Returntype":"bool","Args":"bit int, array []int"},{"Uniquefunname":"func upInputStrToBitmask(s string, bitmask []int) int","Funname":"upInputStrToBitmask","Returntype":"int","Args":"s string, bitmask []int"}],"Records":[{"Name":"const:power","Fields":["power.EV_SW","power.SW_CNT","power.SW_LID","power.SW_MAX","power.bitsPerLong","power.eventSize"]},{"Name":"struct:power.InputEvent","Fields":["power.InputEvent.Code uint16","power.InputEvent.Time syscall.Timeval","power.InputEvent.Type uint16","power.InputEvent.Value int32"]}]}
{"Filepath":"system/power/lid_switch_sw.go","Functions":[{"Uniquefunname":"func getLidStateSW() string","Funname":"getLidStateSW","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) initLidSwitchSW()","Funname":"initLidSwitchSW","Returntype":"","Args":""},{"Uniquefunname":"func isSWLidStateFileExist() bool","Funname":"isSWLidStateFileExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) initLidSwitchSW()","Funname":"power.Manager.initLidSwitchSW","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) swLidSwitchCheckLoop()","Funname":"power.Manager.swLidSwitchCheckLoop","Returntype":"","Args":""},{"Uniquefunname":"func getLidStateSW() string","Funname":"power.getLidStateSW","Returntype":"string","Args":""},{"Uniquefunname":"func isSWLidStateFileExist() bool","Funname":"power.isSWLidStateFileExist","Returntype":"bool","Args":""},{"Uniquefunname":"func (m *Manager) swLidSwitchCheckLoop()","Funname":"swLidSwitchCheckLoop","Returntype":"","Args":""}],"Records":[{"Name":"const:power","Fields":["power.swLidClose","power.swLidOpen","power.swLidStateFile"]}]}
{"Filepath":"system/power/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) addAndExportBattery(dev *gudev.Device)","Funname":"addAndExportBattery","Returntype":"","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) addBattery(dev *gudev.Device) (*Battery, bool)","Funname":"addBattery","Returntype":"(*Battery, bool)","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doSetCpuBoost(enabled bool) error","Funname":"doSetCpuBoost","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) doSetCpuGovernor(governor string) error","Funname":"doSetCpuGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func (m *Manager) doSetMode(mode string) error","Funname":"doSetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (m *Manager) emitBatteryAdded(bat *Battery)","Funname":"emitBatteryAdded","Returntype":"","Args":"bat *Battery"},{"Uniquefunname":"func (m *Manager) emitBatteryRemoved(bat *Battery)","Funname":"emitBatteryRemoved","Returntype":"","Args":"bat *Battery"},{"Uniquefunname":"func (m *Manager) handleUEvent(client *gudev.Client, action string, device *gudev.Device)","Funname":"handleUEvent","Returntype":"","Args":"client *gudev.Client, action string, device *gudev.Device"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initAC(devices []*gudev.Device)","Funname":"initAC","Returntype":"","Args":"devices []*gudev.Device"},{"Uniquefunname":"func (m *Manager) initBatteries(devices []*gudev.Device)","Funname":"initBatteries","Returntype":"","Args":"devices []*gudev.Device"},{"Uniquefunname":"func (m *Manager) isCpuGovernorSupported(governor string) bool","Funname":"isCpuGovernorSupported","Returntype":"bool","Args":"governor string"},{"Uniquefunname":"func loadConfig() (*Config, error)","Funname":"loadConfig","Returntype":"(*Config, error)","Args":""},{"Uniquefunname":"func loadConfigSafe() *Config","Funname":"loadConfigSafe","Returntype":"*Config","Args":""},{"Uniquefunname":"func newAC(manager *Manager, device *gudev.Device) *AC","Funname":"newAC","Returntype":"*AC","Args":"manager *Manager, device *gudev.Device"},{"Uniquefunname":"func (ac *AC) newDevice() *gudev.Device","Funname":"newDevice","Returntype":"*gudev.Device","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (ac *AC) newDevice() *gudev.Device","Funname":"power.AC.newDevice","Returntype":"*gudev.Device","Args":""},{"Uniquefunname":"func (m *Manager) addAndExportBattery(dev *gudev.Device)","Funname":"power.Manager.addAndExportBattery","Returntype":"","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) addBattery(dev *gudev.Device) (*Battery, bool)","Funname":"power.Manager.addBattery","Returntype":"(*Battery, bool)","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"power.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doSetCpuBoost(enabled bool) error","Funname":"power.Manager.doSetCpuBoost","Returntype":"error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) doSetCpuGovernor(governor string) error","Funname":"power.Manager.doSetCpuGovernor","Returntype":"error","Args":"governor string"},{"Uniquefunname":"func (m *Manager) doSetMode(mode string) error","Funname":"power.Manager.doSetMode","Returntype":"error","Args":"mode string"},{"Uniquefunname":"func (m *Manager) emitBatteryAdded(bat *Battery)","Funname":"power.Manager.emitBatteryAdded","Returntype":"","Args":"bat *Battery"},{"Uniquefunname":"func (m *Manager) emitBatteryRemoved(bat *Battery)","Funname":"power.Manager.emitBatteryRemoved","Returntype":"","Args":"bat *Battery"},{"Uniquefunname":"func (m *Manager) handleUEvent(client *gudev.Client, action string, device *gudev.Device)","Funname":"power.Manager.handleUEvent","Returntype":"","Args":"client *gudev.Client, action string, device *gudev.Device"},{"Uniquefunname":"func (m *Manager) init() error","Funname":"power.Manager.init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) initAC(devices []*gudev.Device)","Funname":"power.Manager.initAC","Returntype":"","Args":"devices []*gudev.Device"},{"Uniquefunname":"func (m *Manager) initBatteries(devices []*gudev.Device)","Funname":"power.Manager.initBatteries","Returntype":"","Args":"devices []*gudev.Device"},{"Uniquefunname":"func (m *Manager) isCpuGovernorSupported(governor string) bool","Funname":"power.Manager.isCpuGovernorSupported","Returntype":"bool","Args":"governor string"},{"Uniquefunname":"func power.Manager.refreshAC(ac *gudev.Device)","Funname":"power.Manager.refreshAC","Returntype":"","Args":"ac *gudev.Device"},{"Uniquefunname":"func (m *Manager) removeBattery(dev *gudev.Device)","Funname":"power.Manager.removeBattery","Returntype":"","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) saveConfig() error","Funname":"power.Manager.saveConfig","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"power.init","Returntype":"","Args":""},{"Uniquefunname":"func loadConfig() (*Config, error)","Funname":"power.loadConfig","Returntype":"(*Config, error)","Args":""},{"Uniquefunname":"func loadConfigSafe() *Config","Funname":"power.loadConfigSafe","Returntype":"*Config","Args":""},{"Uniquefunname":"func newAC(manager *Manager, device *gudev.Device) *AC","Funname":"power.newAC","Returntype":"*AC","Args":"manager *Manager, device *gudev.Device"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"power.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func refreshAC(ac *gudev.Device)","Funname":"refreshAC","Returntype":"","Args":"ac *gudev.Device"},{"Uniquefunname":"func (m *Manager) removeBattery(dev *gudev.Device)","Funname":"removeBattery","Returntype":"","Args":"dev *gudev.Device"},{"Uniquefunname":"func (m *Manager) saveConfig() error","Funname":"saveConfig","Returntype":"error","Args":""}],"Records":[{"Name":"struct:power.AC","Fields":["power.AC.gudevClient *gudev.Client","power.AC.sysfsPath string"]},{"Name":"struct:power.Config","Fields":["power.Config.Mode string","power.Config.PowerSavingModeAuto bool","power.Config.PowerSavingModeAutoWhenBatteryLow bool","power.Config.PowerSavingModeBrightnessDropPercent uint32","power.Config.PowerSavingModeEnabled bool"]},{"Name":"struct:power.Manager","Fields":["power.Manager.BatteryCapacity float64","power.Manager.BatteryPercentage float64","power.Manager.BatteryStatus battery.Status","power.Manager.BatteryTimeToEmpty uint64","power.Manager.BatteryTimeToFull uint64","power.Manager.CpuBoost bool","power.Manager.CpuGovernor string","power.Manager.HasBattery bool","power.Manager.HasLidSwitch bool","power.Manager.IsHighPerformanceSupported bool","power.Manager.Mode string","power.Manager.OnBattery bool","power.Manager.PowerSavingModeAuto bool","power.Manager.PowerSavingModeAutoWhenBatteryLow bool","power.Manager.PowerSavingModeBrightnessDropPercent uint32","power.Manager.PowerSavingModeEnabled bool","power.Manager.PropsMu sync.RWMutex","power.Manager.ac *AC","power.Manager.batteries map[string]*Battery","power.Manager.batteriesMu sync.Mutex","power.Manager.batteryLow bool","power.Manager.cpus *CpuHandlers","power.Manager.gudevClient *gudev.Client","power.Manager.initDone bool","power.Manager.methods *struct { GetBatteries func() `out:\"batteries\"`; Debug func() `in:\"cmd\"`; SetCpuGovernor func() `in:\"governor\"`; SetCpuBoost func() `in:\"enabled\"`; SetMode func() `in:\"mode\"`; LockCpuFreq func() `in:\"governor, lockTime\"`; }","power.Manager.service *dbusutil.Service","power.Manager.signals *struct { BatteryDisplayUpdate struct { timestamp int64; }; BatteryAdded struct { path dbus.ObjectPath; }; BatteryRemoved struct { path dbus.ObjectPath; }; LidClosed struct{}; LidOpened struct{}; }"]},{"Name":"const:power","Fields":["power.configFile"]},{"Name":"var:power","Fields":["power.noUEvent"]}]}
{"Filepath":"system/power/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) GetBatteries() ([]dbus.ObjectPath, *dbus.Error)","Funname":"GetBatteries","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) LockCpuFreq(governor string, lockTime int32) *dbus.Error","Funname":"LockCpuFreq","Returntype":"*dbus.Error","Args":"governor string, lockTime int32"},{"Uniquefunname":"func (m *Manager) Refresh() *dbus.Error","Funname":"Refresh","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RefreshBatteries() *dbus.Error","Funname":"RefreshBatteries","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RefreshMains() *dbus.Error","Funname":"RefreshMains","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetCpuBoost(enabled bool) *dbus.Error","Funname":"SetCpuBoost","Returntype":"*dbus.Error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) SetCpuGovernor(governor string) *dbus.Error","Funname":"SetCpuGovernor","Returntype":"*dbus.Error","Args":"governor string"},{"Uniquefunname":"func (m *Manager) SetMode(mode string) *dbus.Error","Funname":"SetMode","Returntype":"*dbus.Error","Args":"mode string"},{"Uniquefunname":"func (m *Manager) GetBatteries() ([]dbus.ObjectPath, *dbus.Error)","Funname":"power.Manager.GetBatteries","Returntype":"([]dbus.ObjectPath, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"power.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) LockCpuFreq(governor string, lockTime int32) *dbus.Error","Funname":"power.Manager.LockCpuFreq","Returntype":"*dbus.Error","Args":"governor string, lockTime int32"},{"Uniquefunname":"func (m *Manager) Refresh() *dbus.Error","Funname":"power.Manager.Refresh","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RefreshBatteries() *dbus.Error","Funname":"power.Manager.RefreshBatteries","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) RefreshMains() *dbus.Error","Funname":"power.Manager.RefreshMains","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetCpuBoost(enabled bool) *dbus.Error","Funname":"power.Manager.SetCpuBoost","Returntype":"*dbus.Error","Args":"enabled bool"},{"Uniquefunname":"func (m *Manager) SetCpuGovernor(governor string) *dbus.Error","Funname":"power.Manager.SetCpuGovernor","Returntype":"*dbus.Error","Args":"governor string"},{"Uniquefunname":"func (m *Manager) SetMode(mode string) *dbus.Error","Funname":"power.Manager.SetMode","Returntype":"*dbus.Error","Args":"mode string"},{"Uniquefunname":"func (m *Manager) refreshBatteries()","Funname":"power.Manager.refreshBatteries","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) refreshBatteries()","Funname":"refreshBatteries","Returntype":"","Args":""}],"Records":[{"Name":"const:power","Fields":["power.dbusInterface","power.dbusPath","power.dbusServiceName"]}]}
{"Filepath":"system/power/manager_lmt.go","Functions":[{"Uniquefunname":"func isLaptopModeBinOk() bool","Funname":"isLaptopModeBinOk","Returntype":"bool","Args":""},{"Uniquefunname":"func loadLmtConfig() ([]string, error)","Funname":"loadLmtConfig","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func modifyLMTConfig(lines []string, dict map[string]string) ([]string, bool)","Funname":"modifyLMTConfig","Returntype":"([]string, bool)","Args":"lines []string, dict map[string]string"},{"Uniquefunname":"func power.Manager.updatePowerSavingMode()","Funname":"power.Manager.updatePowerSavingMode","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) writePowerSavingModeEnabledCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"power.Manager.writePowerSavingModeEnabledCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"},{"Uniquefunname":"func isLaptopModeBinOk() bool","Funname":"power.isLaptopModeBinOk","Returntype":"bool","Args":""},{"Uniquefunname":"func loadLmtConfig() ([]string, error)","Funname":"power.loadLmtConfig","Returntype":"([]string, error)","Args":""},{"Uniquefunname":"func modifyLMTConfig(lines []string, dict map[string]string) ([]string, bool)","Funname":"power.modifyLMTConfig","Returntype":"([]string, bool)","Args":"lines []string, dict map[string]string"},{"Uniquefunname":"func reloadLaptopModeService() error","Funname":"power.reloadLaptopModeService","Returntype":"error","Args":""},{"Uniquefunname":"func setLMTConfig(mode int) (changed bool, err error)","Funname":"power.setLMTConfig","Returntype":"(changed bool, err error)","Args":"mode int"},{"Uniquefunname":"func writeLmtConfig(lines []string) error","Funname":"power.writeLmtConfig","Returntype":"error","Args":"lines []string"},{"Uniquefunname":"func writeLmtConfigTemp(lines []string) (string, error)","Funname":"power.writeLmtConfigTemp","Returntype":"(string, error)","Args":"lines []string"},{"Uniquefunname":"func reloadLaptopModeService() error","Funname":"reloadLaptopModeService","Returntype":"error","Args":""},{"Uniquefunname":"func setLMTConfig(mode int) (changed bool, err error)","Funname":"setLMTConfig","Returntype":"(changed bool, err error)","Args":"mode int"},{"Uniquefunname":"func updatePowerSavingMode()","Funname":"updatePowerSavingMode","Returntype":"","Args":""},{"Uniquefunname":"func writeLmtConfig(lines []string) error","Funname":"writeLmtConfig","Returntype":"error","Args":"lines []string"},{"Uniquefunname":"func writeLmtConfigTemp(lines []string) (string, error)","Funname":"writeLmtConfigTemp","Returntype":"(string, error)","Args":"lines []string"},{"Uniquefunname":"func (m *Manager) writePowerSavingModeEnabledCb(write *dbusutil.PropertyWrite) *dbus.Error","Funname":"writePowerSavingModeEnabledCb","Returntype":"*dbus.Error","Args":"write *dbusutil.PropertyWrite"}],"Records":[{"Name":"const:power","Fields":["power.laptopModeBin","power.lmtConfigAuto","power.lmtConfigDisabled","power.lmtConfigEnabled","power.lmtConfigFile","power.lowBatteryThreshold"]}]}
{"Filepath":"system/power/power_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryCapacity(value float64) error","Funname":"emitPropChangedBatteryCapacity","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryPercentage(value float64) error","Funname":"emitPropChangedBatteryPercentage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryStatus(value battery.Status) error","Funname":"emitPropChangedBatteryStatus","Returntype":"error","Args":"value battery.Status"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryTimeToEmpty(value uint64) error","Funname":"emitPropChangedBatteryTimeToEmpty","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryTimeToFull(value uint64) error","Funname":"emitPropChangedBatteryTimeToFull","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) emitPropChangedCapacity(value float64) error","Funname":"emitPropChangedCapacity","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedCpuBoost(value bool) error","Funname":"emitPropChangedCpuBoost","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedCpuGovernor(value string) error","Funname":"emitPropChangedCpuGovernor","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergy(value float64) error","Funname":"emitPropChangedEnergy","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyFull(value float64) error","Funname":"emitPropChangedEnergyFull","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyFullDesign(value float64) error","Funname":"emitPropChangedEnergyFullDesign","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyRate(value float64) error","Funname":"emitPropChangedEnergyRate","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedHasBattery(value bool) error","Funname":"emitPropChangedHasBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedHasLidSwitch(value bool) error","Funname":"emitPropChangedHasLidSwitch","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedIsHighPerformanceSupported(value bool) error","Funname":"emitPropChangedIsHighPerformanceSupported","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Battery) emitPropChangedIsPresent(value bool) error","Funname":"emitPropChangedIsPresent","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Battery) emitPropChangedManufacturer(value string) error","Funname":"emitPropChangedManufacturer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedMode(value string) error","Funname":"emitPropChangedMode","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedModelName(value string) error","Funname":"emitPropChangedModelName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedName(value string) error","Funname":"emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedOnBattery(value bool) error","Funname":"emitPropChangedOnBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Battery) emitPropChangedPercentage(value float64) error","Funname":"emitPropChangedPercentage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeAuto(value bool) error","Funname":"emitPropChangedPowerSavingModeAuto","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeAutoWhenBatteryLow(value bool) error","Funname":"emitPropChangedPowerSavingModeAutoWhenBatteryLow","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeBrightnessDropPercent(value uint32) error","Funname":"emitPropChangedPowerSavingModeBrightnessDropPercent","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeEnabled(value bool) error","Funname":"emitPropChangedPowerSavingModeEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Battery) emitPropChangedSerialNumber(value string) error","Funname":"emitPropChangedSerialNumber","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedStatus(value battery.Status) error","Funname":"emitPropChangedStatus","Returntype":"error","Args":"value battery.Status"},{"Uniquefunname":"func (v *Battery) emitPropChangedSysfsPath(value string) error","Funname":"emitPropChangedSysfsPath","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedTechnology(value string) error","Funname":"emitPropChangedTechnology","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedTimeToEmpty(value uint64) error","Funname":"emitPropChangedTimeToEmpty","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) emitPropChangedTimeToFull(value uint64) error","Funname":"emitPropChangedTimeToFull","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) emitPropChangedUpdateTime(value int64) error","Funname":"emitPropChangedUpdateTime","Returntype":"error","Args":"value int64"},{"Uniquefunname":"func (v *Battery) emitPropChangedVoltage(value float64) error","Funname":"emitPropChangedVoltage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedCapacity(value float64) error","Funname":"power.Battery.emitPropChangedCapacity","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergy(value float64) error","Funname":"power.Battery.emitPropChangedEnergy","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyFull(value float64) error","Funname":"power.Battery.emitPropChangedEnergyFull","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyFullDesign(value float64) error","Funname":"power.Battery.emitPropChangedEnergyFullDesign","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedEnergyRate(value float64) error","Funname":"power.Battery.emitPropChangedEnergyRate","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedIsPresent(value bool) error","Funname":"power.Battery.emitPropChangedIsPresent","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Battery) emitPropChangedManufacturer(value string) error","Funname":"power.Battery.emitPropChangedManufacturer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedModelName(value string) error","Funname":"power.Battery.emitPropChangedModelName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedName(value string) error","Funname":"power.Battery.emitPropChangedName","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedPercentage(value float64) error","Funname":"power.Battery.emitPropChangedPercentage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) emitPropChangedSerialNumber(value string) error","Funname":"power.Battery.emitPropChangedSerialNumber","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedStatus(value battery.Status) error","Funname":"power.Battery.emitPropChangedStatus","Returntype":"error","Args":"value battery.Status"},{"Uniquefunname":"func (v *Battery) emitPropChangedSysfsPath(value string) error","Funname":"power.Battery.emitPropChangedSysfsPath","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedTechnology(value string) error","Funname":"power.Battery.emitPropChangedTechnology","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Battery) emitPropChangedTimeToEmpty(value uint64) error","Funname":"power.Battery.emitPropChangedTimeToEmpty","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) emitPropChangedTimeToFull(value uint64) error","Funname":"power.Battery.emitPropChangedTimeToFull","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) emitPropChangedUpdateTime(value int64) error","Funname":"power.Battery.emitPropChangedUpdateTime","Returntype":"error","Args":"value int64"},{"Uniquefunname":"func (v *Battery) emitPropChangedVoltage(value float64) error","Funname":"power.Battery.emitPropChangedVoltage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropCapacity(value float64) (changed bool)","Funname":"power.Battery.setPropCapacity","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergy(value float64) (changed bool)","Funname":"power.Battery.setPropEnergy","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyFull(value float64) (changed bool)","Funname":"power.Battery.setPropEnergyFull","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyFullDesign(value float64) (changed bool)","Funname":"power.Battery.setPropEnergyFullDesign","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyRate(value float64) (changed bool)","Funname":"power.Battery.setPropEnergyRate","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropIsPresent(value bool) (changed bool)","Funname":"power.Battery.setPropIsPresent","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Battery) setPropManufacturer(value string) (changed bool)","Funname":"power.Battery.setPropManufacturer","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropModelName(value string) (changed bool)","Funname":"power.Battery.setPropModelName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropName(value string) (changed bool)","Funname":"power.Battery.setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropPercentage(value float64) (changed bool)","Funname":"power.Battery.setPropPercentage","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropSerialNumber(value string) (changed bool)","Funname":"power.Battery.setPropSerialNumber","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropStatus(value battery.Status) (changed bool)","Funname":"power.Battery.setPropStatus","Returntype":"(changed bool)","Args":"value battery.Status"},{"Uniquefunname":"func (v *Battery) setPropSysfsPath(value string) (changed bool)","Funname":"power.Battery.setPropSysfsPath","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropTechnology(value string) (changed bool)","Funname":"power.Battery.setPropTechnology","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropTimeToEmpty(value uint64) (changed bool)","Funname":"power.Battery.setPropTimeToEmpty","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) setPropTimeToFull(value uint64) (changed bool)","Funname":"power.Battery.setPropTimeToFull","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) setPropUpdateTime(value int64) (changed bool)","Funname":"power.Battery.setPropUpdateTime","Returntype":"(changed bool)","Args":"value int64"},{"Uniquefunname":"func (v *Battery) setPropVoltage(value float64) (changed bool)","Funname":"power.Battery.setPropVoltage","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryCapacity(value float64) error","Funname":"power.Manager.emitPropChangedBatteryCapacity","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryPercentage(value float64) error","Funname":"power.Manager.emitPropChangedBatteryPercentage","Returntype":"error","Args":"value float64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryStatus(value battery.Status) error","Funname":"power.Manager.emitPropChangedBatteryStatus","Returntype":"error","Args":"value battery.Status"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryTimeToEmpty(value uint64) error","Funname":"power.Manager.emitPropChangedBatteryTimeToEmpty","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) emitPropChangedBatteryTimeToFull(value uint64) error","Funname":"power.Manager.emitPropChangedBatteryTimeToFull","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) emitPropChangedCpuBoost(value bool) error","Funname":"power.Manager.emitPropChangedCpuBoost","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedCpuGovernor(value string) error","Funname":"power.Manager.emitPropChangedCpuGovernor","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedHasBattery(value bool) error","Funname":"power.Manager.emitPropChangedHasBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedHasLidSwitch(value bool) error","Funname":"power.Manager.emitPropChangedHasLidSwitch","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedIsHighPerformanceSupported(value bool) error","Funname":"power.Manager.emitPropChangedIsHighPerformanceSupported","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedMode(value string) error","Funname":"power.Manager.emitPropChangedMode","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedOnBattery(value bool) error","Funname":"power.Manager.emitPropChangedOnBattery","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeAuto(value bool) error","Funname":"power.Manager.emitPropChangedPowerSavingModeAuto","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeAutoWhenBatteryLow(value bool) error","Funname":"power.Manager.emitPropChangedPowerSavingModeAutoWhenBatteryLow","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeBrightnessDropPercent(value uint32) error","Funname":"power.Manager.emitPropChangedPowerSavingModeBrightnessDropPercent","Returntype":"error","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) emitPropChangedPowerSavingModeEnabled(value bool) error","Funname":"power.Manager.emitPropChangedPowerSavingModeEnabled","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBatteryCapacity(value float64) (changed bool)","Funname":"power.Manager.setPropBatteryCapacity","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropBatteryPercentage(value float64) (changed bool)","Funname":"power.Manager.setPropBatteryPercentage","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropBatteryStatus(value battery.Status) (changed bool)","Funname":"power.Manager.setPropBatteryStatus","Returntype":"(changed bool)","Args":"value battery.Status"},{"Uniquefunname":"func (v *Manager) setPropBatteryTimeToEmpty(value uint64) (changed bool)","Funname":"power.Manager.setPropBatteryTimeToEmpty","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) setPropBatteryTimeToFull(value uint64) (changed bool)","Funname":"power.Manager.setPropBatteryTimeToFull","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) setPropCpuBoost(value bool) (changed bool)","Funname":"power.Manager.setPropCpuBoost","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropCpuGovernor(value string) (changed bool)","Funname":"power.Manager.setPropCpuGovernor","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropHasBattery(value bool) (changed bool)","Funname":"power.Manager.setPropHasBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropHasLidSwitch(value bool) (changed bool)","Funname":"power.Manager.setPropHasLidSwitch","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropIsHighPerformanceSupported(value bool) (changed bool)","Funname":"power.Manager.setPropIsHighPerformanceSupported","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropMode(value string) (changed bool)","Funname":"power.Manager.setPropMode","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropOnBattery(value bool) (changed bool)","Funname":"power.Manager.setPropOnBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeAuto(value bool) (changed bool)","Funname":"power.Manager.setPropPowerSavingModeAuto","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeAutoWhenBatteryLow(value bool) (changed bool)","Funname":"power.Manager.setPropPowerSavingModeAutoWhenBatteryLow","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeBrightnessDropPercent(value uint32) (changed bool)","Funname":"power.Manager.setPropPowerSavingModeBrightnessDropPercent","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeEnabled(value bool) (changed bool)","Funname":"power.Manager.setPropPowerSavingModeEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropBatteryCapacity(value float64) (changed bool)","Funname":"setPropBatteryCapacity","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropBatteryPercentage(value float64) (changed bool)","Funname":"setPropBatteryPercentage","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropBatteryStatus(value battery.Status) (changed bool)","Funname":"setPropBatteryStatus","Returntype":"(changed bool)","Args":"value battery.Status"},{"Uniquefunname":"func (v *Manager) setPropBatteryTimeToEmpty(value uint64) (changed bool)","Funname":"setPropBatteryTimeToEmpty","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Manager) setPropBatteryTimeToFull(value uint64) (changed bool)","Funname":"setPropBatteryTimeToFull","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) setPropCapacity(value float64) (changed bool)","Funname":"setPropCapacity","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropCpuBoost(value bool) (changed bool)","Funname":"setPropCpuBoost","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropCpuGovernor(value string) (changed bool)","Funname":"setPropCpuGovernor","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropEnergy(value float64) (changed bool)","Funname":"setPropEnergy","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyFull(value float64) (changed bool)","Funname":"setPropEnergyFull","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyFullDesign(value float64) (changed bool)","Funname":"setPropEnergyFullDesign","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Battery) setPropEnergyRate(value float64) (changed bool)","Funname":"setPropEnergyRate","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropHasBattery(value bool) (changed bool)","Funname":"setPropHasBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropHasLidSwitch(value bool) (changed bool)","Funname":"setPropHasLidSwitch","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropIsHighPerformanceSupported(value bool) (changed bool)","Funname":"setPropIsHighPerformanceSupported","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Battery) setPropIsPresent(value bool) (changed bool)","Funname":"setPropIsPresent","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Battery) setPropManufacturer(value string) (changed bool)","Funname":"setPropManufacturer","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropMode(value string) (changed bool)","Funname":"setPropMode","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropModelName(value string) (changed bool)","Funname":"setPropModelName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropName(value string) (changed bool)","Funname":"setPropName","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropOnBattery(value bool) (changed bool)","Funname":"setPropOnBattery","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Battery) setPropPercentage(value float64) (changed bool)","Funname":"setPropPercentage","Returntype":"(changed bool)","Args":"value float64"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeAuto(value bool) (changed bool)","Funname":"setPropPowerSavingModeAuto","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeAutoWhenBatteryLow(value bool) (changed bool)","Funname":"setPropPowerSavingModeAutoWhenBatteryLow","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeBrightnessDropPercent(value uint32) (changed bool)","Funname":"setPropPowerSavingModeBrightnessDropPercent","Returntype":"(changed bool)","Args":"value uint32"},{"Uniquefunname":"func (v *Manager) setPropPowerSavingModeEnabled(value bool) (changed bool)","Funname":"setPropPowerSavingModeEnabled","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Battery) setPropSerialNumber(value string) (changed bool)","Funname":"setPropSerialNumber","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropStatus(value battery.Status) (changed bool)","Funname":"setPropStatus","Returntype":"(changed bool)","Args":"value battery.Status"},{"Uniquefunname":"func (v *Battery) setPropSysfsPath(value string) (changed bool)","Funname":"setPropSysfsPath","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropTechnology(value string) (changed bool)","Funname":"setPropTechnology","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Battery) setPropTimeToEmpty(value uint64) (changed bool)","Funname":"setPropTimeToEmpty","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) setPropTimeToFull(value uint64) (changed bool)","Funname":"setPropTimeToFull","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (v *Battery) setPropUpdateTime(value int64) (changed bool)","Funname":"setPropUpdateTime","Returntype":"(changed bool)","Args":"value int64"},{"Uniquefunname":"func (v *Battery) setPropVoltage(value float64) (changed bool)","Funname":"setPropVoltage","Returntype":"(changed bool)","Args":"value float64"}],"Records":null}
{"Filepath":"system/power/power_test.go","Functions":[{"Uniquefunname":"func Test_getValidName(t *testing.T)","Funname":"Test_getValidName","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_getValidName(t *testing.T)","Funname":"power.Test_getValidName","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"system/power_manager/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() (err error)","Funname":"Start","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"power_manager.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() (err error)","Funname":"power_manager.Daemon.Start","Returntype":"(err error)","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"power_manager.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"power_manager.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"power_manager.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:power_manager.Daemon","Fields":["power_manager.Daemon.manager *Manager"]},{"Name":"const:power_manager","Fields":["power_manager.dbusInterface","power_manager.dbusPath","power_manager.dbusServiceName"]},{"Name":"var:power_manager","Fields":["power_manager.logger"]}]}
{"Filepath":"system/power_manager/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) CanHibernate() (bool, *dbus.Error)","Funname":"CanHibernate","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanReboot() (bool, *dbus.Error)","Funname":"CanReboot","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanShutdown() (bool, *dbus.Error)","Funname":"CanShutdown","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanSuspend() (bool, *dbus.Error)","Funname":"CanSuspend","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) CanHibernate() (bool, *dbus.Error)","Funname":"power_manager.Manager.CanHibernate","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanReboot() (bool, *dbus.Error)","Funname":"power_manager.Manager.CanReboot","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanShutdown() (bool, *dbus.Error)","Funname":"power_manager.Manager.CanShutdown","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) CanSuspend() (bool, *dbus.Error)","Funname":"power_manager.Manager.CanSuspend","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"power_manager.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) init() error","Funname":"power_manager.Manager.init","Returntype":"error","Args":""},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"power_manager.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:power_manager.Manager","Fields":["power_manager.Manager.methods *struct { CanShutdown func() `out:\"can\"`; CanReboot func() `out:\"can\"`; CanSuspend func() `out:\"can\"`; CanHibernate func() `out:\"can\"`; }","power_manager.Manager.objLogin *login1.Manager","power_manager.Manager.service *dbusutil.Service"]}]}
{"Filepath":"system/power_manager/utils.go","Functions":[{"Uniquefunname":"func canHibernate() bool","Funname":"canHibernate","Returntype":"bool","Args":""},{"Uniquefunname":"func canSuspend() bool","Funname":"canSuspend","Returntype":"bool","Args":""},{"Uniquefunname":"func canHibernate() bool","Funname":"power_manager.canHibernate","Returntype":"bool","Args":""},{"Uniquefunname":"func canSuspend() bool","Funname":"power_manager.canSuspend","Returntype":"bool","Args":""}],"Records":[{"Name":"const:power_manager","Fields":["power_manager.fileImageSize","power_manager.fileMemSleep","power_manager.fileSwaps"]}]}
{"Filepath":"system/swapsched/swapsched.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Helper) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (sw *Helper) Prepare(sessionID string) *dbus.Error","Funname":"Prepare","Returntype":"*dbus.Error","Args":"sessionID string"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func createCGroup(uid uint32, name string) error","Funname":"createCGroup","Returntype":"error","Args":"uid uint32, name string"},{"Uniquefunname":"func createDDECGroups(uid uint32, sessionID string) error","Funname":"createDDECGroups","Returntype":"error","Args":"uid uint32, sessionID string"},{"Uniquefunname":"func deleteDDECGroups(sessionID string) error","Funname":"deleteDDECGroups","Returntype":"error","Args":"sessionID string"},{"Uniquefunname":"func (sw *Helper) getSessionUid(sessionID string) (uint32, error)","Funname":"getSessionUid","Returntype":"(uint32, error)","Args":"sessionID string"},{"Uniquefunname":"func (sw *Helper) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newCgroup(name string) *cgroup.Cgroup","Funname":"newCgroup","Returntype":"*cgroup.Cgroup","Args":"name string"},{"Uniquefunname":"func newDaemon(logger *log.Logger) *Daemon","Funname":"newDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func newHelper() (*Helper, error)","Funname":"newHelper","Returntype":"(*Helper, error)","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"swapsched.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"swapsched.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"swapsched.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (*Helper) GetInterfaceName() string","Funname":"swapsched.Helper.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (sw *Helper) Prepare(sessionID string) *dbus.Error","Funname":"swapsched.Helper.Prepare","Returntype":"*dbus.Error","Args":"sessionID string"},{"Uniquefunname":"func (sw *Helper) getSessionUid(sessionID string) (uint32, error)","Funname":"swapsched.Helper.getSessionUid","Returntype":"(uint32, error)","Args":"sessionID string"},{"Uniquefunname":"func (sw *Helper) init()","Funname":"swapsched.Helper.init","Returntype":"","Args":""},{"Uniquefunname":"func createCGroup(uid uint32, name string) error","Funname":"swapsched.createCGroup","Returntype":"error","Args":"uid uint32, name string"},{"Uniquefunname":"func createDDECGroups(uid uint32, sessionID string) error","Funname":"swapsched.createDDECGroups","Returntype":"error","Args":"uid uint32, sessionID string"},{"Uniquefunname":"func deleteDDECGroups(sessionID string) error","Funname":"swapsched.deleteDDECGroups","Returntype":"error","Args":"sessionID string"},{"Uniquefunname":"func init()","Funname":"swapsched.init","Returntype":"","Args":""},{"Uniquefunname":"func newCgroup(name string) *cgroup.Cgroup","Funname":"swapsched.newCgroup","Returntype":"*cgroup.Cgroup","Args":"name string"},{"Uniquefunname":"func newDaemon(logger *log.Logger) *Daemon","Funname":"swapsched.newDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func newHelper() (*Helper, error)","Funname":"swapsched.newHelper","Returntype":"(*Helper, error)","Args":""}],"Records":[{"Name":"struct:swapsched.Daemon","Fields":["swapsched.Daemon.sessionWatcher *Helper"]},{"Name":"struct:swapsched.Helper","Fields":["swapsched.Helper.loginManager *login1.Manager","swapsched.Helper.methods *struct { Prepare func() `in:\"sessionID\"`; }","swapsched.Helper.sysSigLoop *dbusutil.SignalLoop"]},{"Name":"const:swapsched","Fields":["swapsched.dbusInterface","swapsched.dbusPath","swapsched.dbusServiceName"]},{"Name":"var:swapsched","Fields":["swapsched.logger"]}]}
{"Filepath":"system/systeminfo/manager.go","Functions":[{"Uniquefunname":"func GetCurrentSpeed(systemBit int) (uint64, error)","Funname":"GetCurrentSpeed","Returntype":"(uint64, error)","Args":"systemBit int"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) calculateMemoryViaLshw() error","Funname":"calculateMemoryViaLshw","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedsetPropCurrentSpeed(value uint64) error","Funname":"emitPropChangedsetPropCurrentSpeed","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func filterUnNumber(value string) string","Funname":"filterUnNumber","Returntype":"string","Args":"value string"},{"Uniquefunname":"func formatFileSize(fileSize uint64) (size string)","Funname":"formatFileSize","Returntype":"(size string)","Args":"fileSize uint64"},{"Uniquefunname":"func getCurrentSpeed(systemBit int) (uint64, error)","Funname":"getCurrentSpeed","Returntype":"(uint64, error)","Args":"systemBit int"},{"Uniquefunname":"func parseCurrentSpeed(bytes string, systemBit int) (result uint64, err error)","Funname":"parseCurrentSpeed","Returntype":"(result uint64, err error)","Args":"bytes string, systemBit int"},{"Uniquefunname":"func parseXml(bytes []byte) (result lshwXmlNode, err error)","Funname":"parseXml","Returntype":"(result lshwXmlNode, err error)","Args":"bytes []byte"},{"Uniquefunname":"func runDmidecode() (string, error)","Funname":"runDmidecode","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func runLshwMemory() (out []byte, err error)","Funname":"runLshwMemory","Returntype":"(out []byte, err error)","Args":""},{"Uniquefunname":"func (m *Manager) setMemorySize(value uint64)","Funname":"setMemorySize","Returntype":"","Args":"value uint64"},{"Uniquefunname":"func (m *Manager) setMemorySizeHuman(value string)","Funname":"setMemorySizeHuman","Returntype":"","Args":"value string"},{"Uniquefunname":"func (m *Manager) setPropCurrentSpeed(value uint64) (changed bool)","Funname":"setPropCurrentSpeed","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (m *Manager)systemBit() string","Funname":"systemBit","Returntype":"string","Args":""},{"Uniquefunname":"func GetCurrentSpeed(systemBit int) (uint64, error)","Funname":"systeminfo.GetCurrentSpeed","Returntype":"(uint64, error)","Args":"systemBit int"},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"systeminfo.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) calculateMemoryViaLshw() error","Funname":"systeminfo.Manager.calculateMemoryViaLshw","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Manager) emitPropChangedsetPropCurrentSpeed(value uint64) error","Funname":"systeminfo.Manager.emitPropChangedsetPropCurrentSpeed","Returntype":"error","Args":"value uint64"},{"Uniquefunname":"func (m *Manager) setMemorySize(value uint64)","Funname":"systeminfo.Manager.setMemorySize","Returntype":"","Args":"value uint64"},{"Uniquefunname":"func (m *Manager) setMemorySizeHuman(value string)","Funname":"systeminfo.Manager.setMemorySizeHuman","Returntype":"","Args":"value string"},{"Uniquefunname":"func (m *Manager) setPropCurrentSpeed(value uint64) (changed bool)","Funname":"systeminfo.Manager.setPropCurrentSpeed","Returntype":"(changed bool)","Args":"value uint64"},{"Uniquefunname":"func (m *Manager)systemBit() string","Funname":"systeminfo.Manager.systemBit","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) *Manager","Funname":"systeminfo.NewManager","Returntype":"*Manager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func filterUnNumber(value string) string","Funname":"systeminfo.filterUnNumber","Returntype":"string","Args":"value string"},{"Uniquefunname":"func formatFileSize(fileSize uint64) (size string)","Funname":"systeminfo.formatFileSize","Returntype":"(size string)","Args":"fileSize uint64"},{"Uniquefunname":"func getCurrentSpeed(systemBit int) (uint64, error)","Funname":"systeminfo.getCurrentSpeed","Returntype":"(uint64, error)","Args":"systemBit int"},{"Uniquefunname":"func parseCurrentSpeed(bytes string, systemBit int) (result uint64, err error)","Funname":"systeminfo.parseCurrentSpeed","Returntype":"(result uint64, err error)","Args":"bytes string, systemBit int"},{"Uniquefunname":"func parseXml(bytes []byte) (result lshwXmlNode, err error)","Funname":"systeminfo.parseXml","Returntype":"(result lshwXmlNode, err error)","Args":"bytes []byte"},{"Uniquefunname":"func runDmidecode() (string, error)","Funname":"systeminfo.runDmidecode","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func runLshwMemory() (out []byte, err error)","Funname":"systeminfo.runLshwMemory","Returntype":"(out []byte, err error)","Args":""}],"Records":[{"Name":"const:systeminfo","Fields":["systeminfo.EB","systeminfo.GB","systeminfo.KB","systeminfo.MB","systeminfo.TB","systeminfo.dbusInterface","systeminfo.dbusPath","systeminfo.dbusServiceName"]},{"Name":"struct:systeminfo.Manager","Fields":["systeminfo.Manager.CurrentSpeed uint64","systeminfo.Manager.MemorySize uint64","systeminfo.Manager.MemorySizeHuman string","systeminfo.Manager.PropsMu sync.RWMutex","systeminfo.Manager.service *dbusutil.Service"]},{"Name":"struct:systeminfo.lshwXmlList","Fields":["systeminfo.lshwXmlList.Items []lshwXmlNode"]},{"Name":"struct:systeminfo.lshwXmlNode","Fields":["systeminfo.lshwXmlNode.Description string","systeminfo.lshwXmlNode.Size uint64"]}]}
{"Filepath":"system/systeminfo/systeminfo.go","Functions":[{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewModule() *Module","Funname":"NewModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m Module) GetDependencies() []string","Funname":"systeminfo.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m Module) Start() error","Funname":"systeminfo.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m Module) Stop() error","Funname":"systeminfo.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewModule() *Module","Funname":"systeminfo.NewModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func init()","Funname":"systeminfo.init","Returntype":"","Args":""}],"Records":[{"Name":"struct:systeminfo.Module","Fields":["systeminfo.Module.m *Manager"]},{"Name":"var:systeminfo","Fields":["systeminfo.logger"]}]}
{"Filepath":"system/systeminfo/systeminfo_test.go","Functions":[{"Uniquefunname":"func Test_filterUnNumber(t *testing.T)","Funname":"Test_filterUnNumber","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_formatFileSize(t *testing.T)","Funname":"Test_formatFileSize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseCurrentSpeed(t *testing.T)","Funname":"Test_parseCurrentSpeed","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseXml(t *testing.T)","Funname":"Test_parseXml","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_filterUnNumber(t *testing.T)","Funname":"systeminfo.Test_filterUnNumber","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_formatFileSize(t *testing.T)","Funname":"systeminfo.Test_formatFileSize","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseCurrentSpeed(t *testing.T)","Funname":"systeminfo.Test_parseCurrentSpeed","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func Test_parseXml(t *testing.T)","Funname":"systeminfo.Test_parseXml","Returntype":"","Args":"t *testing.T"}],"Records":[{"Name":"var:systeminfo","Fields":["systeminfo.dmidecodeData","systeminfo.xmlData"]}]}
{"Filepath":"system/timedated/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) checkAuthorization(method, msg string, sender dbus.Sender) error","Funname":"checkAuthorization","Returntype":"error","Args":"method, msg string, sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func doAuthorized(msg, sysBusName string) (bool, error)","Funname":"doAuthorized","Returntype":"(bool, error)","Args":"msg, sysBusName string"},{"Uniquefunname":"func getNTPServer() (string, error)","Funname":"getNTPServer","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func restartSystemdService(service, mode string) error","Funname":"restartSystemdService","Returntype":"error","Args":"service, mode string"},{"Uniquefunname":"func setNTPServer(server string) error","Funname":"setNTPServer","Returntype":"error","Args":"server string"},{"Uniquefunname":"func startNTPbyFirstBoot(core *timedate1.Timedate) error","Funname":"startNTPbyFirstBoot","Returntype":"error","Args":"core *timedate1.Timedate"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"timedated.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) checkAuthorization(method, msg string, sender dbus.Sender) error","Funname":"timedated.Manager.checkAuthorization","Returntype":"error","Args":"method, msg string, sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"timedated.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"timedated.NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func doAuthorized(msg, sysBusName string) (bool, error)","Funname":"timedated.doAuthorized","Returntype":"(bool, error)","Args":"msg, sysBusName string"},{"Uniquefunname":"func getNTPServer() (string, error)","Funname":"timedated.getNTPServer","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func restartSystemdService(service, mode string) error","Funname":"timedated.restartSystemdService","Returntype":"error","Args":"service, mode string"},{"Uniquefunname":"func setNTPServer(server string) error","Funname":"timedated.setNTPServer","Returntype":"error","Args":"server string"},{"Uniquefunname":"func startNTPbyFirstBoot(core *timedate1.Timedate) error","Funname":"timedated.startNTPbyFirstBoot","Returntype":"error","Args":"core *timedate1.Timedate"}],"Records":[{"Name":"struct:timedated.Manager","Fields":["timedated.Manager.NTPServer string","timedated.Manager.PropsMu sync.RWMutex","timedated.Manager.core *timedate1.Timedate","timedated.Manager.methods *struct { SetTime func() `in:\"usec,relative,message\"`; SetTimezone func() `in:\"timezone,message\"`; SetLocalRTC func() `in:\"enabled,fixSystem,message\"`; SetNTP func() `in:\"enabled,message\"`; SetNTPServer func() `in:\"server,message\"`; }","timedated.Manager.service *dbusutil.Service"]},{"Name":"const:timedated","Fields":["timedated.dbusInterface","timedated.dbusPath","timedated.dbusServiceName","timedated.timeSyncCfgFile","timedated.timedate1ActionId"]}]}
{"Filepath":"system/timedated/manager_ifc.go","Functions":[{"Uniquefunname":"func SetLocalRTC(sender dbus.Sender, enabled bool, fixSystem bool, msg string)*dbus.Error","Funname":"SetLocalRTC","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool, fixSystem bool, msg string"},{"Uniquefunname":"func (m *Manager) SetNTP(sender dbus.Sender, enabled bool, msg string) *dbus.Error","Funname":"SetNTP","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool, msg string"},{"Uniquefunname":"func (m *Manager) SetNTPServer(sender dbus.Sender, server, msg string) *dbus.Error","Funname":"SetNTPServer","Returntype":"*dbus.Error","Args":"sender dbus.Sender, server, msg string"},{"Uniquefunname":"func SetTime(sender dbus.Sender, usec int64, relative bool, msg string)*dbus.Error","Funname":"SetTime","Returntype":"*dbus.Error","Args":"sender dbus.Sender, usec int64, relative bool, msg string"},{"Uniquefunname":"func (m *Manager) SetTimezone(sender dbus.Sender, timezone, msg string) *dbus.Error","Funname":"SetTimezone","Returntype":"*dbus.Error","Args":"sender dbus.Sender, timezone, msg string"},{"Uniquefunname":"func timedated.Manager.SetLocalRTC(sender dbus.Sender, enabled bool, fixSystem bool, msg string)*dbus.Error","Funname":"timedated.Manager.SetLocalRTC","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool, fixSystem bool, msg string"},{"Uniquefunname":"func (m *Manager) SetNTP(sender dbus.Sender, enabled bool, msg string) *dbus.Error","Funname":"timedated.Manager.SetNTP","Returntype":"*dbus.Error","Args":"sender dbus.Sender, enabled bool, msg string"},{"Uniquefunname":"func (m *Manager) SetNTPServer(sender dbus.Sender, server, msg string) *dbus.Error","Funname":"timedated.Manager.SetNTPServer","Returntype":"*dbus.Error","Args":"sender dbus.Sender, server, msg string"},{"Uniquefunname":"func timedated.Manager.SetTime(sender dbus.Sender, usec int64, relative bool, msg string)*dbus.Error","Funname":"timedated.Manager.SetTime","Returntype":"*dbus.Error","Args":"sender dbus.Sender, usec int64, relative bool, msg string"},{"Uniquefunname":"func (m *Manager) SetTimezone(sender dbus.Sender, timezone, msg string) *dbus.Error","Funname":"timedated.Manager.SetTimezone","Returntype":"*dbus.Error","Args":"sender dbus.Sender, timezone, msg string"}],"Records":null}
{"Filepath":"system/timedated/timedated.go","Functions":[{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (*Daemon) GetDependencies() []string","Funname":"timedated.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*Daemon) Start() error","Funname":"timedated.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (*Daemon) Stop() error","Funname":"timedated.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"timedated.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"timedated.init","Returntype":"","Args":""}],"Records":[{"Name":"var:timedated","Fields":["timedated._manager","timedated.logger"]}]}
{"Filepath":"system/timedated/timedated_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedNTPServer(value string) error","Funname":"emitPropChangedNTPServer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropNTPServer(value string) (changed bool)","Funname":"setPropNTPServer","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedNTPServer(value string) error","Funname":"timedated.Manager.emitPropChangedNTPServer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropNTPServer(value string) (changed bool)","Funname":"timedated.Manager.setPropNTPServer","Returntype":"(changed bool)","Args":"value string"}],"Records":null}
{"Filepath":"system/uadp/module.go","Functions":[{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"newModule","Returntype":"*Module","Args":""},{"Uniquefunname":"func (m *Module) GetDependencies() []string","Funname":"uadp.Module.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (m *Module) Start() error","Funname":"uadp.Module.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (m *Module) Stop() error","Funname":"uadp.Module.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"uadp.init","Returntype":"","Args":""},{"Uniquefunname":"func newModule() *Module","Funname":"uadp.newModule","Returntype":"*Module","Args":""}],"Records":[{"Name":"struct:uadp.Module","Fields":["uadp.Module.uadp *Uadp"]}]}
{"Filepath":"system/uadp/uadp.go","Functions":[{"Uniquefunname":"func GetDataKey(sender dbus.Sender, exePath, keyName, keyringKey string)(string, *dbus.Error)","Funname":"GetDataKey","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, exePath, keyName, keyringKey string"},{"Uniquefunname":"func (*Uadp) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func SetDataKey(sender dbus.Sender, exePath, keyName, dataKey, keyringKey string)*dbus.Error","Funname":"SetDataKey","Returntype":"*dbus.Error","Args":"sender dbus.Sender, exePath, keyName, dataKey, keyringKey string"},{"Uniquefunname":"func (u *Uadp) aesDecrypt(encryptedKey []byte, key string) (string, error)","Funname":"aesDecrypt","Returntype":"(string, error)","Args":"encryptedKey []byte, key string"},{"Uniquefunname":"func aesEncryptKey(origin, key string) ([]byte, error)","Funname":"aesEncryptKey","Returntype":"([]byte, error)","Args":"origin, key string"},{"Uniquefunname":"func (u *Uadp) checkAuth(sysBusName, actionId string) (bool, error)","Funname":"checkAuth","Returntype":"(bool, error)","Args":"sysBusName, actionId string"},{"Uniquefunname":"func (u *Uadp) findKeyFromCacheOrFile(exePath, keyName string) []byte","Funname":"findKeyFromCacheOrFile","Returntype":"[]byte","Args":"exePath, keyName string"},{"Uniquefunname":"func (u *Uadp) getDataKey(exePath, keyName, keyringKey string) (string, error)","Funname":"getDataKey","Returntype":"(string, error)","Args":"exePath, keyName, keyringKey string"},{"Uniquefunname":"func (u *Uadp) getFileName(exePath string) (string, error)","Funname":"getFileName","Returntype":"(string, error)","Args":"exePath string"},{"Uniquefunname":"func (u *Uadp) loadDataFromFile(exePath string) (map[string][]byte, error)","Funname":"loadDataFromFile","Returntype":"(map[string][]byte, error)","Args":"exePath string"},{"Uniquefunname":"func marshalGob(secretData map[string][]byte) ([]byte, error)","Funname":"marshalGob","Returntype":"([]byte, error)","Args":"secretData map[string][]byte"},{"Uniquefunname":"func newUadp(service *dbusutil.Service) (*Uadp, error)","Funname":"newUadp","Returntype":"(*Uadp, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func pkcs7Padding(cipherText []byte, blockSize int) []byte","Funname":"pkcs7Padding","Returntype":"[]byte","Args":"cipherText []byte, blockSize int"},{"Uniquefunname":"func pkcs7UnPadding(originData []byte) []byte","Funname":"pkcs7UnPadding","Returntype":"[]byte","Args":"originData []byte"},{"Uniquefunname":"func (u *Uadp) setDataKey(exePath, keyName, dataKey, keyringKey string) error","Funname":"setDataKey","Returntype":"error","Args":"exePath, keyName, dataKey, keyringKey string"},{"Uniquefunname":"func uadp.Uadp.GetDataKey(sender dbus.Sender, exePath, keyName, keyringKey string)(string, *dbus.Error)","Funname":"uadp.Uadp.GetDataKey","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, exePath, keyName, keyringKey string"},{"Uniquefunname":"func (*Uadp) GetInterfaceName() string","Funname":"uadp.Uadp.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func uadp.Uadp.SetDataKey(sender dbus.Sender, exePath, keyName, dataKey, keyringKey string)*dbus.Error","Funname":"uadp.Uadp.SetDataKey","Returntype":"*dbus.Error","Args":"sender dbus.Sender, exePath, keyName, dataKey, keyringKey string"},{"Uniquefunname":"func (u *Uadp) aesDecrypt(encryptedKey []byte, key string) (string, error)","Funname":"uadp.Uadp.aesDecrypt","Returntype":"(string, error)","Args":"encryptedKey []byte, key string"},{"Uniquefunname":"func (u *Uadp) checkAuth(sysBusName, actionId string) (bool, error)","Funname":"uadp.Uadp.checkAuth","Returntype":"(bool, error)","Args":"sysBusName, actionId string"},{"Uniquefunname":"func (u *Uadp) findKeyFromCacheOrFile(exePath, keyName string) []byte","Funname":"uadp.Uadp.findKeyFromCacheOrFile","Returntype":"[]byte","Args":"exePath, keyName string"},{"Uniquefunname":"func (u *Uadp) getDataKey(exePath, keyName, keyringKey string) (string, error)","Funname":"uadp.Uadp.getDataKey","Returntype":"(string, error)","Args":"exePath, keyName, keyringKey string"},{"Uniquefunname":"func (u *Uadp) getFileName(exePath string) (string, error)","Funname":"uadp.Uadp.getFileName","Returntype":"(string, error)","Args":"exePath string"},{"Uniquefunname":"func (u *Uadp) loadDataFromFile(exePath string) (map[string][]byte, error)","Funname":"uadp.Uadp.loadDataFromFile","Returntype":"(map[string][]byte, error)","Args":"exePath string"},{"Uniquefunname":"func (u *Uadp) setDataKey(exePath, keyName, dataKey, keyringKey string) error","Funname":"uadp.Uadp.setDataKey","Returntype":"error","Args":"exePath, keyName, dataKey, keyringKey string"},{"Uniquefunname":"func (u *Uadp) updateDataFile(exePath string) error","Funname":"uadp.Uadp.updateDataFile","Returntype":"error","Args":"exePath string"},{"Uniquefunname":"func (u *Uadp) verifyIdentity(sender dbus.Sender) (bool, error)","Funname":"uadp.Uadp.verifyIdentity","Returntype":"(bool, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func aesEncryptKey(origin, key string) ([]byte, error)","Funname":"uadp.aesEncryptKey","Returntype":"([]byte, error)","Args":"origin, key string"},{"Uniquefunname":"func marshalGob(secretData map[string][]byte) ([]byte, error)","Funname":"uadp.marshalGob","Returntype":"([]byte, error)","Args":"secretData map[string][]byte"},{"Uniquefunname":"func newUadp(service *dbusutil.Service) (*Uadp, error)","Funname":"uadp.newUadp","Returntype":"(*Uadp, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func pkcs7Padding(cipherText []byte, blockSize int) []byte","Funname":"uadp.pkcs7Padding","Returntype":"[]byte","Args":"cipherText []byte, blockSize int"},{"Uniquefunname":"func pkcs7UnPadding(originData []byte) []byte","Funname":"uadp.pkcs7UnPadding","Returntype":"[]byte","Args":"originData []byte"},{"Uniquefunname":"func unmarshalGob(content []byte, secretData interface","Funname":"uadp.unmarshalGob","Returntype":"error","Args":"content []byte, secretData interface{}"},{"Uniquefunname":"func writeFile(filename string, data []byte, perm os.FileMode) error","Funname":"uadp.writeFile","Returntype":"error","Args":"filename string, data []byte, perm os.FileMode"},{"Uniquefunname":"func unmarshalGob(content []byte, secretData interface","Funname":"unmarshalGob","Returntype":"error","Args":"content []byte, secretData interface{}"},{"Uniquefunname":"func (u *Uadp) updateDataFile(exePath string) error","Funname":"updateDataFile","Returntype":"error","Args":"exePath string"},{"Uniquefunname":"func (u *Uadp) verifyIdentity(sender dbus.Sender) (bool, error)","Funname":"verifyIdentity","Returntype":"(bool, error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func writeFile(filename string, data []byte, perm os.FileMode) error","Funname":"writeFile","Returntype":"error","Args":"filename string, data []byte, perm os.FileMode"}],"Records":[{"Name":"struct:uadp.Uadp","Fields":["uadp.Uadp.appDataMap map[string]map[string][]byte","uadp.Uadp.fileNames map[string]string","uadp.Uadp.methods *struct { SetDataKey func() `in:\"exePath,keyName,dataKey,keyringKey\"`; GetDataKey func() `in:\"exePath,keyName,keyringKey\" out:\"dataKey\"`; }","uadp.Uadp.mu sync.Mutex","uadp.Uadp.secretMu sync.Mutex","uadp.Uadp.service *dbusutil.Service"]},{"Name":"const:uadp","Fields":["uadp.UadpDataDir","uadp.allowedProcess","uadp.dbusInterface","uadp.dbusPath","uadp.dbusServiceName","uadp.polkitActionUadp"]},{"Name":"var:uadp","Fields":["uadp.logger"]}]}
{"Filepath":"systeminfo/cache.go","Functions":[{"Uniquefunname":"func doReadCache(file string) (*SystemInfo, error)","Funname":"doReadCache","Returntype":"(*SystemInfo, error)","Args":"file string"},{"Uniquefunname":"func doSaveCache(info *SystemInfo, file string) error","Funname":"doSaveCache","Returntype":"error","Args":"info *SystemInfo, file string"},{"Uniquefunname":"func doReadCache(file string) (*SystemInfo, error)","Funname":"systeminfo.doReadCache","Returntype":"(*SystemInfo, error)","Args":"file string"},{"Uniquefunname":"func doSaveCache(info *SystemInfo, file string) error","Funname":"systeminfo.doSaveCache","Returntype":"error","Args":"info *SystemInfo, file string"}],"Records":[{"Name":"var:systeminfo","Fields":["systeminfo.cacheFile","systeminfo.cacheLocker"]}]}
{"Filepath":"systeminfo/cpu.go","Functions":[{"Uniquefunname":"func GetCPUInfo(file string) (string, error)","Funname":"GetCPUInfo","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getCPUHz(key string, data map[string]string) (float64, error)","Funname":"getCPUHz","Returntype":"(float64, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getCPUInfoFromMap(nameKey, numKey string, data map[string]string) (string, error)","Funname":"getCPUInfoFromMap","Returntype":"(string, error)","Args":"nameKey, numKey string, data map[string]string"},{"Uniquefunname":"func getCPUMaxMHzByLscpu(data map[string]string) (float64, error)","Funname":"getCPUMaxMHzByLscpu","Returntype":"(float64, error)","Args":"data map[string]string"},{"Uniquefunname":"func getCPUName(key string, data map[string]string) (string, error)","Funname":"getCPUName","Returntype":"(string, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getCPUNumber(key string, data map[string]string) (int, error)","Funname":"getCPUNumber","Returntype":"(int, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getProcessorByLscpu(data map[string]string) (string, error)","Funname":"getProcessorByLscpu","Returntype":"(string, error)","Args":"data map[string]string"},{"Uniquefunname":"func hwKirinCPUInfo(data map[string]string) string","Funname":"hwKirinCPUInfo","Returntype":"string","Args":"data map[string]string"},{"Uniquefunname":"func isFloatEqual(f1, f2 float64) bool","Funname":"isFloatEqual","Returntype":"bool","Args":"f1, f2 float64"},{"Uniquefunname":"func swCPUInfo(data map[string]string) string","Funname":"swCPUInfo","Returntype":"string","Args":"data map[string]string"},{"Uniquefunname":"func GetCPUInfo(file string) (string, error)","Funname":"systeminfo.GetCPUInfo","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getCPUHz(key string, data map[string]string) (float64, error)","Funname":"systeminfo.getCPUHz","Returntype":"(float64, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getCPUInfoFromMap(nameKey, numKey string, data map[string]string) (string, error)","Funname":"systeminfo.getCPUInfoFromMap","Returntype":"(string, error)","Args":"nameKey, numKey string, data map[string]string"},{"Uniquefunname":"func getCPUMaxMHzByLscpu(data map[string]string) (float64, error)","Funname":"systeminfo.getCPUMaxMHzByLscpu","Returntype":"(float64, error)","Args":"data map[string]string"},{"Uniquefunname":"func getCPUName(key string, data map[string]string) (string, error)","Funname":"systeminfo.getCPUName","Returntype":"(string, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getCPUNumber(key string, data map[string]string) (int, error)","Funname":"systeminfo.getCPUNumber","Returntype":"(int, error)","Args":"key string, data map[string]string"},{"Uniquefunname":"func getProcessorByLscpu(data map[string]string) (string, error)","Funname":"systeminfo.getProcessorByLscpu","Returntype":"(string, error)","Args":"data map[string]string"},{"Uniquefunname":"func hwKirinCPUInfo(data map[string]string) string","Funname":"systeminfo.hwKirinCPUInfo","Returntype":"string","Args":"data map[string]string"},{"Uniquefunname":"func isFloatEqual(f1, f2 float64) bool","Funname":"systeminfo.isFloatEqual","Returntype":"bool","Args":"f1, f2 float64"},{"Uniquefunname":"func swCPUInfo(data map[string]string) string","Funname":"systeminfo.swCPUInfo","Returntype":"string","Args":"data map[string]string"}],"Records":[{"Name":"const:systeminfo","Fields":["systeminfo.compareAllowMin","systeminfo.cpuKeyARMProcessor","systeminfo.cpuKeyActive","systeminfo.cpuKeyCPU","systeminfo.cpuKeyDelim","systeminfo.cpuKeyHardware","systeminfo.cpuKeyMHz","systeminfo.cpuKeyName","systeminfo.cpuKeyProcessor","systeminfo.lscpuKeyCount","systeminfo.lscpuKeyMaxMHz","systeminfo.lscpuKeyModelName"]}]}
{"Filepath":"systeminfo/disk.go","Functions":[{"Uniquefunname":"func (set diskInfoMap) Get(key dbus.ObjectPath) *diskInfo","Funname":"Get","Returntype":"*diskInfo","Args":"key dbus.ObjectPath"},{"Uniquefunname":"func (set diskInfoMap) GetRootDrive() dbus.ObjectPath","Funname":"GetRootDrive","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (set diskInfoMap) GetRootSize() uint64","Funname":"GetRootSize","Returntype":"uint64","Args":""},{"Uniquefunname":"func (set diskInfoMap) GetRootTable() dbus.ObjectPath","Funname":"GetRootTable","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func getDiskCap() (uint64, error)","Funname":"getDiskCap","Returntype":"(uint64, error)","Args":""},{"Uniquefunname":"func (set diskInfoMap) Get(key dbus.ObjectPath) *diskInfo","Funname":"systeminfo.diskInfoMap.Get","Returntype":"*diskInfo","Args":"key dbus.ObjectPath"},{"Uniquefunname":"func (set diskInfoMap) GetRootDrive() dbus.ObjectPath","Funname":"systeminfo.diskInfoMap.GetRootDrive","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func (set diskInfoMap) GetRootSize() uint64","Funname":"systeminfo.diskInfoMap.GetRootSize","Returntype":"uint64","Args":""},{"Uniquefunname":"func (set diskInfoMap) GetRootTable() dbus.ObjectPath","Funname":"systeminfo.diskInfoMap.GetRootTable","Returntype":"dbus.ObjectPath","Args":""},{"Uniquefunname":"func getDiskCap() (uint64, error)","Funname":"systeminfo.getDiskCap","Returntype":"(uint64, error)","Args":""}],"Records":[{"Name":"struct:systeminfo.diskInfo","Fields":["systeminfo.diskInfo.Drive dbus.ObjectPath","systeminfo.diskInfo.MountPoints []string","systeminfo.diskInfo.Size uint64","systeminfo.diskInfo.Table dbus.ObjectPath"]}]}
{"Filepath":"systeminfo/distro.go","Functions":[{"Uniquefunname":"func getDistro() (string, string, string, error)","Funname":"getDistro","Returntype":"(string, string, string, error)","Args":""},{"Uniquefunname":"func getDistroFromLSB(file string) (string, string, string, error)","Funname":"getDistroFromLSB","Returntype":"(string, string, string, error)","Args":"file string"},{"Uniquefunname":"func getDistro() (string, string, string, error)","Funname":"systeminfo.getDistro","Returntype":"(string, string, string, error)","Args":""},{"Uniquefunname":"func getDistroFromLSB(file string) (string, string, string, error)","Funname":"systeminfo.getDistroFromLSB","Returntype":"(string, string, string, error)","Args":"file string"}],"Records":[{"Name":"const:systeminfo","Fields":["systeminfo.distroDescKeyLSB","systeminfo.distroFileLSB","systeminfo.distroIdKeyLSB","systeminfo.distroKeyDelim","systeminfo.distroVerKeyLSB"]}]}
{"Filepath":"systeminfo/info.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (*SystemInfo) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func NewSystemInfo() *SystemInfo","Funname":"NewSystemInfo","Returntype":"*SystemInfo","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (info *SystemInfo) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) initSysSystemInfo()","Funname":"initSysSystemInfo","Returntype":"","Args":""},{"Uniquefunname":"func (info *SystemInfo) isValidity() bool","Funname":"isValidity","Returntype":"bool","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"systeminfo.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"systeminfo.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"systeminfo.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) initSysSystemInfo()","Funname":"systeminfo.Daemon.initSysSystemInfo","Returntype":"","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"systeminfo.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func NewSystemInfo() *SystemInfo","Funname":"systeminfo.NewSystemInfo","Returntype":"*SystemInfo","Args":""},{"Uniquefunname":"func (*SystemInfo) GetInterfaceName() string","Funname":"systeminfo.SystemInfo.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (info *SystemInfo) init()","Funname":"systeminfo.SystemInfo.init","Returntype":"","Args":""},{"Uniquefunname":"func (info *SystemInfo) isValidity() bool","Funname":"systeminfo.SystemInfo.isValidity","Returntype":"bool","Args":""}],"Records":[{"Name":"struct:systeminfo.Daemon","Fields":["systeminfo.Daemon.PropsMu sync.RWMutex","systeminfo.Daemon.info *SystemInfo","systeminfo.Daemon.sigSystemLoop *dbusutil.SignalLoop","systeminfo.Daemon.systeminfo *systeminfo.SystemInfo"]},{"Name":"struct:systeminfo.SystemInfo","Fields":["systeminfo.SystemInfo.CPUMaxMHz float64","systeminfo.SystemInfo.CurrentSpeed uint64","systeminfo.SystemInfo.DiskCap uint64","systeminfo.SystemInfo.DistroDesc string","systeminfo.SystemInfo.DistroID string","systeminfo.SystemInfo.DistroVer string","systeminfo.SystemInfo.MemoryCap uint64","systeminfo.SystemInfo.Processor string","systeminfo.SystemInfo.SystemType int64","systeminfo.SystemInfo.Version string"]},{"Name":"const:systeminfo","Fields":["systeminfo.dbusInterface","systeminfo.dbusPath","systeminfo.dbusServiceName"]},{"Name":"var:systeminfo","Fields":["systeminfo.logger"]}]}
{"Filepath":"systeminfo/info_test.go","Functions":[{"Uniquefunname":"func TestCPUInfo(t *testing.T)","Funname":"TestCPUInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDistro(t *testing.T)","Funname":"TestDistro","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDoReadCache(t *testing.T)","Funname":"TestDoReadCache","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetCPUMaxMHzByLscpu(t *testing.T)","Funname":"TestGetCPUMaxMHzByLscpu","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetProcessorByLscpuu(t *testing.T)","Funname":"TestGetProcessorByLscpuu","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsFloatEqual(t *testing.T)","Funname":"TestIsFloatEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMemInfo(t *testing.T)","Funname":"TestMemInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseInfoFile(t *testing.T)","Funname":"TestParseInfoFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemBit(t *testing.T)","Funname":"TestSystemBit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestVersion(t *testing.T)","Funname":"TestVersion","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestCPUInfo(t *testing.T)","Funname":"systeminfo.TestCPUInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDistro(t *testing.T)","Funname":"systeminfo.TestDistro","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestDoReadCache(t *testing.T)","Funname":"systeminfo.TestDoReadCache","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetCPUMaxMHzByLscpu(t *testing.T)","Funname":"systeminfo.TestGetCPUMaxMHzByLscpu","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestGetProcessorByLscpuu(t *testing.T)","Funname":"systeminfo.TestGetProcessorByLscpuu","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestIsFloatEqual(t *testing.T)","Funname":"systeminfo.TestIsFloatEqual","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestMemInfo(t *testing.T)","Funname":"systeminfo.TestMemInfo","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestParseInfoFile(t *testing.T)","Funname":"systeminfo.TestParseInfoFile","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestSystemBit(t *testing.T)","Funname":"systeminfo.TestSystemBit","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func TestVersion(t *testing.T)","Funname":"systeminfo.TestVersion","Returntype":"","Args":"t *testing.T"}],"Records":null}
{"Filepath":"systeminfo/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"systeminfo.init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"systeminfo/lsblk_disk.go","Functions":[{"Uniquefunname":"func GetDiskList() (DiskList, error)","Funname":"GetDiskList","Returntype":"(DiskList, error)","Args":""},{"Uniquefunname":"func (list DiskList) GetRoot() *Disk","Funname":"GetRoot","Returntype":"*Disk","Args":""},{"Uniquefunname":"func (dev *lsblkDevice) GetUUIDList() []string","Funname":"GetUUIDList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (dev *lsblkDevice) RootMounted() bool","Funname":"RootMounted","Returntype":"bool","Args":""},{"Uniquefunname":"func execLsblk() ([]byte, error)","Funname":"execLsblk","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func genSerialByUUIDList(list []string) string","Funname":"genSerialByUUIDList","Returntype":"string","Args":"list []string"},{"Uniquefunname":"func newDiskFromDevice(dev *lsblkDevice) *Disk","Funname":"newDiskFromDevice","Returntype":"*Disk","Args":"dev *lsblkDevice"},{"Uniquefunname":"func newDiskListFromOutput(out []byte) (DiskList, error)","Funname":"newDiskListFromOutput","Returntype":"(DiskList, error)","Args":"out []byte"},{"Uniquefunname":"func parseLsblkOutput(out []byte) (*lsblkOutput, error)","Funname":"parseLsblkOutput","Returntype":"(*lsblkOutput, error)","Args":"out []byte"},{"Uniquefunname":"func sha256Sum(data []byte) string","Funname":"sha256Sum","Returntype":"string","Args":"data []byte"},{"Uniquefunname":"func (list DiskList) GetRoot() *Disk","Funname":"systeminfo.DiskList.GetRoot","Returntype":"*Disk","Args":""},{"Uniquefunname":"func GetDiskList() (DiskList, error)","Funname":"systeminfo.GetDiskList","Returntype":"(DiskList, error)","Args":""},{"Uniquefunname":"func execLsblk() ([]byte, error)","Funname":"systeminfo.execLsblk","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func genSerialByUUIDList(list []string) string","Funname":"systeminfo.genSerialByUUIDList","Returntype":"string","Args":"list []string"},{"Uniquefunname":"func (dev *lsblkDevice) GetUUIDList() []string","Funname":"systeminfo.lsblkDevice.GetUUIDList","Returntype":"[]string","Args":""},{"Uniquefunname":"func (dev *lsblkDevice) RootMounted() bool","Funname":"systeminfo.lsblkDevice.RootMounted","Returntype":"bool","Args":""},{"Uniquefunname":"func newDiskFromDevice(dev *lsblkDevice) *Disk","Funname":"systeminfo.newDiskFromDevice","Returntype":"*Disk","Args":"dev *lsblkDevice"},{"Uniquefunname":"func newDiskListFromOutput(out []byte) (DiskList, error)","Funname":"systeminfo.newDiskListFromOutput","Returntype":"(DiskList, error)","Args":"out []byte"},{"Uniquefunname":"func parseLsblkOutput(out []byte) (*lsblkOutput, error)","Funname":"systeminfo.parseLsblkOutput","Returntype":"(*lsblkOutput, error)","Args":"out []byte"},{"Uniquefunname":"func sha256Sum(data []byte) string","Funname":"systeminfo.sha256Sum","Returntype":"string","Args":"data []byte"}],"Records":[{"Name":"struct:systeminfo.Disk","Fields":["systeminfo.Disk.Model string","systeminfo.Disk.Name string","systeminfo.Disk.RootMounted bool","systeminfo.Disk.Serial string","systeminfo.Disk.Size int64","systeminfo.Disk.Vendor string"]},{"Name":"struct:systeminfo.lsblkDevice","Fields":["systeminfo.lsblkDevice.Children lsblkDeviceList","systeminfo.lsblkDevice.Model string","systeminfo.lsblkDevice.MountPoint string","systeminfo.lsblkDevice.Name string","systeminfo.lsblkDevice.Serial string","systeminfo.lsblkDevice.Size interface{}","systeminfo.lsblkDevice.Type string","systeminfo.lsblkDevice.UUID string","systeminfo.lsblkDevice.Vendor string"]},{"Name":"struct:systeminfo.lsblkOutput","Fields":["systeminfo.lsblkOutput.Blockdevices lsblkDeviceList"]},{"Name":"const:systeminfo","Fields":["systeminfo.uuidDelim"]}]}
{"Filepath":"systeminfo/utils.go","Functions":[{"Uniquefunname":"func getMemoryFromFile(file string) (uint64, error)","Funname":"getMemoryFromFile","Returntype":"(uint64, error)","Args":"file string"},{"Uniquefunname":"func parseInfoFile(file, delim string) (map[string]string, error)","Funname":"parseInfoFile","Returntype":"(map[string]string, error)","Args":"file, delim string"},{"Uniquefunname":"func runLscpu() (map[string]string, error)","Funname":"runLscpu","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func systemBit() string","Funname":"systemBit","Returntype":"string","Args":""},{"Uniquefunname":"func getMemoryFromFile(file string) (uint64, error)","Funname":"systeminfo.getMemoryFromFile","Returntype":"(uint64, error)","Args":"file string"},{"Uniquefunname":"func parseInfoFile(file, delim string) (map[string]string, error)","Funname":"systeminfo.parseInfoFile","Returntype":"(map[string]string, error)","Args":"file, delim string"},{"Uniquefunname":"func runLscpu() (map[string]string, error)","Funname":"systeminfo.runLscpu","Returntype":"(map[string]string, error)","Args":""},{"Uniquefunname":"func systemBit() string","Funname":"systeminfo.systemBit","Returntype":"string","Args":""}],"Records":[{"Name":"const:systeminfo","Fields":["systeminfo.lscpuKeyDelim","systeminfo.memKeyDelim","systeminfo.memKeyTotal"]}]}
{"Filepath":"systeminfo/version.go","Functions":[{"Uniquefunname":"func getVersion() (string, error)","Funname":"getVersion","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getVersionFromDeepin(file string) (string, error)","Funname":"getVersionFromDeepin","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getVersionFromLSB(file string) (string, error)","Funname":"getVersionFromLSB","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getVersion() (string, error)","Funname":"systeminfo.getVersion","Returntype":"(string, error)","Args":""},{"Uniquefunname":"func getVersionFromDeepin(file string) (string, error)","Funname":"systeminfo.getVersionFromDeepin","Returntype":"(string, error)","Args":"file string"},{"Uniquefunname":"func getVersionFromLSB(file string) (string, error)","Funname":"systeminfo.getVersionFromLSB","Returntype":"(string, error)","Args":"file string"}],"Records":[{"Name":"const:systeminfo","Fields":["systeminfo.versionFileDeepin","systeminfo.versionFileLSB","systeminfo.versionGroupAddition","systeminfo.versionGroupRelease","systeminfo.versionKeyDelim","systeminfo.versionKeyLSB","systeminfo.versionKeyMilestone","systeminfo.versionKeyType","systeminfo.versionKeyVersion"]}]}
{"Filepath":"timedate/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"timedate.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"timedate.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"timedate.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"timedate.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"}],"Records":[{"Name":"struct:timedate.Daemon","Fields":["timedate.Daemon.manager *Manager"]},{"Name":"var:timedate","Fields":["timedate.logger"]}]}
{"Filepath":"timedate/handle_event.go","Functions":[{"Uniquefunname":"func (m *Manager) handleGSettingsChanged()","Funname":"handleGSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenPropChanged()","Funname":"listenPropChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) handleGSettingsChanged()","Funname":"timedate.Manager.handleGSettingsChanged","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) listenPropChanged()","Funname":"timedate.Manager.listenPropChanged","Returntype":"","Args":""}],"Records":null}
{"Filepath":"timedate/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"timedate.init","Returntype":"","Args":""}],"Records":null}
{"Filepath":"timedate/manager.go","Functions":[{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserObj(systemConn *dbus.Conn)","Funname":"initUserObj","Returntype":"","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func (*Manager) GetInterfaceName() string","Funname":"timedate.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *Manager) destroy()","Funname":"timedate.Manager.destroy","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) init()","Funname":"timedate.Manager.init","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initUserObj(systemConn *dbus.Conn)","Funname":"timedate.Manager.initUserObj","Returntype":"","Args":"systemConn *dbus.Conn"},{"Uniquefunname":"func NewManager(service *dbusutil.Service) (*Manager, error)","Funname":"timedate.NewManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:timedate.Manager","Fields":["timedate.Manager.CanNTP bool","timedate.Manager.DSTOffset gsprop.Int","timedate.Manager.LocalRTC bool","timedate.Manager.LongDateFormat gsprop.Int","timedate.Manager.LongTimeFormat gsprop.Int","timedate.Manager.NTP bool","timedate.Manager.NTPServer string","timedate.Manager.PropsMu sync.RWMutex","timedate.Manager.ShortDateFormat gsprop.Int","timedate.Manager.ShortTimeFormat gsprop.Int","timedate.Manager.Timezone string","timedate.Manager.Use24HourFormat gsprop.Bool","timedate.Manager.UserTimezones gsprop.Strv","timedate.Manager.WeekBegins gsprop.Int","timedate.Manager.WeekdayFormat gsprop.Int","timedate.Manager.methods *struct { SetDate func() `in:\"year,month,day,hour,min,sec,nsec\"`; SetTime func() `in:\"usec,relative\"`; SetNTP func() `in:\"useNTP\"`; SetNTPServer func() `in:\"server\"`; GetSampleNTPServers func() `out:\"servers\"`; SetLocalRTC func() `in:\"localeRTC,fixSystem\"`; SetTimezone func() `in:\"zone\"`; AddUserTimezone func() `in:\"zone\"`; DeleteUserTimezone func() `in:\"zone\"`; GetZoneInfo func() `in:\"zone\" out:\"zone_info\"`; GetZoneList func() `out:\"zone_list\"`; }","timedate.Manager.service *dbusutil.Service","timedate.Manager.setter *timedated.Timedated","timedate.Manager.settings *gio.Settings","timedate.Manager.signals *struct { TimeUpdate struct{ }; }","timedate.Manager.systemSigLoop *dbusutil.SignalLoop","timedate.Manager.td *timedate1.Timedate","timedate.Manager.userObj *accounts.User"]},{"Name":"const:timedate","Fields":["timedate.dbusInterface","timedate.dbusPath","timedate.dbusServiceName","timedate.settingsKey24Hour","timedate.settingsKeyDSTOffset","timedate.settingsKeyLongDateFormat","timedate.settingsKeyLongTimeFormat","timedate.settingsKeyShortDateFormat","timedate.settingsKeyShortTimeFormat","timedate.settingsKeyTimezoneList","timedate.settingsKeyWeekBegins","timedate.settingsKeyWeekdayFormat","timedate.timeDateSchema"]}]}
{"Filepath":"timedate/manager_ifc.go","Functions":[{"Uniquefunname":"func (m *Manager) AddUserTimezone(zone string) *dbus.Error","Funname":"AddUserTimezone","Returntype":"*dbus.Error","Args":"zone string"},{"Uniquefunname":"func (m *Manager) DeleteUserTimezone(zone string) *dbus.Error","Funname":"DeleteUserTimezone","Returntype":"*dbus.Error","Args":"zone string"},{"Uniquefunname":"func (m *Manager) GetSampleNTPServers() ([]string, *dbus.Error)","Funname":"GetSampleNTPServers","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetZoneInfo(zone string) (zoneinfo.ZoneInfo, *dbus.Error)","Funname":"GetZoneInfo","Returntype":"(zoneinfo.ZoneInfo, *dbus.Error)","Args":"zone string"},{"Uniquefunname":"func (m *Manager) GetZoneList() ([]string, *dbus.Error)","Funname":"GetZoneList","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetDate(year, month, day, hour, min, sec, nsec int32) *dbus.Error","Funname":"SetDate","Returntype":"*dbus.Error","Args":"year, month, day, hour, min, sec, nsec int32"},{"Uniquefunname":"func (m *Manager) SetLocalRTC(localRTC, fixSystem bool) *dbus.Error","Funname":"SetLocalRTC","Returntype":"*dbus.Error","Args":"localRTC, fixSystem bool"},{"Uniquefunname":"func (m *Manager) SetNTP(useNTP bool) *dbus.Error","Funname":"SetNTP","Returntype":"*dbus.Error","Args":"useNTP bool"},{"Uniquefunname":"func (m *Manager) SetNTPServer(server string) *dbus.Error","Funname":"SetNTPServer","Returntype":"*dbus.Error","Args":"server string"},{"Uniquefunname":"func (m *Manager) SetTime(usec int64, relative bool) *dbus.Error","Funname":"SetTime","Returntype":"*dbus.Error","Args":"usec int64, relative bool"},{"Uniquefunname":"func (m *Manager) SetTimezone(zone string) *dbus.Error","Funname":"SetTimezone","Returntype":"*dbus.Error","Args":"zone string"},{"Uniquefunname":"func (m *Manager) AddUserTimezone(zone string) *dbus.Error","Funname":"timedate.Manager.AddUserTimezone","Returntype":"*dbus.Error","Args":"zone string"},{"Uniquefunname":"func (m *Manager) DeleteUserTimezone(zone string) *dbus.Error","Funname":"timedate.Manager.DeleteUserTimezone","Returntype":"*dbus.Error","Args":"zone string"},{"Uniquefunname":"func (m *Manager) GetSampleNTPServers() ([]string, *dbus.Error)","Funname":"timedate.Manager.GetSampleNTPServers","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetZoneInfo(zone string) (zoneinfo.ZoneInfo, *dbus.Error)","Funname":"timedate.Manager.GetZoneInfo","Returntype":"(zoneinfo.ZoneInfo, *dbus.Error)","Args":"zone string"},{"Uniquefunname":"func (m *Manager) GetZoneList() ([]string, *dbus.Error)","Funname":"timedate.Manager.GetZoneList","Returntype":"([]string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) Reset() *dbus.Error","Funname":"timedate.Manager.Reset","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) SetDate(year, month, day, hour, min, sec, nsec int32) *dbus.Error","Funname":"timedate.Manager.SetDate","Returntype":"*dbus.Error","Args":"year, month, day, hour, min, sec, nsec int32"},{"Uniquefunname":"func (m *Manager) SetLocalRTC(localRTC, fixSystem bool) *dbus.Error","Funname":"timedate.Manager.SetLocalRTC","Returntype":"*dbus.Error","Args":"localRTC, fixSystem bool"},{"Uniquefunname":"func (m *Manager) SetNTP(useNTP bool) *dbus.Error","Funname":"timedate.Manager.SetNTP","Returntype":"*dbus.Error","Args":"useNTP bool"},{"Uniquefunname":"func (m *Manager) SetNTPServer(server string) *dbus.Error","Funname":"timedate.Manager.SetNTPServer","Returntype":"*dbus.Error","Args":"server string"},{"Uniquefunname":"func (m *Manager) SetTime(usec int64, relative bool) *dbus.Error","Funname":"timedate.Manager.SetTime","Returntype":"*dbus.Error","Args":"usec int64, relative bool"},{"Uniquefunname":"func (m *Manager) SetTimezone(zone string) *dbus.Error","Funname":"timedate.Manager.SetTimezone","Returntype":"*dbus.Error","Args":"zone string"}],"Records":null}
{"Filepath":"timedate/timedate_dbusutil.go","Functions":[{"Uniquefunname":"func (v *Manager) emitPropChangedCanNTP(value bool) error","Funname":"emitPropChangedCanNTP","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedLocalRTC(value bool) error","Funname":"emitPropChangedLocalRTC","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedNTP(value bool) error","Funname":"emitPropChangedNTP","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedNTPServer(value string) error","Funname":"emitPropChangedNTPServer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedTimezone(value string) error","Funname":"emitPropChangedTimezone","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropCanNTP(value bool) (changed bool)","Funname":"setPropCanNTP","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropLocalRTC(value bool) (changed bool)","Funname":"setPropLocalRTC","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropNTP(value bool) (changed bool)","Funname":"setPropNTP","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropNTPServer(value string) (changed bool)","Funname":"setPropNTPServer","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropTimezone(value string) (changed bool)","Funname":"setPropTimezone","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedCanNTP(value bool) error","Funname":"timedate.Manager.emitPropChangedCanNTP","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedLocalRTC(value bool) error","Funname":"timedate.Manager.emitPropChangedLocalRTC","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedNTP(value bool) error","Funname":"timedate.Manager.emitPropChangedNTP","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func (v *Manager) emitPropChangedNTPServer(value string) error","Funname":"timedate.Manager.emitPropChangedNTPServer","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) emitPropChangedTimezone(value string) error","Funname":"timedate.Manager.emitPropChangedTimezone","Returntype":"error","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropCanNTP(value bool) (changed bool)","Funname":"timedate.Manager.setPropCanNTP","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropLocalRTC(value bool) (changed bool)","Funname":"timedate.Manager.setPropLocalRTC","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropNTP(value bool) (changed bool)","Funname":"timedate.Manager.setPropNTP","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *Manager) setPropNTPServer(value string) (changed bool)","Funname":"timedate.Manager.setPropNTPServer","Returntype":"(changed bool)","Args":"value string"},{"Uniquefunname":"func (v *Manager) setPropTimezone(value string) (changed bool)","Funname":"timedate.Manager.setPropTimezone","Returntype":"(changed bool)","Args":"value string"}],"Records":null}
{"Filepath":"timedate/utils.go","Functions":[{"Uniquefunname":"func addItemToList(item string, list []string) ([]string, bool)","Funname":"addItemToList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func deleteItemFromList(item string, list []string) ([]string, bool)","Funname":"deleteItemFromList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func filterNilString(list []string) ([]string, bool)","Funname":"filterNilString","Returntype":"([]string, bool)","Args":"list []string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"isItemInList","Returntype":"bool","Args":"item string, list []string"},{"Uniquefunname":"func addItemToList(item string, list []string) ([]string, bool)","Funname":"timedate.addItemToList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func deleteItemFromList(item string, list []string) ([]string, bool)","Funname":"timedate.deleteItemFromList","Returntype":"([]string, bool)","Args":"item string, list []string"},{"Uniquefunname":"func filterNilString(list []string) ([]string, bool)","Funname":"timedate.filterNilString","Returntype":"([]string, bool)","Args":"list []string"},{"Uniquefunname":"func isItemInList(item string, list []string) bool","Funname":"timedate.isItemInList","Returntype":"bool","Args":"item string, list []string"}],"Records":null}
{"Filepath":"timedate/utils_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestAddItem(c *C.C)","Funname":"TestAddItem","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDeleteItem(c *C.C)","Funname":"TestDeleteItem","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFilterNilStr(c *C.C)","Funname":"TestFilterNilStr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestItemInList(c *C.C)","Funname":"TestItemInList","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"timedate.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"timedate.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestAddItem(c *C.C)","Funname":"timedate.testWrapper.TestAddItem","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestDeleteItem(c *C.C)","Funname":"timedate.testWrapper.TestDeleteItem","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestFilterNilStr(c *C.C)","Funname":"timedate.testWrapper.TestFilterNilStr","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestItemInList(c *C.C)","Funname":"timedate.testWrapper.TestItemInList","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:timedate","Fields":["timedate.list"]}]}
{"Filepath":"timedate/zoneinfo/wrapper.go","Functions":[{"Uniquefunname":"func getDSTTime(zone string, year int32) (int64, int64, bool)","Funname":"getDSTTime","Returntype":"(int64, int64, bool)","Args":"zone string, year int32"},{"Uniquefunname":"func getOffsetByUSec(zone string, timestamp int64) int32","Funname":"getOffsetByUSec","Returntype":"int32","Args":"zone string, timestamp int64"},{"Uniquefunname":"func getRawUSec(zone string, timestamp int64) int64","Funname":"getRawUSec","Returntype":"int64","Args":"zone string, timestamp int64"},{"Uniquefunname":"func newDSTInfo(zone string) *DSTInfo","Funname":"newDSTInfo","Returntype":"*DSTInfo","Args":"zone string"},{"Uniquefunname":"func newZoneInfo(zone string) *ZoneInfo","Funname":"newZoneInfo","Returntype":"*ZoneInfo","Args":"zone string"},{"Uniquefunname":"func getDSTTime(zone string, year int32) (int64, int64, bool)","Funname":"zoneinfo.getDSTTime","Returntype":"(int64, int64, bool)","Args":"zone string, year int32"},{"Uniquefunname":"func getOffsetByUSec(zone string, timestamp int64) int32","Funname":"zoneinfo.getOffsetByUSec","Returntype":"int32","Args":"zone string, timestamp int64"},{"Uniquefunname":"func getRawUSec(zone string, timestamp int64) int64","Funname":"zoneinfo.getRawUSec","Returntype":"int64","Args":"zone string, timestamp int64"},{"Uniquefunname":"func newDSTInfo(zone string) *DSTInfo","Funname":"zoneinfo.newDSTInfo","Returntype":"*DSTInfo","Args":"zone string"},{"Uniquefunname":"func newZoneInfo(zone string) *ZoneInfo","Funname":"zoneinfo.newZoneInfo","Returntype":"*ZoneInfo","Args":"zone string"}],"Records":null}
{"Filepath":"timedate/zoneinfo/zone.go","Functions":[{"Uniquefunname":"func GetAllZones() []string","Funname":"GetAllZones","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetZoneInfo(zone string) (*ZoneInfo, error)","Funname":"GetZoneInfo","Returntype":"(*ZoneInfo, error)","Args":"zone string"},{"Uniquefunname":"func IsZoneValid(zone string) bool","Funname":"IsZoneValid","Returntype":"bool","Args":"zone string"},{"Uniquefunname":"func getUncommentedZoneLines(file string) ([]string, error)","Funname":"getUncommentedZoneLines","Returntype":"([]string, error)","Args":"file string"},{"Uniquefunname":"func getZoneListFromFile(file string) ([]string, error)","Funname":"getZoneListFromFile","Returntype":"([]string, error)","Args":"file string"},{"Uniquefunname":"func GetAllZones() []string","Funname":"zoneinfo.GetAllZones","Returntype":"[]string","Args":""},{"Uniquefunname":"func GetZoneInfo(zone string) (*ZoneInfo, error)","Funname":"zoneinfo.GetZoneInfo","Returntype":"(*ZoneInfo, error)","Args":"zone string"},{"Uniquefunname":"func IsZoneValid(zone string) bool","Funname":"zoneinfo.IsZoneValid","Returntype":"bool","Args":"zone string"},{"Uniquefunname":"func getUncommentedZoneLines(file string) ([]string, error)","Funname":"zoneinfo.getUncommentedZoneLines","Returntype":"([]string, error)","Args":"file string"},{"Uniquefunname":"func getZoneListFromFile(file string) ([]string, error)","Funname":"zoneinfo.getZoneListFromFile","Returntype":"([]string, error)","Args":"file string"}],"Records":[{"Name":"struct:zoneinfo.DSTInfo","Fields":["zoneinfo.DSTInfo.Enter int64","zoneinfo.DSTInfo.Leave int64","zoneinfo.DSTInfo.Offset int32"]},{"Name":"var:zoneinfo","Fields":["zoneinfo.ErrZoneInvalid","zoneinfo._zoneList","zoneinfo.defaultZoneDir","zoneinfo.defaultZoneTab"]},{"Name":"struct:zoneinfo.ZoneInfo","Fields":["zoneinfo.ZoneInfo.DST DSTInfo","zoneinfo.ZoneInfo.Desc string","zoneinfo.ZoneInfo.Name string","zoneinfo.ZoneInfo.Offset int32"]}]}
{"Filepath":"timedate/zoneinfo/zone_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (*testWrapper) TestGetDSTTime(c *C.C)","Funname":"TestGetDSTTime","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetOffsetByUSec(c *C.C)","Funname":"TestGetOffsetByUSec","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetRawUSec(c *C.C)","Funname":"TestGetRawUSec","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetZoneInfo(c *C.C)","Funname":"TestGetZoneInfo","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetZoneList(c *C.C)","Funname":"TestGetZoneList","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestZoneValid(c *C.C)","Funname":"TestZoneValid","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func Test(t *testing.T)","Funname":"zoneinfo.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func init()","Funname":"zoneinfo.init","Returntype":"","Args":""},{"Uniquefunname":"func (*testWrapper) TestGetDSTTime(c *C.C)","Funname":"zoneinfo.testWrapper.TestGetDSTTime","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetOffsetByUSec(c *C.C)","Funname":"zoneinfo.testWrapper.TestGetOffsetByUSec","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetRawUSec(c *C.C)","Funname":"zoneinfo.testWrapper.TestGetRawUSec","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetZoneInfo(c *C.C)","Funname":"zoneinfo.testWrapper.TestGetZoneInfo","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestGetZoneList(c *C.C)","Funname":"zoneinfo.testWrapper.TestGetZoneList","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func (*testWrapper) TestZoneValid(c *C.C)","Funname":"zoneinfo.testWrapper.TestZoneValid","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:zoneinfo","Fields":["zoneinfo.zoneInfos"]}]}
{"Filepath":"trayicon/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"trayicon.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"trayicon.Daemon.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"trayicon.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"trayicon.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"trayicon.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"}],"Records":[{"Name":"struct:trayicon.Daemon","Fields":["trayicon.Daemon.manager *TrayManager","trayicon.Daemon.sigLoop *dbusutil.SignalLoop","trayicon.Daemon.snw *StatusNotifierWatcher"]},{"Name":"const:trayicon","Fields":["trayicon.moduleName"]}]}
{"Filepath":"trayicon/icon.go","Functions":[{"Uniquefunname":"func NewTrayIcon(win x.Window) *TrayIcon","Funname":"NewTrayIcon","Returntype":"*TrayIcon","Args":"win x.Window"},{"Uniquefunname":"func (icon *TrayIcon) getName() string","Funname":"getName","Returntype":"string","Args":""},{"Uniquefunname":"func (icon *TrayIcon) getPixmapData() ([]byte, error)","Funname":"getPixmapData","Returntype":"([]byte, error)","Args":""},{"Uniquefunname":"func NewTrayIcon(win x.Window) *TrayIcon","Funname":"trayicon.NewTrayIcon","Returntype":"*TrayIcon","Args":"win x.Window"},{"Uniquefunname":"func (icon *TrayIcon) getName() string","Funname":"trayicon.TrayIcon.getName","Returntype":"string","Args":""},{"Uniquefunname":"func (icon *TrayIcon) getPixmapData() ([]byte, error)","Funname":"trayicon.TrayIcon.getPixmapData","Returntype":"([]byte, error)","Args":""}],"Records":[{"Name":"struct:trayicon.TrayIcon","Fields":["trayicon.TrayIcon.damage damage.Damage","trayicon.TrayIcon.data []byte","trayicon.TrayIcon.mu sync.Mutex","trayicon.TrayIcon.notify bool","trayicon.TrayIcon.win x.Window"]}]}
{"Filepath":"trayicon/init.go","Functions":[{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func initX()","Funname":"initX","Returntype":"","Args":""},{"Uniquefunname":"func init()","Funname":"trayicon.init","Returntype":"","Args":""},{"Uniquefunname":"func initX()","Funname":"trayicon.initX","Returntype":"","Args":""}],"Records":[{"Name":"var:trayicon","Fields":["trayicon.XA_MANAGER","trayicon.XA_NET_SYSTEM_TRAY_OPCODE","trayicon.XA_NET_SYSTEM_TRAY_ORIENTAION","trayicon.XA_NET_SYSTEM_TRAY_S0","trayicon.XA_NET_SYSTEM_TRAY_VISUAL","trayicon.XConn","trayicon.logger"]}]}
{"Filepath":"trayicon/status-notifier-watcher.go","Functions":[{"Uniquefunname":"func (*StatusNotifierWatcher) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (snw *StatusNotifierWatcher) RegisterStatusNotifierHost(serviceName string) *dbus.Error","Funname":"RegisterStatusNotifierHost","Returntype":"*dbus.Error","Args":"serviceName string"},{"Uniquefunname":"func RegisterStatusNotifierItem(sender dbus.Sender, serviceOrPath string)*dbus.Error","Funname":"RegisterStatusNotifierItem","Returntype":"*dbus.Error","Args":"sender dbus.Sender, serviceOrPath string"},{"Uniquefunname":"func (snw *StatusNotifierWatcher) isDBusServiceRegistered(serviceName string) bool","Funname":"isDBusServiceRegistered","Returntype":"bool","Args":"serviceName string"},{"Uniquefunname":"func (ss *StatusNotifierWatcher) listenDBusNameOwnerChanged()","Funname":"listenDBusNameOwnerChanged","Returntype":"","Args":""},{"Uniquefunname":"func newStatusNotifierWatcher(service *dbusutil.Service, sigLoop *dbusutil.SignalLoop)*StatusNotifierWatcher","Funname":"newStatusNotifierWatcher","Returntype":"*StatusNotifierWatcher","Args":"service *dbusutil.Service, sigLoop *dbusutil.SignalLoop"},{"Uniquefunname":"func (*StatusNotifierWatcher) GetInterfaceName() string","Funname":"trayicon.StatusNotifierWatcher.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (snw *StatusNotifierWatcher) RegisterStatusNotifierHost(serviceName string) *dbus.Error","Funname":"trayicon.StatusNotifierWatcher.RegisterStatusNotifierHost","Returntype":"*dbus.Error","Args":"serviceName string"},{"Uniquefunname":"func trayicon.StatusNotifierWatcher.RegisterStatusNotifierItem(sender dbus.Sender, serviceOrPath string)*dbus.Error","Funname":"trayicon.StatusNotifierWatcher.RegisterStatusNotifierItem","Returntype":"*dbus.Error","Args":"sender dbus.Sender, serviceOrPath string"},{"Uniquefunname":"func (snw *StatusNotifierWatcher) isDBusServiceRegistered(serviceName string) bool","Funname":"trayicon.StatusNotifierWatcher.isDBusServiceRegistered","Returntype":"bool","Args":"serviceName string"},{"Uniquefunname":"func (ss *StatusNotifierWatcher) listenDBusNameOwnerChanged()","Funname":"trayicon.StatusNotifierWatcher.listenDBusNameOwnerChanged","Returntype":"","Args":""},{"Uniquefunname":"func trayicon.newStatusNotifierWatcher(service *dbusutil.Service, sigLoop *dbusutil.SignalLoop)*StatusNotifierWatcher","Funname":"trayicon.newStatusNotifierWatcher","Returntype":"*StatusNotifierWatcher","Args":"service *dbusutil.Service, sigLoop *dbusutil.SignalLoop"}],"Records":[{"Name":"struct:trayicon.StatusNotifierWatcher","Fields":["trayicon.StatusNotifierWatcher.IsStatusNotifierHostRegistered bool","trayicon.StatusNotifierWatcher.PropsMu sync.RWMutex","trayicon.StatusNotifierWatcher.ProtocolVersion int32","trayicon.StatusNotifierWatcher.RegisteredStatusNotifierItems strv.Strv","trayicon.StatusNotifierWatcher.dbusDaemon *ofdbus.DBus","trayicon.StatusNotifierWatcher.hostServiceName string","trayicon.StatusNotifierWatcher.methods *struct { RegisterStatusNotifierItem func() `in:\"serviceName\"`; RegisterStatusNotifierHost func() `in:\"serviceName\"`; }","trayicon.StatusNotifierWatcher.service *dbusutil.Service","trayicon.StatusNotifierWatcher.sigLoop *dbusutil.SignalLoop","trayicon.StatusNotifierWatcher.signals *struct { StatusNotifierItemRegistered struct { ServiceName string; }; StatusNotifierItemUnregistered struct { ServiceName string; }; StatusNotifierHostRegistered struct{}; }","trayicon.StatusNotifierWatcher.watchedServices strv.Strv"]},{"Name":"const:trayicon","Fields":["trayicon.snwDBusPath","trayicon.snwDBusServiceName"]}]}
{"Filepath":"trayicon/tools.go","Functions":[{"Uniquefunname":"func findRGBAVisualID() x.VisualID","Funname":"findRGBAVisualID","Returntype":"x.VisualID","Args":""},{"Uniquefunname":"func isValidWindow(win x.Window) bool","Funname":"isValidWindow","Returntype":"bool","Args":"win x.Window"},{"Uniquefunname":"func findRGBAVisualID() x.VisualID","Funname":"trayicon.findRGBAVisualID","Returntype":"x.VisualID","Args":""},{"Uniquefunname":"func isValidWindow(win x.Window) bool","Funname":"trayicon.isValidWindow","Returntype":"bool","Args":"win x.Window"}],"Records":null}
{"Filepath":"trayicon/trayicon_dbusutil.go","Functions":[{"Uniquefunname":"func emitPropChangedIsStatusNotifierHostRegistered(value bool)error","Funname":"emitPropChangedIsStatusNotifierHostRegistered","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func emitPropChangedRegisteredStatusNotifierItems(value []string)error","Funname":"emitPropChangedRegisteredStatusNotifierItems","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func (v *TrayManager) emitPropChangedTrayIcons(value []uint32) error","Funname":"emitPropChangedTrayIcons","Returntype":"error","Args":"value []uint32"},{"Uniquefunname":"func setPropIsStatusNotifierHostRegistered(value bool)(changed bool)","Funname":"setPropIsStatusNotifierHostRegistered","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *StatusNotifierWatcher) setPropRegisteredStatusNotifierItems(value []string)","Funname":"setPropRegisteredStatusNotifierItems","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *TrayManager) setPropTrayIcons(value []uint32)","Funname":"setPropTrayIcons","Returntype":"","Args":"value []uint32"},{"Uniquefunname":"func trayicon.StatusNotifierWatcher.emitPropChangedIsStatusNotifierHostRegistered(value bool)error","Funname":"trayicon.StatusNotifierWatcher.emitPropChangedIsStatusNotifierHostRegistered","Returntype":"error","Args":"value bool"},{"Uniquefunname":"func trayicon.StatusNotifierWatcher.emitPropChangedRegisteredStatusNotifierItems(value []string)error","Funname":"trayicon.StatusNotifierWatcher.emitPropChangedRegisteredStatusNotifierItems","Returntype":"error","Args":"value []string"},{"Uniquefunname":"func trayicon.StatusNotifierWatcher.setPropIsStatusNotifierHostRegistered(value bool)(changed bool)","Funname":"trayicon.StatusNotifierWatcher.setPropIsStatusNotifierHostRegistered","Returntype":"(changed bool)","Args":"value bool"},{"Uniquefunname":"func (v *StatusNotifierWatcher) setPropRegisteredStatusNotifierItems(value []string)","Funname":"trayicon.StatusNotifierWatcher.setPropRegisteredStatusNotifierItems","Returntype":"","Args":"value []string"},{"Uniquefunname":"func (v *TrayManager) emitPropChangedTrayIcons(value []uint32) error","Funname":"trayicon.TrayManager.emitPropChangedTrayIcons","Returntype":"error","Args":"value []uint32"},{"Uniquefunname":"func (v *TrayManager) setPropTrayIcons(value []uint32)","Funname":"trayicon.TrayManager.setPropTrayIcons","Returntype":"","Args":"value []uint32"}],"Records":null}
{"Filepath":"trayicon/traymanager.go","Functions":[{"Uniquefunname":"func NewTrayManager(service *dbusutil.Service) *TrayManager","Funname":"NewTrayManager","Returntype":"*TrayManager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *TrayManager) acquireSystemTraySelection() error","Funname":"acquireSystemTraySelection","Returntype":"error","Args":""},{"Uniquefunname":"func (m *TrayManager) addIcon(win x.Window)","Funname":"addIcon","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func (m *TrayManager) checkValid()","Funname":"checkValid","Returntype":"","Args":""},{"Uniquefunname":"func createOwnerWindow(visual x.VisualID) (x.Window, error)","Funname":"createOwnerWindow","Returntype":"(x.Window, error)","Args":"visual x.VisualID"},{"Uniquefunname":"func (m *TrayManager) eventHandleLoop()","Funname":"eventHandleLoop","Returntype":"","Args":""},{"Uniquefunname":"func getSystemTraySelectionOwner() (x.Window, error)","Funname":"getSystemTraySelectionOwner","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func (m *TrayManager) handleDamageNotifyEvent(xid x.Window)","Funname":"handleDamageNotifyEvent","Returntype":"","Args":"xid x.Window"},{"Uniquefunname":"func (m *TrayManager) init() error","Funname":"init","Returntype":"error","Args":""},{"Uniquefunname":"func (handler *DamageNotifyEventHandler) process(winId x.Window)","Funname":"process","Returntype":"","Args":"winId x.Window"},{"Uniquefunname":"func (m *TrayManager) removeIcon(win x.Window)","Funname":"removeIcon","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func sendClientMessage(win, dest x.Window, msgType x.Atom, pArray *[5]uint32) error","Funname":"sendClientMessage","Returntype":"error","Args":"win, dest x.Window, msgType x.Atom, pArray *[5]uint32"},{"Uniquefunname":"func (m *TrayManager) sendClientMsgMANAGER() error","Funname":"sendClientMsgMANAGER","Returntype":"error","Args":""},{"Uniquefunname":"func (handler *DamageNotifyEventHandler) process(winId x.Window)","Funname":"trayicon.DamageNotifyEventHandler.process","Returntype":"","Args":"winId x.Window"},{"Uniquefunname":"func NewTrayManager(service *dbusutil.Service) *TrayManager","Funname":"trayicon.NewTrayManager","Returntype":"*TrayManager","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *TrayManager) acquireSystemTraySelection() error","Funname":"trayicon.TrayManager.acquireSystemTraySelection","Returntype":"error","Args":""},{"Uniquefunname":"func (m *TrayManager) addIcon(win x.Window)","Funname":"trayicon.TrayManager.addIcon","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func (m *TrayManager) checkValid()","Funname":"trayicon.TrayManager.checkValid","Returntype":"","Args":""},{"Uniquefunname":"func (m *TrayManager) eventHandleLoop()","Funname":"trayicon.TrayManager.eventHandleLoop","Returntype":"","Args":""},{"Uniquefunname":"func (m *TrayManager) handleDamageNotifyEvent(xid x.Window)","Funname":"trayicon.TrayManager.handleDamageNotifyEvent","Returntype":"","Args":"xid x.Window"},{"Uniquefunname":"func (m *TrayManager) init() error","Funname":"trayicon.TrayManager.init","Returntype":"error","Args":""},{"Uniquefunname":"func (m *TrayManager) removeIcon(win x.Window)","Funname":"trayicon.TrayManager.removeIcon","Returntype":"","Args":"win x.Window"},{"Uniquefunname":"func (m *TrayManager) sendClientMsgMANAGER() error","Funname":"trayicon.TrayManager.sendClientMsgMANAGER","Returntype":"error","Args":""},{"Uniquefunname":"func (m *TrayManager) updateTrayIcons()","Funname":"trayicon.TrayManager.updateTrayIcons","Returntype":"","Args":""},{"Uniquefunname":"func createOwnerWindow(visual x.VisualID) (x.Window, error)","Funname":"trayicon.createOwnerWindow","Returntype":"(x.Window, error)","Args":"visual x.VisualID"},{"Uniquefunname":"func getSystemTraySelectionOwner() (x.Window, error)","Funname":"trayicon.getSystemTraySelectionOwner","Returntype":"(x.Window, error)","Args":""},{"Uniquefunname":"func sendClientMessage(win, dest x.Window, msgType x.Atom, pArray *[5]uint32) error","Funname":"trayicon.sendClientMessage","Returntype":"error","Args":"win, dest x.Window, msgType x.Atom, pArray *[5]uint32"},{"Uniquefunname":"func (m *TrayManager) updateTrayIcons()","Funname":"updateTrayIcons","Returntype":"","Args":""}],"Records":[{"Name":"struct:trayicon.DamageNotifyEventHandler","Fields":["trayicon.DamageNotifyEventHandler.manager *TrayManager","trayicon.DamageNotifyEventHandler.mu sync.Mutex","trayicon.DamageNotifyEventHandler.queuedWinIds []x.Window","trayicon.DamageNotifyEventHandler.timer *time.Timer","trayicon.DamageNotifyEventHandler.timerStarted bool"]},{"Name":"const:trayicon","Fields":["trayicon.OpcodeSystemTrayBeginMessage","trayicon.OpcodeSystemTrayCancelMessage","trayicon.OpcodeSystemTrayRequestDock"]},{"Name":"struct:trayicon.TrayManager","Fields":["trayicon.TrayManager.PropsMu sync.RWMutex","trayicon.TrayManager.TrayIcons []uint32","trayicon.TrayManager.damageNotifyEventHandler DamageNotifyEventHandler","trayicon.TrayManager.icons map[x.Window]*TrayIcon","trayicon.TrayManager.methods *struct { Manage func() `out:\"ok\"`; GetName func() `in:\"win\" out:\"name\"`; EnableNotification func() `in:\"win,enabled\"`; }","trayicon.TrayManager.mutex sync.Mutex","trayicon.TrayManager.owner x.Window","trayicon.TrayManager.service *dbusutil.Service","trayicon.TrayManager.signals *struct { Inited struct{}; Added, Removed, Changed struct { id uint32; }; }","trayicon.TrayManager.visual x.VisualID"]}]}
{"Filepath":"trayicon/traymanager_ifc.go","Functions":[{"Uniquefunname":"func (m *TrayManager) EnableNotification(win uint32, enable bool) *dbus.Error","Funname":"EnableNotification","Returntype":"*dbus.Error","Args":"win uint32, enable bool"},{"Uniquefunname":"func (*TrayManager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *TrayManager) GetName(win uint32) (string, *dbus.Error)","Funname":"GetName","Returntype":"(string, *dbus.Error)","Args":"win uint32"},{"Uniquefunname":"func (m *TrayManager) Manage() (bool, *dbus.Error)","Funname":"Manage","Returntype":"(bool, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *TrayManager) EnableNotification(win uint32, enable bool) *dbus.Error","Funname":"trayicon.TrayManager.EnableNotification","Returntype":"*dbus.Error","Args":"win uint32, enable bool"},{"Uniquefunname":"func (*TrayManager) GetInterfaceName() string","Funname":"trayicon.TrayManager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func (m *TrayManager) GetName(win uint32) (string, *dbus.Error)","Funname":"trayicon.TrayManager.GetName","Returntype":"(string, *dbus.Error)","Args":"win uint32"},{"Uniquefunname":"func (m *TrayManager) Manage() (bool, *dbus.Error)","Funname":"trayicon.TrayManager.Manage","Returntype":"(bool, *dbus.Error)","Args":""}],"Records":[{"Name":"const:trayicon","Fields":["trayicon.dbusInterface","trayicon.dbusPath","trayicon.dbusServiceName"]}]}
{"Filepath":"x_event_monitor/daemon.go","Functions":[{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"Name","Returntype":"string","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"Stop","Returntype":"error","Args":""},{"Uniquefunname":"func init()","Funname":"init","Returntype":"","Args":""},{"Uniquefunname":"func (d *Daemon) GetDependencies() []string","Funname":"x_event_monitor.Daemon.GetDependencies","Returntype":"[]string","Args":""},{"Uniquefunname":"func (d *Daemon) Name() string","Funname":"x_event_monitor.Daemon.Name","Returntype":"string","Args":""},{"Uniquefunname":"func (d *Daemon) Start() error","Funname":"x_event_monitor.Daemon.Start","Returntype":"error","Args":""},{"Uniquefunname":"func (d *Daemon) Stop() error","Funname":"x_event_monitor.Daemon.Stop","Returntype":"error","Args":""},{"Uniquefunname":"func NewDaemon(logger *log.Logger) *Daemon","Funname":"x_event_monitor.NewDaemon","Returntype":"*Daemon","Args":"logger *log.Logger"},{"Uniquefunname":"func init()","Funname":"x_event_monitor.init","Returntype":"","Args":""}],"Records":[{"Name":"const:x_event_monitor","Fields":["x_event_monitor.dbusInterface","x_event_monitor.dbusPath","x_event_monitor.dbusServiceName","x_event_monitor.moduleName"]},{"Name":"var:x_event_monitor","Fields":["x_event_monitor.logger"]}]}
{"Filepath":"x_event_monitor/manager.go","Functions":[{"Uniquefunname":"func (m *Manager) BeginTouch() *dbus.Error","Funname":"BeginTouch","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) DebugGetPidAreasMap() (string, *dbus.Error)","Funname":"DebugGetPidAreasMap","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func RegisterArea(sender dbus.Sender, x1, y1, x2, y2, flag int32)(string, *dbus.Error)","Funname":"RegisterArea","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, x1, y1, x2, y2, flag int32"},{"Uniquefunname":"func RegisterAreas(sender dbus.Sender, areas []coordinateRange, flag int32)(id string, busErr *dbus.Error)","Funname":"RegisterAreas","Returntype":"(id string, busErr *dbus.Error)","Args":"sender dbus.Sender, areas []coordinateRange, flag int32"},{"Uniquefunname":"func (m *Manager) RegisterFullScreen(sender dbus.Sender) (id string, busErr *dbus.Error)","Funname":"RegisterFullScreen","Returntype":"(id string, busErr *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) UnregisterArea(sender dbus.Sender, id string) (bool, *dbus.Error)","Funname":"UnregisterArea","Returntype":"(bool, *dbus.Error)","Args":"sender dbus.Sender, id string"},{"Uniquefunname":"func (m *Manager) beginMoveMouse()","Funname":"beginMoveMouse","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) beginTouch()","Funname":"beginTouch","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deselectXInputEvents()","Funname":"deselectXInputEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doShowCursor(show bool) error","Funname":"doShowCursor","Returntype":"error","Args":"show bool"},{"Uniquefunname":"func (m *Manager) doXISelectEvents(evMask uint32) error","Funname":"doXISelectEvents","Returntype":"error","Args":"evMask uint32"},{"Uniquefunname":"func (m *Manager) getIdList(x, y int32) ([]string, []string)","Funname":"getIdList","Returntype":"([]string, []string)","Args":"x, y int32"},{"Uniquefunname":"func (m *Manager) handleButtonEvent(button int32, press bool, x, y int32)","Funname":"handleButtonEvent","Returntype":"","Args":"button int32, press bool, x, y int32"},{"Uniquefunname":"func (m *Manager) handleCursorEvent(x, y int32, press bool)","Funname":"handleCursorEvent","Returntype":"","Args":"x, y int32, press bool"},{"Uniquefunname":"func (m *Manager) handleKeyboardEvent(code int32, press bool, x, y int32)","Funname":"handleKeyboardEvent","Returntype":"","Args":"code int32, press bool, x, y int32"},{"Uniquefunname":"func (m *Manager) handleXEvent()","Funname":"handleXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initXExtensions()","Funname":"initXExtensions","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isPidAreaRegistered(pid uint32, areasId string) bool","Funname":"isPidAreaRegistered","Returntype":"bool","Args":"pid uint32, areasId string"},{"Uniquefunname":"func (m *Manager) keyCode2Str(key int32) string","Funname":"keyCode2Str","Returntype":"string","Args":"key int32"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"},{"Uniquefunname":"func (m *Manager) queryPointer() (*x.QueryPointerReply, error)","Funname":"queryPointer","Returntype":"(*x.QueryPointerReply, error)","Args":""},{"Uniquefunname":"func (m *Manager) registerPidArea(pid uint32, areasId string)","Funname":"registerPidArea","Returntype":"","Args":"pid uint32, areasId string"},{"Uniquefunname":"func (m *Manager) selectXInputEvents()","Funname":"selectXInputEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) sumAreasMd5(areas []coordinateRange, flag int32) (md5Str string, ok bool)","Funname":"sumAreasMd5","Returntype":"(md5Str string, ok bool)","Args":"areas []coordinateRange, flag int32"},{"Uniquefunname":"func (m *Manager) unregisterPidArea(pid uint32, areasId string)","Funname":"unregisterPidArea","Returntype":"","Args":"pid uint32, areasId string"},{"Uniquefunname":"func (m *Manager) BeginTouch() *dbus.Error","Funname":"x_event_monitor.Manager.BeginTouch","Returntype":"*dbus.Error","Args":""},{"Uniquefunname":"func (m *Manager) DebugGetPidAreasMap() (string, *dbus.Error)","Funname":"x_event_monitor.Manager.DebugGetPidAreasMap","Returntype":"(string, *dbus.Error)","Args":""},{"Uniquefunname":"func (m *Manager) GetInterfaceName() string","Funname":"x_event_monitor.Manager.GetInterfaceName","Returntype":"string","Args":""},{"Uniquefunname":"func x_event_monitor.Manager.RegisterArea(sender dbus.Sender, x1, y1, x2, y2, flag int32)(string, *dbus.Error)","Funname":"x_event_monitor.Manager.RegisterArea","Returntype":"(string, *dbus.Error)","Args":"sender dbus.Sender, x1, y1, x2, y2, flag int32"},{"Uniquefunname":"func x_event_monitor.Manager.RegisterAreas(sender dbus.Sender, areas []coordinateRange, flag int32)(id string, busErr *dbus.Error)","Funname":"x_event_monitor.Manager.RegisterAreas","Returntype":"(id string, busErr *dbus.Error)","Args":"sender dbus.Sender, areas []coordinateRange, flag int32"},{"Uniquefunname":"func (m *Manager) RegisterFullScreen(sender dbus.Sender) (id string, busErr *dbus.Error)","Funname":"x_event_monitor.Manager.RegisterFullScreen","Returntype":"(id string, busErr *dbus.Error)","Args":"sender dbus.Sender"},{"Uniquefunname":"func (m *Manager) UnregisterArea(sender dbus.Sender, id string) (bool, *dbus.Error)","Funname":"x_event_monitor.Manager.UnregisterArea","Returntype":"(bool, *dbus.Error)","Args":"sender dbus.Sender, id string"},{"Uniquefunname":"func (m *Manager) beginMoveMouse()","Funname":"x_event_monitor.Manager.beginMoveMouse","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) beginTouch()","Funname":"x_event_monitor.Manager.beginTouch","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) deselectXInputEvents()","Funname":"x_event_monitor.Manager.deselectXInputEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) doShowCursor(show bool) error","Funname":"x_event_monitor.Manager.doShowCursor","Returntype":"error","Args":"show bool"},{"Uniquefunname":"func (m *Manager) doXISelectEvents(evMask uint32) error","Funname":"x_event_monitor.Manager.doXISelectEvents","Returntype":"error","Args":"evMask uint32"},{"Uniquefunname":"func (m *Manager) getIdList(x, y int32) ([]string, []string)","Funname":"x_event_monitor.Manager.getIdList","Returntype":"([]string, []string)","Args":"x, y int32"},{"Uniquefunname":"func (m *Manager) handleButtonEvent(button int32, press bool, x, y int32)","Funname":"x_event_monitor.Manager.handleButtonEvent","Returntype":"","Args":"button int32, press bool, x, y int32"},{"Uniquefunname":"func (m *Manager) handleCursorEvent(x, y int32, press bool)","Funname":"x_event_monitor.Manager.handleCursorEvent","Returntype":"","Args":"x, y int32, press bool"},{"Uniquefunname":"func (m *Manager) handleKeyboardEvent(code int32, press bool, x, y int32)","Funname":"x_event_monitor.Manager.handleKeyboardEvent","Returntype":"","Args":"code int32, press bool, x, y int32"},{"Uniquefunname":"func (m *Manager) handleXEvent()","Funname":"x_event_monitor.Manager.handleXEvent","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) initXExtensions()","Funname":"x_event_monitor.Manager.initXExtensions","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) isPidAreaRegistered(pid uint32, areasId string) bool","Funname":"x_event_monitor.Manager.isPidAreaRegistered","Returntype":"bool","Args":"pid uint32, areasId string"},{"Uniquefunname":"func (m *Manager) keyCode2Str(key int32) string","Funname":"x_event_monitor.Manager.keyCode2Str","Returntype":"string","Args":"key int32"},{"Uniquefunname":"func (m *Manager) queryPointer() (*x.QueryPointerReply, error)","Funname":"x_event_monitor.Manager.queryPointer","Returntype":"(*x.QueryPointerReply, error)","Args":""},{"Uniquefunname":"func (m *Manager) registerPidArea(pid uint32, areasId string)","Funname":"x_event_monitor.Manager.registerPidArea","Returntype":"","Args":"pid uint32, areasId string"},{"Uniquefunname":"func (m *Manager) selectXInputEvents()","Funname":"x_event_monitor.Manager.selectXInputEvents","Returntype":"","Args":""},{"Uniquefunname":"func (m *Manager) sumAreasMd5(areas []coordinateRange, flag int32) (md5Str string, ok bool)","Funname":"x_event_monitor.Manager.sumAreasMd5","Returntype":"(md5Str string, ok bool)","Args":"areas []coordinateRange, flag int32"},{"Uniquefunname":"func (m *Manager) unregisterPidArea(pid uint32, areasId string)","Funname":"x_event_monitor.Manager.unregisterPidArea","Returntype":"","Args":"pid uint32, areasId string"},{"Uniquefunname":"func newManager(service *dbusutil.Service) (*Manager, error)","Funname":"x_event_monitor.newManager","Returntype":"(*Manager, error)","Args":"service *dbusutil.Service"}],"Records":[{"Name":"struct:x_event_monitor.Manager","Fields":["x_event_monitor.Manager.cursorShowed bool","x_event_monitor.Manager.hideCursorWhenTouch bool","x_event_monitor.Manager.idAreaInfoMap map[string]*coordinateInfo","x_event_monitor.Manager.idReferCountMap map[string]int32","x_event_monitor.Manager.keySymbols *keysyms.KeySymbols","x_event_monitor.Manager.methods *struct { RegisterArea func() `in:\"x1,y1,x2,y2,flag\" out:\"id\"`; RegisterAreas func() `in:\"areas,flag\" out:\"id\"`; RegisterFullScreen func() `out:\"id\"`; UnregisterArea func() `in:\"id\" out:\"ok\"`; DebugGetPidAreasMap func() `out:\"pidAreasMapJSON\"`; }","x_event_monitor.Manager.mu sync.Mutex","x_event_monitor.Manager.pidAidsMap map[uint32]strv.Strv","x_event_monitor.Manager.service *dbusutil.Service","x_event_monitor.Manager.signals *struct { CancelAllArea struct{}; CursorInto, CursorOut, CursorMove struct { x, y int32; id string; }; ButtonPress, ButtonRelease struct { button, x, y int32; id string; }; KeyPress, KeyRelease struct { key string; x, y int32; id string; }; }","x_event_monitor.Manager.xConn *x.Conn"]},{"Name":"struct:x_event_monitor.coordinateInfo","Fields":["x_event_monitor.coordinateInfo.areas []coordinateRange","x_event_monitor.coordinateInfo.buttonFlag bool","x_event_monitor.coordinateInfo.keyFlag bool","x_event_monitor.coordinateInfo.motionFlag bool","x_event_monitor.coordinateInfo.moveIntoFlag bool"]},{"Name":"struct:x_event_monitor.coordinateRange","Fields":["x_event_monitor.coordinateRange.X1 int32","x_event_monitor.coordinateRange.X2 int32","x_event_monitor.coordinateRange.Y1 int32","x_event_monitor.coordinateRange.Y2 int32"]},{"Name":"var:x_event_monitor","Fields":["x_event_monitor.errAreasNotRegistered","x_event_monitor.errAreasRegistered"]},{"Name":"const:x_event_monitor","Fields":["x_event_monitor.evMaskForHideCursor","x_event_monitor.fullscreenId"]}]}
{"Filepath":"x_event_monitor/mousearea_test.go","Functions":[{"Uniquefunname":"func Test(t *testing.T)","Funname":"Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (s *mySuite) TestUtils(c *C.C)","Funname":"TestUtils","Returntype":"","Args":"c *C.C"},{"Uniquefunname":"func Test(t *testing.T)","Funname":"x_event_monitor.Test","Returntype":"","Args":"t *testing.T"},{"Uniquefunname":"func (s *mySuite) TestUtils(c *C.C)","Funname":"x_event_monitor.mySuite.TestUtils","Returntype":"","Args":"c *C.C"}],"Records":[{"Name":"var:x_event_monitor","Fields":["x_event_monitor._"]}]}
{"Filepath":"x_event_monitor/utils.go","Functions":[{"Uniquefunname":"func hasButtonFlag(flag int32) bool","Funname":"hasButtonFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func hasKeyFlag(flag int32) bool","Funname":"hasKeyFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func hasMotionFlag(flag int32) bool","Funname":"hasMotionFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func isInArea(x, y int32, area coordinateRange) bool","Funname":"isInArea","Returntype":"bool","Args":"x, y int32, area coordinateRange"},{"Uniquefunname":"func isInIdList(md5Str string, list []string) bool","Funname":"isInIdList","Returntype":"bool","Args":"md5Str string, list []string"},{"Uniquefunname":"func hasButtonFlag(flag int32) bool","Funname":"x_event_monitor.hasButtonFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func hasKeyFlag(flag int32) bool","Funname":"x_event_monitor.hasKeyFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func hasMotionFlag(flag int32) bool","Funname":"x_event_monitor.hasMotionFlag","Returntype":"bool","Args":"flag int32"},{"Uniquefunname":"func isInArea(x, y int32, area coordinateRange) bool","Funname":"x_event_monitor.isInArea","Returntype":"bool","Args":"x, y int32, area coordinateRange"},{"Uniquefunname":"func isInIdList(md5Str string, list []string) bool","Funname":"x_event_monitor.isInIdList","Returntype":"bool","Args":"md5Str string, list []string"}],"Records":[{"Name":"const:x_event_monitor","Fields":["x_event_monitor.ButtonFlag","x_event_monitor.KeyFlag","x_event_monitor.MotionFlag"]}]}
