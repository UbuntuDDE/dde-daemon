// Code generated by "dbusutil-gen em -type AppEntry,Manager"; DO NOT EDIT.

package dock

import (
	"pkg.deepin.io/lib/dbusutil"
)

func (v *AppEntry) GetExportedMethods() dbusutil.ExportedMethods {
	return dbusutil.ExportedMethods{
		{
			Name:   "Activate",
			Fn:     v.Activate,
			InArgs: []string{"timestamp"},
		},
		{
			Name: "Check",
			Fn:   v.Check,
		},
		{
			Name: "ForceQuit",
			Fn:   v.ForceQuit,
		},
		{
			Name:    "GetAllowedCloseWindows",
			Fn:      v.GetAllowedCloseWindows,
			OutArgs: []string{"windows"},
		},
		{
			Name:   "HandleDragDrop",
			Fn:     v.HandleDragDrop,
			InArgs: []string{"timestamp", "files"},
		},
		{
			Name:   "HandleMenuItem",
			Fn:     v.HandleMenuItem,
			InArgs: []string{"timestamp", "id"},
		},
		{
			Name:   "NewInstance",
			Fn:     v.NewInstance,
			InArgs: []string{"timestamp"},
		},
		{
			Name: "PresentWindows",
			Fn:   v.PresentWindows,
		},
		{
			Name: "RequestDock",
			Fn:   v.RequestDock,
		},
		{
			Name: "RequestUndock",
			Fn:   v.RequestUndock,
		},
	}
}
func (v *Manager) GetExportedMethods() dbusutil.ExportedMethods {
	return dbusutil.ExportedMethods{
		{
			Name:   "ActivateWindow",
			Fn:     v.ActivateWindow,
			InArgs: []string{"win"},
		},
		{
			Name: "CancelPreviewWindow",
			Fn:   v.CancelPreviewWindow,
		},
		{
			Name:   "CloseWindow",
			Fn:     v.CloseWindow,
			InArgs: []string{"win"},
		},
		{
			Name:    "GetDockedAppsDesktopFiles",
			Fn:      v.GetDockedAppsDesktopFiles,
			OutArgs: []string{"desktopFiles"},
		},
		{
			Name:    "GetEntryIDs",
			Fn:      v.GetEntryIDs,
			OutArgs: []string{"list"},
		},
		{
			Name:    "GetPluginSettings",
			Fn:      v.GetPluginSettings,
			OutArgs: []string{"jsonStr"},
		},
		{
			Name:    "IsDocked",
			Fn:      v.IsDocked,
			InArgs:  []string{"desktopFile"},
			OutArgs: []string{"docked"},
		},
		{
			Name:    "IsOnDock",
			Fn:      v.IsOnDock,
			InArgs:  []string{"desktopFile"},
			OutArgs: []string{"onDock"},
		},
		{
			Name:   "MakeWindowAbove",
			Fn:     v.MakeWindowAbove,
			InArgs: []string{"win"},
		},
		{
			Name:   "MaximizeWindow",
			Fn:     v.MaximizeWindow,
			InArgs: []string{"win"},
		},
		{
			Name:   "MergePluginSettings",
			Fn:     v.MergePluginSettings,
			InArgs: []string{"jsonStr"},
		},
		{
			Name:   "MinimizeWindow",
			Fn:     v.MinimizeWindow,
			InArgs: []string{"win"},
		},
		{
			Name:   "MoveEntry",
			Fn:     v.MoveEntry,
			InArgs: []string{"index", "newIndex"},
		},
		{
			Name:   "MoveWindow",
			Fn:     v.MoveWindow,
			InArgs: []string{"win"},
		},
		{
			Name:   "PreviewWindow",
			Fn:     v.PreviewWindow,
			InArgs: []string{"win"},
		},
		{
			Name:    "QueryWindowIdentifyMethod",
			Fn:      v.QueryWindowIdentifyMethod,
			InArgs:  []string{"wid"},
			OutArgs: []string{"method"},
		},
		{
			Name:   "RemovePluginSettings",
			Fn:     v.RemovePluginSettings,
			InArgs: []string{"key1", "key2List"},
		},
		{
			Name:    "RequestDock",
			Fn:      v.RequestDock,
			InArgs:  []string{"desktopFile", "index"},
			OutArgs: []string{"docked"},
		},
		{
			Name:    "RequestUndock",
			Fn:      v.RequestUndock,
			InArgs:  []string{"desktopFile"},
			OutArgs: []string{"undocked"},
		},
		{
			Name:   "SetFrontendWindowRect",
			Fn:     v.SetFrontendWindowRect,
			InArgs: []string{"x", "y", "width", "height"},
		},
		{
			Name:   "SetPluginSettings",
			Fn:     v.SetPluginSettings,
			InArgs: []string{"jsonStr"},
		},
	}
}
